<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Drawing.Common</name>
  </assembly>
  <members>
    <member name="T:System.Drawing.Bitmap">
      <summary>Encapsulates a GDI+ bitmap, which consists of the pixel data for a graphics image and its attributes. A <see cref="T:System.Drawing.Bitmap" /> is an object used to work with images defined by pixel data.</summary>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Drawing.Image)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Bitmap" /> class from the specified existing image.</summary>
      <param name="original">The <see cref="T:System.Drawing.Image" /> from which to create the new <see cref="T:System.Drawing.Bitmap" />.</param>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Drawing.Image,System.Drawing.Size)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Bitmap" /> class from the specified existing image, scaled to the specified size.</summary>
      <param name="original">The <see cref="T:System.Drawing.Image" /> from which to create the new <see cref="T:System.Drawing.Bitmap" />.</param>
      <param name="newSize">The <see cref="T:System.Drawing.Size" /> structure that represent the size of the new <see cref="T:System.Drawing.Bitmap" />.</param>
      <exception cref="T:System.Exception">The operation failed.</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Drawing.Image,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Bitmap" /> class from the specified existing image, scaled to the specified size.</summary>
      <param name="original">The <see cref="T:System.Drawing.Image" /> from which to create the new <see cref="T:System.Drawing.Bitmap" />.</param>
      <param name="width">The width, in pixels, of the new <see cref="T:System.Drawing.Bitmap" />.</param>
      <param name="height">The height, in pixels, of the new <see cref="T:System.Drawing.Bitmap" />.</param>
      <exception cref="T:System.Exception">The operation failed.</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Bitmap" /> class with the specified size.</summary>
      <param name="width">The width, in pixels, of the new <see cref="T:System.Drawing.Bitmap" />.</param>
      <param name="height">The height, in pixels, of the new <see cref="T:System.Drawing.Bitmap" />.</param>
      <exception cref="T:System.Exception">The operation failed.</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Drawing.Graphics)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Bitmap" /> class with the specified size and with the resolution of the specified <see cref="T:System.Drawing.Graphics" /> object.</summary>
      <param name="width">The width, in pixels, of the new <see cref="T:System.Drawing.Bitmap" />.</param>
      <param name="height">The height, in pixels, of the new <see cref="T:System.Drawing.Bitmap" />.</param>
      <param name="g">The <see cref="T:System.Drawing.Graphics" /> object that specifies the resolution for the new <see cref="T:System.Drawing.Bitmap" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="g" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Bitmap" /> class with the specified size and format.</summary>
      <param name="width">The width, in pixels, of the new <see cref="T:System.Drawing.Bitmap" />.</param>
      <param name="height">The height, in pixels, of the new <see cref="T:System.Drawing.Bitmap" />.</param>
      <param name="format">The pixel format for the new <see cref="T:System.Drawing.Bitmap" />. This must specify a value that begins with <c>Format</c>.</param>
      <exception cref="T:System.ArgumentException">A <see cref="T:System.Drawing.Imaging.PixelFormat" /> value is specified whose name does not start with Format. For example, specifying <see cref="F:System.Drawing.Imaging.PixelFormat.Gdi" /> will cause an <see cref="T:System.ArgumentException" />, but <see cref="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb" /> will not.</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat,System.IntPtr)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Bitmap" /> class with the specified size, pixel format, and pixel data.</summary>
      <param name="width">The width, in pixels, of the new <see cref="T:System.Drawing.Bitmap" />.</param>
      <param name="height">The height, in pixels, of the new <see cref="T:System.Drawing.Bitmap" />.</param>
      <param name="stride">Integer that specifies the byte offset between the beginning of one scan line and the next. This is usually (but not necessarily) the number of bytes in the pixel format (for example, 2 for 16 bits per pixel) multiplied by the width of the bitmap. The value passed to this parameter must be a multiple of four.</param>
      <param name="format">The pixel format for the new <see cref="T:System.Drawing.Bitmap" />. This must specify a value that begins with <c>Format</c>.</param>
      <param name="scan0">Pointer to an array of bytes that contains the pixel data.</param>
      <exception cref="T:System.ArgumentException">A <see cref="T:System.Drawing.Imaging.PixelFormat" /> value is specified whose name does not start with Format. For example, specifying <see cref="F:System.Drawing.Imaging.PixelFormat.Gdi" /> will cause an <see cref="T:System.ArgumentException" />, but <see cref="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb" /> will not.</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.IO.Stream)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Bitmap" /> class from the specified data stream.</summary>
      <param name="stream">The data stream used to load the image.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> does not contain image data or is <see langword="null" />.  
-or-  
<paramref name="stream" /> contains a PNG image file with a single dimension greater than 65,535 pixels.</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.IO.Stream,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Bitmap" /> class from the specified data stream.</summary>
      <param name="stream">The data stream used to load the image.</param>
      <param name="useIcm">
        <see langword="true" /> to use color correction for this <see cref="T:System.Drawing.Bitmap" />; otherwise, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> does not contain image data or is <see langword="null" />.  
-or-  
<paramref name="stream" /> contains a PNG image file with a single dimension greater than 65,535 pixels.</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Bitmap" /> class from the specified file.</summary>
      <param name="filename">The bitmap file name and path.</param>
      <exception cref="T:System.IO.FileNotFoundException">The specified file is not found.</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Bitmap" /> class from the specified file.</summary>
      <param name="filename">The name of the bitmap file.</param>
      <param name="useIcm">
        <see langword="true" /> to use color correction for this <see cref="T:System.Drawing.Bitmap" />; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Type,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Bitmap" /> class from a specified resource.</summary>
      <param name="type">The class used to extract the resource.</param>
      <param name="resource">The name of the resource.</param>
    </member>
    <member name="M:System.Drawing.Bitmap.Clone(System.Drawing.Rectangle,System.Drawing.Imaging.PixelFormat)">
      <summary>Creates a copy of the section of this <see cref="T:System.Drawing.Bitmap" /> defined by <see cref="T:System.Drawing.Rectangle" /> structure and with a specified <see cref="T:System.Drawing.Imaging.PixelFormat" /> enumeration.</summary>
      <param name="rect">Defines the portion of this <see cref="T:System.Drawing.Bitmap" /> to copy. Coordinates are relative to this <see cref="T:System.Drawing.Bitmap" />.</param>
      <param name="format">The pixel format for the new <see cref="T:System.Drawing.Bitmap" />. This must specify a value that begins with <c>Format</c>.</param>
      <returns>The new <see cref="T:System.Drawing.Bitmap" /> that this method creates.</returns>
      <exception cref="T:System.OutOfMemoryException">
        <paramref name="rect" /> is outside of the source bitmap bounds.</exception>
      <exception cref="T:System.ArgumentException">The height or width of <paramref name="rect" /> is 0.  
 -or-  
 A <see cref="T:System.Drawing.Imaging.PixelFormat" /> value is specified whose name does not start with Format. For example, specifying <see cref="F:System.Drawing.Imaging.PixelFormat.Gdi" /> will cause an <see cref="T:System.ArgumentException" />, but <see cref="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb" /> will not.</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.Clone(System.Drawing.RectangleF,System.Drawing.Imaging.PixelFormat)">
      <summary>Creates a copy of the section of this <see cref="T:System.Drawing.Bitmap" /> defined with a specified <see cref="T:System.Drawing.Imaging.PixelFormat" /> enumeration.</summary>
      <param name="rect">Defines the portion of this <see cref="T:System.Drawing.Bitmap" /> to copy.</param>
      <param name="format">Specifies the <see cref="T:System.Drawing.Imaging.PixelFormat" /> enumeration for the destination <see cref="T:System.Drawing.Bitmap" />.</param>
      <returns>The <see cref="T:System.Drawing.Bitmap" /> that this method creates.</returns>
      <exception cref="T:System.OutOfMemoryException">
        <paramref name="rect" /> is outside of the source bitmap bounds.</exception>
      <exception cref="T:System.ArgumentException">The height or width of <paramref name="rect" /> is 0.</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.FromHicon(System.IntPtr)">
      <summary>Creates a <see cref="T:System.Drawing.Bitmap" /> from a Windows handle to an icon.</summary>
      <param name="hicon">A handle to an icon.</param>
      <returns>The <see cref="T:System.Drawing.Bitmap" /> that this method creates.</returns>
    </member>
    <member name="M:System.Drawing.Bitmap.FromResource(System.IntPtr,System.String)">
      <summary>Creates a <see cref="T:System.Drawing.Bitmap" /> from the specified Windows resource.</summary>
      <param name="hinstance">A handle to an instance of the executable file that contains the resource.</param>
      <param name="bitmapName">A string that contains the name of the resource bitmap.</param>
      <returns>The <see cref="T:System.Drawing.Bitmap" /> that this method creates.</returns>
    </member>
    <member name="M:System.Drawing.Bitmap.GetHbitmap">
      <summary>Creates a GDI bitmap object from this <see cref="T:System.Drawing.Bitmap" />.</summary>
      <returns>A handle to the GDI bitmap object that this method creates.</returns>
      <exception cref="T:System.ArgumentException">The height or width of the bitmap is greater than <see cref="F:System.Int16.MaxValue" />.</exception>
      <exception cref="T:System.Exception">The operation failed.</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.GetHbitmap(System.Drawing.Color)">
      <summary>Creates a GDI bitmap object from this <see cref="T:System.Drawing.Bitmap" />.</summary>
      <param name="background">A <see cref="T:System.Drawing.Color" /> structure that specifies the background color. This parameter is ignored if the bitmap is totally opaque.</param>
      <returns>A handle to the GDI bitmap object that this method creates.</returns>
      <exception cref="T:System.ArgumentException">The height or width of the bitmap is greater than <see cref="F:System.Int16.MaxValue" />.</exception>
      <exception cref="T:System.Exception">The operation failed.</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.GetHicon">
      <summary>Returns the handle to an icon.</summary>
      <returns>A Windows handle to an icon with the same image as the <see cref="T:System.Drawing.Bitmap" />.</returns>
      <exception cref="T:System.Exception">The operation failed.</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.GetPixel(System.Int32,System.Int32)">
      <summary>Gets the color of the specified pixel in this <see cref="T:System.Drawing.Bitmap" />.</summary>
      <param name="x">The x-coordinate of the pixel to retrieve.</param>
      <param name="y">The y-coordinate of the pixel to retrieve.</param>
      <returns>A <see cref="T:System.Drawing.Color" /> structure that represents the color of the specified pixel.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="x" /> is less than 0, or greater than or equal to <see cref="P:System.Drawing.Image.Width" />.  
-or-  
<paramref name="y" /> is less than 0, or greater than or equal to <see cref="P:System.Drawing.Image.Height" />.</exception>
      <exception cref="T:System.Exception">The operation failed.</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.LockBits(System.Drawing.Rectangle,System.Drawing.Imaging.ImageLockMode,System.Drawing.Imaging.PixelFormat)">
      <summary>Locks a <see cref="T:System.Drawing.Bitmap" /> into system memory.</summary>
      <param name="rect">A <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the <see cref="T:System.Drawing.Bitmap" /> to lock.</param>
      <param name="flags">An <see cref="T:System.Drawing.Imaging.ImageLockMode" /> enumeration that specifies the access level (read/write) for the <see cref="T:System.Drawing.Bitmap" />.</param>
      <param name="format">A <see cref="T:System.Drawing.Imaging.PixelFormat" /> enumeration that specifies the data format of this <see cref="T:System.Drawing.Bitmap" />.</param>
      <returns>A <see cref="T:System.Drawing.Imaging.BitmapData" /> that contains information about this lock operation.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="T:System.Drawing.Imaging.PixelFormat" /> is not a specific bits-per-pixel value.  
 -or-  
 The incorrect <see cref="T:System.Drawing.Imaging.PixelFormat" /> is passed in for a bitmap.</exception>
      <exception cref="T:System.Exception">The operation failed.</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.LockBits(System.Drawing.Rectangle,System.Drawing.Imaging.ImageLockMode,System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.BitmapData)">
      <summary>Locks a <see cref="T:System.Drawing.Bitmap" /> into system memory</summary>
      <param name="rect">A rectangle structure that specifies the portion of the <see cref="T:System.Drawing.Bitmap" /> to lock.</param>
      <param name="flags">One of the <see cref="T:System.Drawing.Imaging.ImageLockMode" /> values that specifies the access level (read/write) for the <see cref="T:System.Drawing.Bitmap" />.</param>
      <param name="format">One of the <see cref="T:System.Drawing.Imaging.PixelFormat" /> values that specifies the data format of the <see cref="T:System.Drawing.Bitmap" />.</param>
      <param name="bitmapData">A <see cref="T:System.Drawing.Imaging.BitmapData" /> that contains information about the lock operation.</param>
      <returns>A <see cref="T:System.Drawing.Imaging.BitmapData" /> that contains information about the lock operation.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Drawing.Imaging.PixelFormat" /> value is not a specific bits-per-pixel value.  
-or-  
The incorrect <see cref="T:System.Drawing.Imaging.PixelFormat" /> is passed in for a bitmap.</exception>
      <exception cref="T:System.Exception">The operation failed.</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.MakeTransparent">
      <summary>Makes the default transparent color transparent for this <see cref="T:System.Drawing.Bitmap" />.</summary>
      <exception cref="T:System.InvalidOperationException">The image format of the <see cref="T:System.Drawing.Bitmap" /> is an icon format.</exception>
      <exception cref="T:System.Exception">The operation failed.</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.MakeTransparent(System.Drawing.Color)">
      <summary>Makes the specified color transparent for this <see cref="T:System.Drawing.Bitmap" />.</summary>
      <param name="transparentColor">The <see cref="T:System.Drawing.Color" /> structure that represents the color to make transparent.</param>
      <exception cref="T:System.InvalidOperationException">The image format of the <see cref="T:System.Drawing.Bitmap" /> is an icon format.</exception>
      <exception cref="T:System.Exception">The operation failed.</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.SetPixel(System.Int32,System.Int32,System.Drawing.Color)">
      <summary>Sets the color of the specified pixel in this <see cref="T:System.Drawing.Bitmap" />.</summary>
      <param name="x">The x-coordinate of the pixel to set.</param>
      <param name="y">The y-coordinate of the pixel to set.</param>
      <param name="color">A <see cref="T:System.Drawing.Color" /> structure that represents the color to assign to the specified pixel.</param>
      <exception cref="T:System.Exception">The operation failed.</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.SetResolution(System.Single,System.Single)">
      <summary>Sets the resolution for this <see cref="T:System.Drawing.Bitmap" />.</summary>
      <param name="xDpi">The horizontal resolution, in dots per inch, of the <see cref="T:System.Drawing.Bitmap" />.</param>
      <param name="yDpi">The vertical resolution, in dots per inch, of the <see cref="T:System.Drawing.Bitmap" />.</param>
      <exception cref="T:System.Exception">The operation failed.</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.UnlockBits(System.Drawing.Imaging.BitmapData)">
      <summary>Unlocks this <see cref="T:System.Drawing.Bitmap" /> from system memory.</summary>
      <param name="bitmapdata">A <see cref="T:System.Drawing.Imaging.BitmapData" /> that specifies information about the lock operation.</param>
      <exception cref="T:System.Exception">The operation failed.</exception>
    </member>
    <member name="T:System.Drawing.BitmapSuffixInSameAssemblyAttribute">
      <summary>Specifies that, when interpreting <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> declarations, the assembly should look for the indicated resources in the same assembly, but with the <see cref="P:System.Drawing.Configuration.SystemDrawingSection.BitmapSuffix" /> configuration value appended to the declared file name.</summary>
    </member>
    <member name="M:System.Drawing.BitmapSuffixInSameAssemblyAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.BitmapSuffixInSameAssemblyAttribute" /> class.</summary>
    </member>
    <member name="T:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute">
      <summary>Specifies that, when interpreting <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> declarations, the assembly should look for the indicated resources in a satellite assembly, but with the <see cref="P:System.Drawing.Configuration.SystemDrawingSection.BitmapSuffix" /> configuration value appended to the declared file name.</summary>
    </member>
    <member name="M:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute" /> class.</summary>
    </member>
    <member name="T:System.Drawing.Brush">
      <summary>Defines objects used to fill the interiors of graphical shapes such as rectangles, ellipses, pies, polygons, and paths.</summary>
    </member>
    <member name="M:System.Drawing.Brush.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Brush" /> class.</summary>
    </member>
    <member name="M:System.Drawing.Brush.Clone">
      <summary>When overridden in a derived class, creates an exact copy of this <see cref="T:System.Drawing.Brush" />.</summary>
      <returns>The new <see cref="T:System.Drawing.Brush" /> that this method creates.</returns>
    </member>
    <member name="M:System.Drawing.Brush.Dispose">
      <summary>Releases all resources used by this <see cref="T:System.Drawing.Brush" /> object.</summary>
    </member>
    <member name="M:System.Drawing.Brush.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Drawing.Brush" /> and optionally releases the managed resources.</summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Drawing.Brush.Finalize">
      <summary>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</summary>
    </member>
    <member name="M:System.Drawing.Brush.SetNativeBrush(System.IntPtr)">
      <summary>In a derived class, sets a reference to a GDI+ brush object.</summary>
      <param name="brush">A pointer to the GDI+ brush object.</param>
    </member>
    <member name="T:System.Drawing.Brushes">
      <summary>Brushes for all the standard colors. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Drawing.Brushes.AliceBlue">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.AntiqueWhite">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Aqua">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Aquamarine">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Azure">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Beige">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Bisque">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Black">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.BlanchedAlmond">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Blue">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.BlueViolet">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Brown">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.BurlyWood">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.CadetBlue">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Chartreuse">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Chocolate">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Coral">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.CornflowerBlue">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Cornsilk">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Crimson">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Cyan">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkBlue">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkCyan">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkGoldenrod">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkGray">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkGreen">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkKhaki">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkMagenta">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkOliveGreen">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkOrange">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkOrchid">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkRed">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkSalmon">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkSeaGreen">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkSlateBlue">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkSlateGray">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkTurquoise">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkViolet">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DeepPink">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DeepSkyBlue">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DimGray">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DodgerBlue">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Firebrick">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.FloralWhite">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.ForestGreen">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Fuchsia">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Gainsboro">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.GhostWhite">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Gold">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Goldenrod">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Gray">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Green">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.GreenYellow">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Honeydew">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.HotPink">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.IndianRed">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Indigo">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Ivory">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Khaki">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Lavender">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LavenderBlush">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LawnGreen">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LemonChiffon">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightBlue">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightCoral">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightCyan">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightGoldenrodYellow">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightGray">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightGreen">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightPink">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightSalmon">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightSeaGreen">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightSkyBlue">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightSlateGray">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightSteelBlue">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightYellow">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Lime">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LimeGreen">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Linen">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Magenta">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Maroon">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumAquamarine">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumBlue">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumOrchid">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumPurple">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumSeaGreen">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumSlateBlue">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumSpringGreen">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumTurquoise">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumVioletRed">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MidnightBlue">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MintCream">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MistyRose">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Moccasin">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.NavajoWhite">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Navy">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.OldLace">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Olive">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.OliveDrab">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Orange">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.OrangeRed">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Orchid">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.PaleGoldenrod">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.PaleGreen">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.PaleTurquoise">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.PaleVioletRed">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.PapayaWhip">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.PeachPuff">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Peru">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Pink">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Plum">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.PowderBlue">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Purple">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Red">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.RosyBrown">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.RoyalBlue">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.SaddleBrown">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Salmon">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.SandyBrown">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.SeaGreen">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.SeaShell">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Sienna">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Silver">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.SkyBlue">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.SlateBlue">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.SlateGray">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Snow">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.SpringGreen">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.SteelBlue">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Tan">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Teal">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Thistle">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Tomato">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Transparent">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Turquoise">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Violet">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Wheat">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.White">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.WhiteSmoke">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Yellow">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.YellowGreen">
      <summary>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object set to a system-defined color.</returns>
    </member>
    <member name="T:System.Drawing.BufferedGraphics">
      <summary>Provides a graphics buffer for double buffering.</summary>
    </member>
    <member name="M:System.Drawing.BufferedGraphics.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Drawing.BufferedGraphics" /> object.</summary>
    </member>
    <member name="M:System.Drawing.BufferedGraphics.Finalize">
      <summary>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</summary>
    </member>
    <member name="P:System.Drawing.BufferedGraphics.Graphics">
      <summary>Gets a <see cref="T:System.Drawing.Graphics" /> object that outputs to the graphics buffer.</summary>
      <returns>A <see cref="T:System.Drawing.Graphics" /> object that outputs to the graphics buffer.</returns>
    </member>
    <member name="M:System.Drawing.BufferedGraphics.Render">
      <summary>Writes the contents of the graphics buffer to the default device.</summary>
    </member>
    <member name="M:System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)">
      <summary>Writes the contents of the graphics buffer to the specified <see cref="T:System.Drawing.Graphics" /> object.</summary>
      <param name="target">A <see cref="T:System.Drawing.Graphics" /> object to which to write the contents of the graphics buffer.</param>
    </member>
    <member name="M:System.Drawing.BufferedGraphics.Render(System.IntPtr)">
      <summary>Writes the contents of the graphics buffer to the device context associated with the specified <see cref="T:System.IntPtr" /> handle.</summary>
      <param name="targetDC">An <see cref="T:System.IntPtr" /> that points to the device context to which to write the contents of the graphics buffer.</param>
    </member>
    <member name="T:System.Drawing.BufferedGraphicsContext">
      <summary>Provides methods for creating graphics buffers that can be used for double buffering.</summary>
    </member>
    <member name="M:System.Drawing.BufferedGraphicsContext.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.BufferedGraphicsContext" /> class.</summary>
    </member>
    <member name="M:System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Creates a graphics buffer of the specified size using the pixel format of the specified <see cref="T:System.Drawing.Graphics" />.</summary>
      <param name="targetGraphics">The <see cref="T:System.Drawing.Graphics" /> to match the pixel format for the new buffer to.</param>
      <param name="targetRectangle">A <see cref="T:System.Drawing.Rectangle" /> indicating the size of the buffer to create.</param>
      <returns>A <see cref="T:System.Drawing.BufferedGraphics" /> that can be used to draw to a buffer of the specified dimensions.</returns>
    </member>
    <member name="M:System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)">
      <summary>Creates a graphics buffer of the specified size using the pixel format of the specified <see cref="T:System.Drawing.Graphics" />.</summary>
      <param name="targetDC">An <see cref="T:System.IntPtr" /> to a device context to match the pixel format of the new buffer to.</param>
      <param name="targetRectangle">A <see cref="T:System.Drawing.Rectangle" /> indicating the size of the buffer to create.</param>
      <returns>A <see cref="T:System.Drawing.BufferedGraphics" /> that can be used to draw to a buffer of the specified dimensions.</returns>
    </member>
    <member name="M:System.Drawing.BufferedGraphicsContext.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Drawing.BufferedGraphicsContext" />.</summary>
    </member>
    <member name="M:System.Drawing.BufferedGraphicsContext.Finalize">
      <summary>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</summary>
    </member>
    <member name="M:System.Drawing.BufferedGraphicsContext.Invalidate">
      <summary>Disposes of the current graphics buffer, if a buffer has been allocated and has not yet been disposed.</summary>
    </member>
    <member name="P:System.Drawing.BufferedGraphicsContext.MaximumBuffer">
      <summary>Gets or sets the maximum size of the buffer to use.</summary>
      <returns>A <see cref="T:System.Drawing.Size" /> indicating the maximum size of the buffer dimensions.</returns>
      <exception cref="T:System.ArgumentException">The height or width of the size is less than or equal to zero.</exception>
    </member>
    <member name="T:System.Drawing.BufferedGraphicsManager">
      <summary>Provides access to the main buffered graphics context object for the application domain.</summary>
    </member>
    <member name="P:System.Drawing.BufferedGraphicsManager.Current">
      <summary>Gets the <see cref="T:System.Drawing.BufferedGraphicsContext" /> for the current application domain.</summary>
      <returns>The <see cref="T:System.Drawing.BufferedGraphicsContext" /> for the current application domain.</returns>
    </member>
    <member name="T:System.Drawing.CharacterRange">
      <summary>Specifies a range of character positions within a string.</summary>
    </member>
    <member name="M:System.Drawing.CharacterRange.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.CharacterRange" /> structure, specifying a range of character positions within a string.</summary>
      <param name="First">The position of the first character in the range. For example, if <paramref name="First" /> is set to 0, the first position of the range is position 0 in the string.</param>
      <param name="Length">The number of positions in the range.</param>
    </member>
    <member name="M:System.Drawing.CharacterRange.Equals(System.Object)">
      <summary>Gets a value indicating whether this object is equivalent to the specified object.</summary>
      <param name="obj">The object to compare to for equality.</param>
      <returns>
        <see langword="true" /> to indicate the specified object is an instance with the same <see cref="P:System.Drawing.CharacterRange.First" /> and <see cref="P:System.Drawing.CharacterRange.Length" /> value as this instance; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Drawing.CharacterRange.First">
      <summary>Gets or sets the position in the string of the first character of this <see cref="T:System.Drawing.CharacterRange" />.</summary>
      <returns>The first position of this <see cref="T:System.Drawing.CharacterRange" />.</returns>
    </member>
    <member name="M:System.Drawing.CharacterRange.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns>A 32-bit signed integer that is the hash code for this instance.</returns>
    </member>
    <member name="P:System.Drawing.CharacterRange.Length">
      <summary>Gets or sets the number of positions in this <see cref="T:System.Drawing.CharacterRange" />.</summary>
      <returns>The number of positions in this <see cref="T:System.Drawing.CharacterRange" />.</returns>
    </member>
    <member name="M:System.Drawing.CharacterRange.op_Equality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)">
      <summary>Compares two <see cref="T:System.Drawing.CharacterRange" /> objects. Gets a value indicating whether the <see cref="P:System.Drawing.CharacterRange.First" /> and <see cref="P:System.Drawing.CharacterRange.Length" /> values of the two <see cref="T:System.Drawing.CharacterRange" /> objects are equal.</summary>
      <param name="cr1">A <see cref="T:System.Drawing.CharacterRange" /> to compare for equality.</param>
      <param name="cr2">A <see cref="T:System.Drawing.CharacterRange" /> to compare for equality.</param>
      <returns>
        <see langword="true" /> to indicate the two <see cref="T:System.Drawing.CharacterRange" /> objects have the same <see cref="P:System.Drawing.CharacterRange.First" /> and <see cref="P:System.Drawing.CharacterRange.Length" /> values; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.CharacterRange.op_Inequality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)">
      <summary>Compares two <see cref="T:System.Drawing.CharacterRange" /> objects. Gets a value indicating whether the <see cref="P:System.Drawing.CharacterRange.First" /> or <see cref="P:System.Drawing.CharacterRange.Length" /> values of the two <see cref="T:System.Drawing.CharacterRange" /> objects are not equal.</summary>
      <param name="cr1">A <see cref="T:System.Drawing.CharacterRange" /> to compare for inequality.</param>
      <param name="cr2">A <see cref="T:System.Drawing.CharacterRange" /> to compare for inequality.</param>
      <returns>
        <see langword="true" /> to indicate the either the <see cref="P:System.Drawing.CharacterRange.First" /> or <see cref="P:System.Drawing.CharacterRange.Length" /> values of the two <see cref="T:System.Drawing.CharacterRange" /> objects differ; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Drawing.ColorTranslator">
      <summary>Translates colors to and from GDI+ <see cref="T:System.Drawing.Color" /> structures. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Drawing.ColorTranslator.FromHtml(System.String)">
      <summary>Translates an HTML color representation to a GDI+ <see cref="T:System.Drawing.Color" /> structure.</summary>
      <param name="htmlColor">The string representation of the Html color to translate.</param>
      <returns>The <see cref="T:System.Drawing.Color" /> structure that represents the translated HTML color or <see cref="F:System.Drawing.Color.Empty" /> if <paramref name="htmlColor" /> is <see langword="null" />.</returns>
      <exception cref="T:System.Exception">
        <paramref name="htmlColor" /> is not a valid HTML color name.</exception>
    </member>
    <member name="M:System.Drawing.ColorTranslator.FromOle(System.Int32)">
      <summary>Translates an OLE color value to a GDI+ <see cref="T:System.Drawing.Color" /> structure.</summary>
      <param name="oleColor">The OLE color to translate.</param>
      <returns>The <see cref="T:System.Drawing.Color" /> structure that represents the translated OLE color.</returns>
    </member>
    <member name="M:System.Drawing.ColorTranslator.FromWin32(System.Int32)">
      <summary>Translates a Windows color value to a GDI+ <see cref="T:System.Drawing.Color" /> structure.</summary>
      <param name="win32Color">The Windows color to translate.</param>
      <returns>The <see cref="T:System.Drawing.Color" /> structure that represents the translated Windows color.</returns>
    </member>
    <member name="M:System.Drawing.ColorTranslator.ToHtml(System.Drawing.Color)">
      <summary>Translates the specified <see cref="T:System.Drawing.Color" /> structure to an HTML string color representation.</summary>
      <param name="c">The <see cref="T:System.Drawing.Color" /> structure to translate.</param>
      <returns>The string that represents the HTML color.</returns>
    </member>
    <member name="M:System.Drawing.ColorTranslator.ToOle(System.Drawing.Color)">
      <summary>Translates the specified <see cref="T:System.Drawing.Color" /> structure to an OLE color.</summary>
      <param name="c">The <see cref="T:System.Drawing.Color" /> structure to translate.</param>
      <returns>The OLE color value.</returns>
    </member>
    <member name="M:System.Drawing.ColorTranslator.ToWin32(System.Drawing.Color)">
      <summary>Translates the specified <see cref="T:System.Drawing.Color" /> structure to a Windows color.</summary>
      <param name="c">The <see cref="T:System.Drawing.Color" /> structure to translate.</param>
      <returns>The Windows color value.</returns>
    </member>
    <member name="T:System.Drawing.ContentAlignment">
      <summary>Specifies alignment of content on the drawing surface.</summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.BottomCenter">
      <summary>Content is vertically aligned at the bottom, and horizontally aligned at the center.</summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.BottomLeft">
      <summary>Content is vertically aligned at the bottom, and horizontally aligned on the left.</summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.BottomRight">
      <summary>Content is vertically aligned at the bottom, and horizontally aligned on the right.</summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.MiddleCenter">
      <summary>Content is vertically aligned in the middle, and horizontally aligned at the center.</summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.MiddleLeft">
      <summary>Content is vertically aligned in the middle, and horizontally aligned on the left.</summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.MiddleRight">
      <summary>Content is vertically aligned in the middle, and horizontally aligned on the right.</summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.TopCenter">
      <summary>Content is vertically aligned at the top, and horizontally aligned at the center.</summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.TopLeft">
      <summary>Content is vertically aligned at the top, and horizontally aligned on the left.</summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.TopRight">
      <summary>Content is vertically aligned at the top, and horizontally aligned on the right.</summary>
    </member>
    <member name="T:System.Drawing.CopyPixelOperation">
      <summary>Determines how the source color in a copy pixel operation is combined with the destination color to result in a final color.</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.Blackness">
      <summary>The destination area is filled by using the color associated with index 0 in the physical palette. (This color is black for the default physical palette.)</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.CaptureBlt">
      <summary>Windows that are layered on top of your window are included in the resulting image. By default, the image contains only your window. Note that this generally cannot be used for printing device contexts.</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.DestinationInvert">
      <summary>The destination area is inverted.</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.MergeCopy">
      <summary>The colors of the source area are merged with the colors of the selected brush of the destination device context using the Boolean <see langword="AND" /> operator.</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.MergePaint">
      <summary>The colors of the inverted source area are merged with the colors of the destination area by using the Boolean <see langword="OR" /> operator.</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.NoMirrorBitmap">
      <summary>The bitmap is not mirrored.</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.NotSourceCopy">
      <summary>The inverted source area is copied to the destination.</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.NotSourceErase">
      <summary>The source and destination colors are combined using the Boolean <see langword="OR" /> operator, and then resultant color is then inverted.</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.PatCopy">
      <summary>The brush currently selected in the destination device context is copied to the destination bitmap.</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.PatInvert">
      <summary>The colors of the brush currently selected in the destination device context are combined with the colors of the destination are using the Boolean <see langword="XOR" /> operator.</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.PatPaint">
      <summary>The colors of the brush currently selected in the destination device context are combined with the colors of the inverted source area using the Boolean <see langword="OR" /> operator. The result of this operation is combined with the colors of the destination area using the Boolean <see langword="OR" /> operator.</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.SourceAnd">
      <summary>The colors of the source and destination areas are combined using the Boolean <see langword="AND" /> operator.</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.SourceCopy">
      <summary>The source area is copied directly to the destination area.</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.SourceErase">
      <summary>The inverted colors of the destination area are combined with the colors of the source area using the Boolean <see langword="AND" /> operator.</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.SourceInvert">
      <summary>The colors of the source and destination areas are combined using the Boolean <see langword="XOR" /> operator.</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.SourcePaint">
      <summary>The colors of the source and destination areas are combined using the Boolean <see langword="OR" /> operator.</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.Whiteness">
      <summary>The destination area is filled by using the color associated with index 1 in the physical palette. (This color is white for the default physical palette.)</summary>
    </member>
    <member name="T:System.Drawing.Design.CategoryNameCollection">
      <summary>Represents a collection of category name strings.</summary>
    </member>
    <member name="M:System.Drawing.Design.CategoryNameCollection.#ctor(System.Drawing.Design.CategoryNameCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Design.CategoryNameCollection" /> class using the specified collection.</summary>
      <param name="value">A <see cref="T:System.Drawing.Design.CategoryNameCollection" /> that contains the names to initialize the collection values to.</param>
    </member>
    <member name="M:System.Drawing.Design.CategoryNameCollection.#ctor(System.String[])">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Design.CategoryNameCollection" /> class using the specified array of names.</summary>
      <param name="value">An array of strings that contains the names of the categories to initialize the collection values to.</param>
    </member>
    <member name="M:System.Drawing.Design.CategoryNameCollection.Contains(System.String)">
      <summary>Indicates whether the specified category is contained in the collection.</summary>
      <param name="value">The string to check for in the collection.</param>
      <returns>
        <see langword="true" /> if the specified category is contained in the collection; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.CategoryNameCollection.CopyTo(System.String[],System.Int32)">
      <summary>Copies the collection elements to the specified array at the specified index.</summary>
      <param name="array">The array to copy to.</param>
      <param name="index">The index of the destination array at which to begin copying.</param>
    </member>
    <member name="M:System.Drawing.Design.CategoryNameCollection.IndexOf(System.String)">
      <summary>Gets the index of the specified value.</summary>
      <param name="value">The category name to retrieve the index of in the collection.</param>
      <returns>The index in the collection, or <see langword="null" /> if the string does not exist in the collection.</returns>
    </member>
    <member name="P:System.Drawing.Design.CategoryNameCollection.Item(System.Int32)">
      <summary>Gets the category name at the specified index.</summary>
      <param name="index">The index of the collection element to access.</param>
      <returns>The category name at the specified index.</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.AdjustableArrowCap">
      <summary>Represents an adjustable arrow-shaped line cap. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.AdjustableArrowCap.#ctor(System.Single,System.Single)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.AdjustableArrowCap" /> class with the specified width and height. The arrow end caps created with this constructor are always filled.</summary>
      <param name="width">The width of the arrow.</param>
      <param name="height">The height of the arrow.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.AdjustableArrowCap.#ctor(System.Single,System.Single,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.AdjustableArrowCap" /> class with the specified width, height, and fill property. Whether an arrow end cap is filled depends on the argument passed to the <paramref name="isFilled" /> parameter.</summary>
      <param name="width">The width of the arrow.</param>
      <param name="height">The height of the arrow.</param>
      <param name="isFilled">
        <see langword="true" /> to fill the arrow cap; otherwise, <see langword="false" />.</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.AdjustableArrowCap.Filled">
      <summary>Gets or sets whether the arrow cap is filled.</summary>
      <returns>This property is <see langword="true" /> if the arrow cap is filled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.AdjustableArrowCap.Height">
      <summary>Gets or sets the height of the arrow cap.</summary>
      <returns>The height of the arrow cap.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.AdjustableArrowCap.MiddleInset">
      <summary>Gets or sets the number of units between the outline of the arrow cap and the fill.</summary>
      <returns>The number of units between the outline of the arrow cap and the fill of the arrow cap.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.AdjustableArrowCap.Width">
      <summary>Gets or sets the width of the arrow cap.</summary>
      <returns>The width, in units, of the arrow cap.</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.Blend">
      <summary>Defines a blend pattern for a <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> object. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Blend.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Blend" /> class.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Blend.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Blend" /> class with the specified number of factors and positions.</summary>
      <param name="count">The number of elements in the <see cref="P:System.Drawing.Drawing2D.Blend.Factors" /> and <see cref="P:System.Drawing.Drawing2D.Blend.Positions" /> arrays.</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.Blend.Factors">
      <summary>Gets or sets an array of blend factors for the gradient.</summary>
      <returns>An array of blend factors that specify the percentages of the starting color and the ending color to be used at the corresponding position.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.Blend.Positions">
      <summary>Gets or sets an array of blend positions for the gradient.</summary>
      <returns>An array of blend positions that specify the percentages of distance along the gradient line.</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.ColorBlend">
      <summary>Defines arrays of colors and positions used for interpolating color blending in a multicolor gradient. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.ColorBlend.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> class.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.ColorBlend.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> class with the specified number of colors and positions.</summary>
      <param name="count">The number of colors and positions in this <see cref="T:System.Drawing.Drawing2D.ColorBlend" />.</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.ColorBlend.Colors">
      <summary>Gets or sets an array of colors that represents the colors to use at corresponding positions along a gradient.</summary>
      <returns>An array of <see cref="T:System.Drawing.Color" /> structures that represents the colors to use at corresponding positions along a gradient.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.ColorBlend.Positions">
      <summary>Gets or sets the positions along a gradient line.</summary>
      <returns>An array of values that specify percentages of distance along the gradient line.</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.CombineMode">
      <summary>Specifies how different clipping regions can be combined.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CombineMode.Complement">
      <summary>Specifies that the existing region is replaced by the result of the existing region being removed from the new region. Said differently, the existing region is excluded from the new region.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CombineMode.Exclude">
      <summary>Specifies that the existing region is replaced by the result of the new region being removed from the existing region. Said differently, the new region is excluded from the existing region.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CombineMode.Intersect">
      <summary>Two clipping regions are combined by taking their intersection.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CombineMode.Replace">
      <summary>One clipping region is replaced by another.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CombineMode.Union">
      <summary>Two clipping regions are combined by taking the union of both.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CombineMode.Xor">
      <summary>Two clipping regions are combined by taking only the areas enclosed by one or the other region, but not both.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.CompositingMode">
      <summary>Specifies how the source colors are combined with the background colors.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingMode.SourceCopy">
      <summary>Specifies that when a color is rendered, it overwrites the background color.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingMode.SourceOver">
      <summary>Specifies that when a color is rendered, it is blended with the background color. The blend is determined by the alpha component of the color being rendered.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.CompositingQuality">
      <summary>Specifies the quality level to use during compositing.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingQuality.AssumeLinear">
      <summary>Assume linear values.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingQuality.Default">
      <summary>Default quality.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingQuality.GammaCorrected">
      <summary>Gamma correction is used.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingQuality.HighQuality">
      <summary>High quality, low speed compositing.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingQuality.HighSpeed">
      <summary>High speed, low quality.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingQuality.Invalid">
      <summary>Invalid quality.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.CoordinateSpace">
      <summary>Specifies the system to use when evaluating coordinates.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CoordinateSpace.Device">
      <summary>Specifies that coordinates are in the device coordinate context. On a computer screen the device coordinates are usually measured in pixels.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CoordinateSpace.Page">
      <summary>Specifies that coordinates are in the page coordinate context. Their units are defined by the <see cref="P:System.Drawing.Graphics.PageUnit" /> property, and must be one of the elements of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CoordinateSpace.World">
      <summary>Specifies that coordinates are in the world coordinate context. World coordinates are used in a nonphysical environment, such as a modeling environment.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.CustomLineCap">
      <summary>Encapsulates a custom user-defined line cap.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> class with the specified outline and fill.</summary>
      <param name="fillPath">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that defines the fill for the custom cap.</param>
      <param name="strokePath">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that defines the outline of the custom cap.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> class from the specified existing <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration with the specified outline and fill.</summary>
      <param name="fillPath">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that defines the fill for the custom cap.</param>
      <param name="strokePath">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that defines the outline of the custom cap.</param>
      <param name="baseCap">The line cap from which to create the custom cap.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap,System.Single)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> class from the specified existing <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration with the specified outline, fill, and inset.</summary>
      <param name="fillPath">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that defines the fill for the custom cap.</param>
      <param name="strokePath">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that defines the outline of the custom cap.</param>
      <param name="baseCap">The line cap from which to create the custom cap.</param>
      <param name="baseInset">The distance between the cap and the line.</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.CustomLineCap.BaseCap">
      <summary>Gets or sets the <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration on which this <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> is based.</summary>
      <returns>The <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration on which this <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> is based.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.CustomLineCap.BaseInset">
      <summary>Gets or sets the distance between the cap and the line.</summary>
      <returns>The distance between the beginning of the cap and the end of the line.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.Clone">
      <summary>Creates an exact copy of this <see cref="T:System.Drawing.Drawing2D.CustomLineCap" />.</summary>
      <returns>The <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> this method creates, cast as an object.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.Dispose">
      <summary>Releases all resources used by this <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> object.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> and optionally releases the managed resources.</summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.Finalize">
      <summary>Allows an <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> to attempt to free resources and perform other cleanup operations before the <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> is reclaimed by garbage collection.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps(System.Drawing.Drawing2D.LineCap@,System.Drawing.Drawing2D.LineCap@)">
      <summary>Gets the caps used to start and end lines that make up this custom cap.</summary>
      <param name="startCap">The <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration used at the beginning of a line within this cap.</param>
      <param name="endCap">The <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration used at the end of a line within this cap.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap)">
      <summary>Sets the caps used to start and end lines that make up this custom cap.</summary>
      <param name="startCap">The <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration used at the beginning of a line within this cap.</param>
      <param name="endCap">The <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration used at the end of a line within this cap.</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.CustomLineCap.StrokeJoin">
      <summary>Gets or sets the <see cref="T:System.Drawing.Drawing2D.LineJoin" /> enumeration that determines how lines that compose this <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> object are joined.</summary>
      <returns>The <see cref="T:System.Drawing.Drawing2D.LineJoin" /> enumeration this <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> object uses to join lines.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.CustomLineCap.WidthScale">
      <summary>Gets or sets the amount by which to scale this <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> Class object with respect to the width of the <see cref="T:System.Drawing.Pen" /> object.</summary>
      <returns>The amount by which to scale the cap.</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.DashCap">
      <summary>Specifies the type of graphic shape to use on both ends of each dash in a dashed line.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashCap.Flat">
      <summary>Specifies a square cap that squares off both ends of each dash.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashCap.Round">
      <summary>Specifies a circular cap that rounds off both ends of each dash.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashCap.Triangle">
      <summary>Specifies a triangular cap that points both ends of each dash.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.DashStyle">
      <summary>Specifies the style of dashed lines drawn with a <see cref="T:System.Drawing.Pen" /> object.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashStyle.Custom">
      <summary>Specifies a user-defined custom dash style.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashStyle.Dash">
      <summary>Specifies a line consisting of dashes.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashStyle.DashDot">
      <summary>Specifies a line consisting of a repeating pattern of dash-dot.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashStyle.DashDotDot">
      <summary>Specifies a line consisting of a repeating pattern of dash-dot-dot.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashStyle.Dot">
      <summary>Specifies a line consisting of dots.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashStyle.Solid">
      <summary>Specifies a solid line.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.FillMode">
      <summary>Specifies how the interior of a closed path is filled.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.FillMode.Alternate">
      <summary>Specifies the alternate fill mode.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.FillMode.Winding">
      <summary>Specifies the winding fill mode.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.FlushIntention">
      <summary>Specifies whether commands in the graphics stack are terminated (flushed) immediately or executed as soon as possible.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.FlushIntention.Flush">
      <summary>Specifies that the stack of all graphics operations is flushed immediately.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.FlushIntention.Sync">
      <summary>Specifies that all graphics operations on the stack are executed as soon as possible. This synchronizes the graphics state.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.GraphicsContainer">
      <summary>Represents the internal data of a graphics container. This class is used when saving the state of a <see cref="T:System.Drawing.Graphics" /> object using the <see cref="M:System.Drawing.Graphics.BeginContainer" /> and <see cref="M:System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)" /> methods. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.GraphicsPath">
      <summary>Represents a series of connected lines and curves. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with a <see cref="P:System.Drawing.Drawing2D.GraphicsPath.FillMode" /> value of <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Drawing2D.FillMode)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with the specified <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration.</summary>
      <param name="fillMode">The <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the interior of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> is filled.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.Point" /> arrays.</summary>
      <param name="pts">An array of <see cref="T:System.Drawing.Point" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</param>
      <param name="types">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <paramref name="pts" /> array.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.Point" /> arrays and with the specified <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration element.</summary>
      <param name="pts">An array of <see cref="T:System.Drawing.Point" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</param>
      <param name="types">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <paramref name="pts" /> array.</param>
      <param name="fillMode">A <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that specifies how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> array with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.PointF" /> arrays.</summary>
      <param name="pts">An array of <see cref="T:System.Drawing.PointF" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</param>
      <param name="types">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <paramref name="pts" /> array.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[],System.Drawing.Drawing2D.FillMode)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> array with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.PointF" /> arrays and with the specified <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration element.</summary>
      <param name="pts">An array of <see cref="T:System.Drawing.PointF" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</param>
      <param name="types">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <paramref name="pts" /> array.</param>
      <param name="fillMode">A <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that specifies how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>Appends an elliptical arc to the current figure.</summary>
      <param name="rect">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangular bounds of the ellipse from which the arc is taken.</param>
      <param name="startAngle">The starting angle of the arc, measured in degrees clockwise from the x-axis.</param>
      <param name="sweepAngle">The angle between <paramref name="startAngle" /> and the end of the arc.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)">
      <summary>Appends an elliptical arc to the current figure.</summary>
      <param name="rect">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangular bounds of the ellipse from which the arc is taken.</param>
      <param name="startAngle">The starting angle of the arc, measured in degrees clockwise from the x-axis.</param>
      <param name="sweepAngle">The angle between <paramref name="startAngle" /> and the end of the arc.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
      <summary>Appends an elliptical arc to the current figure.</summary>
      <param name="x">The x-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</param>
      <param name="y">The y-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</param>
      <param name="width">The width of the rectangular region that defines the ellipse from which the arc is drawn.</param>
      <param name="height">The height of the rectangular region that defines the ellipse from which the arc is drawn.</param>
      <param name="startAngle">The starting angle of the arc, measured in degrees clockwise from the x-axis.</param>
      <param name="sweepAngle">The angle between <paramref name="startAngle" /> and the end of the arc.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>Appends an elliptical arc to the current figure.</summary>
      <param name="x">The x-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</param>
      <param name="y">The y-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</param>
      <param name="width">The width of the rectangular region that defines the ellipse from which the arc is drawn.</param>
      <param name="height">The height of the rectangular region that defines the ellipse from which the arc is drawn.</param>
      <param name="startAngle">The starting angle of the arc, measured in degrees clockwise from the x-axis.</param>
      <param name="sweepAngle">The angle between <paramref name="startAngle" /> and the end of the arc.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
      <summary>Adds a cubic Bézier curve to the current figure.</summary>
      <param name="pt1">A <see cref="T:System.Drawing.Point" /> that represents the starting point of the curve.</param>
      <param name="pt2">A <see cref="T:System.Drawing.Point" /> that represents the first control point for the curve.</param>
      <param name="pt3">A <see cref="T:System.Drawing.Point" /> that represents the second control point for the curve.</param>
      <param name="pt4">A <see cref="T:System.Drawing.Point" /> that represents the endpoint of the curve.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
      <summary>Adds a cubic Bézier curve to the current figure.</summary>
      <param name="pt1">A <see cref="T:System.Drawing.PointF" /> that represents the starting point of the curve.</param>
      <param name="pt2">A <see cref="T:System.Drawing.PointF" /> that represents the first control point for the curve.</param>
      <param name="pt3">A <see cref="T:System.Drawing.PointF" /> that represents the second control point for the curve.</param>
      <param name="pt4">A <see cref="T:System.Drawing.PointF" /> that represents the endpoint of the curve.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Adds a cubic Bézier curve to the current figure.</summary>
      <param name="x1">The x-coordinate of the starting point of the curve.</param>
      <param name="y1">The y-coordinate of the starting point of the curve.</param>
      <param name="x2">The x-coordinate of the first control point for the curve.</param>
      <param name="y2">The y-coordinate of the first control point for the curve.</param>
      <param name="x3">The x-coordinate of the second control point for the curve.</param>
      <param name="y3">The y-coordinate of the second control point for the curve.</param>
      <param name="x4">The x-coordinate of the endpoint of the curve.</param>
      <param name="y4">The y-coordinate of the endpoint of the curve.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>Adds a cubic Bézier curve to the current figure.</summary>
      <param name="x1">The x-coordinate of the starting point of the curve.</param>
      <param name="y1">The y-coordinate of the starting point of the curve.</param>
      <param name="x2">The x-coordinate of the first control point for the curve.</param>
      <param name="y2">The y-coordinate of the first control point for the curve.</param>
      <param name="x3">The x-coordinate of the second control point for the curve.</param>
      <param name="y3">The y-coordinate of the second control point for the curve.</param>
      <param name="x4">The x-coordinate of the endpoint of the curve.</param>
      <param name="y4">The y-coordinate of the endpoint of the curve.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
      <summary>Adds a sequence of connected cubic Bézier curves to the current figure.</summary>
      <param name="points">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curves.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])">
      <summary>Adds a sequence of connected cubic Bézier curves to the current figure.</summary>
      <param name="points">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curves.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])">
      <summary>Adds a closed curve to this path. A cardinal spline curve is used because the curve travels through each of the points in the array.</summary>
      <param name="points">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
      <summary>Adds a closed curve to this path. A cardinal spline curve is used because the curve travels through each of the points in the array.</summary>
      <param name="points">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</param>
      <param name="tension">A value between from 0 through 1 that specifies the amount that the curve bends between points, with 0 being the smallest curve (sharpest corner) and 1 being the smoothest curve.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])">
      <summary>Adds a closed curve to this path. A cardinal spline curve is used because the curve travels through each of the points in the array.</summary>
      <param name="points">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)">
      <summary>Adds a closed curve to this path. A cardinal spline curve is used because the curve travels through each of the points in the array.</summary>
      <param name="points">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</param>
      <param name="tension">A value between from 0 through 1 that specifies the amount that the curve bends between points, with 0 being the smallest curve (sharpest corner) and 1 being the smoothest curve.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[])">
      <summary>Adds a spline curve to the current figure. A cardinal spline curve is used because the curve travels through each of the points in the array.</summary>
      <param name="points">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
      <summary>Adds a spline curve to the current figure.</summary>
      <param name="points">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</param>
      <param name="offset">The index of the element in the <paramref name="points" /> array that is used as the first point in the curve.</param>
      <param name="numberOfSegments">A value that specifies the amount that the curve bends between control points. Values greater than 1 produce unpredictable results.</param>
      <param name="tension">A value that specifies the amount that the curve bends between control points. Values greater than 1 produce unpredictable results.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)">
      <summary>Adds a spline curve to the current figure.</summary>
      <param name="points">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</param>
      <param name="tension">A value that specifies the amount that the curve bends between control points. Values greater than 1 produce unpredictable results.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[])">
      <summary>Adds a spline curve to the current figure. A cardinal spline curve is used because the curve travels through each of the points in the array.</summary>
      <param name="points">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
      <summary>Adds a spline curve to the current figure.</summary>
      <param name="points">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</param>
      <param name="offset">The index of the element in the <paramref name="points" /> array that is used as the first point in the curve.</param>
      <param name="numberOfSegments">The number of segments used to draw the curve. A segment can be thought of as a line connecting two points.</param>
      <param name="tension">A value that specifies the amount that the curve bends between control points. Values greater than 1 produce unpredictable results.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)">
      <summary>Adds a spline curve to the current figure.</summary>
      <param name="points">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</param>
      <param name="tension">A value that specifies the amount that the curve bends between control points. Values greater than 1 produce unpredictable results.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)">
      <summary>Adds an ellipse to the current path.</summary>
      <param name="rect">A <see cref="T:System.Drawing.Rectangle" /> that represents the bounding rectangle that defines the ellipse.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.RectangleF)">
      <summary>Adds an ellipse to the current path.</summary>
      <param name="rect">A <see cref="T:System.Drawing.RectangleF" /> that represents the bounding rectangle that defines the ellipse.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Adds an ellipse to the current path.</summary>
      <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
      <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
      <param name="width">The width of the bounding rectangle that defines the ellipse.</param>
      <param name="height">The height of the bounding rectangle that defines the ellipse.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)">
      <summary>Adds an ellipse to the current path.</summary>
      <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
      <param name="y">The y-coordinate of the upper left corner of the bounding rectangle that defines the ellipse.</param>
      <param name="width">The width of the bounding rectangle that defines the ellipse.</param>
      <param name="height">The height of the bounding rectangle that defines the ellipse.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.Point,System.Drawing.Point)">
      <summary>Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      <param name="pt1">A <see cref="T:System.Drawing.Point" /> that represents the starting point of the line.</param>
      <param name="pt2">A <see cref="T:System.Drawing.Point" /> that represents the endpoint of the line.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)">
      <summary>Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      <param name="pt1">A <see cref="T:System.Drawing.PointF" /> that represents the starting point of the line.</param>
      <param name="pt2">A <see cref="T:System.Drawing.PointF" /> that represents the endpoint of the line.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Appends a line segment to the current figure.</summary>
      <param name="x1">The x-coordinate of the starting point of the line.</param>
      <param name="y1">The y-coordinate of the starting point of the line.</param>
      <param name="x2">The x-coordinate of the endpoint of the line.</param>
      <param name="y2">The y-coordinate of the endpoint of the line.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)">
      <summary>Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      <param name="x1">The x-coordinate of the starting point of the line.</param>
      <param name="y1">The y-coordinate of the starting point of the line.</param>
      <param name="x2">The x-coordinate of the endpoint of the line.</param>
      <param name="y2">The y-coordinate of the endpoint of the line.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
      <summary>Appends a series of connected line segments to the end of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      <param name="points">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the line segments to add.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])">
      <summary>Appends a series of connected line segments to the end of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      <param name="points">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the line segments to add.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
      <summary>Appends the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> to this path.</summary>
      <param name="addingPath">The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> to add.</param>
      <param name="connect">A Boolean value that specifies whether the first figure in the added path is part of the last figure in this path. A value of <see langword="true" /> specifies that (if possible) the first figure in the added path is part of the last figure in this path. A value of <see langword="false" /> specifies that the first figure in the added path is separate from the last figure in this path.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>Adds the outline of a pie shape to this path.</summary>
      <param name="rect">A <see cref="T:System.Drawing.Rectangle" /> that represents the bounding rectangle that defines the ellipse from which the pie is drawn.</param>
      <param name="startAngle">The starting angle for the pie section, measured in degrees clockwise from the x-axis.</param>
      <param name="sweepAngle">The angle between <paramref name="startAngle" /> and the end of the pie section, measured in degrees clockwise from <paramref name="startAngle" />.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
      <summary>Adds the outline of a pie shape to this path.</summary>
      <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</param>
      <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</param>
      <param name="width">The width of the bounding rectangle that defines the ellipse from which the pie is drawn.</param>
      <param name="height">The height of the bounding rectangle that defines the ellipse from which the pie is drawn.</param>
      <param name="startAngle">The starting angle for the pie section, measured in degrees clockwise from the x-axis.</param>
      <param name="sweepAngle">The angle between <paramref name="startAngle" /> and the end of the pie section, measured in degrees clockwise from <paramref name="startAngle" />.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>Adds the outline of a pie shape to this path.</summary>
      <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</param>
      <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</param>
      <param name="width">The width of the bounding rectangle that defines the ellipse from which the pie is drawn.</param>
      <param name="height">The height of the bounding rectangle that defines the ellipse from which the pie is drawn.</param>
      <param name="startAngle">The starting angle for the pie section, measured in degrees clockwise from the x-axis.</param>
      <param name="sweepAngle">The angle between <paramref name="startAngle" /> and the end of the pie section, measured in degrees clockwise from <paramref name="startAngle" />.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])">
      <summary>Adds a polygon to this path.</summary>
      <param name="points">An array of <see cref="T:System.Drawing.Point" /> structures that defines the polygon to add.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.PointF[])">
      <summary>Adds a polygon to this path.</summary>
      <param name="points">An array of <see cref="T:System.Drawing.PointF" /> structures that defines the polygon to add.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)">
      <summary>Adds a rectangle to this path.</summary>
      <param name="rect">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle to add.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.RectangleF)">
      <summary>Adds a rectangle to this path.</summary>
      <param name="rect">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle to add.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])">
      <summary>Adds a series of rectangles to this path.</summary>
      <param name="rects">An array of <see cref="T:System.Drawing.Rectangle" /> structures that represents the rectangles to add.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.RectangleF[])">
      <summary>Adds a series of rectangles to this path.</summary>
      <param name="rects">An array of <see cref="T:System.Drawing.RectangleF" /> structures that represents the rectangles to add.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
      <summary>Adds a text string to this path.</summary>
      <param name="s">The <see cref="T:System.String" /> to add.</param>
      <param name="family">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn.</param>
      <param name="style">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on). This must be cast as an integer (see the example code later in this section).</param>
      <param name="emSize">The height of the em square box that bounds the character.</param>
      <param name="origin">A <see cref="T:System.Drawing.Point" /> that represents the point where the text starts.</param>
      <param name="format">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)">
      <summary>Adds a text string to this path.</summary>
      <param name="s">The <see cref="T:System.String" /> to add.</param>
      <param name="family">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn.</param>
      <param name="style">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on). This must be cast as an integer (see the example code later in this section).</param>
      <param name="emSize">The height of the em square box that bounds the character.</param>
      <param name="origin">A <see cref="T:System.Drawing.PointF" /> that represents the point where the text starts.</param>
      <param name="format">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)">
      <summary>Adds a text string to this path.</summary>
      <param name="s">The <see cref="T:System.String" /> to add.</param>
      <param name="family">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn.</param>
      <param name="style">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on). This must be cast as an integer (see the example code later in this section).</param>
      <param name="emSize">The height of the em square box that bounds the character.</param>
      <param name="layoutRect">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle that bounds the text.</param>
      <param name="format">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)">
      <summary>Adds a text string to this path.</summary>
      <param name="s">The <see cref="T:System.String" /> to add.</param>
      <param name="family">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn.</param>
      <param name="style">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on). This must be cast as an integer (see the example code later in this section).</param>
      <param name="emSize">The height of the em square box that bounds the character.</param>
      <param name="layoutRect">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that bounds the text.</param>
      <param name="format">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
      <summary>Clears all markers from this path.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Clone">
      <summary>Creates an exact copy of this path.</summary>
      <returns>The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> this method creates, cast as an object.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures">
      <summary>Closes all open figures in this path and starts a new figure. It closes each open figure by connecting a line from its endpoint to its starting point.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.CloseFigure">
      <summary>Closes the current figure and starts a new figure. If the current figure contains a sequence of connected lines and curves, the method closes the loop by connecting a line from the endpoint to the starting point.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Dispose">
      <summary>Releases all resources used by this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPath.FillMode">
      <summary>Gets or sets a <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</summary>
      <returns>A <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that specifies how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Finalize">
      <summary>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Flatten">
      <summary>Converts each curve in this path into a sequence of connected line segments.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix)">
      <summary>Applies the specified transform and then converts each curve in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> into a sequence of connected line segments.</summary>
      <param name="matrix">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which to transform this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> before flattening.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
      <summary>Converts each curve in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> into a sequence of connected line segments.</summary>
      <param name="matrix">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which to transform this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> before flattening.</param>
      <param name="flatness">Specifies the maximum permitted error between the curve and its flattened approximation. A value of 0.25 is the default. Reducing the flatness value will increase the number of line segments in the approximation.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
      <summary>Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      <returns>A <see cref="T:System.Drawing.RectangleF" /> that represents a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)">
      <summary>Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when this path is transformed by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</summary>
      <param name="matrix">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transformation to be applied to this path before the bounding rectangle is calculated. This path is not permanently transformed; the transformation is used only during the process of calculating the bounding rectangle.</param>
      <returns>A <see cref="T:System.Drawing.RectangleF" /> that represents a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)">
      <summary>Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when the current path is transformed by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> and drawn with the specified <see cref="T:System.Drawing.Pen" />.</summary>
      <param name="matrix">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transformation to be applied to this path before the bounding rectangle is calculated. This path is not permanently transformed; the transformation is used only during the process of calculating the bounding rectangle.</param>
      <param name="pen">The <see cref="T:System.Drawing.Pen" /> with which to draw the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</param>
      <returns>A <see cref="T:System.Drawing.RectangleF" /> that represents a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.GetLastPoint">
      <summary>Gets the last point in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> array of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      <returns>A <see cref="T:System.Drawing.PointF" /> that represents the last point in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)">
      <summary>Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</summary>
      <param name="point">A <see cref="T:System.Drawing.Point" /> that specifies the location to test.</param>
      <param name="pen">The <see cref="T:System.Drawing.Pen" /> to test.</param>
      <returns>This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)">
      <summary>Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</summary>
      <param name="pt">A <see cref="T:System.Drawing.Point" /> that specifies the location to test.</param>
      <param name="pen">The <see cref="T:System.Drawing.Pen" /> to test.</param>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</param>
      <returns>This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen)">
      <summary>Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</summary>
      <param name="point">A <see cref="T:System.Drawing.PointF" /> that specifies the location to test.</param>
      <param name="pen">The <see cref="T:System.Drawing.Pen" /> to test.</param>
      <returns>This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)">
      <summary>Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</summary>
      <param name="pt">A <see cref="T:System.Drawing.PointF" /> that specifies the location to test.</param>
      <param name="pen">The <see cref="T:System.Drawing.Pen" /> to test.</param>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</param>
      <returns>This method returns <see langword="true" /> if the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)">
      <summary>Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</summary>
      <param name="x">The x-coordinate of the point to test.</param>
      <param name="y">The y-coordinate of the point to test.</param>
      <param name="pen">The <see cref="T:System.Drawing.Pen" /> to test.</param>
      <returns>This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
      <summary>Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</summary>
      <param name="x">The x-coordinate of the point to test.</param>
      <param name="y">The y-coordinate of the point to test.</param>
      <param name="pen">The <see cref="T:System.Drawing.Pen" /> to test.</param>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</param>
      <returns>This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)">
      <summary>Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</summary>
      <param name="x">The x-coordinate of the point to test.</param>
      <param name="y">The y-coordinate of the point to test.</param>
      <param name="pen">The <see cref="T:System.Drawing.Pen" /> to test.</param>
      <returns>This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)">
      <summary>Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</summary>
      <param name="x">The x-coordinate of the point to test.</param>
      <param name="y">The y-coordinate of the point to test.</param>
      <param name="pen">The <see cref="T:System.Drawing.Pen" /> to test.</param>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</param>
      <returns>This method returns <see langword="true" /> if the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point)">
      <summary>Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      <param name="point">A <see cref="T:System.Drawing.Point" /> that represents the point to test.</param>
      <returns>This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)">
      <summary>Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      <param name="pt">A <see cref="T:System.Drawing.Point" /> that represents the point to test.</param>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</param>
      <returns>This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF)">
      <summary>Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      <param name="point">A <see cref="T:System.Drawing.PointF" /> that represents the point to test.</param>
      <returns>This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)">
      <summary>Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      <param name="pt">A <see cref="T:System.Drawing.PointF" /> that represents the point to test.</param>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</param>
      <returns>This method returns <see langword="true" /> if the specified point is contained within this; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32)">
      <summary>Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      <param name="x">The x-coordinate of the point to test.</param>
      <param name="y">The y-coordinate of the point to test.</param>
      <returns>This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
      <summary>Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />, using the specified <see cref="T:System.Drawing.Graphics" />.</summary>
      <param name="x">The x-coordinate of the point to test.</param>
      <param name="y">The y-coordinate of the point to test.</param>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</param>
      <returns>This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single)">
      <summary>Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      <param name="x">The x-coordinate of the point to test.</param>
      <param name="y">The y-coordinate of the point to test.</param>
      <returns>This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)">
      <summary>Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> in the visible clip region of the specified <see cref="T:System.Drawing.Graphics" />.</summary>
      <param name="x">The x-coordinate of the point to test.</param>
      <param name="y">The y-coordinate of the point to test.</param>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</param>
      <returns>This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPath.PathData">
      <summary>Gets a <see cref="T:System.Drawing.Drawing2D.PathData" /> that encapsulates arrays of points (<paramref name="points" />) and types (<paramref name="types" />) for this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      <returns>A <see cref="T:System.Drawing.Drawing2D.PathData" /> that encapsulates arrays for both the points and types for this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints">
      <summary>Gets the points in the path.</summary>
      <returns>An array of <see cref="T:System.Drawing.PointF" /> objects that represent the path.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
      <summary>Gets the types of the corresponding points in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> array.</summary>
      <returns>An array of bytes that specifies the types of the corresponding points in the path.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPath.PointCount">
      <summary>Gets the number of elements in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> or the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> array.</summary>
      <returns>An integer that specifies the number of elements in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> or the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> array.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Reset">
      <summary>Empties the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> and <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> arrays and sets the <see cref="T:System.Drawing.Drawing2D.FillMode" /> to <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Reverse">
      <summary>Reverses the order of points in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> array of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.SetMarkers">
      <summary>Sets a marker on this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
      <summary>Starts a new figure without closing the current figure. All subsequent points added to the path are added to this new figure.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)">
      <summary>Applies a transform matrix to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      <param name="matrix">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that represents the transformation to apply.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF)">
      <summary>Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      <param name="destPoints">An array of <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram to which the rectangle defined by <paramref name="srcRect" /> is transformed. The array can contain either three or four elements. If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</param>
      <param name="srcRect">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <paramref name="destPoints" />.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)">
      <summary>Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      <param name="destPoints">An array of <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram to which the rectangle defined by <paramref name="srcRect" /> is transformed. The array can contain either three or four elements. If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</param>
      <param name="srcRect">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <paramref name="destPoints" />.</param>
      <param name="matrix">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a geometric transform to apply to the path.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)">
      <summary>Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      <param name="destPoints">An array of <see cref="T:System.Drawing.PointF" /> structures that defines a parallelogram to which the rectangle defined by <paramref name="srcRect" /> is transformed. The array can contain either three or four elements. If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</param>
      <param name="srcRect">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <paramref name="destPoints" />.</param>
      <param name="matrix">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a geometric transform to apply to the path.</param>
      <param name="warpMode">A <see cref="T:System.Drawing.Drawing2D.WarpMode" /> enumeration that specifies whether this warp operation uses perspective or bilinear mode.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
      <summary>Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      <param name="destPoints">An array of <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram to which the rectangle defined by <paramref name="srcRect" /> is transformed. The array can contain either three or four elements. If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</param>
      <param name="srcRect">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <paramref name="destPoints" />.</param>
      <param name="matrix">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a geometric transform to apply to the path.</param>
      <param name="warpMode">A <see cref="T:System.Drawing.Drawing2D.WarpMode" /> enumeration that specifies whether this warp operation uses perspective or bilinear mode.</param>
      <param name="flatness">A value from 0 through 1 that specifies how flat the resulting path is. For more information, see the <see cref="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" /> methods.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen)">
      <summary>Adds an additional outline to the path.</summary>
      <param name="pen">A <see cref="T:System.Drawing.Pen" /> that specifies the width between the original outline of the path and the new outline this method creates.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)">
      <summary>Adds an additional outline to the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      <param name="pen">A <see cref="T:System.Drawing.Pen" /> that specifies the width between the original outline of the path and the new outline this method creates.</param>
      <param name="matrix">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transform to apply to the path before widening.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
      <summary>Replaces this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> with curves that enclose the area that is filled when this path is drawn by the specified pen.</summary>
      <param name="pen">A <see cref="T:System.Drawing.Pen" /> that specifies the width between the original outline of the path and the new outline this method creates.</param>
      <param name="matrix">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transform to apply to the path before widening.</param>
      <param name="flatness">A value that specifies the flatness for curves.</param>
    </member>
    <member name="T:System.Drawing.Drawing2D.GraphicsPathIterator">
      <summary>Provides the ability to iterate through subpaths in a <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> and test the types of shapes contained in each subpath. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.#ctor(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> class with the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</summary>
      <param name="path">The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object for which this helper class is to be initialized.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(System.Drawing.PointF[]@,System.Byte[]@,System.Int32,System.Int32)">
      <summary>Copies the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> property and <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> property arrays of the associated <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> into the two specified arrays.</summary>
      <param name="points">Upon return, contains an array of <see cref="T:System.Drawing.PointF" /> structures that represents the points in the path.</param>
      <param name="types">Upon return, contains an array of bytes that represents the types of points in the path.</param>
      <param name="startIndex">Specifies the starting index of the arrays.</param>
      <param name="endIndex">Specifies the ending index of the arrays.</param>
      <returns>The number of points copied.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPathIterator.Count">
      <summary>Gets the number of points in the path.</summary>
      <returns>The number of points in the path.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.Dispose">
      <summary>Releases all resources used by this <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> object.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate(System.Drawing.PointF[]@,System.Byte[]@)">
      <summary>Copies the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> property and <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> property arrays of the associated <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> into the two specified arrays.</summary>
      <param name="points">Upon return, contains an array of <see cref="T:System.Drawing.PointF" /> structures that represents the points in the path.</param>
      <param name="types">Upon return, contains an array of bytes that represents the types of points in the path.</param>
      <returns>The number of points copied.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.Finalize">
      <summary>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve">
      <summary>Indicates whether the path associated with this <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> contains a curve.</summary>
      <returns>This method returns <see langword="true" /> if the current subpath contains a curve; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>This <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> object has a <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object associated with it. The <see cref="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)" /> method increments the associated <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> to the next marker in its path and copies all the points contained between the current marker and the next marker (or end of path) to a second <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object passed in to the parameter.</summary>
      <param name="path">The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object to which the points will be copied.</param>
      <returns>The number of points between this marker and the next.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Int32@,System.Int32@)">
      <summary>Increments the <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> to the next marker in the path and returns the start and stop indexes by way of the [out] parameters.</summary>
      <param name="startIndex">[out] The integer reference supplied to this parameter receives the index of the point that starts a subpath.</param>
      <param name="endIndex">[out] The integer reference supplied to this parameter receives the index of the point that ends the subpath to which <paramref name="startIndex" /> points.</param>
      <returns>The number of points between this marker and the next.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(System.Byte@,System.Int32@,System.Int32@)">
      <summary>Gets the starting index and the ending index of the next group of data points that all have the same type.</summary>
      <param name="pathType">[out] Receives the point type shared by all points in the group. Possible types can be retrieved from the <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration.</param>
      <param name="startIndex">[out] Receives the starting index of the group of points.</param>
      <param name="endIndex">[out] Receives the ending index of the group of points.</param>
      <returns>This method returns the number of data points in the group. If there are no more groups in the path, this method returns 0.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean@)">
      <summary>Gets the next figure (subpath) from the associated path of this <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" />.</summary>
      <param name="path">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> that is to have its data points set to match the data points of the retrieved figure (subpath) for this iterator.</param>
      <param name="isClosed">[out] Indicates whether the current subpath is closed. It is <see langword="true" /> if the if the figure is closed, otherwise it is <see langword="false" />.</param>
      <returns>The number of data points in the retrieved figure (subpath). If there are no more figures to retrieve, zero is returned.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Int32@,System.Int32@,System.Boolean@)">
      <summary>Moves the <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> to the next subpath in the path. The start index and end index of the next subpath are contained in the [out] parameters.</summary>
      <param name="startIndex">[out] Receives the starting index of the next subpath.</param>
      <param name="endIndex">[out] Receives the ending index of the next subpath.</param>
      <param name="isClosed">[out] Indicates whether the subpath is closed.</param>
      <returns>The number of subpaths in the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.Rewind">
      <summary>Rewinds this <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> to the beginning of its associated path.</summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPathIterator.SubpathCount">
      <summary>Gets the number of subpaths in the path.</summary>
      <returns>The number of subpaths in the path.</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.GraphicsState">
      <summary>Represents the state of a <see cref="T:System.Drawing.Graphics" /> object. This object is returned by a call to the <see cref="M:System.Drawing.Graphics.Save" /> methods. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.HatchBrush">
      <summary>Defines a rectangular brush with a hatch style, a foreground color, and a background color. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.HatchBrush.#ctor(System.Drawing.Drawing2D.HatchStyle,System.Drawing.Color)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> class with the specified <see cref="T:System.Drawing.Drawing2D.HatchStyle" /> enumeration and foreground color.</summary>
      <param name="hatchstyle">One of the <see cref="T:System.Drawing.Drawing2D.HatchStyle" /> values that represents the pattern drawn by this <see cref="T:System.Drawing.Drawing2D.HatchBrush" />.</param>
      <param name="foreColor">The <see cref="T:System.Drawing.Color" /> structure that represents the color of lines drawn by this <see cref="T:System.Drawing.Drawing2D.HatchBrush" />.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.HatchBrush.#ctor(System.Drawing.Drawing2D.HatchStyle,System.Drawing.Color,System.Drawing.Color)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> class with the specified <see cref="T:System.Drawing.Drawing2D.HatchStyle" /> enumeration, foreground color, and background color.</summary>
      <param name="hatchstyle">One of the <see cref="T:System.Drawing.Drawing2D.HatchStyle" /> values that represents the pattern drawn by this <see cref="T:System.Drawing.Drawing2D.HatchBrush" />.</param>
      <param name="foreColor">The <see cref="T:System.Drawing.Color" /> structure that represents the color of lines drawn by this <see cref="T:System.Drawing.Drawing2D.HatchBrush" />.</param>
      <param name="backColor">The <see cref="T:System.Drawing.Color" /> structure that represents the color of spaces between the lines drawn by this <see cref="T:System.Drawing.Drawing2D.HatchBrush" />.</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.HatchBrush.BackgroundColor">
      <summary>Gets the color of spaces between the hatch lines drawn by this <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> structure that represents the background color for this <see cref="T:System.Drawing.Drawing2D.HatchBrush" />.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.HatchBrush.Clone">
      <summary>Creates an exact copy of this <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> object.</summary>
      <returns>The <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> this method creates, cast as an object.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.HatchBrush.ForegroundColor">
      <summary>Gets the color of hatch lines drawn by this <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> structure that represents the foreground color for this <see cref="T:System.Drawing.Drawing2D.HatchBrush" />.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.HatchBrush.HatchStyle">
      <summary>Gets the hatch style of this <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> object.</summary>
      <returns>One of the <see cref="T:System.Drawing.Drawing2D.HatchStyle" /> values that represents the pattern of this <see cref="T:System.Drawing.Drawing2D.HatchBrush" />.</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.HatchStyle">
      <summary>Specifies the different patterns available for <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> objects.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.BackwardDiagonal">
      <summary>A pattern of lines on a diagonal from upper right to lower left.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Cross">
      <summary>Specifies horizontal and vertical lines that cross.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DarkDownwardDiagonal">
      <summary>Specifies diagonal lines that slant to the right from top points to bottom points, are spaced 50 percent closer together than, and are twice the width of <see cref="F:System.Drawing.Drawing2D.HatchStyle.ForwardDiagonal" />. This hatch pattern is not antialiased.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DarkHorizontal">
      <summary>Specifies horizontal lines that are spaced 50 percent closer together than <see cref="F:System.Drawing.Drawing2D.HatchStyle.Horizontal" /> and are twice the width of <see cref="F:System.Drawing.Drawing2D.HatchStyle.Horizontal" />.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DarkUpwardDiagonal">
      <summary>Specifies diagonal lines that slant to the left from top points to bottom points, are spaced 50 percent closer together than <see cref="F:System.Drawing.Drawing2D.HatchStyle.BackwardDiagonal" />, and are twice its width, but the lines are not antialiased.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DarkVertical">
      <summary>Specifies vertical lines that are spaced 50 percent closer together than <see cref="F:System.Drawing.Drawing2D.HatchStyle.Vertical" /> and are twice its width.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DashedDownwardDiagonal">
      <summary>Specifies dashed diagonal lines, that slant to the right from top points to bottom points.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DashedHorizontal">
      <summary>Specifies dashed horizontal lines.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DashedUpwardDiagonal">
      <summary>Specifies dashed diagonal lines, that slant to the left from top points to bottom points.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DashedVertical">
      <summary>Specifies dashed vertical lines.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DiagonalBrick">
      <summary>Specifies a hatch that has the appearance of layered bricks that slant to the left from top points to bottom points.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DiagonalCross">
      <summary>A pattern of crisscross diagonal lines.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Divot">
      <summary>Specifies a hatch that has the appearance of divots.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DottedDiamond">
      <summary>Specifies forward diagonal and backward diagonal lines, each of which is composed of dots, that cross.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DottedGrid">
      <summary>Specifies horizontal and vertical lines, each of which is composed of dots, that cross.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.ForwardDiagonal">
      <summary>A pattern of lines on a diagonal from upper left to lower right.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Horizontal">
      <summary>A pattern of horizontal lines.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.HorizontalBrick">
      <summary>Specifies a hatch that has the appearance of horizontally layered bricks.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LargeCheckerBoard">
      <summary>Specifies a hatch that has the appearance of a checkerboard with squares that are twice the size of <see cref="F:System.Drawing.Drawing2D.HatchStyle.SmallCheckerBoard" />.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LargeConfetti">
      <summary>Specifies a hatch that has the appearance of confetti, and is composed of larger pieces than <see cref="F:System.Drawing.Drawing2D.HatchStyle.SmallConfetti" />.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LargeGrid">
      <summary>Specifies the hatch style <see cref="F:System.Drawing.Drawing2D.HatchStyle.Cross" />.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LightDownwardDiagonal">
      <summary>Specifies diagonal lines that slant to the right from top points to bottom points and are spaced 50 percent closer together than <see cref="F:System.Drawing.Drawing2D.HatchStyle.ForwardDiagonal" />, but are not antialiased.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LightHorizontal">
      <summary>Specifies horizontal lines that are spaced 50 percent closer together than <see cref="F:System.Drawing.Drawing2D.HatchStyle.Horizontal" />.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LightUpwardDiagonal">
      <summary>Specifies diagonal lines that slant to the left from top points to bottom points and are spaced 50 percent closer together than <see cref="F:System.Drawing.Drawing2D.HatchStyle.BackwardDiagonal" />, but they are not antialiased.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LightVertical">
      <summary>Specifies vertical lines that are spaced 50 percent closer together than <see cref="F:System.Drawing.Drawing2D.HatchStyle.Vertical" />.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Max">
      <summary>Specifies hatch style <see cref="F:System.Drawing.Drawing2D.HatchStyle.SolidDiamond" />.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Min">
      <summary>Specifies hatch style <see cref="F:System.Drawing.Drawing2D.HatchStyle.Horizontal" />.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.NarrowHorizontal">
      <summary>Specifies horizontal lines that are spaced 75 percent closer together than hatch style <see cref="F:System.Drawing.Drawing2D.HatchStyle.Horizontal" /> (or 25 percent closer together than <see cref="F:System.Drawing.Drawing2D.HatchStyle.LightHorizontal" />).</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.NarrowVertical">
      <summary>Specifies vertical lines that are spaced 75 percent closer together than hatch style <see cref="F:System.Drawing.Drawing2D.HatchStyle.Vertical" /> (or 25 percent closer together than <see cref="F:System.Drawing.Drawing2D.HatchStyle.LightVertical" />).</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.OutlinedDiamond">
      <summary>Specifies forward diagonal and backward diagonal lines that cross but are not antialiased.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent05">
      <summary>Specifies a 5-percent hatch. The ratio of foreground color to background color is 5:95.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent10">
      <summary>Specifies a 10-percent hatch. The ratio of foreground color to background color is 10:90.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent20">
      <summary>Specifies a 20-percent hatch. The ratio of foreground color to background color is 20:80.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent25">
      <summary>Specifies a 25-percent hatch. The ratio of foreground color to background color is 25:75.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent30">
      <summary>Specifies a 30-percent hatch. The ratio of foreground color to background color is 30:70.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent40">
      <summary>Specifies a 40-percent hatch. The ratio of foreground color to background color is 40:60.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent50">
      <summary>Specifies a 50-percent hatch. The ratio of foreground color to background color is 50:50.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent60">
      <summary>Specifies a 60-percent hatch. The ratio of foreground color to background color is 60:40.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent70">
      <summary>Specifies a 70-percent hatch. The ratio of foreground color to background color is 70:30.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent75">
      <summary>Specifies a 75-percent hatch. The ratio of foreground color to background color is 75:25.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent80">
      <summary>Specifies a 80-percent hatch. The ratio of foreground color to background color is 80:100.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent90">
      <summary>Specifies a 90-percent hatch. The ratio of foreground color to background color is 90:10.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Plaid">
      <summary>Specifies a hatch that has the appearance of a plaid material.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Shingle">
      <summary>Specifies a hatch that has the appearance of diagonally layered shingles that slant to the right from top points to bottom points.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.SmallCheckerBoard">
      <summary>Specifies a hatch that has the appearance of a checkerboard.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.SmallConfetti">
      <summary>Specifies a hatch that has the appearance of confetti.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.SmallGrid">
      <summary>Specifies horizontal and vertical lines that cross and are spaced 50 percent closer together than hatch style <see cref="F:System.Drawing.Drawing2D.HatchStyle.Cross" />.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.SolidDiamond">
      <summary>Specifies a hatch that has the appearance of a checkerboard placed diagonally.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Sphere">
      <summary>Specifies a hatch that has the appearance of spheres laid adjacent to one another.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Trellis">
      <summary>Specifies a hatch that has the appearance of a trellis.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Vertical">
      <summary>A pattern of vertical lines.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Wave">
      <summary>Specifies horizontal lines that are composed of tildes.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Weave">
      <summary>Specifies a hatch that has the appearance of a woven material.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.WideDownwardDiagonal">
      <summary>Specifies diagonal lines that slant to the right from top points to bottom points, have the same spacing as hatch style <see cref="F:System.Drawing.Drawing2D.HatchStyle.ForwardDiagonal" />, and are triple its width, but are not antialiased.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.WideUpwardDiagonal">
      <summary>Specifies diagonal lines that slant to the left from top points to bottom points, have the same spacing as hatch style <see cref="F:System.Drawing.Drawing2D.HatchStyle.BackwardDiagonal" />, and are triple its width, but are not antialiased.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.ZigZag">
      <summary>Specifies horizontal lines that are composed of zigzags.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.InterpolationMode">
      <summary>The <see cref="T:System.Drawing.Drawing2D.InterpolationMode" /> enumeration specifies the algorithm that is used when images are scaled or rotated.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.Bicubic">
      <summary>Specifies bicubic interpolation. No prefiltering is done. This mode is not suitable for shrinking an image below 25 percent of its original size.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.Bilinear">
      <summary>Specifies bilinear interpolation. No prefiltering is done. This mode is not suitable for shrinking an image below 50 percent of its original size.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.Default">
      <summary>Specifies default mode.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.High">
      <summary>Specifies high quality interpolation.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.HighQualityBicubic">
      <summary>Specifies high-quality, bicubic interpolation. Prefiltering is performed to ensure high-quality shrinking. This mode produces the highest quality transformed images.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.HighQualityBilinear">
      <summary>Specifies high-quality, bilinear interpolation. Prefiltering is performed to ensure high-quality shrinking.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.Invalid">
      <summary>Equivalent to the <see cref="F:System.Drawing.Drawing2D.QualityMode.Invalid" /> element of the <see cref="T:System.Drawing.Drawing2D.QualityMode" /> enumeration.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.Low">
      <summary>Specifies low quality interpolation.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.NearestNeighbor">
      <summary>Specifies nearest-neighbor interpolation.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.LinearGradientBrush">
      <summary>Encapsulates a <see cref="T:System.Drawing.Brush" /> with a linear gradient. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class with the specified points and colors.</summary>
      <param name="point1">A <see cref="T:System.Drawing.Point" /> structure that represents the starting point of the linear gradient.</param>
      <param name="point2">A <see cref="T:System.Drawing.Point" /> structure that represents the endpoint of the linear gradient.</param>
      <param name="color1">A <see cref="T:System.Drawing.Color" /> structure that represents the starting color of the linear gradient.</param>
      <param name="color2">A <see cref="T:System.Drawing.Color" /> structure that represents the ending color of the linear gradient.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.Color,System.Drawing.Color)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class with the specified points and colors.</summary>
      <param name="point1">A <see cref="T:System.Drawing.PointF" /> structure that represents the starting point of the linear gradient.</param>
      <param name="point2">A <see cref="T:System.Drawing.PointF" /> structure that represents the endpoint of the linear gradient.</param>
      <param name="color1">A <see cref="T:System.Drawing.Color" /> structure that represents the starting color of the linear gradient.</param>
      <param name="color2">A <see cref="T:System.Drawing.Color" /> structure that represents the ending color of the linear gradient.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)">
      <summary>Creates a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class based on a rectangle, starting and ending colors, and orientation.</summary>
      <param name="rect">A <see cref="T:System.Drawing.Rectangle" /> structure that specifies the bounds of the linear gradient.</param>
      <param name="color1">A <see cref="T:System.Drawing.Color" /> structure that represents the starting color for the gradient.</param>
      <param name="color2">A <see cref="T:System.Drawing.Color" /> structure that represents the ending color for the gradient.</param>
      <param name="linearGradientMode">A <see cref="T:System.Drawing.Drawing2D.LinearGradientMode" /> enumeration element that specifies the orientation of the gradient. The orientation determines the starting and ending points of the gradient. For example, <see langword="LinearGradientMode.ForwardDiagonal" /> specifies that the starting point is the upper-left corner of the rectangle and the ending point is the lower-right corner of the rectangle.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single)">
      <summary>Creates a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class based on a rectangle, starting and ending colors, and an orientation angle.</summary>
      <param name="rect">A <see cref="T:System.Drawing.Rectangle" /> structure that specifies the bounds of the linear gradient.</param>
      <param name="color1">A <see cref="T:System.Drawing.Color" /> structure that represents the starting color for the gradient.</param>
      <param name="color2">A <see cref="T:System.Drawing.Color" /> structure that represents the ending color for the gradient.</param>
      <param name="angle">The angle, measured in degrees clockwise from the x-axis, of the gradient's orientation line.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)">
      <summary>Creates a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class based on a rectangle, starting and ending colors, and an orientation angle.</summary>
      <param name="rect">A <see cref="T:System.Drawing.Rectangle" /> structure that specifies the bounds of the linear gradient.</param>
      <param name="color1">A <see cref="T:System.Drawing.Color" /> structure that represents the starting color for the gradient.</param>
      <param name="color2">A <see cref="T:System.Drawing.Color" /> structure that represents the ending color for the gradient.</param>
      <param name="angle">The angle, measured in degrees clockwise from the x-axis, of the gradient's orientation line.</param>
      <param name="isAngleScaleable">Set to <see langword="true" /> to specify that the angle is affected by the transform associated with this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)">
      <summary>Creates a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> based on a rectangle, starting and ending colors, and an orientation mode.</summary>
      <param name="rect">A <see cref="T:System.Drawing.RectangleF" /> structure that specifies the bounds of the linear gradient.</param>
      <param name="color1">A <see cref="T:System.Drawing.Color" /> structure that represents the starting color for the gradient.</param>
      <param name="color2">A <see cref="T:System.Drawing.Color" /> structure that represents the ending color for the gradient.</param>
      <param name="linearGradientMode">A <see cref="T:System.Drawing.Drawing2D.LinearGradientMode" /> enumeration element that specifies the orientation of the gradient. The orientation determines the starting and ending points of the gradient. For example, <see langword="LinearGradientMode.ForwardDiagonal" /> specifies that the starting point is the upper-left corner of the rectangle and the ending point is the lower-right corner of the rectangle.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single)">
      <summary>Creates a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class based on a rectangle, starting and ending colors, and an orientation angle.</summary>
      <param name="rect">A <see cref="T:System.Drawing.RectangleF" /> structure that specifies the bounds of the linear gradient.</param>
      <param name="color1">A <see cref="T:System.Drawing.Color" /> structure that represents the starting color for the gradient.</param>
      <param name="color2">A <see cref="T:System.Drawing.Color" /> structure that represents the ending color for the gradient.</param>
      <param name="angle">The angle, measured in degrees clockwise from the x-axis, of the gradient's orientation line.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)">
      <summary>Creates a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class based on a rectangle, starting and ending colors, and an orientation angle.</summary>
      <param name="rect">A <see cref="T:System.Drawing.RectangleF" /> structure that specifies the bounds of the linear gradient.</param>
      <param name="color1">A <see cref="T:System.Drawing.Color" /> structure that represents the starting color for the gradient.</param>
      <param name="color2">A <see cref="T:System.Drawing.Color" /> structure that represents the ending color for the gradient.</param>
      <param name="angle">The angle, measured in degrees clockwise from the x-axis, of the gradient's orientation line.</param>
      <param name="isAngleScaleable">Set to <see langword="true" /> to specify that the angle is affected by the transform associated with this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />; otherwise, <see langword="false" />.</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.Blend">
      <summary>Gets or sets a <see cref="T:System.Drawing.Drawing2D.Blend" /> that specifies positions and factors that define a custom falloff for the gradient.</summary>
      <returns>A <see cref="T:System.Drawing.Drawing2D.Blend" /> that represents a custom falloff for the gradient.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.Clone">
      <summary>Creates an exact copy of this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />.</summary>
      <returns>The <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> this method creates, cast as an object.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection">
      <summary>Gets or sets a value indicating whether gamma correction is enabled for this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />.</summary>
      <returns>The value is <see langword="true" /> if gamma correction is enabled for this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors">
      <summary>Gets or sets a <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> that defines a multicolor linear gradient.</summary>
      <returns>A <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> that defines a multicolor linear gradient.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.LinearColors">
      <summary>Gets or sets the starting and ending colors of the gradient.</summary>
      <returns>An array of two <see cref="T:System.Drawing.Color" /> structures that represents the starting and ending colors of the gradient.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
      <summary>Multiplies the <see cref="T:System.Drawing.Drawing2D.Matrix" /> that represents the local geometric transform of this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</summary>
      <param name="matrix">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which to multiply the geometric transform.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>Multiplies the <see cref="T:System.Drawing.Drawing2D.Matrix" /> that represents the local geometric transform of this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the specified order.</summary>
      <param name="matrix">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which to multiply the geometric transform.</param>
      <param name="order">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies in which order to multiply the two matrices.</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.Rectangle">
      <summary>Gets a rectangular region that defines the starting and ending points of the gradient.</summary>
      <returns>A <see cref="T:System.Drawing.RectangleF" /> structure that specifies the starting and ending points of the gradient.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform">
      <summary>Resets the <see cref="P:System.Drawing.Drawing2D.LinearGradientBrush.Transform" /> property to identity.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single)">
      <summary>Rotates the local geometric transform by the specified amount. This method prepends the rotation to the transform.</summary>
      <param name="angle">The angle of rotation.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>Rotates the local geometric transform by the specified amount in the specified order.</summary>
      <param name="angle">The angle of rotation.</param>
      <param name="order">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies whether to append or prepend the rotation matrix.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single)">
      <summary>Scales the local geometric transform by the specified amounts. This method prepends the scaling matrix to the transform.</summary>
      <param name="sx">The amount by which to scale the transform in the x-axis direction.</param>
      <param name="sy">The amount by which to scale the transform in the y-axis direction.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>Scales the local geometric transform by the specified amounts in the specified order.</summary>
      <param name="sx">The amount by which to scale the transform in the x-axis direction.</param>
      <param name="sy">The amount by which to scale the transform in the y-axis direction.</param>
      <param name="order">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies whether to append or prepend the scaling matrix.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single)">
      <summary>Creates a linear gradient with a center color and a linear falloff to a single color on both ends.</summary>
      <param name="focus">A value from 0 through 1 that specifies the center of the gradient (the point where the gradient is composed of only the ending color).</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single,System.Single)">
      <summary>Creates a linear gradient with a center color and a linear falloff to a single color on both ends.</summary>
      <param name="focus">A value from 0 through 1 that specifies the center of the gradient (the point where the gradient is composed of only the ending color).</param>
      <param name="scale">A value from 0 through1 that specifies how fast the colors falloff from the starting color to <paramref name="focus" /> (ending color)</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single)">
      <summary>Creates a gradient falloff based on a bell-shaped curve.</summary>
      <param name="focus">A value from 0 through 1 that specifies the center of the gradient (the point where the starting color and ending color are blended equally).</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single,System.Single)">
      <summary>Creates a gradient falloff based on a bell-shaped curve.</summary>
      <param name="focus">A value from 0 through 1 that specifies the center of the gradient (the point where the gradient is composed of only the ending color).</param>
      <param name="scale">A value from 0 through 1 that specifies how fast the colors falloff from the <paramref name="focus" />.</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.Transform">
      <summary>Gets or sets a copy <see cref="T:System.Drawing.Drawing2D.Matrix" /> that defines a local geometric transform for this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />.</summary>
      <returns>A copy of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> that defines a geometric transform that applies only to fills drawn with this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single)">
      <summary>Translates the local geometric transform by the specified dimensions. This method prepends the translation to the transform.</summary>
      <param name="dx">The value of the translation in x.</param>
      <param name="dy">The value of the translation in y.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>Translates the local geometric transform by the specified dimensions in the specified order.</summary>
      <param name="dx">The value of the translation in x.</param>
      <param name="dy">The value of the translation in y.</param>
      <param name="order">The order (prepend or append) in which to apply the translation.</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.WrapMode">
      <summary>Gets or sets a <see cref="T:System.Drawing.Drawing2D.WrapMode" /> enumeration that indicates the wrap mode for this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />.</summary>
      <returns>A <see cref="T:System.Drawing.Drawing2D.WrapMode" /> that specifies how fills drawn with this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> are tiled.</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.LinearGradientMode">
      <summary>Specifies the direction of a linear gradient.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LinearGradientMode.BackwardDiagonal">
      <summary>Specifies a gradient from upper right to lower left.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LinearGradientMode.ForwardDiagonal">
      <summary>Specifies a gradient from upper left to lower right.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LinearGradientMode.Horizontal">
      <summary>Specifies a gradient from left to right.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LinearGradientMode.Vertical">
      <summary>Specifies a gradient from top to bottom.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.LineCap">
      <summary>Specifies the available cap styles with which a <see cref="T:System.Drawing.Pen" /> object can end a line.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.AnchorMask">
      <summary>Specifies a mask used to check whether a line cap is an anchor cap.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.ArrowAnchor">
      <summary>Specifies an arrow-shaped anchor cap.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.Custom">
      <summary>Specifies a custom line cap.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.DiamondAnchor">
      <summary>Specifies a diamond anchor cap.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.Flat">
      <summary>Specifies a flat line cap.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.NoAnchor">
      <summary>Specifies no anchor.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.Round">
      <summary>Specifies a round line cap.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.RoundAnchor">
      <summary>Specifies a round anchor cap.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.Square">
      <summary>Specifies a square line cap.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.SquareAnchor">
      <summary>Specifies a square anchor line cap.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.Triangle">
      <summary>Specifies a triangular line cap.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.LineJoin">
      <summary>Specifies how to join consecutive line or curve segments in a figure (subpath) contained in a <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineJoin.Bevel">
      <summary>Specifies a beveled join. This produces a diagonal corner.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineJoin.Miter">
      <summary>Specifies a mitered join. This produces a sharp corner or a clipped corner, depending on whether the length of the miter exceeds the miter limit.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineJoin.MiterClipped">
      <summary>Specifies a mitered join. This produces a sharp corner or a beveled corner, depending on whether the length of the miter exceeds the miter limit.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineJoin.Round">
      <summary>Specifies a circular join. This produces a smooth, circular arc between the lines.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.Matrix">
      <summary>Encapsulates a 3-by-3 affine matrix that represents a geometric transform. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class as the identity matrix.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.Rectangle,System.Drawing.Point[])">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class to the geometric transform defined by the specified rectangle and array of points.</summary>
      <param name="rect">A <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle to be transformed.</param>
      <param name="plgpts">An array of three <see cref="T:System.Drawing.Point" /> structures that represents the points of a parallelogram to which the upper-left, upper-right, and lower-left corners of the rectangle is to be transformed. The lower-right corner of the parallelogram is implied by the first three corners.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.RectangleF,System.Drawing.PointF[])">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class to the geometric transform defined by the specified rectangle and array of points.</summary>
      <param name="rect">A <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle to be transformed.</param>
      <param name="plgpts">An array of three <see cref="T:System.Drawing.PointF" /> structures that represents the points of a parallelogram to which the upper-left, upper-right, and lower-left corners of the rectangle is to be transformed. The lower-right corner of the parallelogram is implied by the first three corners.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class with the specified elements.</summary>
      <param name="m11">The value in the first row and first column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</param>
      <param name="m12">The value in the first row and second column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</param>
      <param name="m21">The value in the second row and first column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</param>
      <param name="m22">The value in the second row and second column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</param>
      <param name="dx">The value in the third row and first column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</param>
      <param name="dy">The value in the third row and second column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Clone">
      <summary>Creates an exact copy of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</summary>
      <returns>The <see cref="T:System.Drawing.Drawing2D.Matrix" /> that this method creates.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Dispose">
      <summary>Releases all resources used by this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.Matrix.Elements">
      <summary>Gets an array of floating-point values that represents the elements of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</summary>
      <returns>An array of floating-point values that represents the elements of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Equals(System.Object)">
      <summary>Tests whether the specified object is a <see cref="T:System.Drawing.Drawing2D.Matrix" /> and is identical to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</summary>
      <param name="obj">The object to test.</param>
      <returns>This method returns <see langword="true" /> if <paramref name="obj" /> is the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> identical to this <see cref="T:System.Drawing.Drawing2D.Matrix" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Finalize">
      <summary>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.GetHashCode">
      <summary>Returns a hash code.</summary>
      <returns>The hash code for this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Invert">
      <summary>Inverts this <see cref="T:System.Drawing.Drawing2D.Matrix" />, if it is invertible.</summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.Matrix.IsIdentity">
      <summary>Gets a value indicating whether this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is the identity matrix.</summary>
      <returns>This property is <see langword="true" /> if this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is identity; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.Matrix.IsInvertible">
      <summary>Gets a value indicating whether this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is invertible.</summary>
      <returns>This property is <see langword="true" /> if this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is invertible; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix)">
      <summary>Multiplies this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by the matrix specified in the <paramref name="matrix" /> parameter, by prepending the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</summary>
      <param name="matrix">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is to be multiplied.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>Multiplies this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by the matrix specified in the <paramref name="matrix" /> parameter, and in the order specified in the <paramref name="order" /> parameter.</summary>
      <param name="matrix">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is to be multiplied.</param>
      <param name="order">The <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that represents the order of the multiplication.</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.Matrix.OffsetX">
      <summary>Gets the x translation value (the dx value, or the element in the third row and first column) of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</summary>
      <returns>The x translation value of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.Matrix.OffsetY">
      <summary>Gets the y translation value (the dy value, or the element in the third row and second column) of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</summary>
      <returns>The y translation value of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Reset">
      <summary>Resets this <see cref="T:System.Drawing.Drawing2D.Matrix" /> to have the elements of the identity matrix.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single)">
      <summary>Prepend to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> a clockwise rotation, around the origin and by the specified angle.</summary>
      <param name="angle">The angle of the rotation, in degrees.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>Applies a clockwise rotation of an amount specified in the <paramref name="angle" /> parameter, around the origin (zero x and y coordinates) for this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</summary>
      <param name="angle">The angle (extent) of the rotation, in degrees.</param>
      <param name="order">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the rotation is applied to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF)">
      <summary>Applies a clockwise rotation to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> around the point specified in the <paramref name="point" /> parameter, and by prepending the rotation.</summary>
      <param name="angle">The angle (extent) of the rotation, in degrees.</param>
      <param name="point">A <see cref="T:System.Drawing.PointF" /> that represents the center of the rotation.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>Applies a clockwise rotation about the specified point to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the specified order.</summary>
      <param name="angle">The angle of the rotation, in degrees.</param>
      <param name="point">A <see cref="T:System.Drawing.PointF" /> that represents the center of the rotation.</param>
      <param name="order">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the rotation is applied.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single)">
      <summary>Applies the specified scale vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the scale vector.</summary>
      <param name="scaleX">The value by which to scale this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the x-axis direction.</param>
      <param name="scaleY">The value by which to scale this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the y-axis direction.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>Applies the specified scale vector (<paramref name="scaleX" /> and <paramref name="scaleY" />) to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> using the specified order.</summary>
      <param name="scaleX">The value by which to scale this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the x-axis direction.</param>
      <param name="scaleY">The value by which to scale this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the y-axis direction.</param>
      <param name="order">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the scale vector is applied to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)">
      <summary>Applies the specified shear vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the shear transformation.</summary>
      <param name="shearX">The horizontal shear factor.</param>
      <param name="shearY">The vertical shear factor.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>Applies the specified shear vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the specified order.</summary>
      <param name="shearX">The horizontal shear factor.</param>
      <param name="shearY">The vertical shear factor.</param>
      <param name="order">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the shear is applied.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.Point[])">
      <summary>Applies the geometric transform represented by this <see cref="T:System.Drawing.Drawing2D.Matrix" /> to a specified array of points.</summary>
      <param name="pts">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transform.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.PointF[])">
      <summary>Applies the geometric transform represented by this <see cref="T:System.Drawing.Drawing2D.Matrix" /> to a specified array of points.</summary>
      <param name="pts">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points to transform.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.Point[])">
      <summary>Applies only the scale and rotate components of this <see cref="T:System.Drawing.Drawing2D.Matrix" /> to the specified array of points.</summary>
      <param name="pts">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transform.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.PointF[])">
      <summary>Multiplies each vector in an array by the matrix. The translation elements of this matrix (third row) are ignored.</summary>
      <param name="pts">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transform.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single)">
      <summary>Applies the specified translation vector (<paramref name="offsetX" /> and <paramref name="offsetY" />) to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the translation vector.</summary>
      <param name="offsetX">The x value by which to translate this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</param>
      <param name="offsetY">The y value by which to translate this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>Applies the specified translation vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the specified order.</summary>
      <param name="offsetX">The x value by which to translate this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</param>
      <param name="offsetY">The y value by which to translate this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</param>
      <param name="order">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the translation is applied to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.VectorTransformPoints(System.Drawing.Point[])">
      <summary>Multiplies each vector in an array by the matrix. The translation elements of this matrix (third row) are ignored.</summary>
      <param name="pts">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transform.</param>
    </member>
    <member name="T:System.Drawing.Drawing2D.MatrixOrder">
      <summary>Specifies the order for matrix transform operations.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.MatrixOrder.Append">
      <summary>The new operation is applied after the old operation.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.MatrixOrder.Prepend">
      <summary>The new operation is applied before the old operation.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.PathData">
      <summary>Contains the graphical data that makes up a <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathData.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.PathData" /> class.</summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathData.Points">
      <summary>Gets or sets an array of <see cref="T:System.Drawing.PointF" /> structures that represents the points through which the path is constructed.</summary>
      <returns>An array of <see cref="T:System.Drawing.PointF" /> objects that represents the points through which the path is constructed.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathData.Types">
      <summary>Gets or sets the types of the corresponding points in the path.</summary>
      <returns>An array of bytes that specify the types of the corresponding points in the path.</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.PathGradientBrush">
      <summary>Encapsulates a <see cref="T:System.Drawing.Brush" /> object that fills the interior of a <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object with a gradient. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> class with the specified path.</summary>
      <param name="path">The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> that defines the area filled by this <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Point[])">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> class with the specified points.</summary>
      <param name="points">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that make up the vertices of the path.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Point[],System.Drawing.Drawing2D.WrapMode)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> class with the specified points and wrap mode.</summary>
      <param name="points">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that make up the vertices of the path.</param>
      <param name="wrapMode">A <see cref="T:System.Drawing.Drawing2D.WrapMode" /> that specifies how fills drawn with this <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> are tiled.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.PointF[])">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> class with the specified points.</summary>
      <param name="points">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that make up the vertices of the path.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.PointF[],System.Drawing.Drawing2D.WrapMode)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> class with the specified points and wrap mode.</summary>
      <param name="points">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that make up the vertices of the path.</param>
      <param name="wrapMode">A <see cref="T:System.Drawing.Drawing2D.WrapMode" /> that specifies how fills drawn with this <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> are tiled.</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.Blend">
      <summary>Gets or sets a <see cref="T:System.Drawing.Drawing2D.Blend" /> that specifies positions and factors that define a custom falloff for the gradient.</summary>
      <returns>A <see cref="T:System.Drawing.Drawing2D.Blend" /> that represents a custom falloff for the gradient.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.CenterColor">
      <summary>Gets or sets the color at the center of the path gradient.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that represents the color at the center of the path gradient.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.CenterPoint">
      <summary>Gets or sets the center point of the path gradient.</summary>
      <returns>A <see cref="T:System.Drawing.PointF" /> that represents the center point of the path gradient.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.Clone">
      <summary>Creates an exact copy of this <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />.</summary>
      <returns>The <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> this method creates, cast as an object.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.FocusScales">
      <summary>Gets or sets the focus point for the gradient falloff.</summary>
      <returns>A <see cref="T:System.Drawing.PointF" /> that represents the focus point for the gradient falloff.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.InterpolationColors">
      <summary>Gets or sets a <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> that defines a multicolor linear gradient.</summary>
      <returns>A <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> that defines a multicolor linear gradient.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
      <summary>Updates the brush's transformation matrix with the product of brush's transformation matrix multiplied by another matrix.</summary>
      <param name="matrix">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> that will be multiplied by the brush's current transformation matrix.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>Updates the brush's transformation matrix with the product of the brush's transformation matrix multiplied by another matrix.</summary>
      <param name="matrix">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> that will be multiplied by the brush's current transformation matrix.</param>
      <param name="order">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies in which order to multiply the two matrices.</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.Rectangle">
      <summary>Gets a bounding rectangle for this <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />.</summary>
      <returns>A <see cref="T:System.Drawing.RectangleF" /> that represents a rectangular region that bounds the path this <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> fills.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.ResetTransform">
      <summary>Resets the <see cref="P:System.Drawing.Drawing2D.PathGradientBrush.Transform" /> property to identity.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.RotateTransform(System.Single)">
      <summary>Rotates the local geometric transform by the specified amount. This method prepends the rotation to the transform.</summary>
      <param name="angle">The angle (extent) of rotation.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>Rotates the local geometric transform by the specified amount in the specified order.</summary>
      <param name="angle">The angle (extent) of rotation.</param>
      <param name="order">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies whether to append or prepend the rotation matrix.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform(System.Single,System.Single)">
      <summary>Scales the local geometric transform by the specified amounts. This method prepends the scaling matrix to the transform.</summary>
      <param name="sx">The transform scale factor in the x-axis direction.</param>
      <param name="sy">The transform scale factor in the y-axis direction.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>Scales the local geometric transform by the specified amounts in the specified order.</summary>
      <param name="sx">The transform scale factor in the x-axis direction.</param>
      <param name="sy">The transform scale factor in the y-axis direction.</param>
      <param name="order">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies whether to append or prepend the scaling matrix.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape(System.Single)">
      <summary>Creates a gradient with a center color and a linear falloff to one surrounding color.</summary>
      <param name="focus">A value from 0 through 1 that specifies where, along any radial from the center of the path to the path's boundary, the center color will be at its highest intensity. A value of 1 (the default) places the highest intensity at the center of the path.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape(System.Single,System.Single)">
      <summary>Creates a gradient with a center color and a linear falloff to each surrounding color.</summary>
      <param name="focus">A value from 0 through 1 that specifies where, along any radial from the center of the path to the path's boundary, the center color will be at its highest intensity. A value of 1 (the default) places the highest intensity at the center of the path.</param>
      <param name="scale">A value from 0 through 1 that specifies the maximum intensity of the center color that gets blended with the boundary color. A value of 1 causes the highest possible intensity of the center color, and it is the default value.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape(System.Single)">
      <summary>Creates a gradient brush that changes color starting from the center of the path outward to the path's boundary. The transition from one color to another is based on a bell-shaped curve.</summary>
      <param name="focus">A value from 0 through 1 that specifies where, along any radial from the center of the path to the path's boundary, the center color will be at its highest intensity. A value of 1 (the default) places the highest intensity at the center of the path.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape(System.Single,System.Single)">
      <summary>Creates a gradient brush that changes color starting from the center of the path outward to the path's boundary. The transition from one color to another is based on a bell-shaped curve.</summary>
      <param name="focus">A value from 0 through 1 that specifies where, along any radial from the center of the path to the path's boundary, the center color will be at its highest intensity. A value of 1 (the default) places the highest intensity at the center of the path.</param>
      <param name="scale">A value from 0 through 1 that specifies the maximum intensity of the center color that gets blended with the boundary color. A value of 1 causes the highest possible intensity of the center color, and it is the default value.</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors">
      <summary>Gets or sets an array of colors that correspond to the points in the path this <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> fills.</summary>
      <returns>An array of <see cref="T:System.Drawing.Color" /> structures that represents the colors associated with each point in the path this <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> fills.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.Transform">
      <summary>Gets or sets a copy of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> that defines a local geometric transform for this <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />.</summary>
      <returns>A copy of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> that defines a geometric transform that applies only to fills drawn with this <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform(System.Single,System.Single)">
      <summary>Applies the specified translation to the local geometric transform. This method prepends the translation to the transform.</summary>
      <param name="dx">The value of the translation in x.</param>
      <param name="dy">The value of the translation in y.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>Applies the specified translation to the local geometric transform in the specified order.</summary>
      <param name="dx">The value of the translation in x.</param>
      <param name="dy">The value of the translation in y.</param>
      <param name="order">The order (prepend or append) in which to apply the translation.</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.WrapMode">
      <summary>Gets or sets a <see cref="T:System.Drawing.Drawing2D.WrapMode" /> that indicates the wrap mode for this <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />.</summary>
      <returns>A <see cref="T:System.Drawing.Drawing2D.WrapMode" /> that specifies how fills drawn with this <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> are tiled.</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.PathPointType">
      <summary>Specifies the type of point in a <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.Bezier">
      <summary>A default Bézier curve.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.Bezier3">
      <summary>A cubic Bézier curve.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.CloseSubpath">
      <summary>The endpoint of a subpath.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.DashMode">
      <summary>The corresponding segment is dashed.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.Line">
      <summary>A line segment.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.PathMarker">
      <summary>A path marker.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.PathTypeMask">
      <summary>A mask point.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.Start">
      <summary>The starting point of a <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.PenAlignment">
      <summary>Specifies the alignment of a <see cref="T:System.Drawing.Pen" /> object in relation to the theoretical, zero-width line.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenAlignment.Center">
      <summary>Specifies that the <see cref="T:System.Drawing.Pen" /> object is centered over the theoretical line.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenAlignment.Inset">
      <summary>Specifies that the <see cref="T:System.Drawing.Pen" /> is positioned on the inside of the theoretical line.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenAlignment.Left">
      <summary>Specifies the <see cref="T:System.Drawing.Pen" /> is positioned to the left of the theoretical line.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenAlignment.Outset">
      <summary>Specifies the <see cref="T:System.Drawing.Pen" /> is positioned on the outside of the theoretical line.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenAlignment.Right">
      <summary>Specifies the <see cref="T:System.Drawing.Pen" /> is positioned to the right of the theoretical line.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.PenType">
      <summary>Specifies the type of fill a <see cref="T:System.Drawing.Pen" /> object uses to fill lines.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenType.HatchFill">
      <summary>Specifies a hatch fill.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenType.LinearGradient">
      <summary>Specifies a linear gradient fill.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenType.PathGradient">
      <summary>Specifies a path gradient fill.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenType.SolidColor">
      <summary>Specifies a solid fill.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenType.TextureFill">
      <summary>Specifies a bitmap texture fill.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.PixelOffsetMode">
      <summary>Specifies how pixels are offset during rendering.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.Default">
      <summary>Specifies the default mode.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.Half">
      <summary>Specifies that pixels are offset by -.5 units, both horizontally and vertically, for high speed antialiasing.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.HighQuality">
      <summary>Specifies high quality, low speed rendering.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.HighSpeed">
      <summary>Specifies high speed, low quality rendering.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.Invalid">
      <summary>Specifies an invalid mode.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.None">
      <summary>Specifies no pixel offset.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.QualityMode">
      <summary>Specifies the overall quality when rendering GDI+ objects.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.QualityMode.Default">
      <summary>Specifies the default mode.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.QualityMode.High">
      <summary>Specifies high quality, low speed rendering.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.QualityMode.Invalid">
      <summary>Specifies an invalid mode.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.QualityMode.Low">
      <summary>Specifies low quality, high speed rendering.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.RegionData">
      <summary>Encapsulates the data that makes up a <see cref="T:System.Drawing.Region" /> object. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.RegionData.Data">
      <summary>Gets or sets an array of bytes that specify the <see cref="T:System.Drawing.Region" /> object.</summary>
      <returns>An array of bytes that specify the <see cref="T:System.Drawing.Region" /> object.</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.SmoothingMode">
      <summary>Specifies whether smoothing (antialiasing) is applied to lines and curves and the edges of filled areas.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.AntiAlias">
      <summary>Specifies antialiased rendering.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.Default">
      <summary>Specifies no antialiasing.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.HighQuality">
      <summary>Specifies antialiased rendering.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.HighSpeed">
      <summary>Specifies no antialiasing.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.Invalid">
      <summary>Specifies an invalid mode.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.None">
      <summary>Specifies no antialiasing.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.WarpMode">
      <summary>Specifies the type of warp transformation applied in a <see cref="Overload:System.Drawing.Drawing2D.GraphicsPath.Warp" /> method.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WarpMode.Bilinear">
      <summary>Specifies a bilinear warp.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WarpMode.Perspective">
      <summary>Specifies a perspective warp.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.WrapMode">
      <summary>Specifies how a texture or gradient is tiled when it is smaller than the area being filled.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WrapMode.Clamp">
      <summary>The texture or gradient is not tiled.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WrapMode.Tile">
      <summary>Tiles the gradient or texture.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WrapMode.TileFlipX">
      <summary>Reverses the texture or gradient horizontally and then tiles the texture or gradient.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WrapMode.TileFlipXY">
      <summary>Reverses the texture or gradient horizontally and vertically and then tiles the texture or gradient.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WrapMode.TileFlipY">
      <summary>Reverses the texture or gradient vertically and then tiles the texture or gradient.</summary>
    </member>
    <member name="T:System.Drawing.Font">
      <summary>Defines a particular format for text, including font face, size, and style attributes. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.Drawing.Font,System.Drawing.FontStyle)">
      <summary>Initializes a new <see cref="T:System.Drawing.Font" /> that uses the specified existing <see cref="T:System.Drawing.Font" /> and <see cref="T:System.Drawing.FontStyle" /> enumeration.</summary>
      <param name="prototype">The existing <see cref="T:System.Drawing.Font" /> from which to create the new <see cref="T:System.Drawing.Font" />.</param>
      <param name="newStyle">The <see cref="T:System.Drawing.FontStyle" /> to apply to the new <see cref="T:System.Drawing.Font" />. Multiple values of the <see cref="T:System.Drawing.FontStyle" /> enumeration can be combined with the <see langword="OR" /> operator.</param>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single)">
      <summary>Initializes a new <see cref="T:System.Drawing.Font" /> using a specified size.</summary>
      <param name="family">The <see cref="T:System.Drawing.FontFamily" /> of the new <see cref="T:System.Drawing.Font" />.</param>
      <param name="emSize">The em-size, in points, of the new font.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" /> is less than or equal to 0, evaluates to infinity, or is not a valid number.</exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle)">
      <summary>Initializes a new <see cref="T:System.Drawing.Font" /> using a specified size and style.</summary>
      <param name="family">The <see cref="T:System.Drawing.FontFamily" /> of the new <see cref="T:System.Drawing.Font" />.</param>
      <param name="emSize">The em-size, in points, of the new font.</param>
      <param name="style">The <see cref="T:System.Drawing.FontStyle" /> of the new font.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" /> is less than or equal to 0, evaluates to infinity, or is not a valid number.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="family" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit)">
      <summary>Initializes a new <see cref="T:System.Drawing.Font" /> using a specified size, style, and unit.</summary>
      <param name="family">The <see cref="T:System.Drawing.FontFamily" /> of the new <see cref="T:System.Drawing.Font" />.</param>
      <param name="emSize">The em-size of the new font in the units specified by the <paramref name="unit" /> parameter.</param>
      <param name="style">The <see cref="T:System.Drawing.FontStyle" /> of the new font.</param>
      <param name="unit">The <see cref="T:System.Drawing.GraphicsUnit" /> of the new font.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" /> is less than or equal to 0, evaluates to infinity, or is not a valid number.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="family" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte)">
      <summary>Initializes a new <see cref="T:System.Drawing.Font" /> using a specified size, style, unit, and character set.</summary>
      <param name="family">The <see cref="T:System.Drawing.FontFamily" /> of the new <see cref="T:System.Drawing.Font" />.</param>
      <param name="emSize">The em-size of the new font in the units specified by the <paramref name="unit" /> parameter.</param>
      <param name="style">The <see cref="T:System.Drawing.FontStyle" /> of the new font.</param>
      <param name="unit">The <see cref="T:System.Drawing.GraphicsUnit" /> of the new font.</param>
      <param name="gdiCharSet">A <see cref="T:System.Byte" /> that specifies a  
 GDI character set to use for the new font.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" /> is less than or equal to 0, evaluates to infinity, or is not a valid number.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="family" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte,System.Boolean)">
      <summary>Initializes a new <see cref="T:System.Drawing.Font" /> using a specified size, style, unit, and character set.</summary>
      <param name="family">The <see cref="T:System.Drawing.FontFamily" /> of the new <see cref="T:System.Drawing.Font" />.</param>
      <param name="emSize">The em-size of the new font in the units specified by the <paramref name="unit" /> parameter.</param>
      <param name="style">The <see cref="T:System.Drawing.FontStyle" /> of the new font.</param>
      <param name="unit">The <see cref="T:System.Drawing.GraphicsUnit" /> of the new font.</param>
      <param name="gdiCharSet">A <see cref="T:System.Byte" /> that specifies a  
 GDI character set to use for this font.</param>
      <param name="gdiVerticalFont">A Boolean value indicating whether the new font is derived from a GDI vertical font.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" /> is less than or equal to 0, evaluates to infinity, or is not a valid number.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="family" /> is <see langword="null" /></exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.GraphicsUnit)">
      <summary>Initializes a new <see cref="T:System.Drawing.Font" /> using a specified size and unit. Sets the style to <see cref="F:System.Drawing.FontStyle.Regular" />.</summary>
      <param name="family">The <see cref="T:System.Drawing.FontFamily" /> of the new <see cref="T:System.Drawing.Font" />.</param>
      <param name="emSize">The em-size of the new font in the units specified by the <paramref name="unit" /> parameter.</param>
      <param name="unit">The <see cref="T:System.Drawing.GraphicsUnit" /> of the new font.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="family" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" /> is less than or equal to 0, evaluates to infinity, or is not a valid number.</exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.String,System.Single)">
      <summary>Initializes a new <see cref="T:System.Drawing.Font" /> using a specified size.</summary>
      <param name="familyName">A string representation of the <see cref="T:System.Drawing.FontFamily" /> for the new <see cref="T:System.Drawing.Font" />.</param>
      <param name="emSize">The em-size, in points, of the new font.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" /> is less than or equal to 0, evaluates to infinity or is not a valid number.</exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle)">
      <summary>Initializes a new <see cref="T:System.Drawing.Font" /> using a specified size and style.</summary>
      <param name="familyName">A string representation of the <see cref="T:System.Drawing.FontFamily" /> for the new <see cref="T:System.Drawing.Font" />.</param>
      <param name="emSize">The em-size, in points, of the new font.</param>
      <param name="style">The <see cref="T:System.Drawing.FontStyle" /> of the new font.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" /> is less than or equal to 0, evaluates to infinity, or is not a valid number.</exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit)">
      <summary>Initializes a new <see cref="T:System.Drawing.Font" /> using a specified size, style, and unit.</summary>
      <param name="familyName">A string representation of the <see cref="T:System.Drawing.FontFamily" /> for the new <see cref="T:System.Drawing.Font" />.</param>
      <param name="emSize">The em-size of the new font in the units specified by the <paramref name="unit" /> parameter.</param>
      <param name="style">The <see cref="T:System.Drawing.FontStyle" /> of the new font.</param>
      <param name="unit">The <see cref="T:System.Drawing.GraphicsUnit" /> of the new font.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" /> is less than or equal to 0, evaluates to infinity or is not a valid number.</exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte)">
      <summary>Initializes a new <see cref="T:System.Drawing.Font" /> using a specified size, style, unit, and character set.</summary>
      <param name="familyName">A string representation of the <see cref="T:System.Drawing.FontFamily" /> for the new <see cref="T:System.Drawing.Font" />.</param>
      <param name="emSize">The em-size of the new font in the units specified by the <paramref name="unit" /> parameter.</param>
      <param name="style">The <see cref="T:System.Drawing.FontStyle" /> of the new font.</param>
      <param name="unit">The <see cref="T:System.Drawing.GraphicsUnit" /> of the new font.</param>
      <param name="gdiCharSet">A <see cref="T:System.Byte" /> that specifies a GDI character set to use for this font.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" /> is less than or equal to 0, evaluates to infinity, or is not a valid number.</exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte,System.Boolean)">
      <summary>Initializes a new <see cref="T:System.Drawing.Font" /> using the specified size, style, unit, and character set.</summary>
      <param name="familyName">A string representation of the <see cref="T:System.Drawing.FontFamily" /> for the new <see cref="T:System.Drawing.Font" />.</param>
      <param name="emSize">The em-size of the new font in the units specified by the <paramref name="unit" /> parameter.</param>
      <param name="style">The <see cref="T:System.Drawing.FontStyle" /> of the new font.</param>
      <param name="unit">The <see cref="T:System.Drawing.GraphicsUnit" /> of the new font.</param>
      <param name="gdiCharSet">A <see cref="T:System.Byte" /> that specifies a GDI character set to use for this font.</param>
      <param name="gdiVerticalFont">A Boolean value indicating whether the new <see cref="T:System.Drawing.Font" /> is derived from a GDI vertical font.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" /> is less than or equal to 0, evaluates to infinity, or is not a valid number.</exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.GraphicsUnit)">
      <summary>Initializes a new <see cref="T:System.Drawing.Font" /> using a specified size and unit. The style is set to <see cref="F:System.Drawing.FontStyle.Regular" />.</summary>
      <param name="familyName">A string representation of the <see cref="T:System.Drawing.FontFamily" /> for the new <see cref="T:System.Drawing.Font" />.</param>
      <param name="emSize">The em-size of the new font in the units specified by the <paramref name="unit" /> parameter.</param>
      <param name="unit">The <see cref="T:System.Drawing.GraphicsUnit" /> of the new font.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" /> is less than or equal to 0, evaluates to infinity, or is not a valid number.</exception>
    </member>
    <member name="P:System.Drawing.Font.Bold">
      <summary>Gets a value that indicates whether this <see cref="T:System.Drawing.Font" /> is bold.</summary>
      <returns>
        <see langword="true" /> if this <see cref="T:System.Drawing.Font" /> is bold; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Font.Clone">
      <summary>Creates an exact copy of this <see cref="T:System.Drawing.Font" />.</summary>
      <returns>The <see cref="T:System.Drawing.Font" /> this method creates, cast as an <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:System.Drawing.Font.Dispose">
      <summary>Releases all resources used by this <see cref="T:System.Drawing.Font" />.</summary>
    </member>
    <member name="M:System.Drawing.Font.Equals(System.Object)">
      <summary>Indicates whether the specified object is a <see cref="T:System.Drawing.Font" /> and has the same <see cref="P:System.Drawing.Font.FontFamily" />, <see cref="P:System.Drawing.Font.GdiVerticalFont" />, <see cref="P:System.Drawing.Font.GdiCharSet" />, <see cref="P:System.Drawing.Font.Style" />, <see cref="P:System.Drawing.Font.Size" />, and <see cref="P:System.Drawing.Font.Unit" /> property values as this <see cref="T:System.Drawing.Font" />.</summary>
      <param name="obj">The object to test.</param>
      <returns>
        <see langword="true" /> if the <paramref name="obj" /> parameter is a <see cref="T:System.Drawing.Font" /> and has the same <see cref="P:System.Drawing.Font.FontFamily" />, <see cref="P:System.Drawing.Font.GdiVerticalFont" />, <see cref="P:System.Drawing.Font.GdiCharSet" />, <see cref="P:System.Drawing.Font.Style" />, <see cref="P:System.Drawing.Font.Size" />, and <see cref="P:System.Drawing.Font.Unit" /> property values as this <see cref="T:System.Drawing.Font" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Font.Finalize">
      <summary>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</summary>
    </member>
    <member name="P:System.Drawing.Font.FontFamily">
      <summary>Gets the <see cref="T:System.Drawing.FontFamily" /> associated with this <see cref="T:System.Drawing.Font" />.</summary>
      <returns>The <see cref="T:System.Drawing.FontFamily" /> associated with this <see cref="T:System.Drawing.Font" />.</returns>
    </member>
    <member name="M:System.Drawing.Font.FromHdc(System.IntPtr)">
      <summary>Creates a <see cref="T:System.Drawing.Font" /> from the specified Windows handle to a device context.</summary>
      <param name="hdc">A handle to a device context.</param>
      <returns>The <see cref="T:System.Drawing.Font" /> this method creates.</returns>
      <exception cref="T:System.ArgumentException">The font for the specified device context is not a TrueType font.</exception>
    </member>
    <member name="M:System.Drawing.Font.FromHfont(System.IntPtr)">
      <summary>Creates a <see cref="T:System.Drawing.Font" /> from the specified Windows handle.</summary>
      <param name="hfont">A Windows handle to a GDI font.</param>
      <returns>The <see cref="T:System.Drawing.Font" /> this method creates.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="hfont" /> points to an object that is not a TrueType font.</exception>
    </member>
    <member name="M:System.Drawing.Font.FromLogFont(System.Object)">
      <summary>Creates a <see cref="T:System.Drawing.Font" /> from the specified GDI logical font (<c>LOGFONT</c>) structure.</summary>
      <param name="lf">An <see cref="T:System.Object" /> that represents the GDI <see langword="LOGFONT" /> structure from which to create the <see cref="T:System.Drawing.Font" />.</param>
      <returns>The <see cref="T:System.Drawing.Font" /> that this method creates.</returns>
    </member>
    <member name="M:System.Drawing.Font.FromLogFont(System.Object,System.IntPtr)">
      <summary>Creates a <see cref="T:System.Drawing.Font" /> from the specified GDI logical font (<c>LOGFONT</c>) structure.</summary>
      <param name="lf">An <see cref="T:System.Object" /> that represents the GDI <see langword="LOGFONT" /> structure from which to create the <see cref="T:System.Drawing.Font" />.</param>
      <param name="hdc">A handle to a device context that contains additional information about the <paramref name="lf" /> structure.</param>
      <returns>The <see cref="T:System.Drawing.Font" /> that this method creates.</returns>
      <exception cref="T:System.ArgumentException">The font is not a TrueType font.</exception>
    </member>
    <member name="P:System.Drawing.Font.GdiCharSet">
      <summary>Gets a byte value that specifies the GDI character set that this <see cref="T:System.Drawing.Font" /> uses.</summary>
      <returns>A byte value that specifies the GDI character set that this <see cref="T:System.Drawing.Font" /> uses. The default is 1.</returns>
    </member>
    <member name="P:System.Drawing.Font.GdiVerticalFont">
      <summary>Gets a Boolean value that indicates whether this <see cref="T:System.Drawing.Font" /> is derived from a GDI vertical font.</summary>
      <returns>
        <see langword="true" /> if this <see cref="T:System.Drawing.Font" /> is derived from a GDI vertical font; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Font.GetHashCode">
      <summary>Gets the hash code for this <see cref="T:System.Drawing.Font" />.</summary>
      <returns>The hash code for this <see cref="T:System.Drawing.Font" />.</returns>
    </member>
    <member name="M:System.Drawing.Font.GetHeight">
      <summary>Returns the line spacing, in pixels, of this font.</summary>
      <returns>The line spacing, in pixels, of this font.</returns>
    </member>
    <member name="M:System.Drawing.Font.GetHeight(System.Drawing.Graphics)">
      <summary>Returns the line spacing, in the current unit of a specified <see cref="T:System.Drawing.Graphics" />, of this font.</summary>
      <param name="graphics">A <see cref="T:System.Drawing.Graphics" /> that holds the vertical resolution, in dots per inch, of the display device as well as settings for page unit and page scale.</param>
      <returns>The line spacing, in pixels, of this font.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="graphics" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Font.GetHeight(System.Single)">
      <summary>Returns the height, in pixels, of this <see cref="T:System.Drawing.Font" /> when drawn to a device with the specified vertical resolution.</summary>
      <param name="dpi">The vertical resolution, in dots per inch, used to calculate the height of the font.</param>
      <returns>The height, in pixels, of this <see cref="T:System.Drawing.Font" />.</returns>
    </member>
    <member name="P:System.Drawing.Font.Height">
      <summary>Gets the line spacing of this font.</summary>
      <returns>The line spacing, in pixels, of this font.</returns>
    </member>
    <member name="P:System.Drawing.Font.IsSystemFont">
      <summary>Gets a value indicating whether the font is a member of <see cref="T:System.Drawing.SystemFonts" />.</summary>
      <returns>
        <see langword="true" /> if the font is a member of <see cref="T:System.Drawing.SystemFonts" />; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Drawing.Font.Italic">
      <summary>Gets a value that indicates whether this font has the italic style applied.</summary>
      <returns>
        <see langword="true" /> to indicate this font has the italic style applied; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Drawing.Font.Name">
      <summary>Gets the face name of this <see cref="T:System.Drawing.Font" />.</summary>
      <returns>A string representation of the face name of this <see cref="T:System.Drawing.Font" />.</returns>
    </member>
    <member name="P:System.Drawing.Font.OriginalFontName">
      <summary>Gets the name of the font originally specified.</summary>
      <returns>The string representing the name of the font originally specified.</returns>
    </member>
    <member name="P:System.Drawing.Font.Size">
      <summary>Gets the em-size of this <see cref="T:System.Drawing.Font" /> measured in the units specified by the <see cref="P:System.Drawing.Font.Unit" /> property.</summary>
      <returns>The em-size of this <see cref="T:System.Drawing.Font" />.</returns>
    </member>
    <member name="P:System.Drawing.Font.SizeInPoints">
      <summary>Gets the em-size, in points, of this <see cref="T:System.Drawing.Font" />.</summary>
      <returns>The em-size, in points, of this <see cref="T:System.Drawing.Font" />.</returns>
    </member>
    <member name="P:System.Drawing.Font.Strikeout">
      <summary>Gets a value that indicates whether this <see cref="T:System.Drawing.Font" /> specifies a horizontal line through the font.</summary>
      <returns>
        <see langword="true" /> if this <see cref="T:System.Drawing.Font" /> has a horizontal line through it; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Drawing.Font.Style">
      <summary>Gets style information for this <see cref="T:System.Drawing.Font" />.</summary>
      <returns>A <see cref="T:System.Drawing.FontStyle" /> enumeration that contains style information for this <see cref="T:System.Drawing.Font" />.</returns>
    </member>
    <member name="M:System.Drawing.Font.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="si">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
    </member>
    <member name="P:System.Drawing.Font.SystemFontName">
      <summary>Gets the name of the system font if the <see cref="P:System.Drawing.Font.IsSystemFont" /> property returns <see langword="true" />.</summary>
      <returns>The name of the system font, if <see cref="P:System.Drawing.Font.IsSystemFont" /> returns <see langword="true" />; otherwise, an empty string ("").</returns>
    </member>
    <member name="M:System.Drawing.Font.ToHfont">
      <summary>Returns a handle to this <see cref="T:System.Drawing.Font" />.</summary>
      <returns>A Windows handle to this <see cref="T:System.Drawing.Font" />.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">The operation was unsuccessful.</exception>
    </member>
    <member name="M:System.Drawing.Font.ToLogFont(System.Object)">
      <summary>Creates a GDI logical font (<c>LOGFONT</c>) structure from this <see cref="T:System.Drawing.Font" />.</summary>
      <param name="logFont">An <see cref="T:System.Object" /> to represent the <see langword="LOGFONT" /> structure that this method creates.</param>
    </member>
    <member name="M:System.Drawing.Font.ToLogFont(System.Object,System.Drawing.Graphics)">
      <summary>Creates a GDI logical font (<c>LOGFONT</c>) structure from this <see cref="T:System.Drawing.Font" />.</summary>
      <param name="logFont">An <see cref="T:System.Object" /> to represent the <see langword="LOGFONT" /> structure that this method creates.</param>
      <param name="graphics">A <see cref="T:System.Drawing.Graphics" /> that provides additional information for the <see langword="LOGFONT" /> structure.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="graphics" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Font.ToString">
      <summary>Returns a human-readable string representation of this <see cref="T:System.Drawing.Font" />.</summary>
      <returns>A string that represents this <see cref="T:System.Drawing.Font" />.</returns>
    </member>
    <member name="P:System.Drawing.Font.Underline">
      <summary>Gets a value that indicates whether this <see cref="T:System.Drawing.Font" /> is underlined.</summary>
      <returns>
        <see langword="true" /> if this <see cref="T:System.Drawing.Font" /> is underlined; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Drawing.Font.Unit">
      <summary>Gets the unit of measure for this <see cref="T:System.Drawing.Font" />.</summary>
      <returns>A <see cref="T:System.Drawing.GraphicsUnit" /> that represents the unit of measure for this <see cref="T:System.Drawing.Font" />.</returns>
    </member>
    <member name="T:System.Drawing.FontFamily">
      <summary>Defines a group of type faces having a similar basic design and certain variations in styles. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Drawing.FontFamily.#ctor(System.Drawing.Text.GenericFontFamilies)">
      <summary>Initializes a new <see cref="T:System.Drawing.FontFamily" /> from the specified generic font family.</summary>
      <param name="genericFamily">The <see cref="T:System.Drawing.Text.GenericFontFamilies" /> from which to create the new <see cref="T:System.Drawing.FontFamily" />.</param>
    </member>
    <member name="M:System.Drawing.FontFamily.#ctor(System.String)">
      <summary>Initializes a new <see cref="T:System.Drawing.FontFamily" /> with the specified name.</summary>
      <param name="name">The name of the new <see cref="T:System.Drawing.FontFamily" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is an empty string ("").  
-or-  
<paramref name="name" /> specifies a font that is not installed on the computer running the application.  
-or-  
<paramref name="name" /> specifies a font that is not a TrueType font.</exception>
    </member>
    <member name="M:System.Drawing.FontFamily.#ctor(System.String,System.Drawing.Text.FontCollection)">
      <summary>Initializes a new <see cref="T:System.Drawing.FontFamily" /> in the specified <see cref="T:System.Drawing.Text.FontCollection" /> with the specified name.</summary>
      <param name="name">A <see cref="T:System.String" /> that represents the name of the new <see cref="T:System.Drawing.FontFamily" />.</param>
      <param name="fontCollection">The <see cref="T:System.Drawing.Text.FontCollection" /> that contains this <see cref="T:System.Drawing.FontFamily" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is an empty string ("").  
-or-  
<paramref name="name" /> specifies a font that is not installed on the computer running the application.  
-or-  
<paramref name="name" /> specifies a font that is not a TrueType font.</exception>
    </member>
    <member name="M:System.Drawing.FontFamily.Dispose">
      <summary>Releases all resources used by this <see cref="T:System.Drawing.FontFamily" />.</summary>
    </member>
    <member name="M:System.Drawing.FontFamily.Equals(System.Object)">
      <summary>Indicates whether the specified object is a <see cref="T:System.Drawing.FontFamily" /> and is identical to this <see cref="T:System.Drawing.FontFamily" />.</summary>
      <param name="obj">The object to test.</param>
      <returns>
        <see langword="true" /> if <paramref name="obj" /> is a <see cref="T:System.Drawing.FontFamily" /> and is identical to this <see cref="T:System.Drawing.FontFamily" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Drawing.FontFamily.Families">
      <summary>Returns an array that contains all the <see cref="T:System.Drawing.FontFamily" /> objects associated with the current graphics context.</summary>
      <returns>An array of <see cref="T:System.Drawing.FontFamily" /> objects associated with the current graphics context.</returns>
    </member>
    <member name="M:System.Drawing.FontFamily.Finalize">
      <summary>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</summary>
    </member>
    <member name="P:System.Drawing.FontFamily.GenericMonospace">
      <summary>Gets a generic monospace <see cref="T:System.Drawing.FontFamily" />.</summary>
      <returns>A <see cref="T:System.Drawing.FontFamily" /> that represents a generic monospace font.</returns>
    </member>
    <member name="P:System.Drawing.FontFamily.GenericSansSerif">
      <summary>Gets a generic sans serif <see cref="T:System.Drawing.FontFamily" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.FontFamily" /> object that represents a generic sans serif font.</returns>
    </member>
    <member name="P:System.Drawing.FontFamily.GenericSerif">
      <summary>Gets a generic serif <see cref="T:System.Drawing.FontFamily" />.</summary>
      <returns>A <see cref="T:System.Drawing.FontFamily" /> that represents a generic serif font.</returns>
    </member>
    <member name="M:System.Drawing.FontFamily.GetCellAscent(System.Drawing.FontStyle)">
      <summary>Returns the cell ascent, in design units, of the <see cref="T:System.Drawing.FontFamily" /> of the specified style.</summary>
      <param name="style">A <see cref="T:System.Drawing.FontStyle" /> that contains style information for the font.</param>
      <returns>The cell ascent for this <see cref="T:System.Drawing.FontFamily" /> that uses the specified <see cref="T:System.Drawing.FontStyle" />.</returns>
    </member>
    <member name="M:System.Drawing.FontFamily.GetCellDescent(System.Drawing.FontStyle)">
      <summary>Returns the cell descent, in design units, of the <see cref="T:System.Drawing.FontFamily" /> of the specified style.</summary>
      <param name="style">A <see cref="T:System.Drawing.FontStyle" /> that contains style information for the font.</param>
      <returns>The cell descent metric for this <see cref="T:System.Drawing.FontFamily" /> that uses the specified <see cref="T:System.Drawing.FontStyle" />.</returns>
    </member>
    <member name="M:System.Drawing.FontFamily.GetEmHeight(System.Drawing.FontStyle)">
      <summary>Gets the height, in font design units, of the em square for the specified style.</summary>
      <param name="style">The <see cref="T:System.Drawing.FontStyle" /> for which to get the em height.</param>
      <returns>The height of the em square.</returns>
    </member>
    <member name="M:System.Drawing.FontFamily.GetFamilies(System.Drawing.Graphics)">
      <summary>Returns an array that contains all the <see cref="T:System.Drawing.FontFamily" /> objects available for the specified graphics context.</summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> object from which to return <see cref="T:System.Drawing.FontFamily" /> objects.</param>
      <returns>An array of <see cref="T:System.Drawing.FontFamily" /> objects available for the specified <see cref="T:System.Drawing.Graphics" /> object.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="graphics" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.FontFamily.GetHashCode">
      <summary>Gets a hash code for this <see cref="T:System.Drawing.FontFamily" />.</summary>
      <returns>The hash code for this <see cref="T:System.Drawing.FontFamily" />.</returns>
    </member>
    <member name="M:System.Drawing.FontFamily.GetLineSpacing(System.Drawing.FontStyle)">
      <summary>Returns the line spacing, in design units, of the <see cref="T:System.Drawing.FontFamily" /> of the specified style. The line spacing is the vertical distance between the base lines of two consecutive lines of text.</summary>
      <param name="style">The <see cref="T:System.Drawing.FontStyle" /> to apply.</param>
      <returns>The distance between two consecutive lines of text.</returns>
    </member>
    <member name="M:System.Drawing.FontFamily.GetName(System.Int32)">
      <summary>Returns the name, in the specified language, of this <see cref="T:System.Drawing.FontFamily" />.</summary>
      <param name="language">The language in which the name is returned.</param>
      <returns>A <see cref="T:System.String" /> that represents the name, in the specified language, of this <see cref="T:System.Drawing.FontFamily" />.</returns>
    </member>
    <member name="M:System.Drawing.FontFamily.IsStyleAvailable(System.Drawing.FontStyle)">
      <summary>Indicates whether the specified <see cref="T:System.Drawing.FontStyle" /> enumeration is available.</summary>
      <param name="style">The <see cref="T:System.Drawing.FontStyle" /> to test.</param>
      <returns>
        <see langword="true" /> if the specified <see cref="T:System.Drawing.FontStyle" /> is available; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Drawing.FontFamily.Name">
      <summary>Gets the name of this <see cref="T:System.Drawing.FontFamily" />.</summary>
      <returns>A <see cref="T:System.String" /> that represents the name of this <see cref="T:System.Drawing.FontFamily" />.</returns>
    </member>
    <member name="M:System.Drawing.FontFamily.ToString">
      <summary>Converts this <see cref="T:System.Drawing.FontFamily" /> to a human-readable string representation.</summary>
      <returns>The string that represents this <see cref="T:System.Drawing.FontFamily" />.</returns>
    </member>
    <member name="T:System.Drawing.FontStyle">
      <summary>Specifies style information applied to text.</summary>
    </member>
    <member name="F:System.Drawing.FontStyle.Bold">
      <summary>Bold text.</summary>
    </member>
    <member name="F:System.Drawing.FontStyle.Italic">
      <summary>Italic text.</summary>
    </member>
    <member name="F:System.Drawing.FontStyle.Regular">
      <summary>Normal text.</summary>
    </member>
    <member name="F:System.Drawing.FontStyle.Strikeout">
      <summary>Text with a line through the middle.</summary>
    </member>
    <member name="F:System.Drawing.FontStyle.Underline">
      <summary>Underlined text.</summary>
    </member>
    <member name="T:System.Drawing.Graphics">
      <summary>Encapsulates a GDI+ drawing surface. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Drawing.Graphics.AddMetafileComment(System.Byte[])">
      <summary>Adds a comment to the current <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <param name="data">Array of bytes that contains the comment.</param>
    </member>
    <member name="M:System.Drawing.Graphics.BeginContainer">
      <summary>Saves a graphics container with the current state of this <see cref="T:System.Drawing.Graphics" /> and opens and uses a new graphics container.</summary>
      <returns>This method returns a <see cref="T:System.Drawing.Drawing2D.GraphicsContainer" /> that represents the state of this <see cref="T:System.Drawing.Graphics" /> at the time of the method call.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
      <summary>Saves a graphics container with the current state of this <see cref="T:System.Drawing.Graphics" /> and opens and uses a new graphics container with the specified scale transformation.</summary>
      <param name="dstrect">
        <see cref="T:System.Drawing.Rectangle" /> structure that, together with the <paramref name="srcrect" /> parameter, specifies a scale transformation for the container.</param>
      <param name="srcrect">
        <see cref="T:System.Drawing.Rectangle" /> structure that, together with the <paramref name="dstrect" /> parameter, specifies a scale transformation for the container.</param>
      <param name="unit">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure for the container.</param>
      <returns>This method returns a <see cref="T:System.Drawing.Drawing2D.GraphicsContainer" /> that represents the state of this <see cref="T:System.Drawing.Graphics" /> at the time of the method call.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
      <summary>Saves a graphics container with the current state of this <see cref="T:System.Drawing.Graphics" /> and opens and uses a new graphics container with the specified scale transformation.</summary>
      <param name="dstrect">
        <see cref="T:System.Drawing.RectangleF" /> structure that, together with the <paramref name="srcrect" /> parameter, specifies a scale transformation for the new graphics container.</param>
      <param name="srcrect">
        <see cref="T:System.Drawing.RectangleF" /> structure that, together with the <paramref name="dstrect" /> parameter, specifies a scale transformation for the new graphics container.</param>
      <param name="unit">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure for the container.</param>
      <returns>This method returns a <see cref="T:System.Drawing.Drawing2D.GraphicsContainer" /> that represents the state of this <see cref="T:System.Drawing.Graphics" /> at the time of the method call.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.Clear(System.Drawing.Color)">
      <summary>Clears the entire drawing surface and fills it with the specified background color.</summary>
      <param name="color">
        <see cref="T:System.Drawing.Color" /> structure that represents the background color of the drawing surface.</param>
    </member>
    <member name="P:System.Drawing.Graphics.Clip">
      <summary>Gets or sets a <see cref="T:System.Drawing.Region" /> that limits the drawing region of this <see cref="T:System.Drawing.Graphics" />.</summary>
      <returns>A <see cref="T:System.Drawing.Region" /> that limits the portion of this <see cref="T:System.Drawing.Graphics" /> that is currently available for drawing.</returns>
    </member>
    <member name="P:System.Drawing.Graphics.ClipBounds">
      <summary>Gets a <see cref="T:System.Drawing.RectangleF" /> structure that bounds the clipping region of this <see cref="T:System.Drawing.Graphics" />.</summary>
      <returns>A <see cref="T:System.Drawing.RectangleF" /> structure that represents a bounding rectangle for the clipping region of this <see cref="T:System.Drawing.Graphics" />.</returns>
    </member>
    <member name="P:System.Drawing.Graphics.CompositingMode">
      <summary>Gets a value that specifies how composited images are drawn to this <see cref="T:System.Drawing.Graphics" />.</summary>
      <returns>This property specifies a member of the <see cref="T:System.Drawing.Drawing2D.CompositingMode" /> enumeration. The default is <see cref="F:System.Drawing.Drawing2D.CompositingMode.SourceOver" />.</returns>
    </member>
    <member name="P:System.Drawing.Graphics.CompositingQuality">
      <summary>Gets or sets the rendering quality of composited images drawn to this <see cref="T:System.Drawing.Graphics" />.</summary>
      <returns>This property specifies a member of the <see cref="T:System.Drawing.Drawing2D.CompositingQuality" /> enumeration. The default is <see cref="F:System.Drawing.Drawing2D.CompositingQuality.Default" />.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size)">
      <summary>Performs a bit-block transfer of color data, corresponding to a rectangle of pixels, from the screen to the drawing surface of the <see cref="T:System.Drawing.Graphics" />.</summary>
      <param name="upperLeftSource">The point at the upper-left corner of the source rectangle.</param>
      <param name="upperLeftDestination">The point at the upper-left corner of the destination rectangle.</param>
      <param name="blockRegionSize">The size of the area to be transferred.</param>
      <exception cref="T:System.ComponentModel.Win32Exception">The operation failed.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size,System.Drawing.CopyPixelOperation)">
      <summary>Performs a bit-block transfer of color data, corresponding to a rectangle of pixels, from the screen to the drawing surface of the <see cref="T:System.Drawing.Graphics" />.</summary>
      <param name="upperLeftSource">The point at the upper-left corner of the source rectangle.</param>
      <param name="upperLeftDestination">The point at the upper-left corner of the destination rectangle.</param>
      <param name="blockRegionSize">The size of the area to be transferred.</param>
      <param name="copyPixelOperation">One of the <see cref="T:System.Drawing.CopyPixelOperation" /> values.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="copyPixelOperation" /> is not a member of <see cref="T:System.Drawing.CopyPixelOperation" />.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">The operation failed.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size)">
      <summary>Performs a bit-block transfer of the color data, corresponding to a rectangle of pixels, from the screen to the drawing surface of the <see cref="T:System.Drawing.Graphics" />.</summary>
      <param name="sourceX">The x-coordinate of the point at the upper-left corner of the source rectangle.</param>
      <param name="sourceY">The y-coordinate of the point at the upper-left corner of the source rectangle.</param>
      <param name="destinationX">The x-coordinate of the point at the upper-left corner of the destination rectangle.</param>
      <param name="destinationY">The y-coordinate of the point at the upper-left corner of the destination rectangle.</param>
      <param name="blockRegionSize">The size of the area to be transferred.</param>
      <exception cref="T:System.ComponentModel.Win32Exception">The operation failed.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size,System.Drawing.CopyPixelOperation)">
      <summary>Performs a bit-block transfer of the color data, corresponding to a rectangle of pixels, from the screen to the drawing surface of the <see cref="T:System.Drawing.Graphics" />.</summary>
      <param name="sourceX">The x-coordinate of the point at the upper-left corner of the source rectangle.</param>
      <param name="sourceY">The y-coordinate of the point at the upper-left corner of the source rectangle</param>
      <param name="destinationX">The x-coordinate of the point at the upper-left corner of the destination rectangle.</param>
      <param name="destinationY">The y-coordinate of the point at the upper-left corner of the destination rectangle.</param>
      <param name="blockRegionSize">The size of the area to be transferred.</param>
      <param name="copyPixelOperation">One of the <see cref="T:System.Drawing.CopyPixelOperation" /> values.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="copyPixelOperation" /> is not a member of <see cref="T:System.Drawing.CopyPixelOperation" />.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">The operation failed.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.Dispose">
      <summary>Releases all resources used by this <see cref="T:System.Drawing.Graphics" />.</summary>
    </member>
    <member name="P:System.Drawing.Graphics.DpiX">
      <summary>Gets the horizontal resolution of this <see cref="T:System.Drawing.Graphics" />.</summary>
      <returns>The value, in dots per inch, for the horizontal resolution supported by this <see cref="T:System.Drawing.Graphics" />.</returns>
    </member>
    <member name="P:System.Drawing.Graphics.DpiY">
      <summary>Gets the vertical resolution of this <see cref="T:System.Drawing.Graphics" />.</summary>
      <returns>The value, in dots per inch, for the vertical resolution supported by this <see cref="T:System.Drawing.Graphics" />.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>Draws an arc representing a portion of an ellipse specified by a <see cref="T:System.Drawing.Rectangle" /> structure.</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the arc.</param>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" /> structure that defines the boundaries of the ellipse.</param>
      <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the starting point of the arc.</param>
      <param name="sweepAngle">Angle in degrees measured clockwise from the <paramref name="startAngle" /> parameter to ending point of the arc.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
      <summary>Draws an arc representing a portion of an ellipse specified by a <see cref="T:System.Drawing.RectangleF" /> structure.</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the arc.</param>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" /> structure that defines the boundaries of the ellipse.</param>
      <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the starting point of the arc.</param>
      <param name="sweepAngle">Angle in degrees measured clockwise from the <paramref name="startAngle" /> parameter to ending point of the arc.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is <see langword="null" /></exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Draws an arc representing a portion of an ellipse specified by a pair of coordinates, a width, and a height.</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the arc.</param>
      <param name="x">The x-coordinate of the upper-left corner of the rectangle that defines the ellipse.</param>
      <param name="y">The y-coordinate of the upper-left corner of the rectangle that defines the ellipse.</param>
      <param name="width">Width of the rectangle that defines the ellipse.</param>
      <param name="height">Height of the rectangle that defines the ellipse.</param>
      <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the starting point of the arc.</param>
      <param name="sweepAngle">Angle in degrees measured clockwise from the <paramref name="startAngle" /> parameter to ending point of the arc.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>Draws an arc representing a portion of an ellipse specified by a pair of coordinates, a width, and a height.</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the arc.</param>
      <param name="x">The x-coordinate of the upper-left corner of the rectangle that defines the ellipse.</param>
      <param name="y">The y-coordinate of the upper-left corner of the rectangle that defines the ellipse.</param>
      <param name="width">Width of the rectangle that defines the ellipse.</param>
      <param name="height">Height of the rectangle that defines the ellipse.</param>
      <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the starting point of the arc.</param>
      <param name="sweepAngle">Angle in degrees measured clockwise from the <paramref name="startAngle" /> parameter to ending point of the arc.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
      <summary>Draws a Bézier spline defined by four <see cref="T:System.Drawing.Point" /> structures.</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> structure that determines the color, width, and style of the curve.</param>
      <param name="pt1">
        <see cref="T:System.Drawing.Point" /> structure that represents the starting point of the curve.</param>
      <param name="pt2">
        <see cref="T:System.Drawing.Point" /> structure that represents the first control point for the curve.</param>
      <param name="pt3">
        <see cref="T:System.Drawing.Point" /> structure that represents the second control point for the curve.</param>
      <param name="pt4">
        <see cref="T:System.Drawing.Point" /> structure that represents the ending point of the curve.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
      <summary>Draws a Bézier spline defined by four <see cref="T:System.Drawing.PointF" /> structures.</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the curve.</param>
      <param name="pt1">
        <see cref="T:System.Drawing.PointF" /> structure that represents the starting point of the curve.</param>
      <param name="pt2">
        <see cref="T:System.Drawing.PointF" /> structure that represents the first control point for the curve.</param>
      <param name="pt3">
        <see cref="T:System.Drawing.PointF" /> structure that represents the second control point for the curve.</param>
      <param name="pt4">
        <see cref="T:System.Drawing.PointF" /> structure that represents the ending point of the curve.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>Draws a Bézier spline defined by four ordered pairs of coordinates that represent points.</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the curve.</param>
      <param name="x1">The x-coordinate of the starting point of the curve.</param>
      <param name="y1">The y-coordinate of the starting point of the curve.</param>
      <param name="x2">The x-coordinate of the first control point of the curve.</param>
      <param name="y2">The y-coordinate of the first control point of the curve.</param>
      <param name="x3">The x-coordinate of the second control point of the curve.</param>
      <param name="y3">The y-coordinate of the second control point of the curve.</param>
      <param name="x4">The x-coordinate of the ending point of the curve.</param>
      <param name="y4">The y-coordinate of the ending point of the curve.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.Point[])">
      <summary>Draws a series of Bézier splines from an array of <see cref="T:System.Drawing.Point" /> structures.</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the curve.</param>
      <param name="points">Array of <see cref="T:System.Drawing.Point" /> structures that represent the points that determine the curve. The number of points in the array should be a multiple of 3 plus 1, such as 4, 7, or 10.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is <see langword="null" />.  
-or-  
<paramref name="points" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.PointF[])">
      <summary>Draws a series of Bézier splines from an array of <see cref="T:System.Drawing.PointF" /> structures.</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the curve.</param>
      <param name="points">Array of <see cref="T:System.Drawing.PointF" /> structures that represent the points that determine the curve. The number of points in the array should be a multiple of 3 plus 1, such as 4, 7, or 10.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is <see langword="null" />.  
-or-  
<paramref name="points" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[])">
      <summary>Draws a closed cardinal spline defined by an array of <see cref="T:System.Drawing.Point" /> structures.</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> that determines the color, width, and height of the curve.</param>
      <param name="points">Array of <see cref="T:System.Drawing.Point" /> structures that define the spline.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is <see langword="null" />.  
-or-  
<paramref name="points" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single,System.Drawing.Drawing2D.FillMode)">
      <summary>Draws a closed cardinal spline defined by an array of <see cref="T:System.Drawing.Point" /> structures using a specified tension.</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> that determines the color, width, and height of the curve.</param>
      <param name="points">Array of <see cref="T:System.Drawing.Point" /> structures that define the spline.</param>
      <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
      <param name="fillmode">Member of the <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the curve is filled. This parameter is required but ignored.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is <see langword="null" />.  
-or-  
<paramref name="points" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[])">
      <summary>Draws a closed cardinal spline defined by an array of <see cref="T:System.Drawing.PointF" /> structures.</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> that determines the color, width, and height of the curve.</param>
      <param name="points">Array of <see cref="T:System.Drawing.PointF" /> structures that define the spline.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is <see langword="null" />.  
-or-  
<paramref name="points" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)">
      <summary>Draws a closed cardinal spline defined by an array of <see cref="T:System.Drawing.PointF" /> structures using a specified tension.</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> that determines the color, width, and height of the curve.</param>
      <param name="points">Array of <see cref="T:System.Drawing.PointF" /> structures that define the spline.</param>
      <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
      <param name="fillmode">Member of the <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the curve is filled. This parameter is required but is ignored.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is <see langword="null" />.  
-or-  
<paramref name="points" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[])">
      <summary>Draws a cardinal spline through a specified array of <see cref="T:System.Drawing.Point" /> structures.</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> that determines the color, width, and height of the curve.</param>
      <param name="points">Array of <see cref="T:System.Drawing.Point" /> structures that define the spline.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is <see langword="null" />.  
-or-  
<paramref name="points" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
      <summary>Draws a cardinal spline through a specified array of <see cref="T:System.Drawing.Point" /> structures using a specified tension.</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the curve.</param>
      <param name="points">Array of <see cref="T:System.Drawing.Point" /> structures that define the spline.</param>
      <param name="offset">Offset from the first element in the array of the <paramref name="points" /> parameter to the starting point in the curve.</param>
      <param name="numberOfSegments">Number of segments after the starting point to include in the curve.</param>
      <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is <see langword="null" />.  
-or-  
<paramref name="points" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single)">
      <summary>Draws a cardinal spline through a specified array of <see cref="T:System.Drawing.Point" /> structures using a specified tension.</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the curve.</param>
      <param name="points">Array of <see cref="T:System.Drawing.Point" /> structures that define the spline.</param>
      <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is <see langword="null" />.  
-or-  
<paramref name="points" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[])">
      <summary>Draws a cardinal spline through a specified array of <see cref="T:System.Drawing.PointF" /> structures.</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the curve.</param>
      <param name="points">Array of <see cref="T:System.Drawing.PointF" /> structures that define the spline.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is <see langword="null" />.  
-or-  
<paramref name="points" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32)">
      <summary>Draws a cardinal spline through a specified array of <see cref="T:System.Drawing.PointF" /> structures. The drawing begins offset from the beginning of the array.</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the curve.</param>
      <param name="points">Array of <see cref="T:System.Drawing.PointF" /> structures that define the spline.</param>
      <param name="offset">Offset from the first element in the array of the <paramref name="points" /> parameter to the starting point in the curve.</param>
      <param name="numberOfSegments">Number of segments after the starting point to include in the curve.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is <see langword="null" />.  
-or-  
<paramref name="points" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
      <summary>Draws a cardinal spline through a specified array of <see cref="T:System.Drawing.PointF" /> structures using a specified tension. The drawing begins offset from the beginning of the array.</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the curve.</param>
      <param name="points">Array of <see cref="T:System.Drawing.PointF" /> structures that define the spline.</param>
      <param name="offset">Offset from the first element in the array of the <paramref name="points" /> parameter to the starting point in the curve.</param>
      <param name="numberOfSegments">Number of segments after the starting point to include in the curve.</param>
      <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is <see langword="null" />.  
-or-  
<paramref name="points" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single)">
      <summary>Draws a cardinal spline through a specified array of <see cref="T:System.Drawing.PointF" /> structures using a specified tension.</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the curve.</param>
      <param name="points">Array of <see cref="T:System.Drawing.PointF" /> structures that represent the points that define the curve.</param>
      <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is <see langword="null" />.  
-or-  
<paramref name="points" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.Rectangle)">
      <summary>Draws an ellipse specified by a bounding <see cref="T:System.Drawing.Rectangle" /> structure.</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the ellipse.</param>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> structure that defines the boundaries of the ellipse.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.RectangleF)">
      <summary>Draws an ellipse defined by a bounding <see cref="T:System.Drawing.RectangleF" />.</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the ellipse.</param>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" /> structure that defines the boundaries of the ellipse.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Draws an ellipse defined by a bounding rectangle specified by coordinates for the upper-left corner of the rectangle, a height, and a width.</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the ellipse.</param>
      <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
      <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
      <param name="width">Width of the bounding rectangle that defines the ellipse.</param>
      <param name="height">Height of the bounding rectangle that defines the ellipse.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
      <summary>Draws an ellipse defined by a bounding rectangle specified by a pair of coordinates, a height, and a width.</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the ellipse.</param>
      <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
      <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
      <param name="width">Width of the bounding rectangle that defines the ellipse.</param>
      <param name="height">Height of the bounding rectangle that defines the ellipse.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Drawing.Rectangle)">
      <summary>Draws the image represented by the specified <see cref="T:System.Drawing.Icon" /> within the area specified by a <see cref="T:System.Drawing.Rectangle" /> structure.</summary>
      <param name="icon">
        <see cref="T:System.Drawing.Icon" /> to draw.</param>
      <param name="targetRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the resulting image on the display surface. The image contained in the <paramref name="icon" /> parameter is scaled to the dimensions of this rectangular area.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="icon" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Int32,System.Int32)">
      <summary>Draws the image represented by the specified <see cref="T:System.Drawing.Icon" /> at the specified coordinates.</summary>
      <param name="icon">
        <see cref="T:System.Drawing.Icon" /> to draw.</param>
      <param name="x">The x-coordinate of the upper-left corner of the drawn image.</param>
      <param name="y">The y-coordinate of the upper-left corner of the drawn image.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="icon" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawIconUnstretched(System.Drawing.Icon,System.Drawing.Rectangle)">
      <summary>Draws the image represented by the specified <see cref="T:System.Drawing.Icon" /> without scaling the image.</summary>
      <param name="icon">
        <see cref="T:System.Drawing.Icon" /> to draw.</param>
      <param name="targetRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the resulting image. The image is not scaled to fit this rectangle, but retains its original size. If the image is larger than the rectangle, it is clipped to fit inside it.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="icon" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point)">
      <summary>Draws the specified <see cref="T:System.Drawing.Image" />, using its original physical size, at the specified location.</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> to draw.</param>
      <param name="point">
        <see cref="T:System.Drawing.Point" /> structure that represents the location of the upper-left corner of the drawn image.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[])">
      <summary>Draws the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified shape and size.</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> to draw.</param>
      <param name="destPoints">Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
      <summary>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> to draw.</param>
      <param name="destPoints">Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram.</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the <paramref name="image" /> object to draw.</param>
      <param name="srcUnit">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
      <summary>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location.</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> to draw.</param>
      <param name="destPoints">Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram.</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the <paramref name="image" /> object to draw.</param>
      <param name="srcUnit">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies recoloring and gamma information for the <paramref name="image" /> object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
      <summary>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> to draw.</param>
      <param name="destPoints">Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram.</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the <paramref name="image" /> object to draw.</param>
      <param name="srcUnit">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies recoloring and gamma information for the <paramref name="image" /> object.</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> delegate that specifies a method to call during the drawing of the image. This method is called frequently to check whether to stop execution of the <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /> method according to application-determined criteria.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
      <summary>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> to draw.</param>
      <param name="destPoints">Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram.</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the <paramref name="image" /> object to draw.</param>
      <param name="srcUnit">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies recoloring and gamma information for the <paramref name="image" /> object.</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> delegate that specifies a method to call during the drawing of the image. This method is called frequently to check whether to stop execution of the <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /> method according to application-determined criteria.</param>
      <param name="callbackData">Value specifying additional data for the <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> delegate to use when checking whether to stop execution of the <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /> method.</param>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF)">
      <summary>Draws the specified <see cref="T:System.Drawing.Image" />, using its original physical size, at the specified location.</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> to draw.</param>
      <param name="point">
        <see cref="T:System.Drawing.PointF" /> structure that represents the upper-left corner of the drawn image.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[])">
      <summary>Draws the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified shape and size.</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> to draw.</param>
      <param name="destPoints">Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
      <summary>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> to draw.</param>
      <param name="destPoints">Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram.</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the <paramref name="image" /> object to draw.</param>
      <param name="srcUnit">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
      <summary>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> to draw.</param>
      <param name="destPoints">Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram.</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the <paramref name="image" /> object to draw.</param>
      <param name="srcUnit">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies recoloring and gamma information for the <paramref name="image" /> object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
      <summary>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> to draw.</param>
      <param name="destPoints">Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram.</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the <paramref name="image" /> object to draw.</param>
      <param name="srcUnit">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies recoloring and gamma information for the <paramref name="image" /> object.</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> delegate that specifies a method to call during the drawing of the image. This method is called frequently to check whether to stop execution of the <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /> method according to application-determined criteria.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
      <summary>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> to draw.</param>
      <param name="destPoints">Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram.</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the <paramref name="image" /> object to draw.</param>
      <param name="srcUnit">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies recoloring and gamma information for the <paramref name="image" /> object.</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> delegate that specifies a method to call during the drawing of the image. This method is called frequently to check whether to stop execution of the <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /> method according to application-determined criteria.</param>
      <param name="callbackData">Value specifying additional data for the <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> delegate to use when checking whether to stop execution of the <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /> method.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle)">
      <summary>Draws the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> to draw.</param>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
      <summary>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> to draw.</param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the <paramref name="image" /> object to draw.</param>
      <param name="srcUnit">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit)">
      <summary>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> to draw.</param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.</param>
      <param name="srcX">The x-coordinate of the upper-left corner of the portion of the source image to draw.</param>
      <param name="srcY">The y-coordinate of the upper-left corner of the portion of the source image to draw.</param>
      <param name="srcWidth">Width of the portion of the source image to draw.</param>
      <param name="srcHeight">Height of the portion of the source image to draw.</param>
      <param name="srcUnit">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used to determine the source rectangle.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
      <summary>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> to draw.</param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.</param>
      <param name="srcX">The x-coordinate of the upper-left corner of the portion of the source image to draw.</param>
      <param name="srcY">The y-coordinate of the upper-left corner of the portion of the source image to draw.</param>
      <param name="srcWidth">Width of the portion of the source image to draw.</param>
      <param name="srcHeight">Height of the portion of the source image to draw.</param>
      <param name="srcUnit">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used to determine the source rectangle.</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies recoloring and gamma information for the <paramref name="image" /> object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
      <summary>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> to draw.</param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.</param>
      <param name="srcX">The x-coordinate of the upper-left corner of the portion of the source image to draw.</param>
      <param name="srcY">The y-coordinate of the upper-left corner of the portion of the source image to draw.</param>
      <param name="srcWidth">Width of the portion of the source image to draw.</param>
      <param name="srcHeight">Height of the portion of the source image to draw.</param>
      <param name="srcUnit">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used to determine the source rectangle.</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies recoloring and gamma information for <paramref name="image" />.</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> delegate that specifies a method to call during the drawing of the image. This method is called frequently to check whether to stop execution of the <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /> method according to application-determined criteria.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
      <summary>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> to draw.</param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.</param>
      <param name="srcX">The x-coordinate of the upper-left corner of the portion of the source image to draw.</param>
      <param name="srcY">The y-coordinate of the upper-left corner of the portion of the source image to draw.</param>
      <param name="srcWidth">Width of the portion of the source image to draw.</param>
      <param name="srcHeight">Height of the portion of the source image to draw.</param>
      <param name="srcUnit">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used to determine the source rectangle.</param>
      <param name="imageAttrs">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies recoloring and gamma information for the <paramref name="image" /> object.</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> delegate that specifies a method to call during the drawing of the image. This method is called frequently to check whether to stop execution of the <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)" /> method according to application-determined criteria.</param>
      <param name="callbackData">Value specifying additional data for the <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> delegate to use when checking whether to stop execution of the <see langword="DrawImage" /> method.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit)">
      <summary>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> to draw.</param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.</param>
      <param name="srcX">The x-coordinate of the upper-left corner of the portion of the source image to draw.</param>
      <param name="srcY">The y-coordinate of the upper-left corner of the portion of the source image to draw.</param>
      <param name="srcWidth">Width of the portion of the source image to draw.</param>
      <param name="srcHeight">Height of the portion of the source image to draw.</param>
      <param name="srcUnit">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used to determine the source rectangle.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
      <summary>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> to draw.</param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.</param>
      <param name="srcX">The x-coordinate of the upper-left corner of the portion of the source image to draw.</param>
      <param name="srcY">The y-coordinate of the upper-left corner of the portion of the source image to draw.</param>
      <param name="srcWidth">Width of the portion of the source image to draw.</param>
      <param name="srcHeight">Height of the portion of the source image to draw.</param>
      <param name="srcUnit">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used to determine the source rectangle.</param>
      <param name="imageAttrs">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies recoloring and gamma information for the <paramref name="image" /> object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
      <summary>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> to draw.</param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.</param>
      <param name="srcX">The x-coordinate of the upper-left corner of the portion of the source image to draw.</param>
      <param name="srcY">The y-coordinate of the upper-left corner of the portion of the source image to draw.</param>
      <param name="srcWidth">Width of the portion of the source image to draw.</param>
      <param name="srcHeight">Height of the portion of the source image to draw.</param>
      <param name="srcUnit">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used to determine the source rectangle.</param>
      <param name="imageAttrs">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies recoloring and gamma information for the <paramref name="image" /> object.</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> delegate that specifies a method to call during the drawing of the image. This method is called frequently to check whether to stop execution of the <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /> method according to application-determined criteria.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
      <summary>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> to draw.</param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.</param>
      <param name="srcX">The x-coordinate of the upper-left corner of the portion of the source image to draw.</param>
      <param name="srcY">The y-coordinate of the upper-left corner of the portion of the source image to draw.</param>
      <param name="srcWidth">Width of the portion of the source image to draw.</param>
      <param name="srcHeight">Height of the portion of the source image to draw.</param>
      <param name="srcUnit">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used to determine the source rectangle.</param>
      <param name="imageAttrs">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies recoloring and gamma information for the <paramref name="image" /> object.</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> delegate that specifies a method to call during the drawing of the image. This method is called frequently to check whether to stop execution of the <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)" /> method according to application-determined criteria.</param>
      <param name="callbackData">Value specifying additional data for the <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> delegate to use when checking whether to stop execution of the <see langword="DrawImage" /> method.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF)">
      <summary>Draws the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> to draw.</param>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the location and size of the drawn image.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
      <summary>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> to draw.</param>
      <param name="destRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the <paramref name="image" /> object to draw.</param>
      <param name="srcUnit">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32)">
      <summary>Draws the specified image, using its original physical size, at the location specified by a coordinate pair.</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> to draw.</param>
      <param name="x">The x-coordinate of the upper-left corner of the drawn image.</param>
      <param name="y">The y-coordinate of the upper-left corner of the drawn image.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
      <summary>Draws a portion of an image at a specified location.</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> to draw.</param>
      <param name="x">The x-coordinate of the upper-left corner of the drawn image.</param>
      <param name="y">The y-coordinate of the upper-left corner of the drawn image.</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the <paramref name="image" /> object to draw.</param>
      <param name="srcUnit">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Draws the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> to draw.</param>
      <param name="x">The x-coordinate of the upper-left corner of the drawn image.</param>
      <param name="y">The y-coordinate of the upper-left corner of the drawn image.</param>
      <param name="width">Width of the drawn image.</param>
      <param name="height">Height of the drawn image.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single)">
      <summary>Draws the specified <see cref="T:System.Drawing.Image" />, using its original physical size, at the specified location.</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> to draw.</param>
      <param name="x">The x-coordinate of the upper-left corner of the drawn image.</param>
      <param name="y">The y-coordinate of the upper-left corner of the drawn image.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
      <summary>Draws a portion of an image at a specified location.</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> to draw.</param>
      <param name="x">The x-coordinate of the upper-left corner of the drawn image.</param>
      <param name="y">The y-coordinate of the upper-left corner of the drawn image.</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the <see cref="T:System.Drawing.Image" /> to draw.</param>
      <param name="srcUnit">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single)">
      <summary>Draws the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> to draw.</param>
      <param name="x">The x-coordinate of the upper-left corner of the drawn image.</param>
      <param name="y">The y-coordinate of the upper-left corner of the drawn image.</param>
      <param name="width">Width of the drawn image.</param>
      <param name="height">Height of the drawn image.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> is <see langword="null" />.</exception>
    </member>
    <member name="T:System.Drawing.Graphics.DrawImageAbort">
      <summary>Provides a callback method for deciding when the <see cref="Overload:System.Drawing.Graphics.DrawImage" /> method should prematurely cancel execution and stop drawing an image.</summary>
      <param name="callbackdata">Internal pointer that specifies data for the callback method. This parameter is not passed by all <see cref="Overload:System.Drawing.Graphics.DrawImage" /> overloads. You can test for its absence by checking for the value <see cref="F:System.IntPtr.Zero" />.</param>
      <returns>This method returns <see langword="true" /> if it decides that the <see cref="Overload:System.Drawing.Graphics.DrawImage" /> method should prematurely stop execution. Otherwise it returns <see langword="false" /> to indicate that the <see cref="Overload:System.Drawing.Graphics.DrawImage" /> method should continue execution.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Point)">
      <summary>Draws a specified image using its original physical size at a specified location.</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> to draw.</param>
      <param name="point">
        <see cref="T:System.Drawing.Point" /> structure that specifies the upper-left corner of the drawn image.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Rectangle)">
      <summary>Draws a specified image using its original physical size at a specified location.</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> to draw.</param>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> that specifies the upper-left corner of the drawn image. The X and Y properties of the rectangle specify the upper-left corner. The Width and Height properties are ignored.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32)">
      <summary>Draws the specified image using its original physical size at the location specified by a coordinate pair.</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> to draw.</param>
      <param name="x">The x-coordinate of the upper-left corner of the drawn image.</param>
      <param name="y">The y-coordinate of the upper-left corner of the drawn image.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Draws a specified image using its original physical size at a specified location.</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> to draw.</param>
      <param name="x">The x-coordinate of the upper-left corner of the drawn image.</param>
      <param name="y">The y-coordinate of the upper-left corner of the drawn image.</param>
      <param name="width">Not used.</param>
      <param name="height">Not used.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImageUnscaledAndClipped(System.Drawing.Image,System.Drawing.Rectangle)">
      <summary>Draws the specified image without scaling and clips it, if necessary, to fit in the specified rectangle.</summary>
      <param name="image">The <see cref="T:System.Drawing.Image" /> to draw.</param>
      <param name="rect">The <see cref="T:System.Drawing.Rectangle" /> in which to draw the image.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point)">
      <summary>Draws a line connecting two <see cref="T:System.Drawing.Point" /> structures.</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the line.</param>
      <param name="pt1">
        <see cref="T:System.Drawing.Point" /> structure that represents the first point to connect.</param>
      <param name="pt2">
        <see cref="T:System.Drawing.Point" /> structure that represents the second point to connect.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF)">
      <summary>Draws a line connecting two <see cref="T:System.Drawing.PointF" /> structures.</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the line.</param>
      <param name="pt1">
        <see cref="T:System.Drawing.PointF" /> structure that represents the first point to connect.</param>
      <param name="pt2">
        <see cref="T:System.Drawing.PointF" /> structure that represents the second point to connect.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Draws a line connecting the two points specified by the coordinate pairs.</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the line.</param>
      <param name="x1">The x-coordinate of the first point.</param>
      <param name="y1">The y-coordinate of the first point.</param>
      <param name="x2">The x-coordinate of the second point.</param>
      <param name="y2">The y-coordinate of the second point.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
      <summary>Draws a line connecting the two points specified by the coordinate pairs.</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the line.</param>
      <param name="x1">The x-coordinate of the first point.</param>
      <param name="y1">The y-coordinate of the first point.</param>
      <param name="x2">The x-coordinate of the second point.</param>
      <param name="y2">The y-coordinate of the second point.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.Point[])">
      <summary>Draws a series of line segments that connect an array of <see cref="T:System.Drawing.Point" /> structures.</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the line segments.</param>
      <param name="points">Array of <see cref="T:System.Drawing.Point" /> structures that represent the points to connect.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is <see langword="null" />.  
-or-  
<paramref name="points" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.PointF[])">
      <summary>Draws a series of line segments that connect an array of <see cref="T:System.Drawing.PointF" /> structures.</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the line segments.</param>
      <param name="points">Array of <see cref="T:System.Drawing.PointF" /> structures that represent the points to connect.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is <see langword="null" />.  
-or-  
<paramref name="points" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)">
      <summary>Draws a <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the path.</param>
      <param name="path">
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> to draw.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is <see langword="null" />.  
-or-  
<paramref name="path" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>Draws a pie shape defined by an ellipse specified by a <see cref="T:System.Drawing.Rectangle" /> structure and two radial lines.</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the pie shape.</param>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> structure that represents the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
      <param name="startAngle">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</param>
      <param name="sweepAngle">Angle measured in degrees clockwise from the <paramref name="startAngle" /> parameter to the second side of the pie shape.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
      <summary>Draws a pie shape defined by an ellipse specified by a <see cref="T:System.Drawing.RectangleF" /> structure and two radial lines.</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the pie shape.</param>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" /> structure that represents the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
      <param name="startAngle">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</param>
      <param name="sweepAngle">Angle measured in degrees clockwise from the <paramref name="startAngle" /> parameter to the second side of the pie shape.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Draws a pie shape defined by an ellipse specified by a coordinate pair, a width, a height, and two radial lines.</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the pie shape.</param>
      <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
      <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
      <param name="width">Width of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
      <param name="height">Height of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
      <param name="startAngle">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</param>
      <param name="sweepAngle">Angle measured in degrees clockwise from the <paramref name="startAngle" /> parameter to the second side of the pie shape.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>Draws a pie shape defined by an ellipse specified by a coordinate pair, a width, a height, and two radial lines.</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the pie shape.</param>
      <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
      <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
      <param name="width">Width of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
      <param name="height">Height of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
      <param name="startAngle">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</param>
      <param name="sweepAngle">Angle measured in degrees clockwise from the <paramref name="startAngle" /> parameter to the second side of the pie shape.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.Point[])">
      <summary>Draws a polygon defined by an array of <see cref="T:System.Drawing.Point" /> structures.</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the polygon.</param>
      <param name="points">Array of <see cref="T:System.Drawing.Point" /> structures that represent the vertices of the polygon.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.PointF[])">
      <summary>Draws a polygon defined by an array of <see cref="T:System.Drawing.PointF" /> structures.</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the polygon.</param>
      <param name="points">Array of <see cref="T:System.Drawing.PointF" /> structures that represent the vertices of the polygon.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is <see langword="null" />.  
-or-  
<paramref name="points" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Drawing.Rectangle)">
      <summary>Draws a rectangle specified by a <see cref="T:System.Drawing.Rectangle" /> structure.</summary>
      <param name="pen">A <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the rectangle.</param>
      <param name="rect">A <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle to draw.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Draws a rectangle specified by a coordinate pair, a width, and a height.</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the rectangle.</param>
      <param name="x">The x-coordinate of the upper-left corner of the rectangle to draw.</param>
      <param name="y">The y-coordinate of the upper-left corner of the rectangle to draw.</param>
      <param name="width">Width of the rectangle to draw.</param>
      <param name="height">Height of the rectangle to draw.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
      <summary>Draws a rectangle specified by a coordinate pair, a width, and a height.</summary>
      <param name="pen">A <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the rectangle.</param>
      <param name="x">The x-coordinate of the upper-left corner of the rectangle to draw.</param>
      <param name="y">The y-coordinate of the upper-left corner of the rectangle to draw.</param>
      <param name="width">The width of the rectangle to draw.</param>
      <param name="height">The height of the rectangle to draw.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.Rectangle[])">
      <summary>Draws a series of rectangles specified by <see cref="T:System.Drawing.Rectangle" /> structures.</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the outlines of the rectangles.</param>
      <param name="rects">Array of <see cref="T:System.Drawing.Rectangle" /> structures that represent the rectangles to draw.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is <see langword="null" />.  
-or-  
<paramref name="rects" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rects" /> is a zero-length array.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.RectangleF[])">
      <summary>Draws a series of rectangles specified by <see cref="T:System.Drawing.RectangleF" /> structures.</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the outlines of the rectangles.</param>
      <param name="rects">Array of <see cref="T:System.Drawing.RectangleF" /> structures that represent the rectangles to draw.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is <see langword="null" />.  
-or-  
<paramref name="rects" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rects" /> is a zero-length array.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF)">
      <summary>Draws the specified text string at the specified location with the specified <see cref="T:System.Drawing.Brush" /> and <see cref="T:System.Drawing.Font" /> objects.</summary>
      <param name="s">String to draw.</param>
      <param name="font">
        <see cref="T:System.Drawing.Font" /> that defines the text format of the string.</param>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> that determines the color and texture of the drawn text.</param>
      <param name="point">
        <see cref="T:System.Drawing.PointF" /> structure that specifies the upper-left corner of the drawn text.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is <see langword="null" />.  
-or-  
<paramref name="s" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)">
      <summary>Draws the specified text string at the specified location with the specified <see cref="T:System.Drawing.Brush" /> and <see cref="T:System.Drawing.Font" /> objects using the formatting attributes of the specified <see cref="T:System.Drawing.StringFormat" />.</summary>
      <param name="s">String to draw.</param>
      <param name="font">
        <see cref="T:System.Drawing.Font" /> that defines the text format of the string.</param>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> that determines the color and texture of the drawn text.</param>
      <param name="point">
        <see cref="T:System.Drawing.PointF" /> structure that specifies the upper-left corner of the drawn text.</param>
      <param name="format">
        <see cref="T:System.Drawing.StringFormat" /> that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is <see langword="null" />.  
-or-  
<paramref name="s" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)">
      <summary>Draws the specified text string in the specified rectangle with the specified <see cref="T:System.Drawing.Brush" /> and <see cref="T:System.Drawing.Font" /> objects.</summary>
      <param name="s">String to draw.</param>
      <param name="font">
        <see cref="T:System.Drawing.Font" /> that defines the text format of the string.</param>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> that determines the color and texture of the drawn text.</param>
      <param name="layoutRectangle">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the location of the drawn text.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is <see langword="null" />.  
-or-  
<paramref name="s" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)">
      <summary>Draws the specified text string in the specified rectangle with the specified <see cref="T:System.Drawing.Brush" /> and <see cref="T:System.Drawing.Font" /> objects using the formatting attributes of the specified <see cref="T:System.Drawing.StringFormat" />.</summary>
      <param name="s">String to draw.</param>
      <param name="font">
        <see cref="T:System.Drawing.Font" /> that defines the text format of the string.</param>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> that determines the color and texture of the drawn text.</param>
      <param name="layoutRectangle">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the location of the drawn text.</param>
      <param name="format">
        <see cref="T:System.Drawing.StringFormat" /> that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is <see langword="null" />.  
-or-  
<paramref name="s" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single)">
      <summary>Draws the specified text string at the specified location with the specified <see cref="T:System.Drawing.Brush" /> and <see cref="T:System.Drawing.Font" /> objects.</summary>
      <param name="s">String to draw.</param>
      <param name="font">
        <see cref="T:System.Drawing.Font" /> that defines the text format of the string.</param>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> that determines the color and texture of the drawn text.</param>
      <param name="x">The x-coordinate of the upper-left corner of the drawn text.</param>
      <param name="y">The y-coordinate of the upper-left corner of the drawn text.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is <see langword="null" />.  
-or-  
<paramref name="s" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Drawing.StringFormat)">
      <summary>Draws the specified text string at the specified location with the specified <see cref="T:System.Drawing.Brush" /> and <see cref="T:System.Drawing.Font" /> objects using the formatting attributes of the specified <see cref="T:System.Drawing.StringFormat" />.</summary>
      <param name="s">String to draw.</param>
      <param name="font">
        <see cref="T:System.Drawing.Font" /> that defines the text format of the string.</param>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> that determines the color and texture of the drawn text.</param>
      <param name="x">The x-coordinate of the upper-left corner of the drawn text.</param>
      <param name="y">The y-coordinate of the upper-left corner of the drawn text.</param>
      <param name="format">
        <see cref="T:System.Drawing.StringFormat" /> that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is <see langword="null" />.  
-or-  
<paramref name="s" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)">
      <summary>Closes the current graphics container and restores the state of this <see cref="T:System.Drawing.Graphics" /> to the state saved by a call to the <see cref="M:System.Drawing.Graphics.BeginContainer" /> method.</summary>
      <param name="container">
        <see cref="T:System.Drawing.Drawing2D.GraphicsContainer" /> that represents the container this method restores.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display at a specified point.</summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</param>
      <param name="destPoint">
        <see cref="T:System.Drawing.Point" /> structure that specifies the location of the upper-left corner of the drawn metafile.</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display at a specified point.</summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</param>
      <param name="destPoint">
        <see cref="T:System.Drawing.Point" /> structure that specifies the location of the upper-left corner of the drawn metafile.</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</param>
      <param name="callbackData">Internal pointer that is required, but ignored. You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display at a specified point using specified image attributes.</summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</param>
      <param name="destPoint">
        <see cref="T:System.Drawing.Point" /> structure that specifies the location of the upper-left corner of the drawn metafile.</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</param>
      <param name="callbackData">Internal pointer that is required, but ignored. You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies image attribute information for the drawn image.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display at a specified point.</summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</param>
      <param name="destPoint">
        <see cref="T:System.Drawing.Point" /> structure that specifies the location of the upper-left corner of the drawn metafile.</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</param>
      <param name="srcUnit">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display at a specified point.</summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</param>
      <param name="destPoint">
        <see cref="T:System.Drawing.Point" /> structure that specifies the location of the upper-left corner of the drawn metafile.</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</param>
      <param name="srcUnit">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</param>
      <param name="callbackData">Internal pointer that is required, but ignored. You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display at a specified point using specified image attributes.</summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</param>
      <param name="destPoint">
        <see cref="T:System.Drawing.Point" /> structure that specifies the location of the upper-left corner of the drawn metafile.</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</param>
      <param name="unit">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</param>
      <param name="callbackData">Internal pointer that is required, but ignored. You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies image attribute information for the drawn image.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified parallelogram.</summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</param>
      <param name="destPoints">Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram that determines the size and location of the drawn metafile.</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified parallelogram.</summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</param>
      <param name="destPoints">Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram that determines the size and location of the drawn metafile.</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</param>
      <param name="callbackData">Internal pointer that is required, but ignored. You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified parallelogram using specified image attributes.</summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</param>
      <param name="destPoints">Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram that determines the size and location of the drawn metafile.</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</param>
      <param name="callbackData">Internal pointer that is required, but ignored. You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies image attribute information for the drawn image.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified parallelogram.</summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</param>
      <param name="destPoints">Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram that determines the size and location of the drawn metafile.</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</param>
      <param name="srcUnit">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified parallelogram.</summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</param>
      <param name="destPoints">Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram that determines the size and location of the drawn metafile.</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</param>
      <param name="srcUnit">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</param>
      <param name="callbackData">Internal pointer that is required, but ignored. You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified parallelogram using specified image attributes.</summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</param>
      <param name="destPoints">Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram that determines the size and location of the drawn metafile.</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</param>
      <param name="unit">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</param>
      <param name="callbackData">Internal pointer that is required, but ignored. You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies image attribute information for the drawn image.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display at a specified point.</summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</param>
      <param name="destPoint">
        <see cref="T:System.Drawing.PointF" /> structure that specifies the location of the upper-left corner of the drawn metafile.</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display at a specified point.</summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</param>
      <param name="destPoint">
        <see cref="T:System.Drawing.PointF" /> structure that specifies the location of the upper-left corner of the drawn metafile.</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</param>
      <param name="callbackData">Internal pointer that is required, but ignored. You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display at a specified point using specified image attributes.</summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</param>
      <param name="destPoint">
        <see cref="T:System.Drawing.PointF" /> structure that specifies the location of the upper-left corner of the drawn metafile.</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</param>
      <param name="callbackData">Internal pointer that is required, but ignored. You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies image attribute information for the drawn image.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display at a specified point.</summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</param>
      <param name="destPoint">
        <see cref="T:System.Drawing.PointF" /> structure that specifies the location of the upper-left corner of the drawn metafile.</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</param>
      <param name="srcUnit">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display at a specified point.</summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</param>
      <param name="destPoint">
        <see cref="T:System.Drawing.PointF" /> structure that specifies the location of the upper-left corner of the drawn metafile.</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</param>
      <param name="srcUnit">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</param>
      <param name="callbackData">Internal pointer that is required, but ignored. You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display at a specified point using specified image attributes.</summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</param>
      <param name="destPoint">
        <see cref="T:System.Drawing.PointF" /> structure that specifies the location of the upper-left corner of the drawn metafile.</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</param>
      <param name="unit">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</param>
      <param name="callbackData">Internal pointer that is required, but ignored. You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies image attribute information for the drawn image.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified parallelogram.</summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</param>
      <param name="destPoints">Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram that determines the size and location of the drawn metafile.</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified parallelogram.</summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</param>
      <param name="destPoints">Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram that determines the size and location of the drawn metafile.</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</param>
      <param name="callbackData">Internal pointer that is required, but ignored. You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified parallelogram using specified image attributes.</summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</param>
      <param name="destPoints">Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram that determines the size and location of the drawn metafile.</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</param>
      <param name="callbackData">Internal pointer that is required, but ignored. You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies image attribute information for the drawn image.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified parallelogram.</summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</param>
      <param name="destPoints">Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram that determines the size and location of the drawn metafile.</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> structures that specifies the portion of the metafile, relative to its upper-left corner, to draw.</param>
      <param name="srcUnit">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified parallelogram.</summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</param>
      <param name="destPoints">Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram that determines the size and location of the drawn metafile.</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</param>
      <param name="srcUnit">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</param>
      <param name="callbackData">Internal pointer that is required, but ignored. You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified parallelogram using specified image attributes.</summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</param>
      <param name="destPoints">Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram that determines the size and location of the drawn metafile.</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</param>
      <param name="unit">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</param>
      <param name="callbackData">Internal pointer that is required, but ignored. You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies image attribute information for the drawn image.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>Sends the records of the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified rectangle.</summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn metafile.</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>Sends the records of the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified rectangle.</summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn metafile.</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</param>
      <param name="callbackData">Internal pointer that is required, but ignored. You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>Sends the records of the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified rectangle using specified image attributes.</summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn metafile.</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</param>
      <param name="callbackData">Internal pointer that is required, but ignored. You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies image attribute information for the drawn image.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>Sends the records of a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified rectangle.</summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn metafile.</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</param>
      <param name="srcUnit">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>Sends the records of a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified rectangle.</summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn metafile.</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</param>
      <param name="srcUnit">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</param>
      <param name="callbackData">Internal pointer that is required, but ignored. You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>Sends the records of a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified rectangle using specified image attributes.</summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn metafile.</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</param>
      <param name="unit">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</param>
      <param name="callbackData">Internal pointer that is required, but ignored. You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies image attribute information for the drawn image.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>Sends the records of the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified rectangle.</summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</param>
      <param name="destRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the location and size of the drawn metafile.</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>Sends the records of the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified rectangle.</summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</param>
      <param name="destRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the location and size of the drawn metafile.</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</param>
      <param name="callbackData">Internal pointer that is required, but ignored. You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>Sends the records of the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified rectangle using specified image attributes.</summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</param>
      <param name="destRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the location and size of the drawn metafile.</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</param>
      <param name="callbackData">Internal pointer that is required, but ignored. You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies image attribute information for the drawn image.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>Sends the records of a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified rectangle.</summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</param>
      <param name="destRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the location and size of the drawn metafile.</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</param>
      <param name="srcUnit">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>Sends the records of a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified rectangle.</summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</param>
      <param name="destRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the location and size of the drawn metafile.</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</param>
      <param name="srcUnit">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</param>
      <param name="callbackData">Internal pointer that is required, but ignored. You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>Sends the records of a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified rectangle using specified image attributes.</summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</param>
      <param name="destRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the location and size of the drawn metafile.</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</param>
      <param name="unit">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</param>
      <param name="callbackData">Internal pointer that is required, but ignored. You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies image attribute information for the drawn image.</param>
    </member>
    <member name="T:System.Drawing.Graphics.EnumerateMetafileProc">
      <summary>Provides a callback method for the <see cref="Overload:System.Drawing.Graphics.EnumerateMetafile" /> method.</summary>
      <param name="recordType">Member of the <see cref="T:System.Drawing.Imaging.EmfPlusRecordType" /> enumeration that specifies the type of metafile record.</param>
      <param name="flags">Set of flags that specify attributes of the record.</param>
      <param name="dataSize">Number of bytes in the record data.</param>
      <param name="data">Pointer to a buffer that contains the record data.</param>
      <param name="callbackData">Not used.</param>
      <returns>Return <see langword="true" /> if you want to continue enumerating records; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.ExcludeClip(System.Drawing.Rectangle)">
      <summary>Updates the clip region of this <see cref="T:System.Drawing.Graphics" /> to exclude the area specified by a <see cref="T:System.Drawing.Rectangle" /> structure.</summary>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the rectangle to exclude from the clip region.</param>
    </member>
    <member name="M:System.Drawing.Graphics.ExcludeClip(System.Drawing.Region)">
      <summary>Updates the clip region of this <see cref="T:System.Drawing.Graphics" /> to exclude the area specified by a <see cref="T:System.Drawing.Region" />.</summary>
      <param name="region">
        <see cref="T:System.Drawing.Region" /> that specifies the region to exclude from the clip region.</param>
    </member>
    <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[])">
      <summary>Fills the interior of a closed cardinal spline curve defined by an array of <see cref="T:System.Drawing.Point" /> structures.</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</param>
      <param name="points">Array of <see cref="T:System.Drawing.Point" /> structures that define the spline.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is <see langword="null" />.  
-or-  
<paramref name="points" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
      <summary>Fills the interior of a closed cardinal spline curve defined by an array of <see cref="T:System.Drawing.Point" /> structures using the specified fill mode.</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</param>
      <param name="points">Array of <see cref="T:System.Drawing.Point" /> structures that define the spline.</param>
      <param name="fillmode">Member of the <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the curve is filled.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is <see langword="null" />.  
-or-  
<paramref name="points" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode,System.Single)">
      <summary>Fills the interior of a closed cardinal spline curve defined by an array of <see cref="T:System.Drawing.Point" /> structures using the specified fill mode and tension.</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</param>
      <param name="points">Array of <see cref="T:System.Drawing.Point" /> structures that define the spline.</param>
      <param name="fillmode">Member of the <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the curve is filled.</param>
      <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is <see langword="null" />.  
-or-  
<paramref name="points" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[])">
      <summary>Fills the interior of a closed cardinal spline curve defined by an array of <see cref="T:System.Drawing.PointF" /> structures.</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</param>
      <param name="points">Array of <see cref="T:System.Drawing.PointF" /> structures that define the spline.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is <see langword="null" />.  
-or-  
<paramref name="points" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
      <summary>Fills the interior of a closed cardinal spline curve defined by an array of <see cref="T:System.Drawing.PointF" /> structures using the specified fill mode.</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</param>
      <param name="points">Array of <see cref="T:System.Drawing.PointF" /> structures that define the spline.</param>
      <param name="fillmode">Member of the <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the curve is filled.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is <see langword="null" />.  
-or-  
<paramref name="points" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)">
      <summary>Fills the interior of a closed cardinal spline curve defined by an array of <see cref="T:System.Drawing.PointF" /> structures using the specified fill mode and tension.</summary>
      <param name="brush">A <see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</param>
      <param name="points">Array of <see cref="T:System.Drawing.PointF" /> structures that define the spline.</param>
      <param name="fillmode">Member of the <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the curve is filled.</param>
      <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is <see langword="null" />.  
-or-  
<paramref name="points" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.Rectangle)">
      <summary>Fills the interior of an ellipse defined by a bounding rectangle specified by a <see cref="T:System.Drawing.Rectangle" /> structure.</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</param>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> structure that represents the bounding rectangle that defines the ellipse.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.RectangleF)">
      <summary>Fills the interior of an ellipse defined by a bounding rectangle specified by a <see cref="T:System.Drawing.RectangleF" /> structure.</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</param>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" /> structure that represents the bounding rectangle that defines the ellipse.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Fills the interior of an ellipse defined by a bounding rectangle specified by a pair of coordinates, a width, and a height.</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</param>
      <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
      <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
      <param name="width">Width of the bounding rectangle that defines the ellipse.</param>
      <param name="height">Height of the bounding rectangle that defines the ellipse.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
      <summary>Fills the interior of an ellipse defined by a bounding rectangle specified by a pair of coordinates, a width, and a height.</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</param>
      <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
      <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
      <param name="width">Width of the bounding rectangle that defines the ellipse.</param>
      <param name="height">Height of the bounding rectangle that defines the ellipse.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)">
      <summary>Fills the interior of a <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</param>
      <param name="path">
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> that represents the path to fill.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is <see langword="null" />.  
-or-  
<paramref name="path" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>Fills the interior of a pie section defined by an ellipse specified by a <see cref="T:System.Drawing.RectangleF" /> structure and two radial lines.</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</param>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> structure that represents the bounding rectangle that defines the ellipse from which the pie section comes.</param>
      <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the first side of the pie section.</param>
      <param name="sweepAngle">Angle in degrees measured clockwise from the <paramref name="startAngle" /> parameter to the second side of the pie section.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Fills the interior of a pie section defined by an ellipse specified by a pair of coordinates, a width, a height, and two radial lines.</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</param>
      <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
      <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
      <param name="width">Width of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
      <param name="height">Height of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
      <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the first side of the pie section.</param>
      <param name="sweepAngle">Angle in degrees measured clockwise from the <paramref name="startAngle" /> parameter to the second side of the pie section.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>Fills the interior of a pie section defined by an ellipse specified by a pair of coordinates, a width, a height, and two radial lines.</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</param>
      <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
      <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
      <param name="width">Width of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
      <param name="height">Height of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
      <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the first side of the pie section.</param>
      <param name="sweepAngle">Angle in degrees measured clockwise from the <paramref name="startAngle" /> parameter to the second side of the pie section.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[])">
      <summary>Fills the interior of a polygon defined by an array of points specified by <see cref="T:System.Drawing.Point" /> structures.</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</param>
      <param name="points">Array of <see cref="T:System.Drawing.Point" /> structures that represent the vertices of the polygon to fill.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is <see langword="null" />.  
-or-  
<paramref name="points" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
      <summary>Fills the interior of a polygon defined by an array of points specified by <see cref="T:System.Drawing.Point" /> structures using the specified fill mode.</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</param>
      <param name="points">Array of <see cref="T:System.Drawing.Point" /> structures that represent the vertices of the polygon to fill.</param>
      <param name="fillMode">Member of the <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines the style of the fill.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is <see langword="null" />.  
-or-  
<paramref name="points" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])">
      <summary>Fills the interior of a polygon defined by an array of points specified by <see cref="T:System.Drawing.PointF" /> structures.</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</param>
      <param name="points">Array of <see cref="T:System.Drawing.PointF" /> structures that represent the vertices of the polygon to fill.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is <see langword="null" />.  
-or-  
<paramref name="points" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
      <summary>Fills the interior of a polygon defined by an array of points specified by <see cref="T:System.Drawing.PointF" /> structures using the specified fill mode.</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</param>
      <param name="points">Array of <see cref="T:System.Drawing.PointF" /> structures that represent the vertices of the polygon to fill.</param>
      <param name="fillMode">Member of the <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines the style of the fill.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is <see langword="null" />.  
-or-  
<paramref name="points" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.Rectangle)">
      <summary>Fills the interior of a rectangle specified by a <see cref="T:System.Drawing.Rectangle" /> structure.</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</param>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle to fill.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.RectangleF)">
      <summary>Fills the interior of a rectangle specified by a <see cref="T:System.Drawing.RectangleF" /> structure.</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</param>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle to fill.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Fills the interior of a rectangle specified by a pair of coordinates, a width, and a height.</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</param>
      <param name="x">The x-coordinate of the upper-left corner of the rectangle to fill.</param>
      <param name="y">The y-coordinate of the upper-left corner of the rectangle to fill.</param>
      <param name="width">Width of the rectangle to fill.</param>
      <param name="height">Height of the rectangle to fill.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
      <summary>Fills the interior of a rectangle specified by a pair of coordinates, a width, and a height.</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</param>
      <param name="x">The x-coordinate of the upper-left corner of the rectangle to fill.</param>
      <param name="y">The y-coordinate of the upper-left corner of the rectangle to fill.</param>
      <param name="width">Width of the rectangle to fill.</param>
      <param name="height">Height of the rectangle to fill.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.Rectangle[])">
      <summary>Fills the interiors of a series of rectangles specified by <see cref="T:System.Drawing.Rectangle" /> structures.</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</param>
      <param name="rects">Array of <see cref="T:System.Drawing.Rectangle" /> structures that represent the rectangles to fill.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is <see langword="null" />.  
-or-  
<paramref name="rects" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rects" /> is a zero-length array.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.RectangleF[])">
      <summary>Fills the interiors of a series of rectangles specified by <see cref="T:System.Drawing.RectangleF" /> structures.</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</param>
      <param name="rects">Array of <see cref="T:System.Drawing.RectangleF" /> structures that represent the rectangles to fill.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is <see langword="null" />.  
-or-  
<paramref name="rects" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Rects" /> is a zero-length array.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillRegion(System.Drawing.Brush,System.Drawing.Region)">
      <summary>Fills the interior of a <see cref="T:System.Drawing.Region" />.</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</param>
      <param name="region">
        <see cref="T:System.Drawing.Region" /> that represents the area to fill.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is <see langword="null" />.  
-or-  
<paramref name="region" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.Finalize">
      <summary>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</summary>
    </member>
    <member name="M:System.Drawing.Graphics.Flush">
      <summary>Forces execution of all pending graphics operations and returns immediately without waiting for the operations to finish.</summary>
    </member>
    <member name="M:System.Drawing.Graphics.Flush(System.Drawing.Drawing2D.FlushIntention)">
      <summary>Forces execution of all pending graphics operations with the method waiting or not waiting, as specified, to return before the operations finish.</summary>
      <param name="intention">Member of the <see cref="T:System.Drawing.Drawing2D.FlushIntention" /> enumeration that specifies whether the method returns immediately or waits for any existing operations to finish.</param>
    </member>
    <member name="M:System.Drawing.Graphics.FromHdc(System.IntPtr)">
      <summary>Creates a new <see cref="T:System.Drawing.Graphics" /> from the specified handle to a device context.</summary>
      <param name="hdc">Handle to a device context.</param>
      <returns>This method returns a new <see cref="T:System.Drawing.Graphics" /> for the specified device context.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.FromHdc(System.IntPtr,System.IntPtr)">
      <summary>Creates a new <see cref="T:System.Drawing.Graphics" /> from the specified handle to a device context and handle to a device.</summary>
      <param name="hdc">Handle to a device context.</param>
      <param name="hdevice">Handle to a device.</param>
      <returns>This method returns a new <see cref="T:System.Drawing.Graphics" /> for the specified device context and device.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.FromHdcInternal(System.IntPtr)">
      <summary>Returns a <see cref="T:System.Drawing.Graphics" /> for the specified device context.</summary>
      <param name="hdc">Handle to a device context.</param>
      <returns>A <see cref="T:System.Drawing.Graphics" /> for the specified device context.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.FromHwnd(System.IntPtr)">
      <summary>Creates a new <see cref="T:System.Drawing.Graphics" /> from the specified handle to a window.</summary>
      <param name="hwnd">Handle to a window.</param>
      <returns>This method returns a new <see cref="T:System.Drawing.Graphics" /> for the specified window handle.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.FromHwndInternal(System.IntPtr)">
      <summary>Creates a new <see cref="T:System.Drawing.Graphics" /> for the specified windows handle.</summary>
      <param name="hwnd">Handle to a window.</param>
      <returns>A <see cref="T:System.Drawing.Graphics" /> for the specified window handle.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.FromImage(System.Drawing.Image)">
      <summary>Creates a new <see cref="T:System.Drawing.Graphics" /> from the specified <see cref="T:System.Drawing.Image" />.</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> from which to create the new <see cref="T:System.Drawing.Graphics" />.</param>
      <returns>This method returns a new <see cref="T:System.Drawing.Graphics" /> for the specified <see cref="T:System.Drawing.Image" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> is <see langword="null" />.</exception>
      <exception cref="T:System.Exception">
        <paramref name="image" /> has an indexed pixel format or its format is undefined.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.GetContextInfo">
      <summary>Gets the cumulative graphics context.</summary>
      <returns>An <see cref="T:System.Object" /> representing the cumulative graphics context.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.GetHalftonePalette">
      <summary>Gets a handle to the current Windows halftone palette.</summary>
      <returns>Internal pointer that specifies the handle to the palette.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.GetHdc">
      <summary>Gets the handle to the device context associated with this <see cref="T:System.Drawing.Graphics" />.</summary>
      <returns>Handle to the device context associated with this <see cref="T:System.Drawing.Graphics" />.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.GetNearestColor(System.Drawing.Color)">
      <summary>Gets the nearest color to the specified <see cref="T:System.Drawing.Color" /> structure.</summary>
      <param name="color">
        <see cref="T:System.Drawing.Color" /> structure for which to find a match.</param>
      <returns>A <see cref="T:System.Drawing.Color" /> structure that represents the nearest color to the one specified with the <paramref name="color" /> parameter.</returns>
    </member>
    <member name="P:System.Drawing.Graphics.InterpolationMode">
      <summary>Gets or sets the interpolation mode associated with this <see cref="T:System.Drawing.Graphics" />.</summary>
      <returns>One of the <see cref="T:System.Drawing.Drawing2D.InterpolationMode" /> values.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.IntersectClip(System.Drawing.Rectangle)">
      <summary>Updates the clip region of this <see cref="T:System.Drawing.Graphics" /> to the intersection of the current clip region and the specified <see cref="T:System.Drawing.Rectangle" /> structure.</summary>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> structure to intersect with the current clip region.</param>
    </member>
    <member name="M:System.Drawing.Graphics.IntersectClip(System.Drawing.RectangleF)">
      <summary>Updates the clip region of this <see cref="T:System.Drawing.Graphics" /> to the intersection of the current clip region and the specified <see cref="T:System.Drawing.RectangleF" /> structure.</summary>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" /> structure to intersect with the current clip region.</param>
    </member>
    <member name="M:System.Drawing.Graphics.IntersectClip(System.Drawing.Region)">
      <summary>Updates the clip region of this <see cref="T:System.Drawing.Graphics" /> to the intersection of the current clip region and the specified <see cref="T:System.Drawing.Region" />.</summary>
      <param name="region">
        <see cref="T:System.Drawing.Region" /> to intersect with the current region.</param>
    </member>
    <member name="P:System.Drawing.Graphics.IsClipEmpty">
      <summary>Gets a value indicating whether the clipping region of this <see cref="T:System.Drawing.Graphics" /> is empty.</summary>
      <returns>
        <see langword="true" /> if the clipping region of this <see cref="T:System.Drawing.Graphics" /> is empty; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Drawing.Point)">
      <summary>Indicates whether the specified <see cref="T:System.Drawing.Point" /> structure is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />.</summary>
      <param name="point">
        <see cref="T:System.Drawing.Point" /> structure to test for visibility.</param>
      <returns>
        <see langword="true" /> if the point specified by the <paramref name="point" /> parameter is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Drawing.PointF)">
      <summary>Indicates whether the specified <see cref="T:System.Drawing.PointF" /> structure is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />.</summary>
      <param name="point">
        <see cref="T:System.Drawing.PointF" /> structure to test for visibility.</param>
      <returns>
        <see langword="true" /> if the point specified by the <paramref name="point" /> parameter is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Drawing.Rectangle)">
      <summary>Indicates whether the rectangle specified by a <see cref="T:System.Drawing.Rectangle" /> structure is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />.</summary>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> structure to test for visibility.</param>
      <returns>
        <see langword="true" /> if the rectangle specified by the <paramref name="rect" /> parameter is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Drawing.RectangleF)">
      <summary>Indicates whether the rectangle specified by a <see cref="T:System.Drawing.RectangleF" /> structure is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />.</summary>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" /> structure to test for visibility.</param>
      <returns>
        <see langword="true" /> if the rectangle specified by the <paramref name="rect" /> parameter is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Int32,System.Int32)">
      <summary>Indicates whether the point specified by a pair of coordinates is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />.</summary>
      <param name="x">The x-coordinate of the point to test for visibility.</param>
      <param name="y">The y-coordinate of the point to test for visibility.</param>
      <returns>
        <see langword="true" /> if the point defined by the <paramref name="x" /> and <paramref name="y" /> parameters is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Indicates whether the rectangle specified by a pair of coordinates, a width, and a height is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />.</summary>
      <param name="x">The x-coordinate of the upper-left corner of the rectangle to test for visibility.</param>
      <param name="y">The y-coordinate of the upper-left corner of the rectangle to test for visibility.</param>
      <param name="width">Width of the rectangle to test for visibility.</param>
      <param name="height">Height of the rectangle to test for visibility.</param>
      <returns>
        <see langword="true" /> if the rectangle defined by the <paramref name="x" />, <paramref name="y" />, <paramref name="width" />, and <paramref name="height" /> parameters is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Single,System.Single)">
      <summary>Indicates whether the point specified by a pair of coordinates is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />.</summary>
      <param name="x">The x-coordinate of the point to test for visibility.</param>
      <param name="y">The y-coordinate of the point to test for visibility.</param>
      <returns>
        <see langword="true" /> if the point defined by the <paramref name="x" /> and <paramref name="y" /> parameters is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Single,System.Single,System.Single,System.Single)">
      <summary>Indicates whether the rectangle specified by a pair of coordinates, a width, and a height is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />.</summary>
      <param name="x">The x-coordinate of the upper-left corner of the rectangle to test for visibility.</param>
      <param name="y">The y-coordinate of the upper-left corner of the rectangle to test for visibility.</param>
      <param name="width">Width of the rectangle to test for visibility.</param>
      <param name="height">Height of the rectangle to test for visibility.</param>
      <returns>
        <see langword="true" /> if the rectangle defined by the <paramref name="x" />, <paramref name="y" />, <paramref name="width" />, and <paramref name="height" /> parameters is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Drawing.Graphics.IsVisibleClipEmpty">
      <summary>Gets a value indicating whether the visible clipping region of this <see cref="T:System.Drawing.Graphics" /> is empty.</summary>
      <returns>
        <see langword="true" /> if the visible portion of the clipping region of this <see cref="T:System.Drawing.Graphics" /> is empty; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)">
      <summary>Gets an array of <see cref="T:System.Drawing.Region" /> objects, each of which bounds a range of character positions within the specified string.</summary>
      <param name="text">String to measure.</param>
      <param name="font">
        <see cref="T:System.Drawing.Font" /> that defines the text format of the string.</param>
      <param name="layoutRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the layout rectangle for the string.</param>
      <param name="stringFormat">
        <see cref="T:System.Drawing.StringFormat" /> that represents formatting information, such as line spacing, for the string.</param>
      <returns>This method returns an array of <see cref="T:System.Drawing.Region" /> objects, each of which bounds a range of character positions within the specified string.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font)">
      <summary>Measures the specified string when drawn with the specified <see cref="T:System.Drawing.Font" />.</summary>
      <param name="text">String to measure.</param>
      <param name="font">
        <see cref="T:System.Drawing.Font" /> that defines the text format of the string.</param>
      <returns>This method returns a <see cref="T:System.Drawing.SizeF" /> structure that represents the size, in the units specified by the <see cref="P:System.Drawing.Graphics.PageUnit" /> property, of the string specified by the <paramref name="text" /> parameter as drawn with the <paramref name="font" /> parameter.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="font" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.PointF,System.Drawing.StringFormat)">
      <summary>Measures the specified string when drawn with the specified <see cref="T:System.Drawing.Font" /> and formatted with the specified <see cref="T:System.Drawing.StringFormat" />.</summary>
      <param name="text">String to measure.</param>
      <param name="font">
        <see cref="T:System.Drawing.Font" /> defines the text format of the string.</param>
      <param name="origin">
        <see cref="T:System.Drawing.PointF" /> structure that represents the upper-left corner of the string.</param>
      <param name="stringFormat">
        <see cref="T:System.Drawing.StringFormat" /> that represents formatting information, such as line spacing, for the string.</param>
      <returns>This method returns a <see cref="T:System.Drawing.SizeF" /> structure that represents the size, in the units specified by the <see cref="P:System.Drawing.Graphics.PageUnit" /> property, of the string specified by the <paramref name="text" /> parameter as drawn with the <paramref name="font" /> parameter and the <paramref name="stringFormat" /> parameter.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="font" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF)">
      <summary>Measures the specified string when drawn with the specified <see cref="T:System.Drawing.Font" /> within the specified layout area.</summary>
      <param name="text">String to measure.</param>
      <param name="font">
        <see cref="T:System.Drawing.Font" /> defines the text format of the string.</param>
      <param name="layoutArea">
        <see cref="T:System.Drawing.SizeF" /> structure that specifies the maximum layout area for the text.</param>
      <returns>This method returns a <see cref="T:System.Drawing.SizeF" /> structure that represents the size, in the units specified by the <see cref="P:System.Drawing.Graphics.PageUnit" /> property, of the string specified by the <paramref name="text" /> parameter as drawn with the <paramref name="font" /> parameter.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="font" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)">
      <summary>Measures the specified string when drawn with the specified <see cref="T:System.Drawing.Font" /> and formatted with the specified <see cref="T:System.Drawing.StringFormat" />.</summary>
      <param name="text">String to measure.</param>
      <param name="font">
        <see cref="T:System.Drawing.Font" /> defines the text format of the string.</param>
      <param name="layoutArea">
        <see cref="T:System.Drawing.SizeF" /> structure that specifies the maximum layout area for the text.</param>
      <param name="stringFormat">
        <see cref="T:System.Drawing.StringFormat" /> that represents formatting information, such as line spacing, for the string.</param>
      <returns>This method returns a <see cref="T:System.Drawing.SizeF" /> structure that represents the size, in the units specified by the <see cref="P:System.Drawing.Graphics.PageUnit" /> property, of the string specified in the <paramref name="text" /> parameter as drawn with the <paramref name="font" /> parameter and the <paramref name="stringFormat" /> parameter.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="font" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)">
      <summary>Measures the specified string when drawn with the specified <see cref="T:System.Drawing.Font" /> and formatted with the specified <see cref="T:System.Drawing.StringFormat" />.</summary>
      <param name="text">String to measure.</param>
      <param name="font">
        <see cref="T:System.Drawing.Font" /> that defines the text format of the string.</param>
      <param name="layoutArea">
        <see cref="T:System.Drawing.SizeF" /> structure that specifies the maximum layout area for the text.</param>
      <param name="stringFormat">
        <see cref="T:System.Drawing.StringFormat" /> that represents formatting information, such as line spacing, for the string.</param>
      <param name="charactersFitted">Number of characters in the string.</param>
      <param name="linesFilled">Number of text lines in the string.</param>
      <returns>This method returns a <see cref="T:System.Drawing.SizeF" /> structure that represents the size of the string, in the units specified by the <see cref="P:System.Drawing.Graphics.PageUnit" /> property, of the <paramref name="text" /> parameter as drawn with the <paramref name="font" /> parameter and the <paramref name="stringFormat" /> parameter.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="font" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32)">
      <summary>Measures the specified string when drawn with the specified <see cref="T:System.Drawing.Font" />.</summary>
      <param name="text">String to measure.</param>
      <param name="font">
        <see cref="T:System.Drawing.Font" /> that defines the format of the string.</param>
      <param name="width">Maximum width of the string in pixels.</param>
      <returns>This method returns a <see cref="T:System.Drawing.SizeF" /> structure that represents the size, in the units specified by the <see cref="P:System.Drawing.Graphics.PageUnit" /> property, of the string specified in the <paramref name="text" /> parameter as drawn with the <paramref name="font" /> parameter.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="font" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)">
      <summary>Measures the specified string when drawn with the specified <see cref="T:System.Drawing.Font" /> and formatted with the specified <see cref="T:System.Drawing.StringFormat" />.</summary>
      <param name="text">String to measure.</param>
      <param name="font">
        <see cref="T:System.Drawing.Font" /> that defines the text format of the string.</param>
      <param name="width">Maximum width of the string.</param>
      <param name="format">
        <see cref="T:System.Drawing.StringFormat" /> that represents formatting information, such as line spacing, for the string.</param>
      <returns>This method returns a <see cref="T:System.Drawing.SizeF" /> structure that represents the size, in the units specified by the <see cref="P:System.Drawing.Graphics.PageUnit" /> property, of the string specified in the <paramref name="text" /> parameter as drawn with the <paramref name="font" /> parameter and the <paramref name="stringFormat" /> parameter.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="font" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
      <summary>Multiplies the world transformation of this <see cref="T:System.Drawing.Graphics" /> and specified the <see cref="T:System.Drawing.Drawing2D.Matrix" />.</summary>
      <param name="matrix">4x4 <see cref="T:System.Drawing.Drawing2D.Matrix" /> that multiplies the world transformation.</param>
    </member>
    <member name="M:System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>Multiplies the world transformation of this <see cref="T:System.Drawing.Graphics" /> and specified the <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the specified order.</summary>
      <param name="matrix">4x4 <see cref="T:System.Drawing.Drawing2D.Matrix" /> that multiplies the world transformation.</param>
      <param name="order">Member of the <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that determines the order of the multiplication.</param>
    </member>
    <member name="P:System.Drawing.Graphics.PageScale">
      <summary>Gets or sets the scaling between world units and page units for this <see cref="T:System.Drawing.Graphics" />.</summary>
      <returns>This property specifies a value for the scaling between world units and page units for this <see cref="T:System.Drawing.Graphics" />.</returns>
    </member>
    <member name="P:System.Drawing.Graphics.PageUnit">
      <summary>Gets or sets the unit of measure used for page coordinates in this <see cref="T:System.Drawing.Graphics" />.</summary>
      <returns>One of the <see cref="T:System.Drawing.GraphicsUnit" /> values other than <see cref="F:System.Drawing.GraphicsUnit.World" />.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <see cref="P:System.Drawing.Graphics.PageUnit" /> is set to <see cref="F:System.Drawing.GraphicsUnit.World" />, which is not a physical unit.</exception>
    </member>
    <member name="P:System.Drawing.Graphics.PixelOffsetMode">
      <summary>Gets or sets a value specifying how pixels are offset during rendering of this <see cref="T:System.Drawing.Graphics" />.</summary>
      <returns>This property specifies a member of the <see cref="T:System.Drawing.Drawing2D.PixelOffsetMode" /> enumeration</returns>
    </member>
    <member name="M:System.Drawing.Graphics.ReleaseHdc">
      <summary>Releases a device context handle obtained by a previous call to the <see cref="M:System.Drawing.Graphics.GetHdc" /> method of this <see cref="T:System.Drawing.Graphics" />.</summary>
    </member>
    <member name="M:System.Drawing.Graphics.ReleaseHdc(System.IntPtr)">
      <summary>Releases a device context handle obtained by a previous call to the <see cref="M:System.Drawing.Graphics.GetHdc" /> method of this <see cref="T:System.Drawing.Graphics" />.</summary>
      <param name="hdc">Handle to a device context obtained by a previous call to the <see cref="M:System.Drawing.Graphics.GetHdc" /> method of this <see cref="T:System.Drawing.Graphics" />.</param>
    </member>
    <member name="M:System.Drawing.Graphics.ReleaseHdcInternal(System.IntPtr)">
      <summary>Releases a handle to a device context.</summary>
      <param name="hdc">Handle to a device context.</param>
    </member>
    <member name="P:System.Drawing.Graphics.RenderingOrigin">
      <summary>Gets or sets the rendering origin of this <see cref="T:System.Drawing.Graphics" /> for dithering and for hatch brushes.</summary>
      <returns>A <see cref="T:System.Drawing.Point" /> structure that represents the dither origin for 8-bits-per-pixel and 16-bits-per-pixel dithering and is also used to set the origin for hatch brushes.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.ResetClip">
      <summary>Resets the clip region of this <see cref="T:System.Drawing.Graphics" /> to an infinite region.</summary>
    </member>
    <member name="M:System.Drawing.Graphics.ResetTransform">
      <summary>Resets the world transformation matrix of this <see cref="T:System.Drawing.Graphics" /> to the identity matrix.</summary>
    </member>
    <member name="M:System.Drawing.Graphics.Restore(System.Drawing.Drawing2D.GraphicsState)">
      <summary>Restores the state of this <see cref="T:System.Drawing.Graphics" /> to the state represented by a <see cref="T:System.Drawing.Drawing2D.GraphicsState" />.</summary>
      <param name="gstate">
        <see cref="T:System.Drawing.Drawing2D.GraphicsState" /> that represents the state to which to restore this <see cref="T:System.Drawing.Graphics" />.</param>
    </member>
    <member name="M:System.Drawing.Graphics.RotateTransform(System.Single)">
      <summary>Applies the specified rotation to the transformation matrix of this <see cref="T:System.Drawing.Graphics" />.</summary>
      <param name="angle">Angle of rotation in degrees.</param>
    </member>
    <member name="M:System.Drawing.Graphics.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>Applies the specified rotation to the transformation matrix of this <see cref="T:System.Drawing.Graphics" /> in the specified order.</summary>
      <param name="angle">Angle of rotation in degrees.</param>
      <param name="order">Member of the <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that specifies whether the rotation is appended or prepended to the matrix transformation.</param>
    </member>
    <member name="M:System.Drawing.Graphics.Save">
      <summary>Saves the current state of this <see cref="T:System.Drawing.Graphics" /> and identifies the saved state with a <see cref="T:System.Drawing.Drawing2D.GraphicsState" />.</summary>
      <returns>This method returns a <see cref="T:System.Drawing.Drawing2D.GraphicsState" /> that represents the saved state of this <see cref="T:System.Drawing.Graphics" />.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.ScaleTransform(System.Single,System.Single)">
      <summary>Applies the specified scaling operation to the transformation matrix of this <see cref="T:System.Drawing.Graphics" /> by prepending it to the object's transformation matrix.</summary>
      <param name="sx">Scale factor in the x direction.</param>
      <param name="sy">Scale factor in the y direction.</param>
    </member>
    <member name="M:System.Drawing.Graphics.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>Applies the specified scaling operation to the transformation matrix of this <see cref="T:System.Drawing.Graphics" /> in the specified order.</summary>
      <param name="sx">Scale factor in the x direction.</param>
      <param name="sy">Scale factor in the y direction.</param>
      <param name="order">Member of the <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that specifies whether the scaling operation is prepended or appended to the transformation matrix.</param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> to the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      <param name="path">
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> that represents the new clip region.</param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.CombineMode)">
      <summary>Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> to the result of the specified operation combining the current clip region and the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      <param name="path">
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> to combine.</param>
      <param name="combineMode">Member of the <see cref="T:System.Drawing.Drawing2D.CombineMode" /> enumeration that specifies the combining operation to use.</param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Graphics)">
      <summary>Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> to the <see langword="Clip" /> property of the specified <see cref="T:System.Drawing.Graphics" />.</summary>
      <param name="g">
        <see cref="T:System.Drawing.Graphics" /> from which to take the new clip region.</param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Graphics,System.Drawing.Drawing2D.CombineMode)">
      <summary>Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> to the result of the specified combining operation of the current clip region and the <see cref="P:System.Drawing.Graphics.Clip" /> property of the specified <see cref="T:System.Drawing.Graphics" />.</summary>
      <param name="g">
        <see cref="T:System.Drawing.Graphics" /> that specifies the clip region to combine.</param>
      <param name="combineMode">Member of the <see cref="T:System.Drawing.Drawing2D.CombineMode" /> enumeration that specifies the combining operation to use.</param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Rectangle)">
      <summary>Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> to the rectangle specified by a <see cref="T:System.Drawing.Rectangle" /> structure.</summary>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> structure that represents the new clip region.</param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Rectangle,System.Drawing.Drawing2D.CombineMode)">
      <summary>Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> to the result of the specified operation combining the current clip region and the rectangle specified by a <see cref="T:System.Drawing.Rectangle" /> structure.</summary>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> structure to combine.</param>
      <param name="combineMode">Member of the <see cref="T:System.Drawing.Drawing2D.CombineMode" /> enumeration that specifies the combining operation to use.</param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.RectangleF)">
      <summary>Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> to the rectangle specified by a <see cref="T:System.Drawing.RectangleF" /> structure.</summary>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" /> structure that represents the new clip region.</param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.RectangleF,System.Drawing.Drawing2D.CombineMode)">
      <summary>Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> to the result of the specified operation combining the current clip region and the rectangle specified by a <see cref="T:System.Drawing.RectangleF" /> structure.</summary>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" /> structure to combine.</param>
      <param name="combineMode">Member of the <see cref="T:System.Drawing.Drawing2D.CombineMode" /> enumeration that specifies the combining operation to use.</param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Region,System.Drawing.Drawing2D.CombineMode)">
      <summary>Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> to the result of the specified operation combining the current clip region and the specified <see cref="T:System.Drawing.Region" />.</summary>
      <param name="region">
        <see cref="T:System.Drawing.Region" /> to combine.</param>
      <param name="combineMode">Member from the <see cref="T:System.Drawing.Drawing2D.CombineMode" /> enumeration that specifies the combining operation to use.</param>
    </member>
    <member name="P:System.Drawing.Graphics.SmoothingMode">
      <summary>Gets or sets the rendering quality for this <see cref="T:System.Drawing.Graphics" />.</summary>
      <returns>One of the <see cref="T:System.Drawing.Drawing2D.SmoothingMode" /> values.</returns>
    </member>
    <member name="P:System.Drawing.Graphics.TextContrast">
      <summary>Gets or sets the gamma correction value for rendering text.</summary>
      <returns>The gamma correction value used for rendering antialiased and ClearType text.</returns>
    </member>
    <member name="P:System.Drawing.Graphics.TextRenderingHint">
      <summary>Gets or sets the rendering mode for text associated with this <see cref="T:System.Drawing.Graphics" />.</summary>
      <returns>One of the <see cref="T:System.Drawing.Text.TextRenderingHint" /> values.</returns>
    </member>
    <member name="P:System.Drawing.Graphics.Transform">
      <summary>Gets or sets a copy of the geometric world transformation for this <see cref="T:System.Drawing.Graphics" />.</summary>
      <returns>A copy of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> that represents the geometric world transformation for this <see cref="T:System.Drawing.Graphics" />.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Point[])">
      <summary>Transforms an array of points from one coordinate space to another using the current world and page transformations of this <see cref="T:System.Drawing.Graphics" />.</summary>
      <param name="destSpace">Member of the <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> enumeration that specifies the destination coordinate space.</param>
      <param name="srcSpace">Member of the <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> enumeration that specifies the source coordinate space.</param>
      <param name="pts">Array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transformation.</param>
    </member>
    <member name="M:System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.PointF[])">
      <summary>Transforms an array of points from one coordinate space to another using the current world and page transformations of this <see cref="T:System.Drawing.Graphics" />.</summary>
      <param name="destSpace">Member of the <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> enumeration that specifies the destination coordinate space.</param>
      <param name="srcSpace">Member of the <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> enumeration that specifies the source coordinate space.</param>
      <param name="pts">Array of <see cref="T:System.Drawing.PointF" /> structures that represent the points to transform.</param>
    </member>
    <member name="M:System.Drawing.Graphics.TranslateClip(System.Int32,System.Int32)">
      <summary>Translates the clipping region of this <see cref="T:System.Drawing.Graphics" /> by specified amounts in the horizontal and vertical directions.</summary>
      <param name="dx">The x-coordinate of the translation.</param>
      <param name="dy">The y-coordinate of the translation.</param>
    </member>
    <member name="M:System.Drawing.Graphics.TranslateClip(System.Single,System.Single)">
      <summary>Translates the clipping region of this <see cref="T:System.Drawing.Graphics" /> by specified amounts in the horizontal and vertical directions.</summary>
      <param name="dx">The x-coordinate of the translation.</param>
      <param name="dy">The y-coordinate of the translation.</param>
    </member>
    <member name="M:System.Drawing.Graphics.TranslateTransform(System.Single,System.Single)">
      <summary>Changes the origin of the coordinate system by prepending the specified translation to the transformation matrix of this <see cref="T:System.Drawing.Graphics" />.</summary>
      <param name="dx">The x-coordinate of the translation.</param>
      <param name="dy">The y-coordinate of the translation.</param>
    </member>
    <member name="M:System.Drawing.Graphics.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>Changes the origin of the coordinate system by applying the specified translation to the transformation matrix of this <see cref="T:System.Drawing.Graphics" /> in the specified order.</summary>
      <param name="dx">The x-coordinate of the translation.</param>
      <param name="dy">The y-coordinate of the translation.</param>
      <param name="order">Member of the <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that specifies whether the translation is prepended or appended to the transformation matrix.</param>
    </member>
    <member name="P:System.Drawing.Graphics.VisibleClipBounds">
      <summary>Gets the bounding rectangle of the visible clipping region of this <see cref="T:System.Drawing.Graphics" />.</summary>
      <returns>A <see cref="T:System.Drawing.RectangleF" /> structure that represents a bounding rectangle for the visible clipping region of this <see cref="T:System.Drawing.Graphics" />.</returns>
    </member>
    <member name="T:System.Drawing.GraphicsUnit">
      <summary>Specifies the unit of measure for the given data.</summary>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.Display">
      <summary>Specifies the unit of measure of the display device. Typically pixels for video displays, and 1/100 inch for printers.</summary>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.Document">
      <summary>Specifies the document unit (1/300 inch) as the unit of measure.</summary>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.Inch">
      <summary>Specifies the inch as the unit of measure.</summary>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.Millimeter">
      <summary>Specifies the millimeter as the unit of measure.</summary>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.Pixel">
      <summary>Specifies a device pixel as the unit of measure.</summary>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.Point">
      <summary>Specifies a printer's point (1/72 inch) as the unit of measure.</summary>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.World">
      <summary>Specifies the world coordinate system unit as the unit of measure.</summary>
    </member>
    <member name="T:System.Drawing.Icon">
      <summary>Represents a Windows icon, which is a small bitmap image that is used to represent an object. Icons can be thought of as transparent bitmaps, although their size is determined by the system.</summary>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.Drawing.Icon,System.Drawing.Size)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Icon" /> class and attempts to find a version of the icon that matches the requested size.</summary>
      <param name="original">The <see cref="T:System.Drawing.Icon" /> from which to load the newly sized icon.</param>
      <param name="size">A <see cref="T:System.Drawing.Size" /> structure that specifies the height and width of the new <see cref="T:System.Drawing.Icon" />.</param>
      <exception cref="T:System.ArgumentException">The <paramref name="original" /> parameter is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.Drawing.Icon,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Icon" /> class and attempts to find a version of the icon that matches the requested size.</summary>
      <param name="original">The icon to load the different size from.</param>
      <param name="width">The width of the new icon.</param>
      <param name="height">The height of the new icon.</param>
      <exception cref="T:System.ArgumentException">The <paramref name="original" /> parameter is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.IO.Stream)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Icon" /> class from the specified data stream.</summary>
      <param name="stream">The data stream from which to load the <see cref="T:System.Drawing.Icon" />.</param>
      <exception cref="T:System.ArgumentException">The <paramref name="stream" /> parameter is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.IO.Stream,System.Drawing.Size)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Icon" /> class of the specified size from the specified stream.</summary>
      <param name="stream">The stream that contains the icon data.</param>
      <param name="size">The desired size of the icon.</param>
      <exception cref="T:System.ArgumentException">The <paramref name="stream" /> is <see langword="null" /> or does not contain image data.</exception>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.IO.Stream,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Icon" /> class from the specified data stream and with the specified width and height.</summary>
      <param name="stream">The data stream from which to load the icon.</param>
      <param name="width">The width, in pixels, of the icon.</param>
      <param name="height">The height, in pixels, of the icon.</param>
      <exception cref="T:System.ArgumentException">The <paramref name="stream" /> parameter is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Icon" /> class from the specified file name.</summary>
      <param name="fileName">The file to load the <see cref="T:System.Drawing.Icon" /> from.</param>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.String,System.Drawing.Size)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Icon" /> class of the specified size from the specified file.</summary>
      <param name="fileName">The name and path to the file that contains the icon data.</param>
      <param name="size">The desired size of the icon.</param>
      <exception cref="T:System.ArgumentException">The <paramref name="string" /> is <see langword="null" /> or does not contain image data.</exception>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.String,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Icon" /> class with the specified width and height from the specified file.</summary>
      <param name="fileName">The name and path to the file that contains the <see cref="T:System.Drawing.Icon" /> data.</param>
      <param name="width">The desired width of the <see cref="T:System.Drawing.Icon" />.</param>
      <param name="height">The desired height of the <see cref="T:System.Drawing.Icon" />.</param>
      <exception cref="T:System.ArgumentException">The <paramref name="string" /> is <see langword="null" /> or does not contain image data.</exception>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.Type,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Icon" /> class from a resource in the specified assembly.</summary>
      <param name="type">A <see cref="T:System.Type" /> that specifies the assembly in which to look for the resource.</param>
      <param name="resource">The resource name to load.</param>
      <exception cref="T:System.ArgumentException">An icon specified by <paramref name="resource" /> cannot be found in the assembly that contains the specified <paramref name="type" />.</exception>
    </member>
    <member name="M:System.Drawing.Icon.Clone">
      <summary>Clones the <see cref="T:System.Drawing.Icon" />, creating a duplicate image.</summary>
      <returns>An object that can be cast to an <see cref="T:System.Drawing.Icon" />.</returns>
    </member>
    <member name="M:System.Drawing.Icon.Dispose">
      <summary>Releases all resources used by this <see cref="T:System.Drawing.Icon" />.</summary>
    </member>
    <member name="M:System.Drawing.Icon.ExtractAssociatedIcon(System.String)">
      <summary>Returns an icon representation of an image that is contained in the specified file.</summary>
      <param name="filePath">The path to the file that contains an image.</param>
      <returns>The <see cref="T:System.Drawing.Icon" /> representation of the image that is contained in the specified file.</returns>
      <exception cref="T:System.ArgumentException">The <paramref name="filePath" /> does not indicate a valid file.  
 -or-  
 The <paramref name="filePath" /> indicates a Universal Naming Convention (UNC) path.</exception>
    </member>
    <member name="M:System.Drawing.Icon.Finalize">
      <summary>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</summary>
    </member>
    <member name="M:System.Drawing.Icon.FromHandle(System.IntPtr)">
      <summary>Creates a GDI+ <see cref="T:System.Drawing.Icon" /> from the specified Windows handle to an icon (<see langword="HICON" />).</summary>
      <param name="handle">A Windows handle to an icon.</param>
      <returns>The <see cref="T:System.Drawing.Icon" /> this method creates.</returns>
    </member>
    <member name="P:System.Drawing.Icon.Handle">
      <summary>Gets the Windows handle for this <see cref="T:System.Drawing.Icon" />. This is not a copy of the handle; do not free it.</summary>
      <returns>The Windows handle for the icon.</returns>
    </member>
    <member name="P:System.Drawing.Icon.Height">
      <summary>Gets the height of this <see cref="T:System.Drawing.Icon" />.</summary>
      <returns>The height of this <see cref="T:System.Drawing.Icon" />.</returns>
    </member>
    <member name="M:System.Drawing.Icon.Save(System.IO.Stream)">
      <summary>Saves this <see cref="T:System.Drawing.Icon" /> to the specified output <see cref="T:System.IO.Stream" />.</summary>
      <param name="outputStream">The <see cref="T:System.IO.Stream" /> to save to.</param>
    </member>
    <member name="P:System.Drawing.Icon.Size">
      <summary>Gets the size of this <see cref="T:System.Drawing.Icon" />.</summary>
      <returns>A <see cref="T:System.Drawing.Size" /> structure that specifies the width and height of this <see cref="T:System.Drawing.Icon" />.</returns>
    </member>
    <member name="M:System.Drawing.Icon.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data that is required to serialize the target object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
    </member>
    <member name="M:System.Drawing.Icon.ToBitmap">
      <summary>Converts this <see cref="T:System.Drawing.Icon" /> to a GDI+ <see cref="T:System.Drawing.Bitmap" />.</summary>
      <returns>A <see cref="T:System.Drawing.Bitmap" /> that represents the converted <see cref="T:System.Drawing.Icon" />.</returns>
    </member>
    <member name="M:System.Drawing.Icon.ToString">
      <summary>Gets a human-readable string that describes the <see cref="T:System.Drawing.Icon" />.</summary>
      <returns>A string that describes the <see cref="T:System.Drawing.Icon" />.</returns>
    </member>
    <member name="P:System.Drawing.Icon.Width">
      <summary>Gets the width of this <see cref="T:System.Drawing.Icon" />.</summary>
      <returns>The width of this <see cref="T:System.Drawing.Icon" />.</returns>
    </member>
    <member name="T:System.Drawing.IDeviceContext">
      <summary>Defines methods for obtaining and releasing an existing handle to a Windows device context.</summary>
    </member>
    <member name="M:System.Drawing.IDeviceContext.GetHdc">
      <summary>Returns the handle to a Windows device context.</summary>
      <returns>An <see cref="T:System.IntPtr" /> representing the handle of a device context.</returns>
    </member>
    <member name="M:System.Drawing.IDeviceContext.ReleaseHdc">
      <summary>Releases the handle of a Windows device context.</summary>
    </member>
    <member name="T:System.Drawing.Image">
      <summary>An abstract base class that provides functionality for the <see cref="T:System.Drawing.Bitmap" /> and <see cref="T:System.Drawing.Imaging.Metafile" /> descended classes.</summary>
    </member>
    <member name="M:System.Drawing.Image.Clone">
      <summary>Creates an exact copy of this <see cref="T:System.Drawing.Image" />.</summary>
      <returns>The <see cref="T:System.Drawing.Image" /> this method creates, cast as an object.</returns>
    </member>
    <member name="M:System.Drawing.Image.Dispose">
      <summary>Releases all resources used by this <see cref="T:System.Drawing.Image" />.</summary>
    </member>
    <member name="M:System.Drawing.Image.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Drawing.Image" /> and optionally releases the managed resources.</summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Drawing.Image.Finalize">
      <summary>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</summary>
    </member>
    <member name="P:System.Drawing.Image.Flags">
      <summary>Gets attribute flags for the pixel data of this <see cref="T:System.Drawing.Image" />.</summary>
      <returns>The integer representing a bitwise combination of <see cref="T:System.Drawing.Imaging.ImageFlags" /> for this <see cref="T:System.Drawing.Image" />.</returns>
    </member>
    <member name="P:System.Drawing.Image.FrameDimensionsList">
      <summary>Gets an array of GUIDs that represent the dimensions of frames within this <see cref="T:System.Drawing.Image" />.</summary>
      <returns>An array of GUIDs that specify the dimensions of frames within this <see cref="T:System.Drawing.Image" /> from most significant to least significant.</returns>
    </member>
    <member name="M:System.Drawing.Image.FromFile(System.String)">
      <summary>Creates an <see cref="T:System.Drawing.Image" /> from the specified file.</summary>
      <param name="filename">A string that contains the name of the file from which to create the <see cref="T:System.Drawing.Image" />.</param>
      <returns>The <see cref="T:System.Drawing.Image" /> this method creates.</returns>
      <exception cref="T:System.OutOfMemoryException">The file does not have a valid image format.  
 -or-  
 GDI+ does not support the pixel format of the file.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The specified file does not exist.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="filename" /> is a <see cref="T:System.Uri" />.</exception>
    </member>
    <member name="M:System.Drawing.Image.FromFile(System.String,System.Boolean)">
      <summary>Creates an <see cref="T:System.Drawing.Image" /> from the specified file using embedded color management information in that file.</summary>
      <param name="filename">A string that contains the name of the file from which to create the <see cref="T:System.Drawing.Image" />.</param>
      <param name="useEmbeddedColorManagement">Set to <see langword="true" /> to use color management information embedded in the image file; otherwise, <see langword="false" />.</param>
      <returns>The <see cref="T:System.Drawing.Image" /> this method creates.</returns>
      <exception cref="T:System.OutOfMemoryException">The file does not have a valid image format.  
 -or-  
 GDI+ does not support the pixel format of the file.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The specified file does not exist.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="filename" /> is a <see cref="T:System.Uri" />.</exception>
    </member>
    <member name="M:System.Drawing.Image.FromHbitmap(System.IntPtr)">
      <summary>Creates a <see cref="T:System.Drawing.Bitmap" /> from a handle to a GDI bitmap.</summary>
      <param name="hbitmap">The GDI bitmap handle from which to create the <see cref="T:System.Drawing.Bitmap" />.</param>
      <returns>The <see cref="T:System.Drawing.Bitmap" /> this method creates.</returns>
    </member>
    <member name="M:System.Drawing.Image.FromHbitmap(System.IntPtr,System.IntPtr)">
      <summary>Creates a <see cref="T:System.Drawing.Bitmap" /> from a handle to a GDI bitmap and a handle to a GDI palette.</summary>
      <param name="hbitmap">The GDI bitmap handle from which to create the <see cref="T:System.Drawing.Bitmap" />.</param>
      <param name="hpalette">A handle to a GDI palette used to define the bitmap colors if the bitmap specified in the <paramref name="hbitmap" /> parameter is not a device-independent bitmap (DIB).</param>
      <returns>The <see cref="T:System.Drawing.Bitmap" /> this method creates.</returns>
    </member>
    <member name="M:System.Drawing.Image.FromStream(System.IO.Stream)">
      <summary>Creates an <see cref="T:System.Drawing.Image" /> from the specified data stream.</summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> that contains the data for this <see cref="T:System.Drawing.Image" />.</param>
      <returns>The <see cref="T:System.Drawing.Image" /> this method creates.</returns>
      <exception cref="T:System.ArgumentException">The stream does not have a valid image format  
 -or-  
 <paramref name="stream" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean)">
      <summary>Creates an <see cref="T:System.Drawing.Image" /> from the specified data stream, optionally using embedded color management information in that stream.</summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> that contains the data for this <see cref="T:System.Drawing.Image" />.</param>
      <param name="useEmbeddedColorManagement">
        <see langword="true" /> to use color management information embedded in the data stream; otherwise, <see langword="false" />.</param>
      <returns>The <see cref="T:System.Drawing.Image" /> this method creates.</returns>
      <exception cref="T:System.ArgumentException">The stream does not have a valid image format  
 -or-  
 <paramref name="stream" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean,System.Boolean)">
      <summary>Creates an <see cref="T:System.Drawing.Image" /> from the specified data stream, optionally using embedded color management information and validating the image data.</summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> that contains the data for this <see cref="T:System.Drawing.Image" />.</param>
      <param name="useEmbeddedColorManagement">
        <see langword="true" /> to use color management information embedded in the data stream; otherwise, <see langword="false" />.</param>
      <param name="validateImageData">
        <see langword="true" /> to validate the image data; otherwise, <see langword="false" />.</param>
      <returns>The <see cref="T:System.Drawing.Image" /> this method creates.</returns>
      <exception cref="T:System.ArgumentException">The stream does not have a valid image format.</exception>
    </member>
    <member name="M:System.Drawing.Image.GetBounds(System.Drawing.GraphicsUnit@)">
      <summary>Gets the bounds of the image in the specified unit.</summary>
      <param name="pageUnit">One of the <see cref="T:System.Drawing.GraphicsUnit" /> values indicating the unit of measure for the bounding rectangle.</param>
      <returns>The <see cref="T:System.Drawing.RectangleF" /> that represents the bounds of the image, in the specified unit.</returns>
    </member>
    <member name="M:System.Drawing.Image.GetEncoderParameterList(System.Guid)">
      <summary>Returns information about the parameters supported by the specified image encoder.</summary>
      <param name="encoder">A GUID that specifies the image encoder.</param>
      <returns>An <see cref="T:System.Drawing.Imaging.EncoderParameters" /> that contains an array of <see cref="T:System.Drawing.Imaging.EncoderParameter" /> objects. Each <see cref="T:System.Drawing.Imaging.EncoderParameter" /> contains information about one of the parameters supported by the specified image encoder.</returns>
    </member>
    <member name="M:System.Drawing.Image.GetFrameCount(System.Drawing.Imaging.FrameDimension)">
      <summary>Returns the number of frames of the specified dimension.</summary>
      <param name="dimension">A <see cref="T:System.Drawing.Imaging.FrameDimension" /> that specifies the identity of the dimension type.</param>
      <returns>The number of frames in the specified dimension.</returns>
    </member>
    <member name="M:System.Drawing.Image.GetPixelFormatSize(System.Drawing.Imaging.PixelFormat)">
      <summary>Returns the color depth, in number of bits per pixel, of the specified pixel format.</summary>
      <param name="pixfmt">The <see cref="T:System.Drawing.Imaging.PixelFormat" /> member that specifies the format for which to find the size.</param>
      <returns>The color depth of the specified pixel format.</returns>
    </member>
    <member name="M:System.Drawing.Image.GetPropertyItem(System.Int32)">
      <summary>Gets the specified property item from this <see cref="T:System.Drawing.Image" />.</summary>
      <param name="propid">The ID of the property item to get.</param>
      <returns>The <see cref="T:System.Drawing.Imaging.PropertyItem" /> this method gets.</returns>
      <exception cref="T:System.ArgumentException">The image format of this image does not support property items.</exception>
    </member>
    <member name="M:System.Drawing.Image.GetThumbnailImage(System.Int32,System.Int32,System.Drawing.Image.GetThumbnailImageAbort,System.IntPtr)">
      <summary>Returns a thumbnail for this <see cref="T:System.Drawing.Image" />.</summary>
      <param name="thumbWidth">The width, in pixels, of the requested thumbnail image.</param>
      <param name="thumbHeight">The height, in pixels, of the requested thumbnail image.</param>
      <param name="callback">A <see cref="T:System.Drawing.Image.GetThumbnailImageAbort" /> delegate.  
 Note You must create a delegate and pass a reference to the delegate as the <paramref name="callback" /> parameter, but the delegate is not used.</param>
      <param name="callbackData">Must be <see cref="F:System.IntPtr.Zero" />.</param>
      <returns>An <see cref="T:System.Drawing.Image" /> that represents the thumbnail.</returns>
    </member>
    <member name="T:System.Drawing.Image.GetThumbnailImageAbort">
      <summary>Provides a callback method for determining when the <see cref="M:System.Drawing.Image.GetThumbnailImage(System.Int32,System.Int32,System.Drawing.Image.GetThumbnailImageAbort,System.IntPtr)" /> method should prematurely cancel execution.</summary>
      <returns>This method returns <see langword="true" /> if it decides that the <see cref="M:System.Drawing.Image.GetThumbnailImage(System.Int32,System.Int32,System.Drawing.Image.GetThumbnailImageAbort,System.IntPtr)" /> method should prematurely stop execution; otherwise, it returns <see langword="false" />.</returns>
    </member>
    <member name="P:System.Drawing.Image.Height">
      <summary>Gets the height, in pixels, of this <see cref="T:System.Drawing.Image" />.</summary>
      <returns>The height, in pixels, of this <see cref="T:System.Drawing.Image" />.</returns>
    </member>
    <member name="P:System.Drawing.Image.HorizontalResolution">
      <summary>Gets the horizontal resolution, in pixels per inch, of this <see cref="T:System.Drawing.Image" />.</summary>
      <returns>The horizontal resolution, in pixels per inch, of this <see cref="T:System.Drawing.Image" />.</returns>
    </member>
    <member name="M:System.Drawing.Image.IsAlphaPixelFormat(System.Drawing.Imaging.PixelFormat)">
      <summary>Returns a value that indicates whether the pixel format for this <see cref="T:System.Drawing.Image" /> contains alpha information.</summary>
      <param name="pixfmt">The <see cref="T:System.Drawing.Imaging.PixelFormat" /> to test.</param>
      <returns>
        <see langword="true" /> if <paramref name="pixfmt" /> contains alpha information; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Image.IsCanonicalPixelFormat(System.Drawing.Imaging.PixelFormat)">
      <summary>Returns a value that indicates whether the pixel format is 32 bits per pixel.</summary>
      <param name="pixfmt">The <see cref="T:System.Drawing.Imaging.PixelFormat" /> to test.</param>
      <returns>
        <see langword="true" /> if <paramref name="pixfmt" /> is canonical; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Image.IsExtendedPixelFormat(System.Drawing.Imaging.PixelFormat)">
      <summary>Returns a value that indicates whether the pixel format is 64 bits per pixel.</summary>
      <param name="pixfmt">The <see cref="T:System.Drawing.Imaging.PixelFormat" /> enumeration to test.</param>
      <returns>
        <see langword="true" /> if <paramref name="pixfmt" /> is extended; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Drawing.Image.Palette">
      <summary>Gets or sets the color palette used for this <see cref="T:System.Drawing.Image" />.</summary>
      <returns>A <see cref="T:System.Drawing.Imaging.ColorPalette" /> that represents the color palette used for this <see cref="T:System.Drawing.Image" />.</returns>
    </member>
    <member name="P:System.Drawing.Image.PhysicalDimension">
      <summary>Gets the width and height of this image.</summary>
      <returns>A <see cref="T:System.Drawing.SizeF" /> structure that represents the width and height of this <see cref="T:System.Drawing.Image" />.</returns>
    </member>
    <member name="P:System.Drawing.Image.PixelFormat">
      <summary>Gets the pixel format for this <see cref="T:System.Drawing.Image" />.</summary>
      <returns>A <see cref="T:System.Drawing.Imaging.PixelFormat" /> that represents the pixel format for this <see cref="T:System.Drawing.Image" />.</returns>
    </member>
    <member name="P:System.Drawing.Image.PropertyIdList">
      <summary>Gets IDs of the property items stored in this <see cref="T:System.Drawing.Image" />.</summary>
      <returns>An array of the property IDs, one for each property item stored in this image.</returns>
    </member>
    <member name="P:System.Drawing.Image.PropertyItems">
      <summary>Gets all the property items (pieces of metadata) stored in this <see cref="T:System.Drawing.Image" />.</summary>
      <returns>An array of <see cref="T:System.Drawing.Imaging.PropertyItem" /> objects, one for each property item stored in the image.</returns>
    </member>
    <member name="P:System.Drawing.Image.RawFormat">
      <summary>Gets the file format of this <see cref="T:System.Drawing.Image" />.</summary>
      <returns>The <see cref="T:System.Drawing.Imaging.ImageFormat" /> that represents the file format of this <see cref="T:System.Drawing.Image" />.</returns>
    </member>
    <member name="M:System.Drawing.Image.RemovePropertyItem(System.Int32)">
      <summary>Removes the specified property item from this <see cref="T:System.Drawing.Image" />.</summary>
      <param name="propid">The ID of the property item to remove.</param>
      <exception cref="T:System.ArgumentException">The image does not contain the requested property item.  
 -or-  
 The image format for this image does not support property items.</exception>
    </member>
    <member name="M:System.Drawing.Image.RotateFlip(System.Drawing.RotateFlipType)">
      <summary>Rotates, flips, or rotates and flips the <see cref="T:System.Drawing.Image" />.</summary>
      <param name="rotateFlipType">A <see cref="T:System.Drawing.RotateFlipType" /> member that specifies the type of rotation and flip to apply to the image.</param>
    </member>
    <member name="M:System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)">
      <summary>Saves this image to the specified stream, with the specified encoder and image encoder parameters.</summary>
      <param name="stream">The <see cref="T:System.IO.Stream" /> where the image will be saved.</param>
      <param name="encoder">The <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> for this <see cref="T:System.Drawing.Image" />.</param>
      <param name="encoderParams">An <see cref="T:System.Drawing.Imaging.EncoderParameters" /> that specifies parameters used by the image encoder.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> is <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">The image was saved with the wrong image format.</exception>
    </member>
    <member name="M:System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageFormat)">
      <summary>Saves this image to the specified stream in the specified format.</summary>
      <param name="stream">The <see cref="T:System.IO.Stream" /> where the image will be saved.</param>
      <param name="format">An <see cref="T:System.Drawing.Imaging.ImageFormat" /> that specifies the format of the saved image.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> or <paramref name="format" /> is <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">The image was saved with the wrong image format</exception>
    </member>
    <member name="M:System.Drawing.Image.Save(System.String)">
      <summary>Saves this <see cref="T:System.Drawing.Image" /> to the specified file or stream.</summary>
      <param name="filename">A string that contains the name of the file to which to save this <see cref="T:System.Drawing.Image" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filename" /> is <see langword="null." /></exception>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">The image was saved with the wrong image format.  
 -or-  
 The image was saved to the same file it was created from.</exception>
    </member>
    <member name="M:System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)">
      <summary>Saves this <see cref="T:System.Drawing.Image" /> to the specified file, with the specified encoder and image-encoder parameters.</summary>
      <param name="filename">A string that contains the name of the file to which to save this <see cref="T:System.Drawing.Image" />.</param>
      <param name="encoder">The <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> for this <see cref="T:System.Drawing.Image" />.</param>
      <param name="encoderParams">An <see cref="T:System.Drawing.Imaging.EncoderParameters" /> to use for this <see cref="T:System.Drawing.Image" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filename" /> or <paramref name="encoder" /> is <see langword="null." /></exception>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">The image was saved with the wrong image format.  
 -or-  
 The image was saved to the same file it was created from.</exception>
    </member>
    <member name="M:System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageFormat)">
      <summary>Saves this <see cref="T:System.Drawing.Image" /> to the specified file in the specified format.</summary>
      <param name="filename">A string that contains the name of the file to which to save this <see cref="T:System.Drawing.Image" />.</param>
      <param name="format">The <see cref="T:System.Drawing.Imaging.ImageFormat" /> for this <see cref="T:System.Drawing.Image" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filename" /> or <paramref name="format" /> is <see langword="null." /></exception>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">The image was saved with the wrong image format.  
 -or-  
 The image was saved to the same file it was created from.</exception>
    </member>
    <member name="M:System.Drawing.Image.SaveAdd(System.Drawing.Image,System.Drawing.Imaging.EncoderParameters)">
      <summary>Adds a frame to the file or stream specified in a previous call to the <see cref="Overload:System.Drawing.Image.Save" /> method.</summary>
      <param name="image">An <see cref="T:System.Drawing.Image" /> that contains the frame to add.</param>
      <param name="encoderParams">An <see cref="T:System.Drawing.Imaging.EncoderParameters" /> that holds parameters required by the image encoder that is used by the save-add operation.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Image.SaveAdd(System.Drawing.Imaging.EncoderParameters)">
      <summary>Adds a frame to the file or stream specified in a previous call to the <see cref="Overload:System.Drawing.Image.Save" /> method. Use this method to save selected frames from a multiple-frame image to another multiple-frame image.</summary>
      <param name="encoderParams">An <see cref="T:System.Drawing.Imaging.EncoderParameters" /> that holds parameters required by the image encoder that is used by the save-add operation.</param>
    </member>
    <member name="M:System.Drawing.Image.SelectActiveFrame(System.Drawing.Imaging.FrameDimension,System.Int32)">
      <summary>Selects the frame specified by the dimension and index.</summary>
      <param name="dimension">A <see cref="T:System.Drawing.Imaging.FrameDimension" /> that specifies the identity of the dimension type.</param>
      <param name="frameIndex">The index of the active frame.</param>
      <returns>Always returns 0.</returns>
    </member>
    <member name="M:System.Drawing.Image.SetPropertyItem(System.Drawing.Imaging.PropertyItem)">
      <summary>Stores a property item (piece of metadata) in this <see cref="T:System.Drawing.Image" />.</summary>
      <param name="propitem">The <see cref="T:System.Drawing.Imaging.PropertyItem" /> to be stored.</param>
      <exception cref="T:System.ArgumentException">The image format of this image does not support property items.</exception>
    </member>
    <member name="P:System.Drawing.Image.Size">
      <summary>Gets the width and height, in pixels, of this image.</summary>
      <returns>A <see cref="T:System.Drawing.Size" /> structure that represents the width and height, in pixels, of this image.</returns>
    </member>
    <member name="M:System.Drawing.Image.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
    </member>
    <member name="P:System.Drawing.Image.Tag">
      <summary>Gets or sets an object that provides additional data about the image.</summary>
      <returns>The <see cref="T:System.Object" /> that provides additional data about the image.</returns>
    </member>
    <member name="P:System.Drawing.Image.VerticalResolution">
      <summary>Gets the vertical resolution, in pixels per inch, of this <see cref="T:System.Drawing.Image" />.</summary>
      <returns>The vertical resolution, in pixels per inch, of this <see cref="T:System.Drawing.Image" />.</returns>
    </member>
    <member name="P:System.Drawing.Image.Width">
      <summary>Gets the width, in pixels, of this <see cref="T:System.Drawing.Image" />.</summary>
      <returns>The width, in pixels, of this <see cref="T:System.Drawing.Image" />.</returns>
    </member>
    <member name="T:System.Drawing.ImageAnimator">
      <summary>Animates an image that has time-based frames.</summary>
    </member>
    <member name="M:System.Drawing.ImageAnimator.Animate(System.Drawing.Image,System.EventHandler)">
      <summary>Displays a multiple-frame image as an animation.</summary>
      <param name="image">The <see cref="T:System.Drawing.Image" /> object to animate.</param>
      <param name="onFrameChangedHandler">An <see langword="EventHandler" /> object that specifies the method that is called when the animation frame changes.</param>
    </member>
    <member name="M:System.Drawing.ImageAnimator.CanAnimate(System.Drawing.Image)">
      <summary>Returns a Boolean value indicating whether the specified image contains time-based frames.</summary>
      <param name="image">The <see cref="T:System.Drawing.Image" /> object to test.</param>
      <returns>This method returns <see langword="true" /> if the specified image contains time-based frames; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.ImageAnimator.StopAnimate(System.Drawing.Image,System.EventHandler)">
      <summary>Terminates a running animation.</summary>
      <param name="image">The <see cref="T:System.Drawing.Image" /> object to stop animating.</param>
      <param name="onFrameChangedHandler">An <see langword="EventHandler" /> object that specifies the method that is called when the animation frame changes.</param>
    </member>
    <member name="M:System.Drawing.ImageAnimator.UpdateFrames">
      <summary>Advances the frame in all images currently being animated. The new frame is drawn the next time the image is rendered.</summary>
    </member>
    <member name="M:System.Drawing.ImageAnimator.UpdateFrames(System.Drawing.Image)">
      <summary>Advances the frame in the specified image. The new frame is drawn the next time the image is rendered. This method applies only to images with time-based frames.</summary>
      <param name="image">The <see cref="T:System.Drawing.Image" /> object for which to update frames.</param>
    </member>
    <member name="T:System.Drawing.Imaging.BitmapData">
      <summary>Specifies the attributes of a bitmap image. The <see cref="T:System.Drawing.Imaging.BitmapData" /> class is used by the <see cref="Overload:System.Drawing.Bitmap.LockBits" /> and <see cref="M:System.Drawing.Bitmap.UnlockBits(System.Drawing.Imaging.BitmapData)" /> methods of the <see cref="T:System.Drawing.Bitmap" /> class. Not inheritable.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.BitmapData.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.BitmapData" /> class.</summary>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.Height">
      <summary>Gets or sets the pixel height of the <see cref="T:System.Drawing.Bitmap" /> object. Also sometimes referred to as the number of scan lines.</summary>
      <returns>The pixel height of the <see cref="T:System.Drawing.Bitmap" /> object.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.PixelFormat">
      <summary>Gets or sets the format of the pixel information in the <see cref="T:System.Drawing.Bitmap" /> object that returned this <see cref="T:System.Drawing.Imaging.BitmapData" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Imaging.PixelFormat" /> that specifies the format of the pixel information in the associated <see cref="T:System.Drawing.Bitmap" /> object.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.Reserved">
      <summary>Reserved. Do not use.</summary>
      <returns>Reserved. Do not use.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.Scan0">
      <summary>Gets or sets the address of the first pixel data in the bitmap. This can also be thought of as the first scan line in the bitmap.</summary>
      <returns>The address of the first pixel data in the bitmap.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.Stride">
      <summary>Gets or sets the stride width (also called scan width) of the <see cref="T:System.Drawing.Bitmap" /> object.</summary>
      <returns>The stride width, in bytes, of the <see cref="T:System.Drawing.Bitmap" /> object.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.Width">
      <summary>Gets or sets the pixel width of the <see cref="T:System.Drawing.Bitmap" /> object. This can also be thought of as the number of pixels in one scan line.</summary>
      <returns>The pixel width of the <see cref="T:System.Drawing.Bitmap" /> object.</returns>
    </member>
    <member name="T:System.Drawing.Imaging.ColorAdjustType">
      <summary>Specifies which GDI+ objects use color adjustment information.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Any">
      <summary>The number of types specified.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Bitmap">
      <summary>Color adjustment information for <see cref="T:System.Drawing.Bitmap" /> objects.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Brush">
      <summary>Color adjustment information for <see cref="T:System.Drawing.Brush" /> objects.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Count">
      <summary>The number of types specified.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Default">
      <summary>Color adjustment information that is used by all GDI+ objects that do not have their own color adjustment information.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Pen">
      <summary>Color adjustment information for <see cref="T:System.Drawing.Pen" /> objects.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Text">
      <summary>Color adjustment information for text.</summary>
    </member>
    <member name="T:System.Drawing.Imaging.ColorChannelFlag">
      <summary>Specifies individual channels in the CMYK (cyan, magenta, yellow, black) color space. This enumeration is used by the <see cref="Overload:System.Drawing.Imaging.ImageAttributes.SetOutputChannel" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorChannelFlag.ColorChannelC">
      <summary>The cyan color channel.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorChannelFlag.ColorChannelK">
      <summary>The black color channel.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorChannelFlag.ColorChannelLast">
      <summary>The last selected channel should be used.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorChannelFlag.ColorChannelM">
      <summary>The magenta color channel.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorChannelFlag.ColorChannelY">
      <summary>The yellow color channel.</summary>
    </member>
    <member name="T:System.Drawing.Imaging.ColorMap">
      <summary>Defines a map for converting colors. Several methods of the <see cref="T:System.Drawing.Imaging.ImageAttributes" /> class adjust image colors by using a color-remap table, which is an array of <see cref="T:System.Drawing.Imaging.ColorMap" /> structures. Not inheritable.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ColorMap.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.ColorMap" /> class.</summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMap.NewColor">
      <summary>Gets or sets the new <see cref="T:System.Drawing.Color" /> structure to which to convert.</summary>
      <returns>The new <see cref="T:System.Drawing.Color" /> structure to which to convert.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMap.OldColor">
      <summary>Gets or sets the existing <see cref="T:System.Drawing.Color" /> structure to be converted.</summary>
      <returns>The existing <see cref="T:System.Drawing.Color" /> structure to be converted.</returns>
    </member>
    <member name="T:System.Drawing.Imaging.ColorMapType">
      <summary>Specifies the types of color maps.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMapType.Brush">
      <summary>Specifies a color map for a <see cref="T:System.Drawing.Brush" />.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMapType.Default">
      <summary>A default color map.</summary>
    </member>
    <member name="T:System.Drawing.Imaging.ColorMatrix">
      <summary>Defines a 5 x 5 matrix that contains the coordinates for the RGBAW space. Several methods of the <see cref="T:System.Drawing.Imaging.ImageAttributes" /> class adjust image colors by using a color matrix. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ColorMatrix.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.ColorMatrix" /> class.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ColorMatrix.#ctor(System.Single[][])">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.ColorMatrix" /> class using the elements in the specified matrix <paramref name="newColorMatrix" />.</summary>
      <param name="newColorMatrix">The values of the elements for the new <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</param>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Item(System.Int32,System.Int32)">
      <summary>Gets or sets the element at the specified row and column in the <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</summary>
      <param name="row">The row of the element.</param>
      <param name="column">The column of the element.</param>
      <returns>The element at the specified row and column.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix00">
      <summary>Gets or sets the element at the 0 (zero) row and 0 column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</summary>
      <returns>The element at the 0 row and 0 column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix01">
      <summary>Gets or sets the element at the 0 (zero) row and first column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</summary>
      <returns>The element at the 0 row and first column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" /> .</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix02">
      <summary>Gets or sets the element at the 0 (zero) row and second column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</summary>
      <returns>The element at the 0 row and second column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix03">
      <summary>Gets or sets the element at the 0 (zero) row and third column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />. Represents the alpha component.</summary>
      <returns>The element at the 0 row and third column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix04">
      <summary>Gets or sets the element at the 0 (zero) row and fourth column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</summary>
      <returns>The element at the 0 row and fourth column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix10">
      <summary>Gets or sets the element at the first row and 0 (zero) column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</summary>
      <returns>The element at the first row and 0 column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix11">
      <summary>Gets or sets the element at the first row and first column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</summary>
      <returns>The element at the first row and first column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix12">
      <summary>Gets or sets the element at the first row and second column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</summary>
      <returns>The element at the first row and second column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix13">
      <summary>Gets or sets the element at the first row and third column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />. Represents the alpha component.</summary>
      <returns>The element at the first row and third column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix14">
      <summary>Gets or sets the element at the first row and fourth column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</summary>
      <returns>The element at the first row and fourth column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix20">
      <summary>Gets or sets the element at the second row and 0 (zero) column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</summary>
      <returns>The element at the second row and 0 column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix21">
      <summary>Gets or sets the element at the second row and first column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</summary>
      <returns>The element at the second row and first column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix22">
      <summary>Gets or sets the element at the second row and second column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</summary>
      <returns>The element at the second row and second column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix23">
      <summary>Gets or sets the element at the second row and third column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</summary>
      <returns>The element at the second row and third column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix24">
      <summary>Gets or sets the element at the second row and fourth column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</summary>
      <returns>The element at the second row and fourth column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix30">
      <summary>Gets or sets the element at the third row and 0 (zero) column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</summary>
      <returns>The element at the third row and 0 column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix31">
      <summary>Gets or sets the element at the third row and first column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</summary>
      <returns>The element at the third row and first column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix32">
      <summary>Gets or sets the element at the third row and second column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</summary>
      <returns>The element at the third row and second column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix33">
      <summary>Gets or sets the element at the third row and third column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />. Represents the alpha component.</summary>
      <returns>The element at the third row and third column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix34">
      <summary>Gets or sets the element at the third row and fourth column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</summary>
      <returns>The element at the third row and fourth column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix40">
      <summary>Gets or sets the element at the fourth row and 0 (zero) column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</summary>
      <returns>The element at the fourth row and 0 column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix41">
      <summary>Gets or sets the element at the fourth row and first column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</summary>
      <returns>The element at the fourth row and first column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix42">
      <summary>Gets or sets the element at the fourth row and second column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</summary>
      <returns>The element at the fourth row and second column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix43">
      <summary>Gets or sets the element at the fourth row and third column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />. Represents the alpha component.</summary>
      <returns>The element at the fourth row and third column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix44">
      <summary>Gets or sets the element at the fourth row and fourth column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</summary>
      <returns>The element at the fourth row and fourth column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</returns>
    </member>
    <member name="T:System.Drawing.Imaging.ColorMatrixFlag">
      <summary>Specifies the types of images and colors that will be affected by the color and grayscale adjustment settings of an <see cref="T:System.Drawing.Imaging.ImageAttributes" />.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMatrixFlag.AltGrays">
      <summary>Only gray shades are adjusted.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMatrixFlag.Default">
      <summary>All color values, including gray shades, are adjusted by the same color-adjustment matrix.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMatrixFlag.SkipGrays">
      <summary>All colors are adjusted, but gray shades are not adjusted. A gray shade is any color that has the same value for its red, green, and blue components.</summary>
    </member>
    <member name="T:System.Drawing.Imaging.ColorMode">
      <summary>Specifies two modes for color component values.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMode.Argb32Mode">
      <summary>The integer values supplied are 32-bit values.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMode.Argb64Mode">
      <summary>The integer values supplied are 64-bit values.</summary>
    </member>
    <member name="T:System.Drawing.Imaging.ColorPalette">
      <summary>Defines an array of colors that make up a color palette. The colors are 32-bit ARGB colors. Not inheritable.</summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorPalette.Entries">
      <summary>Gets an array of <see cref="T:System.Drawing.Color" /> structures.</summary>
      <returns>The array of <see cref="T:System.Drawing.Color" /> structure that make up this <see cref="T:System.Drawing.Imaging.ColorPalette" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorPalette.Flags">
      <summary>Gets a value that specifies how to interpret the color information in the array of colors.</summary>
      <returns>The following flag values are valid:  
 0x00000001 The color values in the array contain alpha information.  
 0x00000002 The colors in the array are grayscale values.  
 0x00000004 The colors in the array are halftone values.</returns>
    </member>
    <member name="T:System.Drawing.Imaging.EmfPlusRecordType">
      <summary>Specifies the methods available for use with a metafile to read and write graphic commands.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.BeginContainer">
      <summary>See <see cref="M:System.Drawing.Graphics.BeginContainer" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.BeginContainerNoParams">
      <summary>See <see cref="M:System.Drawing.Graphics.BeginContainer" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Clear">
      <summary>See <see cref="M:System.Drawing.Graphics.Clear(System.Drawing.Color)" />.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Comment">
      <summary>See <see cref="M:System.Drawing.Graphics.AddMetafileComment(System.Byte[])" />.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawArc">
      <summary>See <see cref="Overload:System.Drawing.Graphics.DrawArc" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawBeziers">
      <summary>See <see cref="Overload:System.Drawing.Graphics.DrawBeziers" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawClosedCurve">
      <summary>See <see cref="Overload:System.Drawing.Graphics.DrawClosedCurve" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawCurve">
      <summary>See <see cref="Overload:System.Drawing.Graphics.DrawCurve" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawDriverString">
      <summary>Specifies a character string, a location, and formatting information.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawEllipse">
      <summary>See <see cref="Overload:System.Drawing.Graphics.DrawEllipse" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawImage">
      <summary>See <see cref="Overload:System.Drawing.Graphics.DrawImage" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawImagePoints">
      <summary>See <see cref="Overload:System.Drawing.Graphics.DrawImage" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawLines">
      <summary>See <see cref="Overload:System.Drawing.Graphics.DrawLines" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawPath">
      <summary>See <see cref="M:System.Drawing.Graphics.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)" />.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawPie">
      <summary>See <see cref="Overload:System.Drawing.Graphics.DrawPie" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawRects">
      <summary>See <see cref="Overload:System.Drawing.Graphics.DrawRectangles" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawString">
      <summary>See <see cref="Overload:System.Drawing.Graphics.DrawString" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfAbortPath">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfAlphaBlend">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfAngleArc">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfArcTo">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfBeginPath">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfBitBlt">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfChord">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCloseFigure">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfColorCorrectPalette">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfColorMatchToTargetW">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreateBrushIndirect">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreateColorSpace">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreateColorSpaceW">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreateDibPatternBrushPt">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreateMonoBrush">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreatePalette">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreatePen">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfDeleteColorSpace">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfDeleteObject">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfDrawEscape">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfEllipse">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfEndPath">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfEof">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExcludeClipRect">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtCreateFontIndirect">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtCreatePen">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtEscape">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtFloodFill">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtSelectClipRgn">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtTextOutA">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtTextOutW">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfFillPath">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfFillRgn">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfFlattenPath">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfForceUfiMapping">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfFrameRgn">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfGdiComment">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfGlsBoundedRecord">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfGlsRecord">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfGradientFill">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfHeader">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfIntersectClipRect">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfInvertRgn">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfLineTo">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfMaskBlt">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfMax">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfMin">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfModifyWorldTransform">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfMoveToEx">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfNamedEscpae">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfOffsetClipRgn">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPaintRgn">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPie">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPixelFormat">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPlgBlt">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPlusRecordBase">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyBezier">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyBezier16">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyBezierTo">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyBezierTo16">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyDraw">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyDraw16">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolygon">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolygon16">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyline">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyline16">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyLineTo">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolylineTo16">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyPolygon">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyPolygon16">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyPolyline">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyPolyline16">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyTextOutA">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyTextOutW">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfRealizePalette">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfRectangle">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfReserved069">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfReserved117">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfResizePalette">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfRestoreDC">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfRoundArc">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfRoundRect">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSaveDC">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfScaleViewportExtEx">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfScaleWindowExtEx">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSelectClipPath">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSelectObject">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSelectPalette">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetArcDirection">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetBkColor">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetBkMode">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetBrushOrgEx">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetColorAdjustment">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetColorSpace">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetDIBitsToDevice">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetIcmMode">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetIcmProfileA">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetIcmProfileW">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetLayout">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetLinkedUfis">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetMapMode">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetMapperFlags">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetMetaRgn">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetMiterLimit">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetPaletteEntries">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetPixelV">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetPolyFillMode">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetROP2">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetStretchBltMode">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetTextAlign">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetTextColor">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetTextJustification">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetViewportExtEx">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetViewportOrgEx">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetWindowExtEx">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetWindowOrgEx">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetWorldTransform">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSmallTextOut">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfStartDoc">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfStretchBlt">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfStretchDIBits">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfStrokeAndFillPath">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfStrokePath">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfTransparentBlt">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfWidenPath">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EndContainer">
      <summary>See <see cref="M:System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)" />.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EndOfFile">
      <summary>Identifies a record that marks the last EMF+ record of a metafile.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillClosedCurve">
      <summary>See <see cref="Overload:System.Drawing.Graphics.FillClosedCurve" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillEllipse">
      <summary>See <see cref="Overload:System.Drawing.Graphics.FillEllipse" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillPath">
      <summary>See <see cref="M:System.Drawing.Graphics.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)" />.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillPie">
      <summary>See <see cref="Overload:System.Drawing.Graphics.FillPie" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillPolygon">
      <summary>See <see cref="Overload:System.Drawing.Graphics.FillPolygon" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillRects">
      <summary>See <see cref="Overload:System.Drawing.Graphics.FillRectangles" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillRegion">
      <summary>See <see cref="M:System.Drawing.Graphics.FillRegion(System.Drawing.Brush,System.Drawing.Region)" />.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.GetDC">
      <summary>See <see cref="M:System.Drawing.Graphics.GetHdc" />.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Header">
      <summary>Identifies a record that is the EMF+ header.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Invalid">
      <summary>Indicates invalid data.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Max">
      <summary>The maximum value for this enumeration.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Min">
      <summary>The minimum value for this enumeration.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.MultiFormatEnd">
      <summary>Marks the end of a multiple-format section.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.MultiFormatSection">
      <summary>Marks a multiple-format section.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.MultiFormatStart">
      <summary>Marks the start of a multiple-format section.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.MultiplyWorldTransform">
      <summary>See <see cref="Overload:System.Drawing.Graphics.MultiplyTransform" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Object">
      <summary>Marks an object.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.OffsetClip">
      <summary>See <see cref="Overload:System.Drawing.Graphics.TranslateClip" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.ResetClip">
      <summary>See <see cref="M:System.Drawing.Graphics.ResetClip" />.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.ResetWorldTransform">
      <summary>See <see cref="M:System.Drawing.Graphics.ResetTransform" />.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Restore">
      <summary>See <see cref="M:System.Drawing.Graphics.Restore(System.Drawing.Drawing2D.GraphicsState)" />.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.RotateWorldTransform">
      <summary>See <see cref="Overload:System.Drawing.Graphics.RotateTransform" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Save">
      <summary>See <see cref="M:System.Drawing.Graphics.Save" />.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.ScaleWorldTransform">
      <summary>See <see cref="Overload:System.Drawing.Graphics.ScaleTransform" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetAntiAliasMode">
      <summary>See <see cref="P:System.Drawing.Graphics.SmoothingMode" />.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetClipPath">
      <summary>See <see cref="Overload:System.Drawing.Graphics.SetClip" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetClipRect">
      <summary>See <see cref="Overload:System.Drawing.Graphics.SetClip" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetClipRegion">
      <summary>See <see cref="Overload:System.Drawing.Graphics.SetClip" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetCompositingMode">
      <summary>See <see cref="P:System.Drawing.Graphics.CompositingMode" />.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetCompositingQuality">
      <summary>See <see cref="P:System.Drawing.Graphics.CompositingQuality" />.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetInterpolationMode">
      <summary>See <see cref="P:System.Drawing.Graphics.InterpolationMode" />.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetPageTransform">
      <summary>See <see cref="Overload:System.Drawing.Graphics.TransformPoints" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetPixelOffsetMode">
      <summary>See <see cref="P:System.Drawing.Graphics.PixelOffsetMode" />.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetRenderingOrigin">
      <summary>See <see cref="P:System.Drawing.Graphics.RenderingOrigin" />.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetTextContrast">
      <summary>See <see cref="P:System.Drawing.Graphics.TextContrast" />.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetTextRenderingHint">
      <summary>See <see cref="P:System.Drawing.Graphics.TextRenderingHint" />.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetWorldTransform">
      <summary>See <see cref="Overload:System.Drawing.Graphics.TransformPoints" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Total">
      <summary>Used internally.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.TranslateWorldTransform">
      <summary>See <see cref="Overload:System.Drawing.Graphics.TransformPoints" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfAnimatePalette">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfArc">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfBitBlt">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfChord">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreateBrushIndirect">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreateFontIndirect">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreatePalette">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreatePatternBrush">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreatePenIndirect">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreateRegion">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfDeleteObject">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfDibBitBlt">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfDibCreatePatternBrush">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfDibStretchBlt">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfEllipse">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfEscape">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfExcludeClipRect">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfExtFloodFill">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfExtTextOut">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfFillRegion">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfFloodFill">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfFrameRegion">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfIntersectClipRect">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfInvertRegion">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfLineTo">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfMoveTo">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfOffsetCilpRgn">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfOffsetViewportOrg">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfOffsetWindowOrg">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPaintRegion">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPatBlt">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPie">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPolygon">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPolyline">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPolyPolygon">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfRealizePalette">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfRecordBase">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfRectangle">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfResizePalette">
      <summary>Increases or decreases the size of a logical palette based on the specified value.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfRestoreDC">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfRoundRect">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSaveDC">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfScaleViewportExt">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfScaleWindowExt">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSelectClipRegion">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSelectObject">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSelectPalette">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetBkColor">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetBkMode">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetDibToDev">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetLayout">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetMapMode">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetMapperFlags">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetPalEntries">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetPixel">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetPolyFillMode">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetRelAbs">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetROP2">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetStretchBltMode">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetTextAlign">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetTextCharExtra">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetTextColor">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetTextJustification">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetViewportExt">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetViewportOrg">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetWindowExt">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetWindowOrg">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfStretchBlt">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfStretchDib">
      <summary>Copies the color data for a rectangle of pixels in a DIB to the specified destination rectangle.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfTextOut">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="T:System.Drawing.Imaging.EmfType">
      <summary>Specifies the nature of the records that are placed in an Enhanced Metafile (EMF) file. This enumeration is used by several constructors in the <see cref="T:System.Drawing.Imaging.Metafile" /> class.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfType.EmfOnly">
      <summary>Specifies that all the records in the metafile are EMF records, which can be displayed by GDI or GDI+.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfType.EmfPlusDual">
      <summary>Specifies that all EMF+ records in the metafile are associated with an alternate EMF record. Metafiles of type <see cref="F:System.Drawing.Imaging.EmfType.EmfPlusDual" /> can be displayed by GDI or by GDI+.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfType.EmfPlusOnly">
      <summary>Specifies that all the records in the metafile are EMF+ records, which can be displayed by GDI+ but not by GDI.</summary>
    </member>
    <member name="T:System.Drawing.Imaging.Encoder">
      <summary>An <see cref="T:System.Drawing.Imaging.Encoder" /> object encapsulates a globally unique identifier (GUID) that identifies the category of an image encoder parameter.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.Encoder.#ctor(System.Guid)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Encoder" /> class from the specified globally unique identifier (GUID). The GUID specifies an image encoder parameter category.</summary>
      <param name="guid">A globally unique identifier that identifies an image encoder parameter category.</param>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.ChrominanceTable">
      <summary>An <see cref="T:System.Drawing.Imaging.Encoder" /> object that is initialized with the globally unique identifier for the chrominance table parameter category.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.ColorDepth">
      <summary>An <see cref="T:System.Drawing.Imaging.Encoder" /> object that is initialized with the globally unique identifier for the color depth parameter category.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.Compression">
      <summary>An <see cref="T:System.Drawing.Imaging.Encoder" /> object that is initialized with the globally unique identifier for the compression parameter category.</summary>
    </member>
    <member name="P:System.Drawing.Imaging.Encoder.Guid">
      <summary>Gets a globally unique identifier (GUID) that identifies an image encoder parameter category.</summary>
      <returns>The GUID that identifies an image encoder parameter category.</returns>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.LuminanceTable">
      <summary>Represents an <see cref="T:System.Drawing.Imaging.Encoder" /> object that is initialized with the globally unique identifier for the luminance table parameter category.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.Quality">
      <summary>Gets an <see cref="T:System.Drawing.Imaging.Encoder" /> object that is initialized with the globally unique identifier for the quality parameter category.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.RenderMethod">
      <summary>Represents an <see cref="T:System.Drawing.Imaging.Encoder" /> object that is initialized with the globally unique identifier for the render method parameter category.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.SaveFlag">
      <summary>Represents an <see cref="T:System.Drawing.Imaging.Encoder" /> object that is initialized with the globally unique identifier for the save flag parameter category.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.ScanMethod">
      <summary>Represents an <see cref="T:System.Drawing.Imaging.Encoder" /> object that is initialized with the globally unique identifier for the scan method parameter category.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.Transformation">
      <summary>Represents an <see cref="T:System.Drawing.Imaging.Encoder" /> object that is initialized with the globally unique identifier for the transformation parameter category.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.Version">
      <summary>Represents an <see cref="T:System.Drawing.Imaging.Encoder" /> object that is initialized with the globally unique identifier for the version parameter category.</summary>
    </member>
    <member name="T:System.Drawing.Imaging.EncoderParameter">
      <summary>Used to pass a value, or an array of values, to an image encoder.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and one unsigned 8-bit integer. Sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> property to <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />, and sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> property to 1.</summary>
      <param name="encoder">An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category.</param>
      <param name="value">An 8-bit unsigned integer that specifies the value stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and one 8-bit value. Sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> property to <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeUndefined" /> or <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />, and sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> property to 1.</summary>
      <param name="encoder">An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category.</param>
      <param name="value">A byte that specifies the value stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.</param>
      <param name="undefined">If <see langword="true" />, the <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> property is set to <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeUndefined" />; otherwise, the <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> property is set to <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />.</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and an array of unsigned 8-bit integers. Sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> property to <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />, and sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> property to the number of elements in the array.</summary>
      <param name="encoder">An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category.</param>
      <param name="value">An array of 8-bit unsigned integers that specifies the values stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[],System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and an array of bytes. Sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> property to <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeUndefined" /> or <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />, and sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> property to the number of elements in the array.</summary>
      <param name="encoder">An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category.</param>
      <param name="value">An array of bytes that specifies the values stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.</param>
      <param name="undefined">If <see langword="true" />, the <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> property is set to <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeUndefined" />; otherwise, the <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> property is set to <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />.</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and one, 16-bit integer. Sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> property to <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeShort" />, and sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> property to 1.</summary>
      <param name="encoder">An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category.</param>
      <param name="value">A 16-bit integer that specifies the value stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object. Must be nonnegative.</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16[])">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and an array of 16-bit integers. Sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> property to <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeShort" />, and sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> property to the number of elements in the array.</summary>
      <param name="encoder">An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category.</param>
      <param name="value">An array of 16-bit integers that specifies the values stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object. The integers in the array must be nonnegative.</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Drawing.Imaging.EncoderParameterValueType,System.IntPtr)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object, number of values, data type of the values, and a pointer to the values stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.</summary>
      <param name="encoder">An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category.</param>
      <param name="numberValues">An integer that specifies the number of values stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object. The <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> property is set to this value.</param>
      <param name="type">A member of the <see cref="T:System.Drawing.Imaging.EncoderParameterValueType" /> enumeration that specifies the data type of the values stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object. The <see cref="T:System.Type" /> and <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> properties are set to this value.</param>
      <param name="value">A pointer to an array of values of the type specified by the <paramref name="Type" /> parameter.</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and a pair of 32-bit integers. The pair of integers represents a fraction, the first integer being the numerator, and the second integer being the denominator. Sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> property to <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRational" />, and sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> property to 1.</summary>
      <param name="encoder">An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category.</param>
      <param name="numerator">A 32-bit integer that represents the numerator of a fraction. Must be nonnegative.</param>
      <param name="denominator">A 32-bit integer that represents the denominator of a fraction. Must be nonnegative.</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and three integers that specify the number of values, the data type of the values, and a pointer to the values stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.</summary>
      <param name="encoder">An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category.</param>
      <param name="NumberOfValues">An integer that specifies the number of values stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object. The <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> property is set to this value.</param>
      <param name="Type">A member of the <see cref="T:System.Drawing.Imaging.EncoderParameterValueType" /> enumeration that specifies the data type of the values stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object. The <see cref="T:System.Type" /> and <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> properties are set to this value.</param>
      <param name="Value">A pointer to an array of values of the type specified by the <paramref name="Type" /> parameter.</param>
      <exception cref="T:System.InvalidOperationException">Type is not a valid <see cref="T:System.Drawing.Imaging.EncoderParameterValueType" />.</exception>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and four, 32-bit integers. The four integers represent a range of fractions. The first two integers represent the smallest fraction in the range, and the remaining two integers represent the largest fraction in the range. Sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> property to <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRationalRange" />, and sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> property to 1.</summary>
      <param name="encoder">An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category.</param>
      <param name="numerator1">A 32-bit integer that represents the numerator of the smallest fraction in the range. Must be nonnegative.</param>
      <param name="demoninator1">A 32-bit integer that represents the denominator of the smallest fraction in the range. Must be nonnegative.</param>
      <param name="numerator2">A 32-bit integer that represents the denominator of the smallest fraction in the range. Must be nonnegative.</param>
      <param name="demoninator2">A 32-bit integer that represents the numerator of the largest fraction in the range. Must be nonnegative.</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[])">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and two arrays of 32-bit integers. The two arrays represent an array of fractions. Sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> property to <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRational" />, and sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> property to the number of elements in the <paramref name="numerator" /> array, which must be the same as the number of elements in the <paramref name="denominator" /> array.</summary>
      <param name="encoder">An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category.</param>
      <param name="numerator">An array of 32-bit integers that specifies the numerators of the fractions. The integers in the array must be nonnegative.</param>
      <param name="denominator">An array of 32-bit integers that specifies the denominators of the fractions. The integers in the array must be nonnegative. A denominator of a given index is paired with the numerator of the same index.</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and four arrays of 32-bit integers. The four arrays represent an array rational ranges. A rational range is the set of all fractions from a minimum fractional value through a maximum fractional value. Sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> property to <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRationalRange" />, and sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> property to the number of elements in the <paramref name="numerator1" /> array, which must be the same as the number of elements in the other three arrays.</summary>
      <param name="encoder">An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category.</param>
      <param name="numerator1">An array of 32-bit integers that specifies the numerators of the minimum values for the ranges. The integers in the array must be nonnegative.</param>
      <param name="denominator1">An array of 32-bit integers that specifies the denominators of the minimum values for the ranges. The integers in the array must be nonnegative.</param>
      <param name="numerator2">An array of 32-bit integers that specifies the numerators of the maximum values for the ranges. The integers in the array must be nonnegative.</param>
      <param name="denominator2">An array of 32-bit integers that specifies the denominators of the maximum values for the ranges. The integers in the array must be nonnegative.</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and one 64-bit integer. Sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> property to <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLong" /> (32 bits), and sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> property to 1.</summary>
      <param name="encoder">An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category.</param>
      <param name="value">A 64-bit integer that specifies the value stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object. Must be nonnegative. This parameter is converted to a 32-bit integer before it is stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64,System.Int64)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and a pair of 64-bit integers. The pair of integers represents a range of integers, the first integer being the smallest number in the range, and the second integer being the largest number in the range. Sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> property to <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLongRange" />, and sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> property to 1.</summary>
      <param name="encoder">An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category.</param>
      <param name="rangebegin">A 64-bit integer that represents the smallest number in a range of integers. Must be nonnegative. This parameter is converted to a 32-bit integer before it is stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.</param>
      <param name="rangeend">A 64-bit integer that represents the largest number in a range of integers. Must be nonnegative. This parameter is converted to a 32-bit integer before it is stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[])">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and an array of 64-bit integers. Sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> property to <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLong" /> (32-bit), and sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> property to the number of elements in the array.</summary>
      <param name="encoder">An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category.</param>
      <param name="value">An array of 64-bit integers that specifies the values stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object. The integers in the array must be nonnegative. The 64-bit integers are converted to 32-bit integers before they are stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[],System.Int64[])">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and two arrays of 64-bit integers. The two arrays represent an array integer ranges. Sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> property to <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLongRange" />, and sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> property to the number of elements in the <paramref name="rangebegin" /> array, which must be the same as the number of elements in the <paramref name="rangeend" /> array.</summary>
      <param name="encoder">An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category.</param>
      <param name="rangebegin">An array of 64-bit integers that specifies the minimum values for the integer ranges. The integers in the array must be nonnegative. The 64-bit integers are converted to 32-bit integers before they are stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.</param>
      <param name="rangeend">An array of 64-bit integers that specifies the maximum values for the integer ranges. The integers in the array must be nonnegative. The 64-bit integers are converted to 32-bit integers before they are stored in the <see cref="T:System.Drawing.Imaging.EncoderParameters" /> object. A maximum value of a given index is paired with the minimum value of the same index.</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and a character string. The string is converted to a null-terminated ASCII string before it is stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object. Sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> property to <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeAscii" />, and sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> property to the length of the ASCII string including the NULL terminator.</summary>
      <param name="encoder">An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category.</param>
      <param name="value">A <see cref="T:System.String" /> that specifies the value stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.Dispose">
      <summary>Releases all resources used by this <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.</summary>
    </member>
    <member name="P:System.Drawing.Imaging.EncoderParameter.Encoder">
      <summary>Gets or sets the <see cref="T:System.Drawing.Imaging.Encoder" /> object associated with this <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object. The <see cref="T:System.Drawing.Imaging.Encoder" /> object encapsulates the globally unique identifier (GUID) that specifies the category (for example <see cref="F:System.Drawing.Imaging.Encoder.Quality" />, <see cref="F:System.Drawing.Imaging.Encoder.ColorDepth" />, or <see cref="F:System.Drawing.Imaging.Encoder.Compression" />) of the parameter stored in this <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.</summary>
      <returns>An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the GUID that specifies the category of the parameter stored in this <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.</returns>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.Finalize">
      <summary>Allows an <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object to attempt to free resources and perform other cleanup operations before the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object is reclaimed by garbage collection.</summary>
    </member>
    <member name="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues">
      <summary>Gets the number of elements in the array of values stored in this <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.</summary>
      <returns>An integer that indicates the number of elements in the array of values stored in this <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.EncoderParameter.Type">
      <summary>Gets the data type of the values stored in this <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.</summary>
      <returns>A member of the <see cref="T:System.Drawing.Imaging.EncoderParameterValueType" /> enumeration that indicates the data type of the values stored in this <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.EncoderParameter.ValueType">
      <summary>Gets the data type of the values stored in this <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.</summary>
      <returns>A member of the <see cref="T:System.Drawing.Imaging.EncoderParameterValueType" /> enumeration that indicates the data type of the values stored in this <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.</returns>
    </member>
    <member name="T:System.Drawing.Imaging.EncoderParameters">
      <summary>Encapsulates an array of <see cref="T:System.Drawing.Imaging.EncoderParameter" /> objects.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameters.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameters" /> class that can contain one <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameters.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameters" /> class that can contain the specified number of <see cref="T:System.Drawing.Imaging.EncoderParameter" /> objects.</summary>
      <param name="count">An integer that specifies the number of <see cref="T:System.Drawing.Imaging.EncoderParameter" /> objects that the <see cref="T:System.Drawing.Imaging.EncoderParameters" /> object can contain.</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameters.Dispose">
      <summary>Releases all resources used by this <see cref="T:System.Drawing.Imaging.EncoderParameters" /> object.</summary>
    </member>
    <member name="P:System.Drawing.Imaging.EncoderParameters.Param">
      <summary>Gets or sets an array of <see cref="T:System.Drawing.Imaging.EncoderParameter" /> objects.</summary>
      <returns>The array of <see cref="T:System.Drawing.Imaging.EncoderParameter" /> objects.</returns>
    </member>
    <member name="T:System.Drawing.Imaging.EncoderParameterValueType">
      <summary>Used to specify the data type of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> used with the <see cref="Overload:System.Drawing.Image.Save" /> or <see cref="Overload:System.Drawing.Image.SaveAdd" /> method of an image.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeAscii">
      <summary>Specifies that the array of values is a null-terminated ASCII character string. Note that the <see langword="NumberOfValues" /> data member of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object indicates the length of the character string including the NULL terminator.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte">
      <summary>Specifies that each value in the array is an 8-bit unsigned integer.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLong">
      <summary>Specifies that each value in the array is a 32-bit unsigned integer.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLongRange">
      <summary>Specifies that each value in the array is a pair of 32-bit unsigned integers. Each pair represents a range of numbers.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRational">
      <summary>Specifies that each value in the array is a pair of 32-bit unsigned integers. Each pair represents a fraction, the first integer being the numerator and the second integer being the denominator.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRationalRange">
      <summary>Specifies that each value in the array is a set of four, 32-bit unsigned integers. The first two integers represent one fraction, and the second two integers represent a second fraction. The two fractions represent a range of rational numbers. The first fraction is the smallest rational number in the range, and the second fraction is the largest rational number in the range.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeShort">
      <summary>Specifies that each value in the array is a 16-bit, unsigned integer.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeUndefined">
      <summary>Specifies that the array of values is an array of bytes that has no data type defined.</summary>
    </member>
    <member name="T:System.Drawing.Imaging.EncoderValue">
      <summary>Used to specify the parameter value passed to a JPEG or TIFF image encoder when using the <see cref="M:System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)" /> or <see cref="M:System.Drawing.Image.SaveAdd(System.Drawing.Imaging.EncoderParameters)" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.ColorTypeCMYK">
      <summary>Not used in GDI+ version 1.0.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.ColorTypeYCCK">
      <summary>Not used in GDI+ version 1.0.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.CompressionCCITT3">
      <summary>Specifies the CCITT3 compression scheme. Can be passed to the TIFF encoder as a parameter that belongs to the compression category.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.CompressionCCITT4">
      <summary>Specifies the CCITT4 compression scheme. Can be passed to the TIFF encoder as a parameter that belongs to the compression category.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.CompressionLZW">
      <summary>Specifies the LZW compression scheme. Can be passed to the TIFF encoder as a parameter that belongs to the Compression category.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.CompressionNone">
      <summary>Specifies no compression. Can be passed to the TIFF encoder as a parameter that belongs to the compression category.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.CompressionRle">
      <summary>Specifies the RLE compression scheme. Can be passed to the TIFF encoder as a parameter that belongs to the compression category.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.Flush">
      <summary>Specifies that a multiple-frame file or stream should be closed. Can be passed to the TIFF encoder as a parameter that belongs to the save flag category.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.FrameDimensionPage">
      <summary>Specifies that a frame is to be added to the page dimension of an image. Can be passed to the TIFF encoder as a parameter that belongs to the save flag category.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.FrameDimensionResolution">
      <summary>Not used in GDI+ version 1.0.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.FrameDimensionTime">
      <summary>Not used in GDI+ version 1.0.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.LastFrame">
      <summary>Specifies the last frame in a multiple-frame image. Can be passed to the TIFF encoder as a parameter that belongs to the save flag category.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.MultiFrame">
      <summary>Specifies that the image has more than one frame (page). Can be passed to the TIFF encoder as a parameter that belongs to the save flag category.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.RenderNonProgressive">
      <summary>Not used in GDI+ version 1.0.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.RenderProgressive">
      <summary>Not used in GDI+ version 1.0.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.ScanMethodInterlaced">
      <summary>Not used in GDI+ version 1.0.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.ScanMethodNonInterlaced">
      <summary>Not used in GDI+ version 1.0.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.TransformFlipHorizontal">
      <summary>Specifies that the image is to be flipped horizontally (about the vertical axis). Can be passed to the JPEG encoder as a parameter that belongs to the transformation category.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.TransformFlipVertical">
      <summary>Specifies that the image is to be flipped vertically (about the horizontal axis). Can be passed to the JPEG encoder as a parameter that belongs to the transformation category.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.TransformRotate180">
      <summary>Specifies that the image is to be rotated 180 degrees about its center. Can be passed to the JPEG encoder as a parameter that belongs to the transformation category.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.TransformRotate270">
      <summary>Specifies that the image is to be rotated clockwise 270 degrees about its center. Can be passed to the JPEG encoder as a parameter that belongs to the transformation category.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.TransformRotate90">
      <summary>Specifies that the image is to be rotated clockwise 90 degrees about its center. Can be passed to the JPEG encoder as a parameter that belongs to the transformation category.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.VersionGif87">
      <summary>Not used in GDI+ version 1.0.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.VersionGif89">
      <summary>Not used in GDI+ version 1.0.</summary>
    </member>
    <member name="T:System.Drawing.Imaging.FrameDimension">
      <summary>Provides properties that get the frame dimensions of an image. Not inheritable.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.FrameDimension.#ctor(System.Guid)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.FrameDimension" /> class using the specified <see langword="Guid" /> structure.</summary>
      <param name="guid">A <see langword="Guid" /> structure that contains a GUID for this <see cref="T:System.Drawing.Imaging.FrameDimension" /> object.</param>
    </member>
    <member name="M:System.Drawing.Imaging.FrameDimension.Equals(System.Object)">
      <summary>Returns a value that indicates whether the specified object is a <see cref="T:System.Drawing.Imaging.FrameDimension" /> equivalent to this <see cref="T:System.Drawing.Imaging.FrameDimension" /> object.</summary>
      <param name="o">The object to test.</param>
      <returns>
        <see langword="true" /> if <paramref name="o" /> is a <see cref="T:System.Drawing.Imaging.FrameDimension" /> equivalent to this <see cref="T:System.Drawing.Imaging.FrameDimension" /> object; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Imaging.FrameDimension.GetHashCode">
      <summary>Returns a hash code for this <see cref="T:System.Drawing.Imaging.FrameDimension" /> object.</summary>
      <returns>The hash code of this <see cref="T:System.Drawing.Imaging.FrameDimension" /> object.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.FrameDimension.Guid">
      <summary>Gets a globally unique identifier (GUID) that represents this <see cref="T:System.Drawing.Imaging.FrameDimension" /> object.</summary>
      <returns>A <see langword="Guid" /> structure that contains a GUID that represents this <see cref="T:System.Drawing.Imaging.FrameDimension" /> object.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.FrameDimension.Page">
      <summary>Gets the page dimension.</summary>
      <returns>The page dimension.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.FrameDimension.Resolution">
      <summary>Gets the resolution dimension.</summary>
      <returns>The resolution dimension.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.FrameDimension.Time">
      <summary>Gets the time dimension.</summary>
      <returns>The time dimension.</returns>
    </member>
    <member name="M:System.Drawing.Imaging.FrameDimension.ToString">
      <summary>Converts this <see cref="T:System.Drawing.Imaging.FrameDimension" /> object to a human-readable string.</summary>
      <returns>A string that represents this <see cref="T:System.Drawing.Imaging.FrameDimension" /> object.</returns>
    </member>
    <member name="T:System.Drawing.Imaging.ImageAttributes">
      <summary>Contains information about how bitmap and metafile colors are manipulated during rendering.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.ImageAttributes" /> class.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearBrushRemapTable">
      <summary>Clears the brush color-remap table of this <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearColorKey">
      <summary>Clears the color key (transparency range) for the default category.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearColorKey(System.Drawing.Imaging.ColorAdjustType)">
      <summary>Clears the color key (transparency range) for a specified category.</summary>
      <param name="type">An element of <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the category for which the color key is cleared.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix">
      <summary>Clears the color-adjustment matrix for the default category.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix(System.Drawing.Imaging.ColorAdjustType)">
      <summary>Clears the color-adjustment matrix for a specified category.</summary>
      <param name="type">An element of <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the category for which the color-adjustment matrix is cleared.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearGamma">
      <summary>Disables gamma correction for the default category.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearGamma(System.Drawing.Imaging.ColorAdjustType)">
      <summary>Disables gamma correction for a specified category.</summary>
      <param name="type">An element of <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the category for which gamma correction is disabled.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearNoOp">
      <summary>Clears the <see langword="NoOp" /> setting for the default category.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearNoOp(System.Drawing.Imaging.ColorAdjustType)">
      <summary>Clears the <see langword="NoOp" /> setting for a specified category.</summary>
      <param name="type">An element of <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the category for which the <see langword="NoOp" /> setting is cleared.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel">
      <summary>Clears the CMYK (cyan-magenta-yellow-black) output channel setting for the default category.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel(System.Drawing.Imaging.ColorAdjustType)">
      <summary>Clears the (cyan-magenta-yellow-black) output channel setting for a specified category.</summary>
      <param name="type">An element of <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the category for which the output channel setting is cleared.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile">
      <summary>Clears the output channel color profile setting for the default category.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile(System.Drawing.Imaging.ColorAdjustType)">
      <summary>Clears the output channel color profile setting for a specified category.</summary>
      <param name="type">An element of <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the category for which the output channel profile setting is cleared.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearRemapTable">
      <summary>Clears the color-remap table for the default category.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearRemapTable(System.Drawing.Imaging.ColorAdjustType)">
      <summary>Clears the color-remap table for a specified category.</summary>
      <param name="type">An element of <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the category for which the remap table is cleared.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearThreshold">
      <summary>Clears the threshold value for the default category.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearThreshold(System.Drawing.Imaging.ColorAdjustType)">
      <summary>Clears the threshold value for a specified category.</summary>
      <param name="type">An element of <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the category for which the threshold is cleared.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.Clone">
      <summary>Creates an exact copy of this <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object.</summary>
      <returns>The <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object this class creates, cast as an object.</returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.Dispose">
      <summary>Releases all resources used by this <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.Finalize">
      <summary>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette(System.Drawing.Imaging.ColorPalette,System.Drawing.Imaging.ColorAdjustType)">
      <summary>Adjusts the colors in a palette according to the adjustment settings of a specified category.</summary>
      <param name="palette">A <see cref="T:System.Drawing.Imaging.ColorPalette" /> that on input contains the palette to be adjusted, and on output contains the adjusted palette.</param>
      <param name="type">An element of <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the category whose adjustment settings will be applied to the palette.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable(System.Drawing.Imaging.ColorMap[])">
      <summary>Sets the color-remap table for the brush category.</summary>
      <param name="map">An array of <see cref="T:System.Drawing.Imaging.ColorMap" /> objects.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color)">
      <summary>Sets the color key for the default category.</summary>
      <param name="colorLow">The low color-key value.</param>
      <param name="colorHigh">The high color-key value.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color,System.Drawing.Imaging.ColorAdjustType)">
      <summary>Sets the color key (transparency range) for a specified category.</summary>
      <param name="colorLow">The low color-key value.</param>
      <param name="colorHigh">The high color-key value.</param>
      <param name="type">An element of <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the category for which the color key is set.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix)">
      <summary>Sets the color-adjustment matrix and the grayscale-adjustment matrix for the default category.</summary>
      <param name="newColorMatrix">The color-adjustment matrix.</param>
      <param name="grayMatrix">The grayscale-adjustment matrix.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)">
      <summary>Sets the color-adjustment matrix and the grayscale-adjustment matrix for the default category.</summary>
      <param name="newColorMatrix">The color-adjustment matrix.</param>
      <param name="grayMatrix">The grayscale-adjustment matrix.</param>
      <param name="flags">An element of <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> that specifies the type of image and color that will be affected by the color-adjustment and grayscale-adjustment matrices.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)">
      <summary>Sets the color-adjustment matrix and the grayscale-adjustment matrix for a specified category.</summary>
      <param name="newColorMatrix">The color-adjustment matrix.</param>
      <param name="grayMatrix">The grayscale-adjustment matrix.</param>
      <param name="mode">An element of <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> that specifies the type of image and color that will be affected by the color-adjustment and grayscale-adjustment matrices.</param>
      <param name="type">An element of <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the category for which the color-adjustment and grayscale-adjustment matrices are set.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix)">
      <summary>Sets the color-adjustment matrix for the default category.</summary>
      <param name="newColorMatrix">The color-adjustment matrix.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)">
      <summary>Sets the color-adjustment matrix for the default category.</summary>
      <param name="newColorMatrix">The color-adjustment matrix.</param>
      <param name="flags">An element of <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> that specifies the type of image and color that will be affected by the color-adjustment matrix.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)">
      <summary>Sets the color-adjustment matrix for a specified category.</summary>
      <param name="newColorMatrix">The color-adjustment matrix.</param>
      <param name="mode">An element of <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> that specifies the type of image and color that will be affected by the color-adjustment matrix.</param>
      <param name="type">An element of <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the category for which the color-adjustment matrix is set.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single)">
      <summary>Sets the gamma value for the default category.</summary>
      <param name="gamma">The gamma correction value.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single,System.Drawing.Imaging.ColorAdjustType)">
      <summary>Sets the gamma value for a specified category.</summary>
      <param name="gamma">The gamma correction value.</param>
      <param name="type">An element of the <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> enumeration that specifies the category for which the gamma value is set.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetNoOp">
      <summary>Turns off color adjustment for the default category. You can call the <see cref="Overload:System.Drawing.Imaging.ImageAttributes.ClearNoOp" /> method to reinstate the color-adjustment settings that were in place before the call to the <see cref="Overload:System.Drawing.Imaging.ImageAttributes.SetNoOp" /> method.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetNoOp(System.Drawing.Imaging.ColorAdjustType)">
      <summary>Turns off color adjustment for a specified category. You can call the <see cref="Overload:System.Drawing.Imaging.ImageAttributes.ClearNoOp" /> method to reinstate the color-adjustment settings that were in place before the call to the <see cref="Overload:System.Drawing.Imaging.ImageAttributes.SetNoOp" /> method.</summary>
      <param name="type">An element of <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the category for which color correction is turned off.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag)">
      <summary>Sets the CMYK (cyan-magenta-yellow-black) output channel for the default category.</summary>
      <param name="flags">An element of <see cref="T:System.Drawing.Imaging.ColorChannelFlag" /> that specifies the output channel.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag,System.Drawing.Imaging.ColorAdjustType)">
      <summary>Sets the CMYK (cyan-magenta-yellow-black) output channel for a specified category.</summary>
      <param name="flags">An element of <see cref="T:System.Drawing.Imaging.ColorChannelFlag" /> that specifies the output channel.</param>
      <param name="type">An element of <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the category for which the output channel is set.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String)">
      <summary>Sets the output channel color-profile file for the default category.</summary>
      <param name="colorProfileFilename">The path name of a color-profile file. If the color-profile file is in the %SystemRoot%\System32\Spool\Drivers\Color directory, this parameter can be the file name. Otherwise, this parameter must be the fully qualified path name.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String,System.Drawing.Imaging.ColorAdjustType)">
      <summary>Sets the output channel color-profile file for a specified category.</summary>
      <param name="colorProfileFilename">The path name of a color-profile file. If the color-profile file is in the %SystemRoot%\System32\Spool\Drivers\Color directory, this parameter can be the file name. Otherwise, this parameter must be the fully qualified path name.</param>
      <param name="type">An element of <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the category for which the output channel color-profile file is set.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[])">
      <summary>Sets the color-remap table for the default category.</summary>
      <param name="map">An array of color pairs of type <see cref="T:System.Drawing.Imaging.ColorMap" />. Each color pair contains an existing color (the first value) and the color that it will be mapped to (the second value).</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[],System.Drawing.Imaging.ColorAdjustType)">
      <summary>Sets the color-remap table for a specified category.</summary>
      <param name="map">An array of color pairs of type <see cref="T:System.Drawing.Imaging.ColorMap" />. Each color pair contains an existing color (the first value) and the color that it will be mapped to (the second value).</param>
      <param name="type">An element of <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the category for which the color-remap table is set.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single)">
      <summary>Sets the threshold (transparency range) for the default category.</summary>
      <param name="threshold">A real number that specifies the threshold value.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single,System.Drawing.Imaging.ColorAdjustType)">
      <summary>Sets the threshold (transparency range) for a specified category.</summary>
      <param name="threshold">A threshold value from 0.0 to 1.0 that is used as a breakpoint to sort colors that will be mapped to either a maximum or a minimum value.</param>
      <param name="type">An element of <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the category for which the color threshold is set.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode)">
      <summary>Sets the wrap mode that is used to decide how to tile a texture across a shape, or at shape boundaries. A texture is tiled across a shape to fill it in when the texture is smaller than the shape it is filling.</summary>
      <param name="mode">An element of <see cref="T:System.Drawing.Drawing2D.WrapMode" /> that specifies how repeated copies of an image are used to tile an area.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color)">
      <summary>Sets the wrap mode and color used to decide how to tile a texture across a shape, or at shape boundaries. A texture is tiled across a shape to fill it in when the texture is smaller than the shape it is filling.</summary>
      <param name="mode">An element of <see cref="T:System.Drawing.Drawing2D.WrapMode" /> that specifies how repeated copies of an image are used to tile an area.</param>
      <param name="color">An <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that specifies the color of pixels outside of a rendered image. This color is visible if the mode parameter is set to <see cref="F:System.Drawing.Drawing2D.WrapMode.Clamp" /> and the source rectangle passed to <see cref="Overload:System.Drawing.Graphics.DrawImage" /> is larger than the image itself.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color,System.Boolean)">
      <summary>Sets the wrap mode and color used to decide how to tile a texture across a shape, or at shape boundaries. A texture is tiled across a shape to fill it in when the texture is smaller than the shape it is filling.</summary>
      <param name="mode">An element of <see cref="T:System.Drawing.Drawing2D.WrapMode" /> that specifies how repeated copies of an image are used to tile an area.</param>
      <param name="color">A color object that specifies the color of pixels outside of a rendered image. This color is visible if the mode parameter is set to <see cref="F:System.Drawing.Drawing2D.WrapMode.Clamp" /> and the source rectangle passed to <see cref="Overload:System.Drawing.Graphics.DrawImage" /> is larger than the image itself.</param>
      <param name="clamp">This parameter has no effect. Set it to <see langword="false" />.</param>
    </member>
    <member name="T:System.Drawing.Imaging.ImageCodecFlags">
      <summary>Provides attributes of an image encoder/decoder (codec).</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.BlockingDecode">
      <summary>The decoder has blocking behavior during the decoding process.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.Builtin">
      <summary>The codec is built into GDI+.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.Decoder">
      <summary>The codec supports decoding (reading).</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.Encoder">
      <summary>The codec supports encoding (saving).</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.SeekableEncode">
      <summary>The encoder requires a seekable output stream.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.SupportBitmap">
      <summary>The codec supports raster images (bitmaps).</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.SupportVector">
      <summary>The codec supports vector images (metafiles).</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.System">
      <summary>Not used.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.User">
      <summary>Not used.</summary>
    </member>
    <member name="T:System.Drawing.Imaging.ImageCodecInfo">
      <summary>The <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> class provides the necessary storage members and methods to retrieve all pertinent information about the installed image encoders and decoders (called codecs). Not inheritable.</summary>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.Clsid">
      <summary>Gets or sets a <see cref="T:System.Guid" /> structure that contains a GUID that identifies a specific codec.</summary>
      <returns>A <see cref="T:System.Guid" /> structure that contains a GUID that identifies a specific codec.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.CodecName">
      <summary>Gets or sets a string that contains the name of the codec.</summary>
      <returns>A string that contains the name of the codec.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.DllName">
      <summary>Gets or sets string that contains the path name of the DLL that holds the codec. If the codec is not in a DLL, this pointer is <see langword="null" />.</summary>
      <returns>A string that contains the path name of the DLL that holds the codec.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.FilenameExtension">
      <summary>Gets or sets string that contains the file name extension(s) used in the codec. The extensions are separated by semicolons.</summary>
      <returns>A string that contains the file name extension(s) used in the codec.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.Flags">
      <summary>Gets or sets 32-bit value used to store additional information about the codec. This property returns a combination of flags from the <see cref="T:System.Drawing.Imaging.ImageCodecFlags" /> enumeration.</summary>
      <returns>A 32-bit value used to store additional information about the codec.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.FormatDescription">
      <summary>Gets or sets a string that describes the codec's file format.</summary>
      <returns>A string that describes the codec's file format.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.FormatID">
      <summary>Gets or sets a <see cref="T:System.Guid" /> structure that contains a GUID that identifies the codec's format.</summary>
      <returns>A <see cref="T:System.Guid" /> structure that contains a GUID that identifies the codec's format.</returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageCodecInfo.GetImageDecoders">
      <summary>Returns an array of <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> objects that contain information about the image decoders built into GDI+.</summary>
      <returns>An array of <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> objects. Each <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> object in the array contains information about one of the built-in image decoders.</returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageCodecInfo.GetImageEncoders">
      <summary>Returns an array of <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> objects that contain information about the image encoders built into GDI+.</summary>
      <returns>An array of <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> objects. Each <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> object in the array contains information about one of the built-in image encoders.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.MimeType">
      <summary>Gets or sets a string that contains the codec's Multipurpose Internet Mail Extensions (MIME) type.</summary>
      <returns>A string that contains the codec's Multipurpose Internet Mail Extensions (MIME) type.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.SignatureMasks">
      <summary>Gets or sets a two dimensional array of bytes that can be used as a filter.</summary>
      <returns>A two dimensional array of bytes that can be used as a filter.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.SignaturePatterns">
      <summary>Gets or sets a two dimensional array of bytes that represents the signature of the codec.</summary>
      <returns>A two dimensional array of bytes that represents the signature of the codec.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.Version">
      <summary>Gets or sets the version number of the codec.</summary>
      <returns>The version number of the codec.</returns>
    </member>
    <member name="T:System.Drawing.Imaging.ImageFlags">
      <summary>Specifies the attributes of the pixel data contained in an <see cref="T:System.Drawing.Image" /> object. The <see cref="P:System.Drawing.Image.Flags" /> property returns a member of this enumeration.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.Caching">
      <summary>The pixel data can be cached for faster access.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ColorSpaceCmyk">
      <summary>The pixel data uses a CMYK color space.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ColorSpaceGray">
      <summary>The pixel data is grayscale.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ColorSpaceRgb">
      <summary>The pixel data uses an RGB color space.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ColorSpaceYcbcr">
      <summary>Specifies that the image is stored using a YCBCR color space.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ColorSpaceYcck">
      <summary>Specifies that the image is stored using a YCCK color space.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.HasAlpha">
      <summary>The pixel data contains alpha information.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.HasRealDpi">
      <summary>Specifies that dots per inch information is stored in the image.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.HasRealPixelSize">
      <summary>Specifies that the pixel size is stored in the image.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.HasTranslucent">
      <summary>Specifies that the pixel data has alpha values other than 0 (transparent) and 255 (opaque).</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.None">
      <summary>There is no format information.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.PartiallyScalable">
      <summary>The pixel data is partially scalable, but there are some limitations.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ReadOnly">
      <summary>The pixel data is read-only.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.Scalable">
      <summary>The pixel data is scalable.</summary>
    </member>
    <member name="T:System.Drawing.Imaging.ImageFormat">
      <summary>Specifies the file format of the image. Not inheritable.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageFormat.#ctor(System.Guid)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.ImageFormat" /> class by using the specified <see cref="T:System.Guid" /> structure.</summary>
      <param name="guid">The <see cref="T:System.Guid" /> structure that specifies a particular image format.</param>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Bmp">
      <summary>Gets the bitmap (BMP) image format.</summary>
      <returns>An <see cref="T:System.Drawing.Imaging.ImageFormat" /> object that indicates the bitmap image format.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Emf">
      <summary>Gets the enhanced metafile (EMF) image format.</summary>
      <returns>An <see cref="T:System.Drawing.Imaging.ImageFormat" /> object that indicates the enhanced metafile image format.</returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageFormat.Equals(System.Object)">
      <summary>Returns a value that indicates whether the specified object is an <see cref="T:System.Drawing.Imaging.ImageFormat" /> object that is equivalent to this <see cref="T:System.Drawing.Imaging.ImageFormat" /> object.</summary>
      <param name="o">The object to test.</param>
      <returns>
        <see langword="true" /> if <paramref name="o" /> is an <see cref="T:System.Drawing.Imaging.ImageFormat" /> object that is equivalent to this <see cref="T:System.Drawing.Imaging.ImageFormat" /> object; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Exif">
      <summary>Gets the Exchangeable Image File (Exif) format.</summary>
      <returns>An <see cref="T:System.Drawing.Imaging.ImageFormat" /> object that indicates the Exif format.</returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageFormat.GetHashCode">
      <summary>Returns a hash code value that represents this object.</summary>
      <returns>A hash code that represents this object.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Gif">
      <summary>Gets the Graphics Interchange Format (GIF) image format.</summary>
      <returns>An <see cref="T:System.Drawing.Imaging.ImageFormat" /> object that indicates the GIF image format.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Guid">
      <summary>Gets a <see cref="T:System.Guid" /> structure that represents this <see cref="T:System.Drawing.Imaging.ImageFormat" /> object.</summary>
      <returns>A <see cref="T:System.Guid" /> structure that represents this <see cref="T:System.Drawing.Imaging.ImageFormat" /> object.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Icon">
      <summary>Gets the Windows icon image format.</summary>
      <returns>An <see cref="T:System.Drawing.Imaging.ImageFormat" /> object that indicates the Windows icon image format.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Jpeg">
      <summary>Gets the Joint Photographic Experts Group (JPEG) image format.</summary>
      <returns>An <see cref="T:System.Drawing.Imaging.ImageFormat" /> object that indicates the JPEG image format.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.MemoryBmp">
      <summary>Gets the format of a bitmap in memory.</summary>
      <returns>An <see cref="T:System.Drawing.Imaging.ImageFormat" /> object that indicates the format of a bitmap in memory.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Png">
      <summary>Gets the W3C Portable Network Graphics (PNG) image format.</summary>
      <returns>An <see cref="T:System.Drawing.Imaging.ImageFormat" /> object that indicates the PNG image format.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Tiff">
      <summary>Gets the Tagged Image File Format (TIFF) image format.</summary>
      <returns>An <see cref="T:System.Drawing.Imaging.ImageFormat" /> object that indicates the TIFF image format.</returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageFormat.ToString">
      <summary>Converts this <see cref="T:System.Drawing.Imaging.ImageFormat" /> object to a human-readable string.</summary>
      <returns>A string that represents this <see cref="T:System.Drawing.Imaging.ImageFormat" /> object.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Wmf">
      <summary>Gets the Windows metafile (WMF) image format.</summary>
      <returns>An <see cref="T:System.Drawing.Imaging.ImageFormat" /> object that indicates the Windows metafile image format.</returns>
    </member>
    <member name="T:System.Drawing.Imaging.ImageLockMode">
      <summary>Specifies flags that are passed to the flags parameter of the <see cref="Overload:System.Drawing.Bitmap.LockBits" /> method. The <see cref="Overload:System.Drawing.Bitmap.LockBits" /> method locks a portion of an image so that you can read or write the pixel data.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageLockMode.ReadOnly">
      <summary>Specifies that a portion of the image is locked for reading.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageLockMode.ReadWrite">
      <summary>Specifies that a portion of the image is locked for reading or writing.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageLockMode.UserInputBuffer">
      <summary>Specifies that the buffer used for reading or writing pixel data is allocated by the user. If this flag is set, the <paramref name="flags" /> parameter of the <see cref="Overload:System.Drawing.Bitmap.LockBits" /> method serves as an input parameter (and possibly as an output parameter). If this flag is cleared, then the <paramref name="flags" /> parameter serves only as an output parameter.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageLockMode.WriteOnly">
      <summary>Specifies that a portion of the image is locked for writing.</summary>
    </member>
    <member name="T:System.Drawing.Imaging.Metafile">
      <summary>Defines a graphic metafile. A metafile contains records that describe a sequence of graphics operations that can be recorded (constructed) and played back (displayed). This class is not inheritable.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified handle.</summary>
      <param name="henhmetafile">A handle to an enhanced metafile.</param>
      <param name="deleteEmf">
        <see langword="true" /> to delete the enhanced metafile handle when the <see cref="T:System.Drawing.Imaging.Metafile" /> is deleted; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Imaging.EmfType)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified handle to a device context and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <param name="referenceHdc">The handle to a device context.</param>
      <param name="emfType">An <see cref="T:System.Drawing.Imaging.EmfType" /> that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Imaging.EmfType,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified handle to a device context and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />. A string can be supplied to name the file.</summary>
      <param name="referenceHdc">The handle to a device context.</param>
      <param name="emfType">An <see cref="T:System.Drawing.Imaging.EmfType" /> that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="description">A descriptive name for the new <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Imaging.WmfPlaceableFileHeader)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified handle and a <see cref="T:System.Drawing.Imaging.WmfPlaceableFileHeader" />.</summary>
      <param name="hmetafile">A windows handle to a <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="wmfHeader">A <see cref="T:System.Drawing.Imaging.WmfPlaceableFileHeader" />.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Imaging.WmfPlaceableFileHeader,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified handle and a <see cref="T:System.Drawing.Imaging.WmfPlaceableFileHeader" />. Also, the <paramref name="deleteWmf" /> parameter can be used to delete the handle when the metafile is deleted.</summary>
      <param name="hmetafile">A windows handle to a <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="wmfHeader">A <see cref="T:System.Drawing.Imaging.WmfPlaceableFileHeader" />.</param>
      <param name="deleteWmf">
        <see langword="true" /> to delete the handle to the new <see cref="T:System.Drawing.Imaging.Metafile" /> when the <see cref="T:System.Drawing.Imaging.Metafile" /> is deleted; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Rectangle)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified device context, bounded by the specified rectangle.</summary>
      <param name="referenceHdc">The handle to a device context.</param>
      <param name="frameRect">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified device context, bounded by the specified rectangle that uses the supplied unit of measure.</summary>
      <param name="referenceHdc">The handle to a device context.</param>
      <param name="frameRect">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="frameUnit">A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> that specifies the unit of measure for <paramref name="frameRect" />.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified device context, bounded by the specified rectangle that uses the supplied unit of measure, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <param name="referenceHdc">The handle to a device context.</param>
      <param name="frameRect">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="frameUnit">A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> that specifies the unit of measure for <paramref name="frameRect" />.</param>
      <param name="type">An <see cref="T:System.Drawing.Imaging.EmfType" /> that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified device context, bounded by the specified rectangle that uses the supplied unit of measure, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />. A string can be provided to name the file.</summary>
      <param name="referenceHdc">The handle to a device context.</param>
      <param name="frameRect">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="frameUnit">A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> that specifies the unit of measure for <paramref name="frameRect" />.</param>
      <param name="type">An <see cref="T:System.Drawing.Imaging.EmfType" /> that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="desc">A <see cref="T:System.String" /> that contains a descriptive name for the new <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.RectangleF)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified device context, bounded by the specified rectangle.</summary>
      <param name="referenceHdc">The handle to a device context.</param>
      <param name="frameRect">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified device context, bounded by the specified rectangle that uses the supplied unit of measure.</summary>
      <param name="referenceHdc">The handle to a device context.</param>
      <param name="frameRect">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="frameUnit">A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> that specifies the unit of measure for <paramref name="frameRect" />.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified device context, bounded by the specified rectangle that uses the supplied unit of measure, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <param name="referenceHdc">The handle to a device context.</param>
      <param name="frameRect">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="frameUnit">A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> that specifies the unit of measure for <paramref name="frameRect" />.</param>
      <param name="type">An <see cref="T:System.Drawing.Imaging.EmfType" /> that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified device context, bounded by the specified rectangle that uses the supplied unit of measure, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />. A string can be provided to name the file.</summary>
      <param name="referenceHdc">The handle to a device context.</param>
      <param name="frameRect">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="frameUnit">A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> that specifies the unit of measure for <paramref name="frameRect" />.</param>
      <param name="type">An <see cref="T:System.Drawing.Imaging.EmfType" /> that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="description">A <see cref="T:System.String" /> that contains a descriptive name for the new <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified data stream.</summary>
      <param name="stream">The <see cref="T:System.IO.Stream" /> from which to create the new <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified data stream.</summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> that contains the data for this <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="referenceHdc">A Windows handle to a device context.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Imaging.EmfType)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified data stream, a Windows handle to a device context, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> that contains the data for this <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="referenceHdc">A Windows handle to a device context.</param>
      <param name="type">An <see cref="T:System.Drawing.Imaging.EmfType" /> that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Imaging.EmfType,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified data stream, a Windows handle to a device context, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />. Also, a string that contains a descriptive name for the new <see cref="T:System.Drawing.Imaging.Metafile" /> can be added.</summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> that contains the data for this <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="referenceHdc">A Windows handle to a device context.</param>
      <param name="type">An <see cref="T:System.Drawing.Imaging.EmfType" /> that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="description">A <see cref="T:System.String" /> that contains a descriptive name for the new <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Rectangle)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified data stream, a Windows handle to a device context, and a <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> that contains the data for this <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="referenceHdc">A Windows handle to a device context.</param>
      <param name="frameRect">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified data stream, a Windows handle to a device context, a <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />, and the supplied unit of measure.</summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> that contains the data for this <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="referenceHdc">A Windows handle to a device context.</param>
      <param name="frameRect">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="frameUnit">A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> that specifies the unit of measure for <paramref name="frameRect" />.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified data stream, a Windows handle to a device context, a <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />, the supplied unit of measure, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> that contains the data for this <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="referenceHdc">A Windows handle to a device context.</param>
      <param name="frameRect">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="frameUnit">A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> that specifies the unit of measure for <paramref name="frameRect" />.</param>
      <param name="type">An <see cref="T:System.Drawing.Imaging.EmfType" /> that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified data stream, a Windows handle to a device context, a <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />, the supplied unit of measure, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />. A string that contains a descriptive name for the new <see cref="T:System.Drawing.Imaging.Metafile" /> can be added.</summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> that contains the data for this <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="referenceHdc">A Windows handle to a device context.</param>
      <param name="frameRect">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="frameUnit">A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> that specifies the unit of measure for <paramref name="frameRect" />.</param>
      <param name="type">An <see cref="T:System.Drawing.Imaging.EmfType" /> that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="description">A <see cref="T:System.String" /> that contains a descriptive name for the new <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.RectangleF)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified data stream, a Windows handle to a device context, and a <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> that contains the data for this <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="referenceHdc">A Windows handle to a device context.</param>
      <param name="frameRect">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified data stream, a Windows handle to a device context, a <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />, and the supplied unit of measure.</summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> that contains the data for this <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="referenceHdc">A Windows handle to a device context.</param>
      <param name="frameRect">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="frameUnit">A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> that specifies the unit of measure for <paramref name="frameRect" />.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified data stream, a Windows handle to a device context, a <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />, the supplied unit of measure, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> that contains the data for this <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="referenceHdc">A Windows handle to a device context.</param>
      <param name="frameRect">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="frameUnit">A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> that specifies the unit of measure for <paramref name="frameRect" />.</param>
      <param name="type">An <see cref="T:System.Drawing.Imaging.EmfType" /> that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified data stream, a Windows handle to a device context, a <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />, the supplied unit of measure, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />. A string that contains a descriptive name for the new <see cref="T:System.Drawing.Imaging.Metafile" /> can be added.</summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> that contains the data for this <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="referenceHdc">A Windows handle to a device context.</param>
      <param name="frameRect">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="frameUnit">A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> that specifies the unit of measure for <paramref name="frameRect" />.</param>
      <param name="type">An <see cref="T:System.Drawing.Imaging.EmfType" /> that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="description">A <see cref="T:System.String" /> that contains a descriptive name for the new <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified file name.</summary>
      <param name="filename">A <see cref="T:System.String" /> that represents the file name from which to create the new <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class with the specified file name.</summary>
      <param name="fileName">A <see cref="T:System.String" /> that represents the file name of the new <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="referenceHdc">A Windows handle to a device context.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Imaging.EmfType)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class with the specified file name, a Windows handle to a device context, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <param name="fileName">A <see cref="T:System.String" /> that represents the file name of the new <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="referenceHdc">A Windows handle to a device context.</param>
      <param name="type">An <see cref="T:System.Drawing.Imaging.EmfType" /> that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Imaging.EmfType,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class with the specified file name, a Windows handle to a device context, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />. A descriptive string can be added, as well.</summary>
      <param name="fileName">A <see cref="T:System.String" /> that represents the file name of the new <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="referenceHdc">A Windows handle to a device context.</param>
      <param name="type">An <see cref="T:System.Drawing.Imaging.EmfType" /> that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="description">A <see cref="T:System.String" /> that contains a descriptive name for the new <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Rectangle)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class with the specified file name, a Windows handle to a device context, and a <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <param name="fileName">A <see cref="T:System.String" /> that represents the file name of the new <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="referenceHdc">A Windows handle to a device context.</param>
      <param name="frameRect">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class with the specified file name, a Windows handle to a device context, a <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />, and the supplied unit of measure.</summary>
      <param name="fileName">A <see cref="T:System.String" /> that represents the file name of the new <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="referenceHdc">A Windows handle to a device context.</param>
      <param name="frameRect">A <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="frameUnit">A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> that specifies the unit of measure for <paramref name="frameRect" />.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class with the specified file name, a Windows handle to a device context, a <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />, the supplied unit of measure, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <param name="fileName">A <see cref="T:System.String" /> that represents the file name of the new <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="referenceHdc">A Windows handle to a device context.</param>
      <param name="frameRect">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="frameUnit">A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> that specifies the unit of measure for <paramref name="frameRect" />.</param>
      <param name="type">An <see cref="T:System.Drawing.Imaging.EmfType" /> that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class with the specified file name, a Windows handle to a device context, a <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />, the supplied unit of measure, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />. A descriptive string can also be added.</summary>
      <param name="fileName">A <see cref="T:System.String" /> that represents the file name of the new <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="referenceHdc">A Windows handle to a device context.</param>
      <param name="frameRect">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="frameUnit">A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> that specifies the unit of measure for <paramref name="frameRect" />.</param>
      <param name="type">An <see cref="T:System.Drawing.Imaging.EmfType" /> that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="description">A <see cref="T:System.String" /> that contains a descriptive name for the new <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class with the specified file name, a Windows handle to a device context, a <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />, and the supplied unit of measure. A descriptive string can also be added.</summary>
      <param name="fileName">A <see cref="T:System.String" /> that represents the file name of the new <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="referenceHdc">A Windows handle to a device context.</param>
      <param name="frameRect">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="frameUnit">A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> that specifies the unit of measure for <paramref name="frameRect" />.</param>
      <param name="description">A <see cref="T:System.String" /> that contains a descriptive name for the new <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.RectangleF)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class with the specified file name, a Windows handle to a device context, and a <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <param name="fileName">A <see cref="T:System.String" /> that represents the file name of the new <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="referenceHdc">A Windows handle to a device context.</param>
      <param name="frameRect">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class with the specified file name, a Windows handle to a device context, a <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />, and the supplied unit of measure.</summary>
      <param name="fileName">A <see cref="T:System.String" /> that represents the file name of the new <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="referenceHdc">A Windows handle to a device context.</param>
      <param name="frameRect">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="frameUnit">A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> that specifies the unit of measure for <paramref name="frameRect" />.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class with the specified file name, a Windows handle to a device context, a <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />, the supplied unit of measure, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <param name="fileName">A <see cref="T:System.String" /> that represents the file name of the new <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="referenceHdc">A Windows handle to a device context.</param>
      <param name="frameRect">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="frameUnit">A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> that specifies the unit of measure for <paramref name="frameRect" />.</param>
      <param name="type">An <see cref="T:System.Drawing.Imaging.EmfType" /> that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class with the specified file name, a Windows handle to a device context, a <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />, the supplied unit of measure, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />. A descriptive string can also be added.</summary>
      <param name="fileName">A <see cref="T:System.String" /> that represents the file name of the new <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="referenceHdc">A Windows handle to a device context.</param>
      <param name="frameRect">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="frameUnit">A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> that specifies the unit of measure for <paramref name="frameRect" />.</param>
      <param name="type">An <see cref="T:System.Drawing.Imaging.EmfType" /> that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="description">A <see cref="T:System.String" /> that contains a descriptive name for the new <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class with the specified file name, a Windows handle to a device context, a <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />, and the supplied unit of measure. A descriptive string can also be added.</summary>
      <param name="fileName">A <see cref="T:System.String" /> that represents the file name of the new <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="referenceHdc">A Windows handle to a device context.</param>
      <param name="frameRect">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
      <param name="frameUnit">A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> that specifies the unit of measure for <paramref name="frameRect" />.</param>
      <param name="desc">A <see cref="T:System.String" /> that contains a descriptive name for the new <see cref="T:System.Drawing.Imaging.Metafile" />.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetHenhmetafile">
      <summary>Returns a Windows handle to an enhanced <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <returns>A Windows handle to this enhanced <see cref="T:System.Drawing.Imaging.Metafile" />.</returns>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetMetafileHeader">
      <summary>Returns the <see cref="T:System.Drawing.Imaging.MetafileHeader" /> associated with this <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <returns>The <see cref="T:System.Drawing.Imaging.MetafileHeader" /> associated with this <see cref="T:System.Drawing.Imaging.Metafile" />.</returns>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetMetafileHeader(System.IntPtr)">
      <summary>Returns the <see cref="T:System.Drawing.Imaging.MetafileHeader" /> associated with the specified <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <param name="henhmetafile">The handle to the enhanced <see cref="T:System.Drawing.Imaging.Metafile" /> for which a header is returned.</param>
      <returns>The <see cref="T:System.Drawing.Imaging.MetafileHeader" /> associated with the specified <see cref="T:System.Drawing.Imaging.Metafile" />.</returns>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetMetafileHeader(System.IntPtr,System.Drawing.Imaging.WmfPlaceableFileHeader)">
      <summary>Returns the <see cref="T:System.Drawing.Imaging.MetafileHeader" /> associated with the specified <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <param name="hmetafile">The handle to the <see cref="T:System.Drawing.Imaging.Metafile" /> for which to return a header.</param>
      <param name="wmfHeader">A <see cref="T:System.Drawing.Imaging.WmfPlaceableFileHeader" />.</param>
      <returns>The <see cref="T:System.Drawing.Imaging.MetafileHeader" /> associated with the specified <see cref="T:System.Drawing.Imaging.Metafile" />.</returns>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetMetafileHeader(System.IO.Stream)">
      <summary>Returns the <see cref="T:System.Drawing.Imaging.MetafileHeader" /> associated with the specified <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> containing the <see cref="T:System.Drawing.Imaging.Metafile" /> for which a header is retrieved.</param>
      <returns>The <see cref="T:System.Drawing.Imaging.MetafileHeader" /> associated with the specified <see cref="T:System.Drawing.Imaging.Metafile" />.</returns>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetMetafileHeader(System.String)">
      <summary>Returns the <see cref="T:System.Drawing.Imaging.MetafileHeader" /> associated with the specified <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <param name="fileName">A <see cref="T:System.String" /> containing the name of the <see cref="T:System.Drawing.Imaging.Metafile" /> for which a header is retrieved.</param>
      <returns>The <see cref="T:System.Drawing.Imaging.MetafileHeader" /> associated with the specified <see cref="T:System.Drawing.Imaging.Metafile" />.</returns>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.PlayRecord(System.Drawing.Imaging.EmfPlusRecordType,System.Int32,System.Int32,System.Byte[])">
      <summary>Plays an individual metafile record.</summary>
      <param name="recordType">Element of the <see cref="T:System.Drawing.Imaging.EmfPlusRecordType" /> that specifies the type of metafile record being played.</param>
      <param name="flags">A set of flags that specify attributes of the record.</param>
      <param name="dataSize">The number of bytes in the record data.</param>
      <param name="data">An array of bytes that contains the record data.</param>
    </member>
    <member name="T:System.Drawing.Imaging.MetafileFrameUnit">
      <summary>Specifies the unit of measurement for the rectangle used to size and position a metafile. This is specified during the creation of the <see cref="T:System.Drawing.Imaging.Metafile" /> object.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.Document">
      <summary>The unit of measurement is 1/300 of an inch.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.GdiCompatible">
      <summary>The unit of measurement is 0.01 millimeter. Provided for compatibility with GDI.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.Inch">
      <summary>The unit of measurement is 1 inch.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.Millimeter">
      <summary>The unit of measurement is 1 millimeter.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.Pixel">
      <summary>The unit of measurement is 1 pixel.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.Point">
      <summary>The unit of measurement is 1 printer's point.</summary>
    </member>
    <member name="T:System.Drawing.Imaging.MetafileHeader">
      <summary>Contains attributes of an associated <see cref="T:System.Drawing.Imaging.Metafile" />. Not inheritable.</summary>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.Bounds">
      <summary>Gets a <see cref="T:System.Drawing.Rectangle" /> that bounds the associated <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> that bounds the associated <see cref="T:System.Drawing.Imaging.Metafile" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.DpiX">
      <summary>Gets the horizontal resolution, in dots per inch, of the associated <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <returns>The horizontal resolution, in dots per inch, of the associated <see cref="T:System.Drawing.Imaging.Metafile" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.DpiY">
      <summary>Gets the vertical resolution, in dots per inch, of the associated <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <returns>The vertical resolution, in dots per inch, of the associated <see cref="T:System.Drawing.Imaging.Metafile" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.EmfPlusHeaderSize">
      <summary>Gets the size, in bytes, of the enhanced metafile plus header file.</summary>
      <returns>The size, in bytes, of the enhanced metafile plus header file.</returns>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsDisplay">
      <summary>Returns a value that indicates whether the associated <see cref="T:System.Drawing.Imaging.Metafile" /> is device dependent.</summary>
      <returns>
        <see langword="true" /> if the associated <see cref="T:System.Drawing.Imaging.Metafile" /> is device dependent; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsEmf">
      <summary>Returns a value that indicates whether the associated <see cref="T:System.Drawing.Imaging.Metafile" /> is in the Windows enhanced metafile format.</summary>
      <returns>
        <see langword="true" /> if the associated <see cref="T:System.Drawing.Imaging.Metafile" /> is in the Windows enhanced metafile format; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsEmfOrEmfPlus">
      <summary>Returns a value that indicates whether the associated <see cref="T:System.Drawing.Imaging.Metafile" /> is in the Windows enhanced metafile format or the Windows enhanced metafile plus format.</summary>
      <returns>
        <see langword="true" /> if the associated <see cref="T:System.Drawing.Imaging.Metafile" /> is in the Windows enhanced metafile format or the Windows enhanced metafile plus format; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsEmfPlus">
      <summary>Returns a value that indicates whether the associated <see cref="T:System.Drawing.Imaging.Metafile" /> is in the Windows enhanced metafile plus format.</summary>
      <returns>
        <see langword="true" /> if the associated <see cref="T:System.Drawing.Imaging.Metafile" /> is in the Windows enhanced metafile plus format; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsEmfPlusDual">
      <summary>Returns a value that indicates whether the associated <see cref="T:System.Drawing.Imaging.Metafile" /> is in the Dual enhanced metafile format. This format supports both the enhanced and the enhanced plus format.</summary>
      <returns>
        <see langword="true" /> if the associated <see cref="T:System.Drawing.Imaging.Metafile" /> is in the Dual enhanced metafile format; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsEmfPlusOnly">
      <summary>Returns a value that indicates whether the associated <see cref="T:System.Drawing.Imaging.Metafile" /> supports only the Windows enhanced metafile plus format.</summary>
      <returns>
        <see langword="true" /> if the associated <see cref="T:System.Drawing.Imaging.Metafile" /> supports only the Windows enhanced metafile plus format; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsWmf">
      <summary>Returns a value that indicates whether the associated <see cref="T:System.Drawing.Imaging.Metafile" /> is in the Windows metafile format.</summary>
      <returns>
        <see langword="true" /> if the associated <see cref="T:System.Drawing.Imaging.Metafile" /> is in the Windows metafile format; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsWmfPlaceable">
      <summary>Returns a value that indicates whether the associated <see cref="T:System.Drawing.Imaging.Metafile" /> is in the Windows placeable metafile format.</summary>
      <returns>
        <see langword="true" /> if the associated <see cref="T:System.Drawing.Imaging.Metafile" /> is in the Windows placeable metafile format; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.LogicalDpiX">
      <summary>Gets the logical horizontal resolution, in dots per inch, of the associated <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <returns>The logical horizontal resolution, in dots per inch, of the associated <see cref="T:System.Drawing.Imaging.Metafile" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.LogicalDpiY">
      <summary>Gets the logical vertical resolution, in dots per inch, of the associated <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <returns>The logical vertical resolution, in dots per inch, of the associated <see cref="T:System.Drawing.Imaging.Metafile" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.MetafileSize">
      <summary>Gets the size, in bytes, of the associated <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <returns>The size, in bytes, of the associated <see cref="T:System.Drawing.Imaging.Metafile" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.Type">
      <summary>Gets the type of the associated <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <returns>A <see cref="T:System.Drawing.Imaging.MetafileType" /> enumeration that represents the type of the associated <see cref="T:System.Drawing.Imaging.Metafile" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.Version">
      <summary>Gets the version number of the associated <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <returns>The version number of the associated <see cref="T:System.Drawing.Imaging.Metafile" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.WmfHeader">
      <summary>Gets the Windows metafile (WMF) header file for the associated <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <returns>A <see cref="T:System.Drawing.Imaging.MetaHeader" /> that contains the WMF header file for the associated <see cref="T:System.Drawing.Imaging.Metafile" />.</returns>
    </member>
    <member name="T:System.Drawing.Imaging.MetafileType">
      <summary>Specifies types of metafiles. The <see cref="P:System.Drawing.Imaging.MetafileHeader.Type" /> property returns a member of this enumeration.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileType.Emf">
      <summary>Specifies an Enhanced Metafile (EMF) file. Such a file contains only GDI records.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileType.EmfPlusDual">
      <summary>Specifies an EMF+ Dual file. Such a file contains GDI+ records along with alternative GDI records and can be displayed by using either GDI or GDI+. Displaying the records using GDI may cause some quality degradation.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileType.EmfPlusOnly">
      <summary>Specifies an EMF+ file. Such a file contains only GDI+ records and must be displayed by using GDI+. Displaying the records using GDI may cause unpredictable results.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileType.Invalid">
      <summary>Specifies a metafile format that is not recognized in GDI+.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileType.Wmf">
      <summary>Specifies a WMF (Windows Metafile) file. Such a file contains only GDI records.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileType.WmfPlaceable">
      <summary>Specifies a WMF (Windows Metafile) file that has a placeable metafile header in front of it.</summary>
    </member>
    <member name="T:System.Drawing.Imaging.MetaHeader">
      <summary>Contains information about a windows-format (WMF) metafile.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.MetaHeader.#ctor">
      <summary>Initializes a new instance of the <see langword="MetaHeader" /> class.</summary>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.HeaderSize">
      <summary>Gets or sets the size, in bytes, of the header file.</summary>
      <returns>The size, in bytes, of the header file.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.MaxRecord">
      <summary>Gets or sets the size, in bytes, of the largest record in the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object.</summary>
      <returns>The size, in bytes, of the largest record in the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.NoObjects">
      <summary>Gets or sets the maximum number of objects that exist in the <see cref="T:System.Drawing.Imaging.Metafile" /> object at the same time.</summary>
      <returns>The maximum number of objects that exist in the <see cref="T:System.Drawing.Imaging.Metafile" /> object at the same time.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.NoParameters">
      <summary>Not used. Always returns 0.</summary>
      <returns>Always 0.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.Size">
      <summary>Gets or sets the size, in bytes, of the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object.</summary>
      <returns>The size, in bytes, of the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.Type">
      <summary>Gets or sets the type of the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object.</summary>
      <returns>The type of the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.Version">
      <summary>Gets or sets the version number of the header format.</summary>
      <returns>The version number of the header format.</returns>
    </member>
    <member name="T:System.Drawing.Imaging.PaletteFlags">
      <summary>Specifies the type of color data in the system palette. The data can be color data with alpha, grayscale data only, or halftone data.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PaletteFlags.GrayScale">
      <summary>Grayscale data.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PaletteFlags.Halftone">
      <summary>Halftone data.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PaletteFlags.HasAlpha">
      <summary>Alpha data.</summary>
    </member>
    <member name="T:System.Drawing.Imaging.PixelFormat">
      <summary>Specifies the format of the color data for each pixel in the image.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Alpha">
      <summary>The pixel data contains alpha values that are not premultiplied.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Canonical">
      <summary>The default pixel format of 32 bits per pixel. The format specifies 24-bit color depth and an 8-bit alpha channel.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.DontCare">
      <summary>No pixel format is specified.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Extended">
      <summary>Reserved.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format16bppArgb1555">
      <summary>The pixel format is 16 bits per pixel. The color information specifies 32,768 shades of color, of which 5 bits are red, 5 bits are green, 5 bits are blue, and 1 bit is alpha.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format16bppGrayScale">
      <summary>The pixel format is 16 bits per pixel. The color information specifies 65536 shades of gray.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format16bppRgb555">
      <summary>Specifies that the format is 16 bits per pixel; 5 bits each are used for the red, green, and blue components. The remaining bit is not used.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format16bppRgb565">
      <summary>Specifies that the format is 16 bits per pixel; 5 bits are used for the red component, 6 bits are used for the green component, and 5 bits are used for the blue component.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format1bppIndexed">
      <summary>Specifies that the pixel format is 1 bit per pixel and that it uses indexed color. The color table therefore has two colors in it.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format24bppRgb">
      <summary>Specifies that the format is 24 bits per pixel; 8 bits each are used for the red, green, and blue components.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format32bppArgb">
      <summary>Specifies that the format is 32 bits per pixel; 8 bits each are used for the alpha, red, green, and blue components.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format32bppPArgb">
      <summary>Specifies that the format is 32 bits per pixel; 8 bits each are used for the alpha, red, green, and blue components. The red, green, and blue components are premultiplied, according to the alpha component.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format32bppRgb">
      <summary>Specifies that the format is 32 bits per pixel; 8 bits each are used for the red, green, and blue components. The remaining 8 bits are not used.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb">
      <summary>Specifies that the format is 48 bits per pixel; 16 bits each are used for the red, green, and blue components.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format4bppIndexed">
      <summary>Specifies that the format is 4 bits per pixel, indexed.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format64bppArgb">
      <summary>Specifies that the format is 64 bits per pixel; 16 bits each are used for the alpha, red, green, and blue components.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format64bppPArgb">
      <summary>Specifies that the format is 64 bits per pixel; 16 bits each are used for the alpha, red, green, and blue components. The red, green, and blue components are premultiplied according to the alpha component.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format8bppIndexed">
      <summary>Specifies that the format is 8 bits per pixel, indexed. The color table therefore has 256 colors in it.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Gdi">
      <summary>The pixel data contains GDI colors.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Indexed">
      <summary>The pixel data contains color-indexed values, which means the values are an index to colors in the system color table, as opposed to individual color values.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Max">
      <summary>The maximum value for this enumeration.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.PAlpha">
      <summary>The pixel format contains premultiplied alpha values.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Undefined">
      <summary>The pixel format is undefined.</summary>
    </member>
    <member name="T:System.Drawing.Imaging.PlayRecordCallback">
      <summary>This delegate is not used. For an example of enumerating the records of a metafile, see <see cref="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc)" />.</summary>
      <param name="recordType">Not used.</param>
      <param name="flags">Not used.</param>
      <param name="dataSize">Not used.</param>
      <param name="recordData">Not used.</param>
    </member>
    <member name="T:System.Drawing.Imaging.PropertyItem">
      <summary>Encapsulates a metadata property to be included in an image file. Not inheritable.</summary>
    </member>
    <member name="P:System.Drawing.Imaging.PropertyItem.Id">
      <summary>Gets or sets the ID of the property.</summary>
      <returns>The integer that represents the ID of the property.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.PropertyItem.Len">
      <summary>Gets or sets the length (in bytes) of the <see cref="P:System.Drawing.Imaging.PropertyItem.Value" /> property.</summary>
      <returns>An integer that represents the length (in bytes) of the <see cref="P:System.Drawing.Imaging.PropertyItem.Value" /> byte array.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.PropertyItem.Type">
      <summary>Gets or sets an integer that defines the type of data contained in the <see cref="P:System.Drawing.Imaging.PropertyItem.Value" /> property.</summary>
      <returns>An integer that defines the type of data contained in <see cref="P:System.Drawing.Imaging.PropertyItem.Value" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.PropertyItem.Value">
      <summary>Gets or sets the value of the property item.</summary>
      <returns>A byte array that represents the value of the property item.</returns>
    </member>
    <member name="T:System.Drawing.Imaging.WmfPlaceableFileHeader">
      <summary>Defines a placeable metafile. Not inheritable.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.WmfPlaceableFileHeader.#ctor">
      <summary>Initializes a new instance of the <see langword="WmfPlaceableFileHeader" /> class.</summary>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.BboxBottom">
      <summary>Gets or sets the y-coordinate of the lower-right corner of the bounding rectangle of the metafile image on the output device.</summary>
      <returns>The y-coordinate of the lower-right corner of the bounding rectangle of the metafile image on the output device.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.BboxLeft">
      <summary>Gets or sets the x-coordinate of the upper-left corner of the bounding rectangle of the metafile image on the output device.</summary>
      <returns>The x-coordinate of the upper-left corner of the bounding rectangle of the metafile image on the output device.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.BboxRight">
      <summary>Gets or sets the x-coordinate of the lower-right corner of the bounding rectangle of the metafile image on the output device.</summary>
      <returns>The x-coordinate of the lower-right corner of the bounding rectangle of the metafile image on the output device.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.BboxTop">
      <summary>Gets or sets the y-coordinate of the upper-left corner of the bounding rectangle of the metafile image on the output device.</summary>
      <returns>The y-coordinate of the upper-left corner of the bounding rectangle of the metafile image on the output device.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.Checksum">
      <summary>Gets or sets the checksum value for the previous ten <see langword="WORD" /> s in the header.</summary>
      <returns>The checksum value for the previous ten <see langword="WORD" /> s in the header.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.Hmf">
      <summary>Gets or sets the handle of the metafile in memory.</summary>
      <returns>The handle of the metafile in memory.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.Inch">
      <summary>Gets or sets the number of twips per inch.</summary>
      <returns>The number of twips per inch.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.Key">
      <summary>Gets or sets a value indicating the presence of a placeable metafile header.</summary>
      <returns>A value indicating presence of a placeable metafile header.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.Reserved">
      <summary>Reserved. Do not use.</summary>
      <returns>Reserved. Do not use.</returns>
    </member>
    <member name="T:System.Drawing.Pen">
      <summary>Defines an object used to draw lines and curves. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Drawing.Pen.#ctor(System.Drawing.Brush)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Pen" /> class with the specified <see cref="T:System.Drawing.Brush" />.</summary>
      <param name="brush">A <see cref="T:System.Drawing.Brush" /> that determines the fill properties of this <see cref="T:System.Drawing.Pen" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Pen" /> class with the specified <see cref="T:System.Drawing.Brush" /> and <see cref="P:System.Drawing.Pen.Width" />.</summary>
      <param name="brush">A <see cref="T:System.Drawing.Brush" /> that determines the characteristics of this <see cref="T:System.Drawing.Pen" />.</param>
      <param name="width">The width of the new <see cref="T:System.Drawing.Pen" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Pen.#ctor(System.Drawing.Color)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Pen" /> class with the specified color.</summary>
      <param name="color">A <see cref="T:System.Drawing.Color" /> structure that indicates the color of this <see cref="T:System.Drawing.Pen" />.</param>
    </member>
    <member name="M:System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Pen" /> class with the specified <see cref="T:System.Drawing.Color" /> and <see cref="P:System.Drawing.Pen.Width" /> properties.</summary>
      <param name="color">A <see cref="T:System.Drawing.Color" /> structure that indicates the color of this <see cref="T:System.Drawing.Pen" />.</param>
      <param name="width">A value indicating the width of this <see cref="T:System.Drawing.Pen" />.</param>
    </member>
    <member name="P:System.Drawing.Pen.Alignment">
      <summary>Gets or sets the alignment for this <see cref="T:System.Drawing.Pen" />.</summary>
      <returns>A <see cref="T:System.Drawing.Drawing2D.PenAlignment" /> that represents the alignment for this <see cref="T:System.Drawing.Pen" />.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The specified value is not a member of <see cref="T:System.Drawing.Drawing2D.PenAlignment" />.</exception>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Drawing.Pen.Alignment" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</exception>
    </member>
    <member name="P:System.Drawing.Pen.Brush">
      <summary>Gets or sets the <see cref="T:System.Drawing.Brush" /> that determines attributes of this <see cref="T:System.Drawing.Pen" />.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> that determines attributes of this <see cref="T:System.Drawing.Pen" />.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Drawing.Pen.Brush" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</exception>
    </member>
    <member name="M:System.Drawing.Pen.Clone">
      <summary>Creates an exact copy of this <see cref="T:System.Drawing.Pen" />.</summary>
      <returns>An <see cref="T:System.Object" /> that can be cast to a <see cref="T:System.Drawing.Pen" />.</returns>
    </member>
    <member name="P:System.Drawing.Pen.Color">
      <summary>Gets or sets the color of this <see cref="T:System.Drawing.Pen" />.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> structure that represents the color of this <see cref="T:System.Drawing.Pen" />.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Drawing.Pen.Color" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</exception>
    </member>
    <member name="P:System.Drawing.Pen.CompoundArray">
      <summary>Gets or sets an array of values that specifies a compound pen. A compound pen draws a compound line made up of parallel lines and spaces.</summary>
      <returns>An array of real numbers that specifies the compound array. The elements in the array must be in increasing order, not less than 0, and not greater than 1.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Drawing.Pen.CompoundArray" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</exception>
    </member>
    <member name="P:System.Drawing.Pen.CustomEndCap">
      <summary>Gets or sets a custom cap to use at the end of lines drawn with this <see cref="T:System.Drawing.Pen" />.</summary>
      <returns>A <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> that represents the cap used at the end of lines drawn with this <see cref="T:System.Drawing.Pen" />.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Drawing.Pen.CustomEndCap" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</exception>
    </member>
    <member name="P:System.Drawing.Pen.CustomStartCap">
      <summary>Gets or sets a custom cap to use at the beginning of lines drawn with this <see cref="T:System.Drawing.Pen" />.</summary>
      <returns>A <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> that represents the cap used at the beginning of lines drawn with this <see cref="T:System.Drawing.Pen" />.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Drawing.Pen.CustomStartCap" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</exception>
    </member>
    <member name="P:System.Drawing.Pen.DashCap">
      <summary>Gets or sets the cap style used at the end of the dashes that make up dashed lines drawn with this <see cref="T:System.Drawing.Pen" />.</summary>
      <returns>One of the <see cref="T:System.Drawing.Drawing2D.DashCap" /> values that represents the cap style used at the beginning and end of the dashes that make up dashed lines drawn with this <see cref="T:System.Drawing.Pen" />.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The specified value is not a member of <see cref="T:System.Drawing.Drawing2D.DashCap" />.</exception>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Drawing.Pen.DashCap" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</exception>
    </member>
    <member name="P:System.Drawing.Pen.DashOffset">
      <summary>Gets or sets the distance from the start of a line to the beginning of a dash pattern.</summary>
      <returns>The distance from the start of a line to the beginning of a dash pattern.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Drawing.Pen.DashOffset" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</exception>
    </member>
    <member name="P:System.Drawing.Pen.DashPattern">
      <summary>Gets or sets an array of custom dashes and spaces.</summary>
      <returns>An array of real numbers that specifies the lengths of alternating dashes and spaces in dashed lines.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Drawing.Pen.DashPattern" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</exception>
    </member>
    <member name="P:System.Drawing.Pen.DashStyle">
      <summary>Gets or sets the style used for dashed lines drawn with this <see cref="T:System.Drawing.Pen" />.</summary>
      <returns>A <see cref="T:System.Drawing.Drawing2D.DashStyle" /> that represents the style used for dashed lines drawn with this <see cref="T:System.Drawing.Pen" />.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Drawing.Pen.DashStyle" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</exception>
    </member>
    <member name="M:System.Drawing.Pen.Dispose">
      <summary>Releases all resources used by this <see cref="T:System.Drawing.Pen" />.</summary>
    </member>
    <member name="P:System.Drawing.Pen.EndCap">
      <summary>Gets or sets the cap style used at the end of lines drawn with this <see cref="T:System.Drawing.Pen" />.</summary>
      <returns>One of the <see cref="T:System.Drawing.Drawing2D.LineCap" /> values that represents the cap style used at the end of lines drawn with this <see cref="T:System.Drawing.Pen" />.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The specified value is not a member of <see cref="T:System.Drawing.Drawing2D.LineCap" />.</exception>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Drawing.Pen.EndCap" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</exception>
    </member>
    <member name="M:System.Drawing.Pen.Finalize">
      <summary>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</summary>
    </member>
    <member name="P:System.Drawing.Pen.LineJoin">
      <summary>Gets or sets the join style for the ends of two consecutive lines drawn with this <see cref="T:System.Drawing.Pen" />.</summary>
      <returns>A <see cref="T:System.Drawing.Drawing2D.LineJoin" /> that represents the join style for the ends of two consecutive lines drawn with this <see cref="T:System.Drawing.Pen" />.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Drawing.Pen.LineJoin" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</exception>
    </member>
    <member name="P:System.Drawing.Pen.MiterLimit">
      <summary>Gets or sets the limit of the thickness of the join on a mitered corner.</summary>
      <returns>The limit of the thickness of the join on a mitered corner.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Drawing.Pen.MiterLimit" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</exception>
    </member>
    <member name="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
      <summary>Multiplies the transformation matrix for this <see cref="T:System.Drawing.Pen" /> by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</summary>
      <param name="matrix">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> object by which to multiply the transformation matrix.</param>
    </member>
    <member name="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>Multiplies the transformation matrix for this <see cref="T:System.Drawing.Pen" /> by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the specified order.</summary>
      <param name="matrix">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which to multiply the transformation matrix.</param>
      <param name="order">The order in which to perform the multiplication operation.</param>
    </member>
    <member name="P:System.Drawing.Pen.PenType">
      <summary>Gets the style of lines drawn with this <see cref="T:System.Drawing.Pen" />.</summary>
      <returns>A <see cref="T:System.Drawing.Drawing2D.PenType" /> enumeration that specifies the style of lines drawn with this <see cref="T:System.Drawing.Pen" />.</returns>
    </member>
    <member name="M:System.Drawing.Pen.ResetTransform">
      <summary>Resets the geometric transformation matrix for this <see cref="T:System.Drawing.Pen" /> to identity.</summary>
    </member>
    <member name="M:System.Drawing.Pen.RotateTransform(System.Single)">
      <summary>Rotates the local geometric transformation by the specified angle. This method prepends the rotation to the transformation.</summary>
      <param name="angle">The angle of rotation.</param>
    </member>
    <member name="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>Rotates the local geometric transformation by the specified angle in the specified order.</summary>
      <param name="angle">The angle of rotation.</param>
      <param name="order">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies whether to append or prepend the rotation matrix.</param>
    </member>
    <member name="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)">
      <summary>Scales the local geometric transformation by the specified factors. This method prepends the scaling matrix to the transformation.</summary>
      <param name="sx">The factor by which to scale the transformation in the x-axis direction.</param>
      <param name="sy">The factor by which to scale the transformation in the y-axis direction.</param>
    </member>
    <member name="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>Scales the local geometric transformation by the specified factors in the specified order.</summary>
      <param name="sx">The factor by which to scale the transformation in the x-axis direction.</param>
      <param name="sy">The factor by which to scale the transformation in the y-axis direction.</param>
      <param name="order">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies whether to append or prepend the scaling matrix.</param>
    </member>
    <member name="M:System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)">
      <summary>Sets the values that determine the style of cap used to end lines drawn by this <see cref="T:System.Drawing.Pen" />.</summary>
      <param name="startCap">A <see cref="T:System.Drawing.Drawing2D.LineCap" /> that represents the cap style to use at the beginning of lines drawn with this <see cref="T:System.Drawing.Pen" />.</param>
      <param name="endCap">A <see cref="T:System.Drawing.Drawing2D.LineCap" /> that represents the cap style to use at the end of lines drawn with this <see cref="T:System.Drawing.Pen" />.</param>
      <param name="dashCap">A <see cref="T:System.Drawing.Drawing2D.LineCap" /> that represents the cap style to use at the beginning or end of dashed lines drawn with this <see cref="T:System.Drawing.Pen" />.</param>
    </member>
    <member name="P:System.Drawing.Pen.StartCap">
      <summary>Gets or sets the cap style used at the beginning of lines drawn with this <see cref="T:System.Drawing.Pen" />.</summary>
      <returns>One of the <see cref="T:System.Drawing.Drawing2D.LineCap" /> values that represents the cap style used at the beginning of lines drawn with this <see cref="T:System.Drawing.Pen" />.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The specified value is not a member of <see cref="T:System.Drawing.Drawing2D.LineCap" />.</exception>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Drawing.Pen.StartCap" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</exception>
    </member>
    <member name="P:System.Drawing.Pen.Transform">
      <summary>Gets or sets a copy of the geometric transformation for this <see cref="T:System.Drawing.Pen" />.</summary>
      <returns>A copy of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> that represents the geometric transformation for this <see cref="T:System.Drawing.Pen" />.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Drawing.Pen.Transform" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</exception>
    </member>
    <member name="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single)">
      <summary>Translates the local geometric transformation by the specified dimensions. This method prepends the translation to the transformation.</summary>
      <param name="dx">The value of the translation in x.</param>
      <param name="dy">The value of the translation in y.</param>
    </member>
    <member name="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>Translates the local geometric transformation by the specified dimensions in the specified order.</summary>
      <param name="dx">The value of the translation in x.</param>
      <param name="dy">The value of the translation in y.</param>
      <param name="order">The order (prepend or append) in which to apply the translation.</param>
    </member>
    <member name="P:System.Drawing.Pen.Width">
      <summary>Gets or sets the width of this <see cref="T:System.Drawing.Pen" />, in units of the <see cref="T:System.Drawing.Graphics" /> object used for drawing.</summary>
      <returns>The width of this <see cref="T:System.Drawing.Pen" />.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Drawing.Pen.Width" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</exception>
    </member>
    <member name="T:System.Drawing.Pens">
      <summary>Pens for all the standard colors. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Drawing.Pens.AliceBlue">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.AntiqueWhite">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Aqua">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Aquamarine">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Azure">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Beige">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Bisque">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Black">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.BlanchedAlmond">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Blue">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.BlueViolet">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Brown">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.BurlyWood">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.CadetBlue">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Chartreuse">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Chocolate">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Coral">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.CornflowerBlue">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Cornsilk">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Crimson">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Cyan">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkBlue">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkCyan">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkGoldenrod">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkGray">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkGreen">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkKhaki">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkMagenta">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkOliveGreen">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkOrange">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkOrchid">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkRed">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkSalmon">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkSeaGreen">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkSlateBlue">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkSlateGray">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkTurquoise">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkViolet">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.DeepPink">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.DeepSkyBlue">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.DimGray">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.DodgerBlue">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Firebrick">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.FloralWhite">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.ForestGreen">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Fuchsia">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Gainsboro">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.GhostWhite">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Gold">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Goldenrod">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Gray">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Green">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.GreenYellow">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Honeydew">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.HotPink">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.IndianRed">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Indigo">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Ivory">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Khaki">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Lavender">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.LavenderBlush">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.LawnGreen">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.LemonChiffon">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightBlue">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightCoral">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightCyan">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightGoldenrodYellow">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightGray">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightGreen">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightPink">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightSalmon">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightSeaGreen">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightSkyBlue">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightSlateGray">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightSteelBlue">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightYellow">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Lime">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.LimeGreen">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Linen">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Magenta">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Maroon">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumAquamarine">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumBlue">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumOrchid">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumPurple">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumSeaGreen">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumSlateBlue">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumSpringGreen">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumTurquoise">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumVioletRed">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.MidnightBlue">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.MintCream">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.MistyRose">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Moccasin">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.NavajoWhite">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Navy">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.OldLace">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Olive">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.OliveDrab">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Orange">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.OrangeRed">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Orchid">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.PaleGoldenrod">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.PaleGreen">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.PaleTurquoise">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.PaleVioletRed">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.PapayaWhip">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.PeachPuff">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Peru">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Pink">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Plum">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.PowderBlue">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Purple">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Red">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.RosyBrown">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.RoyalBlue">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.SaddleBrown">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Salmon">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.SandyBrown">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.SeaGreen">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.SeaShell">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Sienna">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Silver">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.SkyBlue">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.SlateBlue">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.SlateGray">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Snow">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.SpringGreen">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.SteelBlue">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Tan">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Teal">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Thistle">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Tomato">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Transparent">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Turquoise">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Violet">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Wheat">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.White">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.WhiteSmoke">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Yellow">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="P:System.Drawing.Pens.YellowGreen">
      <summary>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> object set to a system-defined color.</returns>
    </member>
    <member name="T:System.Drawing.Printing.Duplex">
      <summary>Specifies the printer's duplex setting.</summary>
    </member>
    <member name="F:System.Drawing.Printing.Duplex.Default">
      <summary>The printer's default duplex setting.</summary>
    </member>
    <member name="F:System.Drawing.Printing.Duplex.Horizontal">
      <summary>Double-sided, horizontal printing.</summary>
    </member>
    <member name="F:System.Drawing.Printing.Duplex.Simplex">
      <summary>Single-sided printing.</summary>
    </member>
    <member name="F:System.Drawing.Printing.Duplex.Vertical">
      <summary>Double-sided, vertical printing.</summary>
    </member>
    <member name="T:System.Drawing.Printing.InvalidPrinterException">
      <summary>Represents the exception that is thrown when you try to access a printer using printer settings that are not valid.</summary>
    </member>
    <member name="M:System.Drawing.Printing.InvalidPrinterException.#ctor(System.Drawing.Printing.PrinterSettings)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.InvalidPrinterException" /> class.</summary>
      <param name="settings">A <see cref="T:System.Drawing.Printing.PrinterSettings" /> that specifies the settings for a printer.</param>
    </member>
    <member name="M:System.Drawing.Printing.InvalidPrinterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.InvalidPrinterException" /> class with serialized data.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> is <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is <see langword="null" /> or <see cref="P:System.Exception.HResult" /> is 0.</exception>
    </member>
    <member name="M:System.Drawing.Printing.InvalidPrinterException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Overridden. Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> is <see langword="null" />.</exception>
    </member>
    <member name="T:System.Drawing.Printing.Margins">
      <summary>Specifies the dimensions of the margins of a printed page.</summary>
    </member>
    <member name="M:System.Drawing.Printing.Margins.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.Margins" /> class with 1-inch wide margins.</summary>
    </member>
    <member name="M:System.Drawing.Printing.Margins.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.Margins" /> class with the specified left, right, top, and bottom margins.</summary>
      <param name="left">The left margin, in hundredths of an inch.</param>
      <param name="right">The right margin, in hundredths of an inch.</param>
      <param name="top">The top margin, in hundredths of an inch.</param>
      <param name="bottom">The bottom margin, in hundredths of an inch.</param>
      <exception cref="T:System.ArgumentException">The <paramref name="left" /> parameter value is less than 0.  
 -or-  
 The <paramref name="right" /> parameter value is less than 0.  
 -or-  
 The <paramref name="top" /> parameter value is less than 0.  
 -or-  
 The <paramref name="bottom" /> parameter value is less than 0.</exception>
    </member>
    <member name="P:System.Drawing.Printing.Margins.Bottom">
      <summary>Gets or sets the bottom margin, in hundredths of an inch.</summary>
      <returns>The bottom margin, in hundredths of an inch.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Drawing.Printing.Margins.Bottom" /> property is set to a value that is less than 0.</exception>
    </member>
    <member name="M:System.Drawing.Printing.Margins.Clone">
      <summary>Retrieves a duplicate of this object, member by member.</summary>
      <returns>A duplicate of this object.</returns>
    </member>
    <member name="M:System.Drawing.Printing.Margins.Equals(System.Object)">
      <summary>Compares this <see cref="T:System.Drawing.Printing.Margins" /> to the specified <see cref="T:System.Object" /> to determine whether they have the same dimensions.</summary>
      <param name="obj">The object to which to compare this <see cref="T:System.Drawing.Printing.Margins" />.</param>
      <returns>
        <see langword="true" /> if the specified object is a <see cref="T:System.Drawing.Printing.Margins" /> and has the same <see cref="P:System.Drawing.Printing.Margins.Top" />, <see cref="P:System.Drawing.Printing.Margins.Bottom" />, <see cref="P:System.Drawing.Printing.Margins.Right" /> and <see cref="P:System.Drawing.Printing.Margins.Left" /> values as this <see cref="T:System.Drawing.Printing.Margins" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Printing.Margins.GetHashCode">
      <summary>Calculates and retrieves a hash code based on the width of the left, right, top, and bottom margins.</summary>
      <returns>A hash code based on the left, right, top, and bottom margins.</returns>
    </member>
    <member name="P:System.Drawing.Printing.Margins.Left">
      <summary>Gets or sets the left margin width, in hundredths of an inch.</summary>
      <returns>The left margin width, in hundredths of an inch.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Drawing.Printing.Margins.Left" /> property is set to a value that is less than 0.</exception>
    </member>
    <member name="M:System.Drawing.Printing.Margins.op_Equality(System.Drawing.Printing.Margins,System.Drawing.Printing.Margins)">
      <summary>Compares two <see cref="T:System.Drawing.Printing.Margins" /> to determine if they have the same dimensions.</summary>
      <param name="m1">The first <see cref="T:System.Drawing.Printing.Margins" /> to compare for equality.</param>
      <param name="m2">The second <see cref="T:System.Drawing.Printing.Margins" /> to compare for equality.</param>
      <returns>
        <see langword="true" /> to indicate the <see cref="P:System.Drawing.Printing.Margins.Left" />, <see cref="P:System.Drawing.Printing.Margins.Right" />, <see cref="P:System.Drawing.Printing.Margins.Top" />, and <see cref="P:System.Drawing.Printing.Margins.Bottom" /> properties of both margins have the same value; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Printing.Margins.op_Inequality(System.Drawing.Printing.Margins,System.Drawing.Printing.Margins)">
      <summary>Compares two <see cref="T:System.Drawing.Printing.Margins" /> to determine whether they are of unequal width.</summary>
      <param name="m1">The first <see cref="T:System.Drawing.Printing.Margins" /> to compare for inequality.</param>
      <param name="m2">The second <see cref="T:System.Drawing.Printing.Margins" /> to compare for inequality.</param>
      <returns>
        <see langword="true" /> to indicate if the <see cref="P:System.Drawing.Printing.Margins.Left" />, <see cref="P:System.Drawing.Printing.Margins.Right" />, <see cref="P:System.Drawing.Printing.Margins.Top" />, or <see cref="P:System.Drawing.Printing.Margins.Bottom" /> properties of both margins are not equal; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Drawing.Printing.Margins.Right">
      <summary>Gets or sets the right margin width, in hundredths of an inch.</summary>
      <returns>The right margin width, in hundredths of an inch.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Drawing.Printing.Margins.Right" /> property is set to a value that is less than 0.</exception>
    </member>
    <member name="P:System.Drawing.Printing.Margins.Top">
      <summary>Gets or sets the top margin width, in hundredths of an inch.</summary>
      <returns>The top margin width, in hundredths of an inch.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Drawing.Printing.Margins.Top" /> property is set to a value that is less than 0.</exception>
    </member>
    <member name="M:System.Drawing.Printing.Margins.ToString">
      <summary>Converts the <see cref="T:System.Drawing.Printing.Margins" /> to a string.</summary>
      <returns>A <see cref="T:System.String" /> representation of the <see cref="T:System.Drawing.Printing.Margins" />.</returns>
    </member>
    <member name="T:System.Drawing.Printing.PageSettings">
      <summary>Specifies settings that apply to a single, printed page.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PageSettings.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PageSettings" /> class using the default printer.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PageSettings.#ctor(System.Drawing.Printing.PrinterSettings)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PageSettings" /> class using a specified printer.</summary>
      <param name="printerSettings">The <see cref="T:System.Drawing.Printing.PrinterSettings" /> that describes the printer to use.</param>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.Bounds">
      <summary>Gets the size of the page, taking into account the page orientation specified by the <see cref="P:System.Drawing.Printing.PageSettings.Landscape" /> property.</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> that represents the length and width, in hundredths of an inch, of the page.</returns>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">The printer named in the <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> property does not exist.</exception>
    </member>
    <member name="M:System.Drawing.Printing.PageSettings.Clone">
      <summary>Creates a copy of this <see cref="T:System.Drawing.Printing.PageSettings" />.</summary>
      <returns>A copy of this object.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.Color">
      <summary>Gets or sets a value indicating whether the page should be printed in color.</summary>
      <returns>
        <see langword="true" /> if the page should be printed in color; otherwise, <see langword="false" />. The default is determined by the printer.</returns>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">The printer named in the <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> property does not exist.</exception>
    </member>
    <member name="M:System.Drawing.Printing.PageSettings.CopyToHdevmode(System.IntPtr)">
      <summary>Copies the relevant information from the <see cref="T:System.Drawing.Printing.PageSettings" /> to the specified <see langword="DEVMODE" /> structure.</summary>
      <param name="hdevmode">The handle to a Win32 <see langword="DEVMODE" /> structure.</param>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">The printer named in the <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> property does not exist or there is no default printer installed.</exception>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.HardMarginX">
      <summary>Gets the x-coordinate, in hundredths of an inch, of the hard margin at the left of the page.</summary>
      <returns>The x-coordinate, in hundredths of an inch, of the left-hand hard margin.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.HardMarginY">
      <summary>Gets the y-coordinate, in hundredths of an inch, of the hard margin at the top of the page.</summary>
      <returns>The y-coordinate, in hundredths of an inch, of the hard margin at the top of the page.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.Landscape">
      <summary>Gets or sets a value indicating whether the page is printed in landscape or portrait orientation.</summary>
      <returns>
        <see langword="true" /> if the page should be printed in landscape orientation; otherwise, <see langword="false" />. The default is determined by the printer.</returns>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">The printer named in the <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> property does not exist.</exception>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.Margins">
      <summary>Gets or sets the margins for this page.</summary>
      <returns>A <see cref="T:System.Drawing.Printing.Margins" /> that represents the margins, in hundredths of an inch, for the page. The default is 1-inch margins on all sides.</returns>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">The printer named in the <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> property does not exist.</exception>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.PaperSize">
      <summary>Gets or sets the paper size for the page.</summary>
      <returns>A <see cref="T:System.Drawing.Printing.PaperSize" /> that represents the size of the paper. The default is the printer's default paper size.</returns>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">The printer named in the <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> property does not exist or there is no default printer installed.</exception>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.PaperSource">
      <summary>Gets or sets the page's paper source; for example, the printer's upper tray.</summary>
      <returns>A <see cref="T:System.Drawing.Printing.PaperSource" /> that specifies the source of the paper. The default is the printer's default paper source.</returns>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">The printer named in the <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> property does not exist or there is no default printer installed.</exception>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.PrintableArea">
      <summary>Gets the bounds of the printable area of the page for the printer.</summary>
      <returns>A <see cref="T:System.Drawing.RectangleF" /> representing the length and width, in hundredths of an inch, of the area the printer is capable of printing in.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.PrinterResolution">
      <summary>Gets or sets the printer resolution for the page.</summary>
      <returns>A <see cref="T:System.Drawing.Printing.PrinterResolution" /> that specifies the printer resolution for the page. The default is the printer's default resolution.</returns>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">The printer named in the <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> property does not exist or there is no default printer installed.</exception>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.PrinterSettings">
      <summary>Gets or sets the printer settings associated with the page.</summary>
      <returns>A <see cref="T:System.Drawing.Printing.PrinterSettings" /> that represents the printer settings associated with the page.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PageSettings.SetHdevmode(System.IntPtr)">
      <summary>Copies relevant information to the <see cref="T:System.Drawing.Printing.PageSettings" /> from the specified <see langword="DEVMODE" /> structure.</summary>
      <param name="hdevmode">The handle to a Win32 <see langword="DEVMODE" /> structure.</param>
      <exception cref="T:System.ArgumentException">The printer handle is not valid.</exception>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">The printer named in the <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> property does not exist or there is no default printer installed.</exception>
    </member>
    <member name="M:System.Drawing.Printing.PageSettings.ToString">
      <summary>Converts the <see cref="T:System.Drawing.Printing.PageSettings" /> to string form.</summary>
      <returns>A string showing the various property settings for the <see cref="T:System.Drawing.Printing.PageSettings" />.</returns>
    </member>
    <member name="T:System.Drawing.Printing.PaperKind">
      <summary>Specifies the standard paper sizes.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A2">
      <summary>A2 paper (420 mm by 594 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A3">
      <summary>A3 paper (297 mm by 420 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A3Extra">
      <summary>A3 extra paper (322 mm by 445 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A3ExtraTransverse">
      <summary>A3 extra transverse paper (322 mm by 445 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A3Rotated">
      <summary>A3 rotated paper (420 mm by 297 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A3Transverse">
      <summary>A3 transverse paper (297 mm by 420 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4">
      <summary>A4 paper (210 mm by 297 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4Extra">
      <summary>A4 extra paper (236 mm by 322 mm). This value is specific to the PostScript driver and is used only by Linotronic printers to help save paper.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4Plus">
      <summary>A4 plus paper (210 mm by 330 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4Rotated">
      <summary>A4 rotated paper (297 mm by 210 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4Small">
      <summary>A4 small paper (210 mm by 297 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4Transverse">
      <summary>A4 transverse paper (210 mm by 297 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A5">
      <summary>A5 paper (148 mm by 210 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A5Extra">
      <summary>A5 extra paper (174 mm by 235 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A5Rotated">
      <summary>A5 rotated paper (210 mm by 148 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A5Transverse">
      <summary>A5 transverse paper (148 mm by 210 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A6">
      <summary>A6 paper (105 mm by 148 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A6Rotated">
      <summary>A6 rotated paper (148 mm by 105 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.APlus">
      <summary>SuperA/SuperA/A4 paper (227 mm by 356 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B4">
      <summary>B4 paper (250 mm by 353 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B4Envelope">
      <summary>B4 envelope (250 mm by 353 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B4JisRotated">
      <summary>JIS B4 rotated paper (364 mm by 257 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B5">
      <summary>B5 paper (176 mm by 250 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B5Envelope">
      <summary>B5 envelope (176 mm by 250 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B5Extra">
      <summary>ISO B5 extra paper (201 mm by 276 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B5JisRotated">
      <summary>JIS B5 rotated paper (257 mm by 182 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B5Transverse">
      <summary>JIS B5 transverse paper (182 mm by 257 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B6Envelope">
      <summary>B6 envelope (176 mm by 125 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B6Jis">
      <summary>JIS B6 paper (128 mm by 182 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B6JisRotated">
      <summary>JIS B6 rotated paper (182 mm by 128 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.BPlus">
      <summary>SuperB/SuperB/A3 paper (305 mm by 487 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.C3Envelope">
      <summary>C3 envelope (324 mm by 458 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.C4Envelope">
      <summary>C4 envelope (229 mm by 324 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.C5Envelope">
      <summary>C5 envelope (162 mm by 229 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.C65Envelope">
      <summary>C65 envelope (114 mm by 229 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.C6Envelope">
      <summary>C6 envelope (114 mm by 162 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.CSheet">
      <summary>C paper (17 in. by 22 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Custom">
      <summary>The paper size is defined by the user.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.DLEnvelope">
      <summary>DL envelope (110 mm by 220 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.DSheet">
      <summary>D paper (22 in. by 34 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.ESheet">
      <summary>E paper (34 in. by 44 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Executive">
      <summary>Executive paper (7.25 in. by 10.5 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Folio">
      <summary>Folio paper (8.5 in. by 13 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.GermanLegalFanfold">
      <summary>German legal fanfold (8.5 in. by 13 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.GermanStandardFanfold">
      <summary>German standard fanfold (8.5 in. by 12 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.InviteEnvelope">
      <summary>Invitation envelope (220 mm by 220 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.IsoB4">
      <summary>ISO B4 (250 mm by 353 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.ItalyEnvelope">
      <summary>Italy envelope (110 mm by 230 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseDoublePostcard">
      <summary>Japanese double postcard (200 mm by 148 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseDoublePostcardRotated">
      <summary>Japanese rotated double postcard (148 mm by 200 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeChouNumber3">
      <summary>Japanese Chou #3 envelope. Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeChouNumber3Rotated">
      <summary>Japanese rotated Chou #3 envelope. Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeChouNumber4">
      <summary>Japanese Chou #4 envelope. Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeChouNumber4Rotated">
      <summary>Japanese rotated Chou #4 envelope. Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeKakuNumber2">
      <summary>Japanese Kaku #2 envelope. Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeKakuNumber2Rotated">
      <summary>Japanese rotated Kaku #2 envelope. Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeKakuNumber3">
      <summary>Japanese Kaku #3 envelope. Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeKakuNumber3Rotated">
      <summary>Japanese rotated Kaku #3 envelope. Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeYouNumber4">
      <summary>Japanese You #4 envelope. Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeYouNumber4Rotated">
      <summary>Japanese You #4 rotated envelope. Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapanesePostcard">
      <summary>Japanese postcard (100 mm by 148 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapanesePostcardRotated">
      <summary>Japanese rotated postcard (148 mm by 100 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Ledger">
      <summary>Ledger paper (17 in. by 11 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Legal">
      <summary>Legal paper (8.5 in. by 14 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LegalExtra">
      <summary>Legal extra paper (9.275 in. by 15 in.). This value is specific to the PostScript driver and is used only by Linotronic printers in order to conserve paper.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Letter">
      <summary>Letter paper (8.5 in. by 11 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LetterExtra">
      <summary>Letter extra paper (9.275 in. by 12 in.). This value is specific to the PostScript driver and is used only by Linotronic printers in order to conserve paper.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LetterExtraTransverse">
      <summary>Letter extra transverse paper (9.275 in. by 12 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LetterPlus">
      <summary>Letter plus paper (8.5 in. by 12.69 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LetterRotated">
      <summary>Letter rotated paper (11 in. by 8.5 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LetterSmall">
      <summary>Letter small paper (8.5 in. by 11 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LetterTransverse">
      <summary>Letter transverse paper (8.275 in. by 11 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.MonarchEnvelope">
      <summary>Monarch envelope (3.875 in. by 7.5 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Note">
      <summary>Note paper (8.5 in. by 11 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Number10Envelope">
      <summary>#10 envelope (4.125 in. by 9.5 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Number11Envelope">
      <summary>#11 envelope (4.5 in. by 10.375 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Number12Envelope">
      <summary>#12 envelope (4.75 in. by 11 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Number14Envelope">
      <summary>#14 envelope (5 in. by 11.5 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Number9Envelope">
      <summary>#9 envelope (3.875 in. by 8.875 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PersonalEnvelope">
      <summary>6 3/4 envelope (3.625 in. by 6.5 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Prc16K">
      <summary>16K paper (146 mm by 215 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Prc16KRotated">
      <summary>16K rotated paper (146 mm by 215 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Prc32K">
      <summary>32K paper (97 mm by 151 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Prc32KBig">
      <summary>32K big paper (97 mm by 151 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Prc32KBigRotated">
      <summary>32K big rotated paper (97 mm by 151 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Prc32KRotated">
      <summary>32K rotated paper (97 mm by 151 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber1">
      <summary>#1 envelope (102 mm by 165 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber10">
      <summary>#10 envelope (324 mm by 458 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber10Rotated">
      <summary>#10 rotated envelope (458 mm by 324 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber1Rotated">
      <summary>#1 rotated envelope (165 mm by 102 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber2">
      <summary>#2 envelope (102 mm by 176 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber2Rotated">
      <summary>#2 rotated envelope (176 mm by 102 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber3">
      <summary>#3 envelope (125 mm by 176 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber3Rotated">
      <summary>#3 rotated envelope (176 mm by 125 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber4">
      <summary>#4 envelope (110 mm by 208 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber4Rotated">
      <summary>#4 rotated envelope (208 mm by 110 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber5">
      <summary>#5 envelope (110 mm by 220 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber5Rotated">
      <summary>Envelope #5 rotated envelope (220 mm by 110 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber6">
      <summary>#6 envelope (120 mm by 230 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber6Rotated">
      <summary>#6 rotated envelope (230 mm by 120 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber7">
      <summary>#7 envelope (160 mm by 230 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber7Rotated">
      <summary>#7 rotated envelope (230 mm by 160 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber8">
      <summary>#8 envelope (120 mm by 309 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber8Rotated">
      <summary>#8 rotated envelope (309 mm by 120 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber9">
      <summary>#9 envelope (229 mm by 324 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber9Rotated">
      <summary>#9 rotated envelope (324 mm by 229 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Quarto">
      <summary>Quarto paper (215 mm by 275 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard10x11">
      <summary>Standard paper (10 in. by 11 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard10x14">
      <summary>Standard paper (10 in. by 14 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard11x17">
      <summary>Standard paper (11 in. by 17 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard12x11">
      <summary>Standard paper (12 in. by 11 in.). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard15x11">
      <summary>Standard paper (15 in. by 11 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard9x11">
      <summary>Standard paper (9 in. by 11 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Statement">
      <summary>Statement paper (5.5 in. by 8.5 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Tabloid">
      <summary>Tabloid paper (11 in. by 17 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.TabloidExtra">
      <summary>Tabloid extra paper (11.69 in. by 18 in.). This value is specific to the PostScript driver and is used only by Linotronic printers in order to conserve paper.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.USStandardFanfold">
      <summary>US standard fanfold (14.875 in. by 11 in.).</summary>
    </member>
    <member name="T:System.Drawing.Printing.PaperSize">
      <summary>Specifies the size of a piece of paper.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PaperSize.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PaperSize" /> class.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PaperSize.#ctor(System.String,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PaperSize" /> class.</summary>
      <param name="name">The name of the paper.</param>
      <param name="width">The width of the paper, in hundredths of an inch.</param>
      <param name="height">The height of the paper, in hundredths of an inch.</param>
    </member>
    <member name="P:System.Drawing.Printing.PaperSize.Height">
      <summary>Gets or sets the height of the paper, in hundredths of an inch.</summary>
      <returns>The height of the paper, in hundredths of an inch.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Drawing.Printing.PaperSize.Kind" /> property is not set to <see cref="F:System.Drawing.Printing.PaperKind.Custom" />.</exception>
    </member>
    <member name="P:System.Drawing.Printing.PaperSize.Kind">
      <summary>Gets the type of paper.</summary>
      <returns>One of the <see cref="T:System.Drawing.Printing.PaperKind" /> values.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Drawing.Printing.PaperSize.Kind" /> property is not set to <see cref="F:System.Drawing.Printing.PaperKind.Custom" />.</exception>
    </member>
    <member name="P:System.Drawing.Printing.PaperSize.PaperName">
      <summary>Gets or sets the name of the type of paper.</summary>
      <returns>The name of the type of paper.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Drawing.Printing.PaperSize.Kind" /> property is not set to <see cref="F:System.Drawing.Printing.PaperKind.Custom" />.</exception>
    </member>
    <member name="P:System.Drawing.Printing.PaperSize.RawKind">
      <summary>Gets or sets an integer representing one of the <see cref="T:System.Drawing.Printing.PaperSize" /> values or a custom value.</summary>
      <returns>An integer representing one of the <see cref="T:System.Drawing.Printing.PaperSize" /> values, or a custom value.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PaperSize.ToString">
      <summary>Provides information about the <see cref="T:System.Drawing.Printing.PaperSize" /> in string form.</summary>
      <returns>A string.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PaperSize.Width">
      <summary>Gets or sets the width of the paper, in hundredths of an inch.</summary>
      <returns>The width of the paper, in hundredths of an inch.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Drawing.Printing.PaperSize.Kind" /> property is not set to <see cref="F:System.Drawing.Printing.PaperKind.Custom" />.</exception>
    </member>
    <member name="T:System.Drawing.Printing.PaperSource">
      <summary>Specifies the paper tray from which the printer gets paper.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PaperSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PaperSource" /> class.</summary>
    </member>
    <member name="P:System.Drawing.Printing.PaperSource.Kind">
      <summary>Gets the paper source.</summary>
      <returns>One of the <see cref="T:System.Drawing.Printing.PaperSourceKind" /> values.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PaperSource.RawKind">
      <summary>Gets or sets the integer representing one of the <see cref="T:System.Drawing.Printing.PaperSourceKind" /> values or a custom value.</summary>
      <returns>The integer value representing one of the <see cref="T:System.Drawing.Printing.PaperSourceKind" /> values or a custom value.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PaperSource.SourceName">
      <summary>Gets or sets the name of the paper source.</summary>
      <returns>The name of the paper source.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PaperSource.ToString">
      <summary>Provides information about the <see cref="T:System.Drawing.Printing.PaperSource" /> in string form.</summary>
      <returns>A string.</returns>
    </member>
    <member name="T:System.Drawing.Printing.PaperSourceKind">
      <summary>Standard paper sources.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.AutomaticFeed">
      <summary>Automatically fed paper.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Cassette">
      <summary>A paper cassette.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Custom">
      <summary>A printer-specific paper source.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Envelope">
      <summary>An envelope.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.FormSource">
      <summary>The printer's default input bin.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.LargeCapacity">
      <summary>The printer's large-capacity bin.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.LargeFormat">
      <summary>Large-format paper.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Lower">
      <summary>The lower bin of a printer.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Manual">
      <summary>Manually fed paper.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.ManualFeed">
      <summary>Manually fed envelope.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Middle">
      <summary>The middle bin of a printer.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.SmallFormat">
      <summary>Small-format paper.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.TractorFeed">
      <summary>A tractor feed.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Upper">
      <summary>The upper bin of a printer (or the default bin, if the printer only has one bin).</summary>
    </member>
    <member name="T:System.Drawing.Printing.PreviewPageInfo">
      <summary>Specifies print preview information for a single page. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPageInfo.#ctor(System.Drawing.Image,System.Drawing.Size)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PreviewPageInfo" /> class.</summary>
      <param name="image">The image of the printed page.</param>
      <param name="physicalSize">The size of the printed page, in hundredths of an inch.</param>
    </member>
    <member name="P:System.Drawing.Printing.PreviewPageInfo.Image">
      <summary>Gets the image of the printed page.</summary>
      <returns>An <see cref="T:System.Drawing.Image" /> representing the printed page.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PreviewPageInfo.PhysicalSize">
      <summary>Gets the size of the printed page, in hundredths of an inch.</summary>
      <returns>A <see cref="T:System.Drawing.Size" /> that specifies the size of the printed page, in hundredths of an inch.</returns>
    </member>
    <member name="T:System.Drawing.Printing.PreviewPrintController">
      <summary>Specifies a print controller that displays a document on a screen as a series of images.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPrintController.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PreviewPrintController" /> class.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPrintController.GetPreviewPageInfo">
      <summary>Captures the pages of a document as a series of images.</summary>
      <returns>An array of type <see cref="T:System.Drawing.Printing.PreviewPageInfo" /> that contains the pages of a <see cref="T:System.Drawing.Printing.PrintDocument" /> as a series of images.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PreviewPrintController.IsPreview">
      <summary>Gets a value indicating whether this controller is used for print preview.</summary>
      <returns>
        <see langword="true" /> in all cases.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPrintController.OnEndPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>Completes the control sequence that determines when and how to preview a page in a print document.</summary>
      <param name="document">A <see cref="T:System.Drawing.Printing.PrintDocument" /> that represents the document being previewed.</param>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintPageEventArgs" /> that contains data about how to preview a page in the print document.</param>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPrintController.OnEndPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
      <summary>Completes the control sequence that determines when and how to preview a print document.</summary>
      <param name="document">A <see cref="T:System.Drawing.Printing.PrintDocument" /> that represents the document being previewed.</param>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintEventArgs" /> that contains data about how to preview the print document.</param>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPrintController.OnStartPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>Begins the control sequence that determines when and how to preview a page in a print document.</summary>
      <param name="document">A <see cref="T:System.Drawing.Printing.PrintDocument" /> that represents the document being previewed.</param>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintPageEventArgs" /> that contains data about how to preview a page in the print document. Initially, the <see cref="P:System.Drawing.Printing.PrintPageEventArgs.Graphics" /> property of this parameter will be <see langword="null" />. The value returned from this method will be used to set this property.</param>
      <returns>A <see cref="T:System.Drawing.Graphics" /> that represents a page from a <see cref="T:System.Drawing.Printing.PrintDocument" />.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPrintController.OnStartPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
      <summary>Begins the control sequence that determines when and how to preview a print document.</summary>
      <param name="document">A <see cref="T:System.Drawing.Printing.PrintDocument" /> that represents the document being previewed.</param>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintEventArgs" /> that contains data about how to print the document.</param>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">The printer named in the <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> property does not exist.</exception>
    </member>
    <member name="P:System.Drawing.Printing.PreviewPrintController.UseAntiAlias">
      <summary>Gets or sets a value indicating whether to use anti-aliasing when displaying the print preview.</summary>
      <returns>
        <see langword="true" /> if the print preview uses anti-aliasing; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrintAction">
      <summary>Specifies the type of print operation occurring.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintAction.PrintToFile">
      <summary>The print operation is printing to a file.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintAction.PrintToPreview">
      <summary>The print operation is a print preview.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintAction.PrintToPrinter">
      <summary>The print operation is printing to a printer.</summary>
    </member>
    <member name="T:System.Drawing.Printing.PrintController">
      <summary>Controls how a document is printed, when printing from a Windows Forms application.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintController.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PrintController" /> class.</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrintController.IsPreview">
      <summary>Gets a value indicating whether the <see cref="T:System.Drawing.Printing.PrintController" /> is used for print preview.</summary>
      <returns>
        <see langword="false" /> in all cases.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintController.OnEndPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>When overridden in a derived class, completes the control sequence that determines when and how to print a page of a document.</summary>
      <param name="document">A <see cref="T:System.Drawing.Printing.PrintDocument" /> that represents the document currently being printed.</param>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintPageEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Drawing.Printing.PrintController.OnEndPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
      <summary>When overridden in a derived class, completes the control sequence that determines when and how to print a document.</summary>
      <param name="document">A <see cref="T:System.Drawing.Printing.PrintDocument" /> that represents the document currently being printed.</param>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Drawing.Printing.PrintController.OnStartPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>When overridden in a derived class, begins the control sequence that determines when and how to print a page of a document.</summary>
      <param name="document">A <see cref="T:System.Drawing.Printing.PrintDocument" /> that represents the document currently being printed.</param>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintPageEventArgs" /> that contains the event data.</param>
      <returns>A <see cref="T:System.Drawing.Graphics" /> that represents a page from a <see cref="T:System.Drawing.Printing.PrintDocument" />.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintController.OnStartPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
      <summary>When overridden in a derived class, begins the control sequence that determines when and how to print a document.</summary>
      <param name="document">A <see cref="T:System.Drawing.Printing.PrintDocument" /> that represents the document currently being printed.</param>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.Drawing.Printing.PrintDocument">
      <summary>Defines a reusable object that sends output to a printer, when printing from a Windows Forms application.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PrintDocument" /> class.</summary>
    </member>
    <member name="E:System.Drawing.Printing.PrintDocument.BeginPrint">
      <summary>Occurs when the <see cref="M:System.Drawing.Printing.PrintDocument.Print" /> method is called and before the first page of the document prints.</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrintDocument.DefaultPageSettings">
      <summary>Gets or sets page settings that are used as defaults for all pages to be printed.</summary>
      <returns>A <see cref="T:System.Drawing.Printing.PageSettings" /> that specifies the default page settings for the document.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintDocument.DocumentName">
      <summary>Gets or sets the document name to display (for example, in a print status dialog box or printer queue) while printing the document.</summary>
      <returns>The document name to display while printing the document. The default is "document".</returns>
    </member>
    <member name="E:System.Drawing.Printing.PrintDocument.EndPrint">
      <summary>Occurs when the last page of the document has printed.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)">
      <summary>Raises the <see cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" /> event. It is called after the <see cref="M:System.Drawing.Printing.PrintDocument.Print" /> method is called and before the first page of the document prints.</summary>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.OnEndPrint(System.Drawing.Printing.PrintEventArgs)">
      <summary>Raises the <see cref="E:System.Drawing.Printing.PrintDocument.EndPrint" /> event. It is called when the last page of the document has printed.</summary>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)">
      <summary>Raises the <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> event. It is called before a page prints.</summary>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintPageEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.OnQueryPageSettings(System.Drawing.Printing.QueryPageSettingsEventArgs)">
      <summary>Raises the <see cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" /> event. It is called immediately before each <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> event.</summary>
      <param name="e">A <see cref="T:System.Drawing.Printing.QueryPageSettingsEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:System.Drawing.Printing.PrintDocument.OriginAtMargins">
      <summary>Gets or sets a value indicating whether the position of a graphics object associated with a page is located just inside the user-specified margins or at the top-left corner of the printable area of the page.</summary>
      <returns>
        <see langword="true" /> if the graphics origin starts at the page margins; <see langword="false" /> if the graphics origin is at the top-left corner of the printable page. The default is <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.Print">
      <summary>Starts the document's printing process.</summary>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">The printer named in the <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> property does not exist.</exception>
    </member>
    <member name="P:System.Drawing.Printing.PrintDocument.PrintController">
      <summary>Gets or sets the print controller that guides the printing process.</summary>
      <returns>The <see cref="T:System.Drawing.Printing.PrintController" /> that guides the printing process. The default is a new instance of the <see cref="T:System.Windows.Forms.PrintControllerWithStatusDialog" /> class.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintDocument.PrinterSettings">
      <summary>Gets or sets the printer that prints the document.</summary>
      <returns>A <see cref="T:System.Drawing.Printing.PrinterSettings" /> that specifies where and how the document is printed. The default is a <see cref="T:System.Drawing.Printing.PrinterSettings" /> with its properties set to their default values.</returns>
    </member>
    <member name="E:System.Drawing.Printing.PrintDocument.PrintPage">
      <summary>Occurs when the output to print for the current page is needed.</summary>
    </member>
    <member name="E:System.Drawing.Printing.PrintDocument.QueryPageSettings">
      <summary>Occurs immediately before each <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> event.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.ToString">
      <summary>Provides information about the print document, in string form.</summary>
      <returns>A string.</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrinterResolution">
      <summary>Represents the resolution supported by a printer.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterResolution.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PrinterResolution" /> class.</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterResolution.Kind">
      <summary>Gets or sets the printer resolution.</summary>
      <returns>One of the <see cref="T:System.Drawing.Printing.PrinterResolutionKind" /> values.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value assigned is not a member of the <see cref="T:System.Drawing.Printing.PrinterResolutionKind" /> enumeration.</exception>
    </member>
    <member name="M:System.Drawing.Printing.PrinterResolution.ToString">
      <summary>This member overrides the <see cref="M:System.Object.ToString" /> method.</summary>
      <returns>A <see cref="T:System.String" /> that contains information about the <see cref="T:System.Drawing.Printing.PrinterResolution" />.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterResolution.X">
      <summary>Gets the horizontal printer resolution, in dots per inch.</summary>
      <returns>The horizontal printer resolution, in dots per inch, if <see cref="P:System.Drawing.Printing.PrinterResolution.Kind" /> is set to <see cref="F:System.Drawing.Printing.PrinterResolutionKind.Custom" />; otherwise, a <see langword="dmPrintQuality" /> value.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterResolution.Y">
      <summary>Gets the vertical printer resolution, in dots per inch.</summary>
      <returns>The vertical printer resolution, in dots per inch.</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrinterResolutionKind">
      <summary>Specifies a printer resolution.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterResolutionKind.Custom">
      <summary>Custom resolution.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterResolutionKind.Draft">
      <summary>Draft-quality resolution.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterResolutionKind.High">
      <summary>High resolution.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterResolutionKind.Low">
      <summary>Low resolution.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterResolutionKind.Medium">
      <summary>Medium resolution.</summary>
    </member>
    <member name="T:System.Drawing.Printing.PrinterSettings">
      <summary>Specifies information about how a document is printed, including the printer that prints it, when printing from a Windows Forms application.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PrinterSettings" /> class.</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.CanDuplex">
      <summary>Gets a value indicating whether the printer supports double-sided printing.</summary>
      <returns>
        <see langword="true" /> if the printer supports double-sided printing; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.Clone">
      <summary>Creates a copy of this <see cref="T:System.Drawing.Printing.PrinterSettings" />.</summary>
      <returns>A copy of this object.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.Collate">
      <summary>Gets or sets a value indicating whether the printed document is collated.</summary>
      <returns>
        <see langword="true" /> if the printed document is collated; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.Copies">
      <summary>Gets or sets the number of copies of the document to print.</summary>
      <returns>The number of copies to print. The default is 1.</returns>
      <exception cref="T:System.ArgumentException">The value of the <see cref="P:System.Drawing.Printing.PrinterSettings.Copies" /> property is less than zero.</exception>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics">
      <summary>Returns a <see cref="T:System.Drawing.Graphics" /> that contains printer information that is useful when creating a <see cref="T:System.Drawing.Printing.PrintDocument" />.</summary>
      <returns>A <see cref="T:System.Drawing.Graphics" /> that contains information from a printer.</returns>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">The printer named in the <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> property does not exist.</exception>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Boolean)">
      <summary>Returns a <see cref="T:System.Drawing.Graphics" /> that contains printer information, optionally specifying the origin at the margins.</summary>
      <param name="honorOriginAtMargins">
        <see langword="true" /> to indicate the origin at the margins; otherwise, <see langword="false" />.</param>
      <returns>A <see cref="T:System.Drawing.Graphics" /> that contains printer information from the <see cref="T:System.Drawing.Printing.PageSettings" />.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Drawing.Printing.PageSettings)">
      <summary>Returns a <see cref="T:System.Drawing.Graphics" /> that contains printer information associated with the specified <see cref="T:System.Drawing.Printing.PageSettings" />.</summary>
      <param name="pageSettings">The <see cref="T:System.Drawing.Printing.PageSettings" /> to retrieve a graphics object for.</param>
      <returns>A <see cref="T:System.Drawing.Graphics" /> that contains printer information from the <see cref="T:System.Drawing.Printing.PageSettings" />.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Drawing.Printing.PageSettings,System.Boolean)">
      <summary>Creates a <see cref="T:System.Drawing.Graphics" /> associated with the specified page settings and optionally specifying the origin at the margins.</summary>
      <param name="pageSettings">The <see cref="T:System.Drawing.Printing.PageSettings" /> to retrieve a <see cref="T:System.Drawing.Graphics" /> object for.</param>
      <param name="honorOriginAtMargins">
        <see langword="true" /> to specify the origin at the margins; otherwise, <see langword="false" />.</param>
      <returns>A <see cref="T:System.Drawing.Graphics" /> that contains printer information from the <see cref="T:System.Drawing.Printing.PageSettings" />.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.DefaultPageSettings">
      <summary>Gets the default page settings for this printer.</summary>
      <returns>A <see cref="T:System.Drawing.Printing.PageSettings" /> that represents the default page settings for this printer.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.Duplex">
      <summary>Gets or sets the printer setting for double-sided printing.</summary>
      <returns>One of the <see cref="T:System.Drawing.Printing.Duplex" /> values. The default is determined by the printer.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value of the <see cref="P:System.Drawing.Printing.PrinterSettings.Duplex" /> property is not one of the <see cref="T:System.Drawing.Printing.Duplex" /> values.</exception>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.FromPage">
      <summary>Gets or sets the page number of the first page to print.</summary>
      <returns>The page number of the first page to print.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> property's value is less than zero.</exception>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.GetHdevmode">
      <summary>Creates a handle to a <see langword="DEVMODE" /> structure that corresponds to the printer settings.</summary>
      <returns>A handle to a <see langword="DEVMODE" /> structure.</returns>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">The printer named in the <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> property does not exist.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">The printer's initialization information could not be retrieved.</exception>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.GetHdevmode(System.Drawing.Printing.PageSettings)">
      <summary>Creates a handle to a <see langword="DEVMODE" /> structure that corresponds to the printer and the page settings specified through the <paramref name="pageSettings" /> parameter.</summary>
      <param name="pageSettings">The <see cref="T:System.Drawing.Printing.PageSettings" /> object that the <see langword="DEVMODE" /> structure's handle corresponds to.</param>
      <returns>A handle to a <see langword="DEVMODE" /> structure.</returns>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">The printer named in the <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> property does not exist.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">The printer's initialization information could not be retrieved.</exception>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.GetHdevnames">
      <summary>Creates a handle to a <see langword="DEVNAMES" /> structure that corresponds to the printer settings.</summary>
      <returns>A handle to a <see langword="DEVNAMES" /> structure.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.InstalledPrinters">
      <summary>Gets the names of all printers installed on the computer.</summary>
      <returns>A <see cref="T:System.Drawing.Printing.PrinterSettings.StringCollection" /> that represents the names of all printers installed on the computer.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">The available printers could not be enumerated.</exception>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.IsDefaultPrinter">
      <summary>Gets a value indicating whether the <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> property designates the default printer, except when the user explicitly sets <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" />.</summary>
      <returns>
        <see langword="true" /> if <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> designates the default printer; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(System.Drawing.Image)">
      <summary>Gets a value indicating whether the printer supports printing the specified image file.</summary>
      <param name="image">The image to print.</param>
      <returns>
        <see langword="true" /> if the printer supports printing the specified image; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(System.Drawing.Imaging.ImageFormat)">
      <summary>Returns a value indicating whether the printer supports printing the specified image format.</summary>
      <param name="imageFormat">An <see cref="T:System.Drawing.Imaging.ImageFormat" /> to print.</param>
      <returns>
        <see langword="true" /> if the printer supports printing the specified image format; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.IsPlotter">
      <summary>Gets a value indicating whether the printer is a plotter.</summary>
      <returns>
        <see langword="true" /> if the printer is a plotter; <see langword="false" /> if the printer is a raster.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.IsValid">
      <summary>Gets a value indicating whether the <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> property designates a valid printer.</summary>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> property designates a valid printer; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.LandscapeAngle">
      <summary>Gets the angle, in degrees, that the portrait orientation is rotated to produce the landscape orientation.</summary>
      <returns>The angle, in degrees, that the portrait orientation is rotated to produce the landscape orientation.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.MaximumCopies">
      <summary>Gets the maximum number of copies that the printer enables the user to print at a time.</summary>
      <returns>The maximum number of copies that the printer enables the user to print at a time.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.MaximumPage">
      <summary>Gets or sets the maximum <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> or <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> that can be selected in a <see cref="T:System.Windows.Forms.PrintDialog" />.</summary>
      <returns>The maximum <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> or <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> that can be selected in a <see cref="T:System.Windows.Forms.PrintDialog" />.</returns>
      <exception cref="T:System.ArgumentException">The value of the <see cref="P:System.Drawing.Printing.PrinterSettings.MaximumPage" /> property is less than zero.</exception>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.MinimumPage">
      <summary>Gets or sets the minimum <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> or <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> that can be selected in a <see cref="T:System.Windows.Forms.PrintDialog" />.</summary>
      <returns>The minimum <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> or <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> that can be selected in a <see cref="T:System.Windows.Forms.PrintDialog" />.</returns>
      <exception cref="T:System.ArgumentException">The value of the <see cref="P:System.Drawing.Printing.PrinterSettings.MinimumPage" /> property is less than zero.</exception>
    </member>
    <member name="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection">
      <summary>Contains a collection of <see cref="T:System.Drawing.Printing.PaperSize" /> objects.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.#ctor(System.Drawing.Printing.PaperSize[])">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection" /> class.</summary>
      <param name="array">An array of type <see cref="T:System.Drawing.Printing.PaperSize" />.</param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.Add(System.Drawing.Printing.PaperSize)">
      <summary>Adds a <see cref="T:System.Drawing.Printing.PrinterResolution" /> to the end of the collection.</summary>
      <param name="paperSize">The <see cref="T:System.Drawing.Printing.PaperSize" /> to add to the collection.</param>
      <returns>The zero-based index of the newly added item.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.CopyTo(System.Drawing.Printing.PaperSize[],System.Int32)">
      <summary>Copies the contents of the current <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection" /> to the specified array, starting at the specified index.</summary>
      <param name="paperSizes">A zero-based array that receives the items copied from the <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection" />.</param>
      <param name="index">The index at which to start copying items.</param>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.Count">
      <summary>Gets the number of different paper sizes in the collection.</summary>
      <returns>The number of different paper sizes in the collection.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection" />.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Drawing.Printing.PaperSize" /> at a specified index.</summary>
      <param name="index">The index of the <see cref="T:System.Drawing.Printing.PaperSize" /> to get.</param>
      <returns>The <see cref="T:System.Drawing.Printing.PaperSize" /> at the specified index.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="array">A zero-based array that receives the items copied from the collection.</param>
      <param name="index">The index at which to start copying items.</param>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.System#Collections#ICollection#Count">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.Count" />.</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An enumerator associated with the collection.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSizes">
      <summary>Gets the paper sizes that are supported by this printer.</summary>
      <returns>A <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection" /> that represents the paper sizes that are supported by this printer.</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection">
      <summary>Contains a collection of <see cref="T:System.Drawing.Printing.PaperSource" /> objects.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.#ctor(System.Drawing.Printing.PaperSource[])">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" /> class.</summary>
      <param name="array">An array of type <see cref="T:System.Drawing.Printing.PaperSource" />.</param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.Add(System.Drawing.Printing.PaperSource)">
      <summary>Adds the specified <see cref="T:System.Drawing.Printing.PaperSource" /> to end of the <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" />.</summary>
      <param name="paperSource">The <see cref="T:System.Drawing.Printing.PaperSource" /> to add to the collection.</param>
      <returns>The zero-based index where the <see cref="T:System.Drawing.Printing.PaperSource" /> was added.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.CopyTo(System.Drawing.Printing.PaperSource[],System.Int32)">
      <summary>Copies the contents of the current <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" /> to the specified array, starting at the specified index.</summary>
      <param name="paperSources">A zero-based array that receives the items copied from the <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" />.</param>
      <param name="index">The index at which to start copying items.</param>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.Count">
      <summary>Gets the number of different paper sources in the collection.</summary>
      <returns>The number of different paper sources in the collection.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" />.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Drawing.Printing.PaperSource" /> at a specified index.</summary>
      <param name="index">The index of the <see cref="T:System.Drawing.Printing.PaperSource" /> to get.</param>
      <returns>The <see cref="T:System.Drawing.Printing.PaperSource" /> at the specified index.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="array">The destination array for the contents of the collection.</param>
      <param name="index">The index at which to start the copy operation.</param>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.System#Collections#ICollection#Count">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.Count" />.</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSources">
      <summary>Gets the paper source trays that are available on the printer.</summary>
      <returns>A <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" /> that represents the paper source trays that are available on this printer.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterName">
      <summary>Gets or sets the name of the printer to use.</summary>
      <returns>The name of the printer to use.</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection">
      <summary>Contains a collection of <see cref="T:System.Drawing.Printing.PrinterResolution" /> objects.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.#ctor(System.Drawing.Printing.PrinterResolution[])">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" /> class.</summary>
      <param name="array">An array of type <see cref="T:System.Drawing.Printing.PrinterResolution" />.</param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.Add(System.Drawing.Printing.PrinterResolution)">
      <summary>Adds a <see cref="T:System.Drawing.Printing.PrinterResolution" /> to the end of the collection.</summary>
      <param name="printerResolution">The <see cref="T:System.Drawing.Printing.PrinterResolution" /> to add to the collection.</param>
      <returns>The zero-based index of the newly added item.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.CopyTo(System.Drawing.Printing.PrinterResolution[],System.Int32)">
      <summary>Copies the contents of the current <see cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" /> to the specified array, starting at the specified index.</summary>
      <param name="printerResolutions">A zero-based array that receives the items copied from the <see cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" />.</param>
      <param name="index">The index at which to start copying items.</param>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.Count">
      <summary>Gets the number of available printer resolutions in the collection.</summary>
      <returns>The number of available printer resolutions in the collection.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" />.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Drawing.Printing.PrinterResolution" /> at a specified index.</summary>
      <param name="index">The index of the <see cref="T:System.Drawing.Printing.PrinterResolution" /> to get.</param>
      <returns>The <see cref="T:System.Drawing.Printing.PrinterResolution" /> at the specified index.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="array">The destination array.</param>
      <param name="index">The index at which to start the copy operation.</param>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.System#Collections#ICollection#Count">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.Count" />.</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterResolutions">
      <summary>Gets all the resolutions that are supported by this printer.</summary>
      <returns>A <see cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" /> that represents the resolutions that are supported by this printer.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrintFileName">
      <summary>Gets or sets the file name, when printing to a file.</summary>
      <returns>The file name, when printing to a file.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrintRange">
      <summary>Gets or sets the page numbers that the user has specified to be printed.</summary>
      <returns>One of the <see cref="T:System.Drawing.Printing.PrintRange" /> values.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value of the <see cref="P:System.Drawing.Printing.PrinterSettings.PrintRange" /> property is not one of the <see cref="T:System.Drawing.Printing.PrintRange" /> values.</exception>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrintToFile">
      <summary>Gets or sets a value indicating whether the printing output is sent to a file instead of a port.</summary>
      <returns>
        <see langword="true" /> if the printing output is sent to a file; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.SetHdevmode(System.IntPtr)">
      <summary>Copies the relevant information out of the given handle and into the <see cref="T:System.Drawing.Printing.PrinterSettings" />.</summary>
      <param name="hdevmode">The handle to a Win32 <see langword="DEVMODE" /> structure.</param>
      <exception cref="T:System.ArgumentException">The printer handle is not valid.</exception>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.SetHdevnames(System.IntPtr)">
      <summary>Copies the relevant information out of the given handle and into the <see cref="T:System.Drawing.Printing.PrinterSettings" />.</summary>
      <param name="hdevnames">The handle to a Win32 <see langword="DEVNAMES" /> structure.</param>
      <exception cref="T:System.ArgumentException">The printer handle is invalid.</exception>
    </member>
    <member name="T:System.Drawing.Printing.PrinterSettings.StringCollection">
      <summary>Contains a collection of <see cref="T:System.String" /> objects.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.StringCollection.#ctor(System.String[])">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PrinterSettings.StringCollection" /> class.</summary>
      <param name="array">An array of type <see cref="T:System.String" />.</param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.StringCollection.Add(System.String)">
      <summary>Adds a string to the end of the collection.</summary>
      <param name="value">The string to add to the collection.</param>
      <returns>The zero-based index of the newly added item.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.StringCollection.CopyTo(System.String[],System.Int32)">
      <summary>Copies the contents of the current <see cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" /> to the specified array, starting at the specified index</summary>
      <param name="strings">A zero-based array that receives the items copied from the <see cref="T:System.Drawing.Printing.PrinterSettings.StringCollection" />.</param>
      <param name="index">The index at which to start copying items.</param>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.StringCollection.Count">
      <summary>Gets the number of strings in the collection.</summary>
      <returns>The number of strings in the collection.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.StringCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Drawing.Printing.PrinterSettings.StringCollection" />.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.StringCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.String" /> at a specified index.</summary>
      <param name="index">The index of the <see cref="T:System.String" /> to get.</param>
      <returns>The <see cref="T:System.String" /> at the specified index.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.StringCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="array">The array for items to be copied to.</param>
      <param name="index">The starting index.</param>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.StringCollection.System#Collections#ICollection#Count">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.Count" />.</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.StringCollection.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.StringCollection.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.StringCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.SupportsColor">
      <summary>Gets a value indicating whether this printer supports color printing.</summary>
      <returns>
        <see langword="true" /> if this printer supports color; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.ToPage">
      <summary>Gets or sets the number of the last page to print.</summary>
      <returns>The number of the last page to print.</returns>
      <exception cref="T:System.ArgumentException">The value of the <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> property is less than zero.</exception>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.ToString">
      <summary>Provides information about the <see cref="T:System.Drawing.Printing.PrinterSettings" /> in string form.</summary>
      <returns>A string.</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrinterUnit">
      <summary>Specifies several of the units of measure used for printing.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterUnit.Display">
      <summary>The default unit (0.01 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterUnit.HundredthsOfAMillimeter">
      <summary>One-hundredth of a millimeter (0.01 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterUnit.TenthsOfAMillimeter">
      <summary>One-tenth of a millimeter (0.1 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterUnit.ThousandthsOfAnInch">
      <summary>One-thousandth of an inch (0.001 in.).</summary>
    </member>
    <member name="T:System.Drawing.Printing.PrinterUnitConvert">
      <summary>Specifies a series of conversion methods that are useful when interoperating with the Win32 printing API. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Double,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>Converts a double-precision floating-point number from one <see cref="T:System.Drawing.Printing.PrinterUnit" /> type to another <see cref="T:System.Drawing.Printing.PrinterUnit" /> type.</summary>
      <param name="value">The <see cref="T:System.Drawing.Point" /> being converted.</param>
      <param name="fromUnit">The unit to convert from.</param>
      <param name="toUnit">The unit to convert to.</param>
      <returns>A double-precision floating-point number that represents the converted <see cref="T:System.Drawing.Printing.PrinterUnit" />.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Drawing.Point,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>Converts a <see cref="T:System.Drawing.Point" /> from one <see cref="T:System.Drawing.Printing.PrinterUnit" /> type to another <see cref="T:System.Drawing.Printing.PrinterUnit" /> type.</summary>
      <param name="value">The <see cref="T:System.Drawing.Point" /> being converted.</param>
      <param name="fromUnit">The unit to convert from.</param>
      <param name="toUnit">The unit to convert to.</param>
      <returns>A <see cref="T:System.Drawing.Point" /> that represents the converted <see cref="T:System.Drawing.Printing.PrinterUnit" />.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Drawing.Printing.Margins,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>Converts a <see cref="T:System.Drawing.Printing.Margins" /> from one <see cref="T:System.Drawing.Printing.PrinterUnit" /> type to another <see cref="T:System.Drawing.Printing.PrinterUnit" /> type.</summary>
      <param name="value">The <see cref="T:System.Drawing.Printing.Margins" /> being converted.</param>
      <param name="fromUnit">The unit to convert from.</param>
      <param name="toUnit">The unit to convert to.</param>
      <returns>A <see cref="T:System.Drawing.Printing.Margins" /> that represents the converted <see cref="T:System.Drawing.Printing.PrinterUnit" />.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Drawing.Rectangle,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>Converts a <see cref="T:System.Drawing.Rectangle" /> from one <see cref="T:System.Drawing.Printing.PrinterUnit" /> type to another <see cref="T:System.Drawing.Printing.PrinterUnit" /> type.</summary>
      <param name="value">The <see cref="T:System.Drawing.Rectangle" /> being converted.</param>
      <param name="fromUnit">The unit to convert from.</param>
      <param name="toUnit">The unit to convert to.</param>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> that represents the converted <see cref="T:System.Drawing.Printing.PrinterUnit" />.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Drawing.Size,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>Converts a <see cref="T:System.Drawing.Size" /> from one <see cref="T:System.Drawing.Printing.PrinterUnit" /> type to another <see cref="T:System.Drawing.Printing.PrinterUnit" /> type.</summary>
      <param name="value">The <see cref="T:System.Drawing.Size" /> being converted.</param>
      <param name="fromUnit">The unit to convert from.</param>
      <param name="toUnit">The unit to convert to.</param>
      <returns>A <see cref="T:System.Drawing.Size" /> that represents the converted <see cref="T:System.Drawing.Printing.PrinterUnit" />.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Int32,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>Converts a 32-bit signed integer from one <see cref="T:System.Drawing.Printing.PrinterUnit" /> type to another <see cref="T:System.Drawing.Printing.PrinterUnit" /> type.</summary>
      <param name="value">The value being converted.</param>
      <param name="fromUnit">The unit to convert from.</param>
      <param name="toUnit">The unit to convert to.</param>
      <returns>A 32-bit signed integer that represents the converted <see cref="T:System.Drawing.Printing.PrinterUnit" />.</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrintEventArgs">
      <summary>Provides data for the <see cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" /> and <see cref="E:System.Drawing.Printing.PrintDocument.EndPrint" /> events.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PrintEventArgs" /> class.</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrintEventArgs.PrintAction">
      <summary>Returns <see cref="F:System.Drawing.Printing.PrintAction.PrintToFile" /> in all cases.</summary>
      <returns>
        <see cref="F:System.Drawing.Printing.PrintAction.PrintToFile" /> in all cases.</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrintEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" /> or <see cref="E:System.Drawing.Printing.PrintDocument.EndPrint" /> event of a <see cref="T:System.Drawing.Printing.PrintDocument" />.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.Drawing.Printing.PrintPageEventArgs">
      <summary>Provides data for the <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> event.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintPageEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Printing.PageSettings)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PrintPageEventArgs" /> class.</summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> used to paint the item.</param>
      <param name="marginBounds">The area between the margins.</param>
      <param name="pageBounds">The total area of the paper.</param>
      <param name="pageSettings">The <see cref="T:System.Drawing.Printing.PageSettings" /> for the page.</param>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.Cancel">
      <summary>Gets or sets a value indicating whether the print job should be canceled.</summary>
      <returns>
        <see langword="true" /> if the print job should be canceled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.Graphics">
      <summary>Gets the <see cref="T:System.Drawing.Graphics" /> used to paint the page.</summary>
      <returns>The <see cref="T:System.Drawing.Graphics" /> used to paint the page.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.HasMorePages">
      <summary>Gets or sets a value indicating whether an additional page should be printed.</summary>
      <returns>
        <see langword="true" /> if an additional page should be printed; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.MarginBounds">
      <summary>Gets the rectangular area that represents the portion of the page inside the margins.</summary>
      <returns>The rectangular area, measured in hundredths of an inch, that represents the portion of the page inside the margins.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.PageBounds">
      <summary>Gets the rectangular area that represents the total area of the page.</summary>
      <returns>The rectangular area that represents the total area of the page.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.PageSettings">
      <summary>Gets the page settings for the current page.</summary>
      <returns>The page settings for the current page.</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrintPageEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> event of a <see cref="T:System.Drawing.Printing.PrintDocument" />.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintPageEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.Drawing.Printing.PrintRange">
      <summary>Specifies the part of the document to print.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintRange.AllPages">
      <summary>All pages are printed.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintRange.CurrentPage">
      <summary>The currently displayed page is printed</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintRange.Selection">
      <summary>The selected pages are printed.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintRange.SomePages">
      <summary>The pages between <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> and <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> are printed.</summary>
    </member>
    <member name="T:System.Drawing.Printing.QueryPageSettingsEventArgs">
      <summary>Provides data for the <see cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" /> event.</summary>
    </member>
    <member name="M:System.Drawing.Printing.QueryPageSettingsEventArgs.#ctor(System.Drawing.Printing.PageSettings)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.QueryPageSettingsEventArgs" /> class.</summary>
      <param name="pageSettings">The page settings for the page to be printed.</param>
    </member>
    <member name="P:System.Drawing.Printing.QueryPageSettingsEventArgs.PageSettings">
      <summary>Gets or sets the page settings for the page to be printed.</summary>
      <returns>The page settings for the page to be printed.</returns>
    </member>
    <member name="T:System.Drawing.Printing.QueryPageSettingsEventHandler">
      <summary>Represents the method that handles the <see cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" /> event of a <see cref="T:System.Drawing.Printing.PrintDocument" />.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.Drawing.Printing.QueryPageSettingsEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.Drawing.Printing.StandardPrintController">
      <summary>Specifies a print controller that sends information to a printer.</summary>
    </member>
    <member name="M:System.Drawing.Printing.StandardPrintController.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.StandardPrintController" /> class.</summary>
    </member>
    <member name="M:System.Drawing.Printing.StandardPrintController.OnEndPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>Completes the control sequence that determines when and how to print a page of a document.</summary>
      <param name="document">A <see cref="T:System.Drawing.Printing.PrintDocument" /> that represents the document being printed.</param>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintPageEventArgs" /> that contains data about how to print a page in the document.</param>
      <exception cref="T:System.ComponentModel.Win32Exception">The native Win32 Application Programming Interface (API) could not finish writing to a page.</exception>
    </member>
    <member name="M:System.Drawing.Printing.StandardPrintController.OnEndPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
      <summary>Completes the control sequence that determines when and how to print a document.</summary>
      <param name="document">A <see cref="T:System.Drawing.Printing.PrintDocument" /> that represents the document being printed.</param>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintEventArgs" /> that contains data about how to print the document.</param>
      <exception cref="T:System.ComponentModel.Win32Exception">The native Win32 Application Programming Interface (API) could not complete the print job.  
 -or-  
 The native Windows API could not delete the specified device context (DC).</exception>
    </member>
    <member name="M:System.Drawing.Printing.StandardPrintController.OnStartPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>Begins the control sequence that determines when and how to print a page in a document.</summary>
      <param name="document">A <see cref="T:System.Drawing.Printing.PrintDocument" /> that represents the document being printed.</param>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintPageEventArgs" /> that contains data about how to print a page in the document. Initially, the <see cref="P:System.Drawing.Printing.PrintPageEventArgs.Graphics" /> property of this parameter will be <see langword="null" />. The value returned from the <see cref="M:System.Drawing.Printing.StandardPrintController.OnStartPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)" /> method will be used to set this property.</param>
      <returns>A <see cref="T:System.Drawing.Graphics" /> object that represents a page from a <see cref="T:System.Drawing.Printing.PrintDocument" />.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">The native Win32 Application Programming Interface (API) could not prepare the printer driver to accept data.  
 -or-  
 The native Windows API could not update the specified printer or plotter device context (DC) using the specified information.</exception>
    </member>
    <member name="M:System.Drawing.Printing.StandardPrintController.OnStartPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
      <summary>Begins the control sequence that determines when and how to print a document.</summary>
      <param name="document">A <see cref="T:System.Drawing.Printing.PrintDocument" /> that represents the document being printed.</param>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintEventArgs" /> that contains data about how to print the document.</param>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">The printer settings are not valid.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">The native Win32 Application Programming Interface (API) could not start a print job.</exception>
    </member>
    <member name="T:System.Drawing.Region">
      <summary>Describes the interior of a graphics shape composed of rectangles and paths. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Drawing.Region.#ctor">
      <summary>Initializes a new <see cref="T:System.Drawing.Region" />.</summary>
    </member>
    <member name="M:System.Drawing.Region.#ctor(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>Initializes a new <see cref="T:System.Drawing.Region" /> with the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      <param name="path">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> that defines the new <see cref="T:System.Drawing.Region" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Region.#ctor(System.Drawing.Drawing2D.RegionData)">
      <summary>Initializes a new <see cref="T:System.Drawing.Region" /> from the specified data.</summary>
      <param name="rgnData">A <see cref="T:System.Drawing.Drawing2D.RegionData" /> that defines the interior of the new <see cref="T:System.Drawing.Region" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rgnData" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Region.#ctor(System.Drawing.Rectangle)">
      <summary>Initializes a new <see cref="T:System.Drawing.Region" /> from the specified <see cref="T:System.Drawing.Rectangle" /> structure.</summary>
      <param name="rect">A <see cref="T:System.Drawing.Rectangle" /> structure that defines the interior of the new <see cref="T:System.Drawing.Region" />.</param>
    </member>
    <member name="M:System.Drawing.Region.#ctor(System.Drawing.RectangleF)">
      <summary>Initializes a new <see cref="T:System.Drawing.Region" /> from the specified <see cref="T:System.Drawing.RectangleF" /> structure.</summary>
      <param name="rect">A <see cref="T:System.Drawing.RectangleF" /> structure that defines the interior of the new <see cref="T:System.Drawing.Region" />.</param>
    </member>
    <member name="M:System.Drawing.Region.Clone">
      <summary>Creates an exact copy of this <see cref="T:System.Drawing.Region" />.</summary>
      <returns>The <see cref="T:System.Drawing.Region" /> that this method creates.</returns>
    </member>
    <member name="M:System.Drawing.Region.Complement(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>Updates this <see cref="T:System.Drawing.Region" /> to contain the portion of the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> that does not intersect with this <see cref="T:System.Drawing.Region" />.</summary>
      <param name="path">The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> to complement this <see cref="T:System.Drawing.Region" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Region.Complement(System.Drawing.Rectangle)">
      <summary>Updates this <see cref="T:System.Drawing.Region" /> to contain the portion of the specified <see cref="T:System.Drawing.Rectangle" /> structure that does not intersect with this <see cref="T:System.Drawing.Region" />.</summary>
      <param name="rect">The <see cref="T:System.Drawing.Rectangle" /> structure to complement this <see cref="T:System.Drawing.Region" />.</param>
    </member>
    <member name="M:System.Drawing.Region.Complement(System.Drawing.RectangleF)">
      <summary>Updates this <see cref="T:System.Drawing.Region" /> to contain the portion of the specified <see cref="T:System.Drawing.RectangleF" /> structure that does not intersect with this <see cref="T:System.Drawing.Region" />.</summary>
      <param name="rect">The <see cref="T:System.Drawing.RectangleF" /> structure to complement this <see cref="T:System.Drawing.Region" />.</param>
    </member>
    <member name="M:System.Drawing.Region.Complement(System.Drawing.Region)">
      <summary>Updates this <see cref="T:System.Drawing.Region" /> to contain the portion of the specified <see cref="T:System.Drawing.Region" /> that does not intersect with this <see cref="T:System.Drawing.Region" />.</summary>
      <param name="region">The <see cref="T:System.Drawing.Region" /> object to complement this <see cref="T:System.Drawing.Region" /> object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="region" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Region.Dispose">
      <summary>Releases all resources used by this <see cref="T:System.Drawing.Region" />.</summary>
    </member>
    <member name="M:System.Drawing.Region.Equals(System.Drawing.Region,System.Drawing.Graphics)">
      <summary>Tests whether the specified <see cref="T:System.Drawing.Region" /> is identical to this <see cref="T:System.Drawing.Region" /> on the specified drawing surface.</summary>
      <param name="region">The <see cref="T:System.Drawing.Region" /> to test.</param>
      <param name="g">A <see cref="T:System.Drawing.Graphics" /> that represents a drawing surface.</param>
      <returns>
        <see langword="true" /> if the interior of region is identical to the interior of this region when the transformation associated with the <paramref name="g" /> parameter is applied; otherwise, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="g" /> or <paramref name="region" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Region.Exclude(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>Updates this <see cref="T:System.Drawing.Region" /> to contain only the portion of its interior that does not intersect with the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      <param name="path">The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> to exclude from this <see cref="T:System.Drawing.Region" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Region.Exclude(System.Drawing.Rectangle)">
      <summary>Updates this <see cref="T:System.Drawing.Region" /> to contain only the portion of its interior that does not intersect with the specified <see cref="T:System.Drawing.Rectangle" /> structure.</summary>
      <param name="rect">The <see cref="T:System.Drawing.Rectangle" /> structure to exclude from this <see cref="T:System.Drawing.Region" />.</param>
    </member>
    <member name="M:System.Drawing.Region.Exclude(System.Drawing.RectangleF)">
      <summary>Updates this <see cref="T:System.Drawing.Region" /> to contain only the portion of its interior that does not intersect with the specified <see cref="T:System.Drawing.RectangleF" /> structure.</summary>
      <param name="rect">The <see cref="T:System.Drawing.RectangleF" /> structure to exclude from this <see cref="T:System.Drawing.Region" />.</param>
    </member>
    <member name="M:System.Drawing.Region.Exclude(System.Drawing.Region)">
      <summary>Updates this <see cref="T:System.Drawing.Region" /> to contain only the portion of its interior that does not intersect with the specified <see cref="T:System.Drawing.Region" />.</summary>
      <param name="region">The <see cref="T:System.Drawing.Region" /> to exclude from this <see cref="T:System.Drawing.Region" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="region" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Region.Finalize">
      <summary>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</summary>
    </member>
    <member name="M:System.Drawing.Region.FromHrgn(System.IntPtr)">
      <summary>Initializes a new <see cref="T:System.Drawing.Region" /> from a handle to the specified existing GDI region.</summary>
      <param name="hrgn">A handle to an existing <see cref="T:System.Drawing.Region" />.</param>
      <returns>The new <see cref="T:System.Drawing.Region" />.</returns>
    </member>
    <member name="M:System.Drawing.Region.GetBounds(System.Drawing.Graphics)">
      <summary>Gets a <see cref="T:System.Drawing.RectangleF" /> structure that represents a rectangle that bounds this <see cref="T:System.Drawing.Region" /> on the drawing surface of a <see cref="T:System.Drawing.Graphics" /> object.</summary>
      <param name="g">The <see cref="T:System.Drawing.Graphics" /> on which this <see cref="T:System.Drawing.Region" /> is drawn.</param>
      <returns>A <see cref="T:System.Drawing.RectangleF" /> structure that represents the bounding rectangle for this <see cref="T:System.Drawing.Region" /> on the specified drawing surface.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="g" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Region.GetHrgn(System.Drawing.Graphics)">
      <summary>Returns a Windows handle to this <see cref="T:System.Drawing.Region" /> in the specified graphics context.</summary>
      <param name="g">The <see cref="T:System.Drawing.Graphics" /> on which this <see cref="T:System.Drawing.Region" /> is drawn.</param>
      <returns>A Windows handle to this <see cref="T:System.Drawing.Region" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="g" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Region.GetRegionData">
      <summary>Returns a <see cref="T:System.Drawing.Drawing2D.RegionData" /> that represents the information that describes this <see cref="T:System.Drawing.Region" />.</summary>
      <returns>A <see cref="T:System.Drawing.Drawing2D.RegionData" /> that represents the information that describes this <see cref="T:System.Drawing.Region" />.</returns>
    </member>
    <member name="M:System.Drawing.Region.GetRegionScans(System.Drawing.Drawing2D.Matrix)">
      <summary>Returns an array of <see cref="T:System.Drawing.RectangleF" /> structures that approximate this <see cref="T:System.Drawing.Region" /> after the specified matrix transformation is applied.</summary>
      <param name="matrix">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that represents a geometric transformation to apply to the region.</param>
      <returns>An array of <see cref="T:System.Drawing.RectangleF" /> structures that approximate this <see cref="T:System.Drawing.Region" /> after the specified matrix transformation is applied.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Region.Intersect(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>Updates this <see cref="T:System.Drawing.Region" /> to the intersection of itself with the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      <param name="path">The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> to intersect with this <see cref="T:System.Drawing.Region" />.</param>
    </member>
    <member name="M:System.Drawing.Region.Intersect(System.Drawing.Rectangle)">
      <summary>Updates this <see cref="T:System.Drawing.Region" /> to the intersection of itself with the specified <see cref="T:System.Drawing.Rectangle" /> structure.</summary>
      <param name="rect">The <see cref="T:System.Drawing.Rectangle" /> structure to intersect with this <see cref="T:System.Drawing.Region" />.</param>
    </member>
    <member name="M:System.Drawing.Region.Intersect(System.Drawing.RectangleF)">
      <summary>Updates this <see cref="T:System.Drawing.Region" /> to the intersection of itself with the specified <see cref="T:System.Drawing.RectangleF" /> structure.</summary>
      <param name="rect">The <see cref="T:System.Drawing.RectangleF" /> structure to intersect with this <see cref="T:System.Drawing.Region" />.</param>
    </member>
    <member name="M:System.Drawing.Region.Intersect(System.Drawing.Region)">
      <summary>Updates this <see cref="T:System.Drawing.Region" /> to the intersection of itself with the specified <see cref="T:System.Drawing.Region" />.</summary>
      <param name="region">The <see cref="T:System.Drawing.Region" /> to intersect with this <see cref="T:System.Drawing.Region" />.</param>
    </member>
    <member name="M:System.Drawing.Region.IsEmpty(System.Drawing.Graphics)">
      <summary>Tests whether this <see cref="T:System.Drawing.Region" /> has an empty interior on the specified drawing surface.</summary>
      <param name="g">A <see cref="T:System.Drawing.Graphics" /> that represents a drawing surface.</param>
      <returns>
        <see langword="true" /> if the interior of this <see cref="T:System.Drawing.Region" /> is empty when the transformation associated with <paramref name="g" /> is applied; otherwise, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="g" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Region.IsInfinite(System.Drawing.Graphics)">
      <summary>Tests whether this <see cref="T:System.Drawing.Region" /> has an infinite interior on the specified drawing surface.</summary>
      <param name="g">A <see cref="T:System.Drawing.Graphics" /> that represents a drawing surface.</param>
      <returns>
        <see langword="true" /> if the interior of this <see cref="T:System.Drawing.Region" /> is infinite when the transformation associated with <paramref name="g" /> is applied; otherwise, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="g" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.Point)">
      <summary>Tests whether the specified <see cref="T:System.Drawing.Point" /> structure is contained within this <see cref="T:System.Drawing.Region" />.</summary>
      <param name="point">The <see cref="T:System.Drawing.Point" /> structure to test.</param>
      <returns>
        <see langword="true" /> when <paramref name="point" /> is contained within this <see cref="T:System.Drawing.Region" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.Point,System.Drawing.Graphics)">
      <summary>Tests whether the specified <see cref="T:System.Drawing.Point" /> structure is contained within this <see cref="T:System.Drawing.Region" /> when drawn using the specified <see cref="T:System.Drawing.Graphics" />.</summary>
      <param name="point">The <see cref="T:System.Drawing.Point" /> structure to test.</param>
      <param name="g">A <see cref="T:System.Drawing.Graphics" /> that represents a graphics context.</param>
      <returns>
        <see langword="true" /> when <paramref name="point" /> is contained within this <see cref="T:System.Drawing.Region" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.PointF)">
      <summary>Tests whether the specified <see cref="T:System.Drawing.PointF" /> structure is contained within this <see cref="T:System.Drawing.Region" />.</summary>
      <param name="point">The <see cref="T:System.Drawing.PointF" /> structure to test.</param>
      <returns>
        <see langword="true" /> when <paramref name="point" /> is contained within this <see cref="T:System.Drawing.Region" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)">
      <summary>Tests whether the specified <see cref="T:System.Drawing.PointF" /> structure is contained within this <see cref="T:System.Drawing.Region" /> when drawn using the specified <see cref="T:System.Drawing.Graphics" />.</summary>
      <param name="point">The <see cref="T:System.Drawing.PointF" /> structure to test.</param>
      <param name="g">A <see cref="T:System.Drawing.Graphics" /> that represents a graphics context.</param>
      <returns>
        <see langword="true" /> when <paramref name="point" /> is contained within this <see cref="T:System.Drawing.Region" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.Rectangle)">
      <summary>Tests whether any portion of the specified <see cref="T:System.Drawing.Rectangle" /> structure is contained within this <see cref="T:System.Drawing.Region" />.</summary>
      <param name="rect">The <see cref="T:System.Drawing.Rectangle" /> structure to test.</param>
      <returns>This method returns <see langword="true" /> when any portion of <paramref name="rect" /> is contained within this <see cref="T:System.Drawing.Region" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.Rectangle,System.Drawing.Graphics)">
      <summary>Tests whether any portion of the specified <see cref="T:System.Drawing.Rectangle" /> structure is contained within this <see cref="T:System.Drawing.Region" /> when drawn using the specified <see cref="T:System.Drawing.Graphics" />.</summary>
      <param name="rect">The <see cref="T:System.Drawing.Rectangle" /> structure to test.</param>
      <param name="g">A <see cref="T:System.Drawing.Graphics" /> that represents a graphics context.</param>
      <returns>
        <see langword="true" /> when any portion of the <paramref name="rect" /> is contained within this <see cref="T:System.Drawing.Region" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.RectangleF)">
      <summary>Tests whether any portion of the specified <see cref="T:System.Drawing.RectangleF" /> structure is contained within this <see cref="T:System.Drawing.Region" />.</summary>
      <param name="rect">The <see cref="T:System.Drawing.RectangleF" /> structure to test.</param>
      <returns>
        <see langword="true" /> when any portion of <paramref name="rect" /> is contained within this <see cref="T:System.Drawing.Region" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.RectangleF,System.Drawing.Graphics)">
      <summary>Tests whether any portion of the specified <see cref="T:System.Drawing.RectangleF" /> structure is contained within this <see cref="T:System.Drawing.Region" /> when drawn using the specified <see cref="T:System.Drawing.Graphics" />.</summary>
      <param name="rect">The <see cref="T:System.Drawing.RectangleF" /> structure to test.</param>
      <param name="g">A <see cref="T:System.Drawing.Graphics" /> that represents a graphics context.</param>
      <returns>
        <see langword="true" /> when <paramref name="rect" /> is contained within this <see cref="T:System.Drawing.Region" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
      <summary>Tests whether the specified point is contained within this <see cref="T:System.Drawing.Region" /> object when drawn using the specified <see cref="T:System.Drawing.Graphics" /> object.</summary>
      <param name="x">The x-coordinate of the point to test.</param>
      <param name="y">The y-coordinate of the point to test.</param>
      <param name="g">A <see cref="T:System.Drawing.Graphics" /> that represents a graphics context.</param>
      <returns>
        <see langword="true" /> when the specified point is contained within this <see cref="T:System.Drawing.Region" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Tests whether any portion of the specified rectangle is contained within this <see cref="T:System.Drawing.Region" />.</summary>
      <param name="x">The x-coordinate of the upper-left corner of the rectangle to test.</param>
      <param name="y">The y-coordinate of the upper-left corner of the rectangle to test.</param>
      <param name="width">The width of the rectangle to test.</param>
      <param name="height">The height of the rectangle to test.</param>
      <returns>
        <see langword="true" /> when any portion of the specified rectangle is contained within this <see cref="T:System.Drawing.Region" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Graphics)">
      <summary>Tests whether any portion of the specified rectangle is contained within this <see cref="T:System.Drawing.Region" /> when drawn using the specified <see cref="T:System.Drawing.Graphics" />.</summary>
      <param name="x">The x-coordinate of the upper-left corner of the rectangle to test.</param>
      <param name="y">The y-coordinate of the upper-left corner of the rectangle to test.</param>
      <param name="width">The width of the rectangle to test.</param>
      <param name="height">The height of the rectangle to test.</param>
      <param name="g">A <see cref="T:System.Drawing.Graphics" /> that represents a graphics context.</param>
      <returns>
        <see langword="true" /> when any portion of the specified rectangle is contained within this <see cref="T:System.Drawing.Region" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Single,System.Single)">
      <summary>Tests whether the specified point is contained within this <see cref="T:System.Drawing.Region" />.</summary>
      <param name="x">The x-coordinate of the point to test.</param>
      <param name="y">The y-coordinate of the point to test.</param>
      <returns>
        <see langword="true" /> when the specified point is contained within this <see cref="T:System.Drawing.Region" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Single,System.Single,System.Drawing.Graphics)">
      <summary>Tests whether the specified point is contained within this <see cref="T:System.Drawing.Region" /> when drawn using the specified <see cref="T:System.Drawing.Graphics" />.</summary>
      <param name="x">The x-coordinate of the point to test.</param>
      <param name="y">The y-coordinate of the point to test.</param>
      <param name="g">A <see cref="T:System.Drawing.Graphics" /> that represents a graphics context.</param>
      <returns>
        <see langword="true" /> when the specified point is contained within this <see cref="T:System.Drawing.Region" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Single,System.Single,System.Single,System.Single)">
      <summary>Tests whether any portion of the specified rectangle is contained within this <see cref="T:System.Drawing.Region" />.</summary>
      <param name="x">The x-coordinate of the upper-left corner of the rectangle to test.</param>
      <param name="y">The y-coordinate of the upper-left corner of the rectangle to test.</param>
      <param name="width">The width of the rectangle to test.</param>
      <param name="height">The height of the rectangle to test.</param>
      <returns>
        <see langword="true" /> when any portion of the specified rectangle is contained within this <see cref="T:System.Drawing.Region" /> object; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Single,System.Single,System.Single,System.Single,System.Drawing.Graphics)">
      <summary>Tests whether any portion of the specified rectangle is contained within this <see cref="T:System.Drawing.Region" /> when drawn using the specified <see cref="T:System.Drawing.Graphics" />.</summary>
      <param name="x">The x-coordinate of the upper-left corner of the rectangle to test.</param>
      <param name="y">The y-coordinate of the upper-left corner of the rectangle to test.</param>
      <param name="width">The width of the rectangle to test.</param>
      <param name="height">The height of the rectangle to test.</param>
      <param name="g">A <see cref="T:System.Drawing.Graphics" /> that represents a graphics context.</param>
      <returns>
        <see langword="true" /> when any portion of the specified rectangle is contained within this <see cref="T:System.Drawing.Region" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Region.MakeEmpty">
      <summary>Initializes this <see cref="T:System.Drawing.Region" /> to an empty interior.</summary>
    </member>
    <member name="M:System.Drawing.Region.MakeInfinite">
      <summary>Initializes this <see cref="T:System.Drawing.Region" /> object to an infinite interior.</summary>
    </member>
    <member name="M:System.Drawing.Region.ReleaseHrgn(System.IntPtr)">
      <summary>Releases the handle of the <see cref="T:System.Drawing.Region" />.</summary>
      <param name="regionHandle">The handle to the <see cref="T:System.Drawing.Region" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="regionHandle" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Region.Transform(System.Drawing.Drawing2D.Matrix)">
      <summary>Transforms this <see cref="T:System.Drawing.Region" /> by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</summary>
      <param name="matrix">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which to transform this <see cref="T:System.Drawing.Region" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Region.Translate(System.Int32,System.Int32)">
      <summary>Offsets the coordinates of this <see cref="T:System.Drawing.Region" /> by the specified amount.</summary>
      <param name="dx">The amount to offset this <see cref="T:System.Drawing.Region" /> horizontally.</param>
      <param name="dy">The amount to offset this <see cref="T:System.Drawing.Region" /> vertically.</param>
    </member>
    <member name="M:System.Drawing.Region.Translate(System.Single,System.Single)">
      <summary>Offsets the coordinates of this <see cref="T:System.Drawing.Region" /> by the specified amount.</summary>
      <param name="dx">The amount to offset this <see cref="T:System.Drawing.Region" /> horizontally.</param>
      <param name="dy">The amount to offset this <see cref="T:System.Drawing.Region" /> vertically.</param>
    </member>
    <member name="M:System.Drawing.Region.Union(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>Updates this <see cref="T:System.Drawing.Region" /> to the union of itself and the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      <param name="path">The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> to unite with this <see cref="T:System.Drawing.Region" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Region.Union(System.Drawing.Rectangle)">
      <summary>Updates this <see cref="T:System.Drawing.Region" /> to the union of itself and the specified <see cref="T:System.Drawing.Rectangle" /> structure.</summary>
      <param name="rect">The <see cref="T:System.Drawing.Rectangle" /> structure to unite with this <see cref="T:System.Drawing.Region" />.</param>
    </member>
    <member name="M:System.Drawing.Region.Union(System.Drawing.RectangleF)">
      <summary>Updates this <see cref="T:System.Drawing.Region" /> to the union of itself and the specified <see cref="T:System.Drawing.RectangleF" /> structure.</summary>
      <param name="rect">The <see cref="T:System.Drawing.RectangleF" /> structure to unite with this <see cref="T:System.Drawing.Region" />.</param>
    </member>
    <member name="M:System.Drawing.Region.Union(System.Drawing.Region)">
      <summary>Updates this <see cref="T:System.Drawing.Region" /> to the union of itself and the specified <see cref="T:System.Drawing.Region" />.</summary>
      <param name="region">The <see cref="T:System.Drawing.Region" /> to unite with this <see cref="T:System.Drawing.Region" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="region" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Region.Xor(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>Updates this <see cref="T:System.Drawing.Region" /> to the union minus the intersection of itself with the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      <param name="path">The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> to <see cref="Overload:System.Drawing.Region.Xor" /> with this <see cref="T:System.Drawing.Region" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Region.Xor(System.Drawing.Rectangle)">
      <summary>Updates this <see cref="T:System.Drawing.Region" /> to the union minus the intersection of itself with the specified <see cref="T:System.Drawing.Rectangle" /> structure.</summary>
      <param name="rect">The <see cref="T:System.Drawing.Rectangle" /> structure to <see cref="Overload:System.Drawing.Region.Xor" /> with this <see cref="T:System.Drawing.Region" />.</param>
    </member>
    <member name="M:System.Drawing.Region.Xor(System.Drawing.RectangleF)">
      <summary>Updates this <see cref="T:System.Drawing.Region" /> to the union minus the intersection of itself with the specified <see cref="T:System.Drawing.RectangleF" /> structure.</summary>
      <param name="rect">The <see cref="T:System.Drawing.RectangleF" /> structure to <see cref="M:System.Drawing.Region.Xor(System.Drawing.Drawing2D.GraphicsPath)" /> with this <see cref="T:System.Drawing.Region" />.</param>
    </member>
    <member name="M:System.Drawing.Region.Xor(System.Drawing.Region)">
      <summary>Updates this <see cref="T:System.Drawing.Region" /> to the union minus the intersection of itself with the specified <see cref="T:System.Drawing.Region" />.</summary>
      <param name="region">The <see cref="T:System.Drawing.Region" /> to <see cref="Overload:System.Drawing.Region.Xor" /> with this <see cref="T:System.Drawing.Region" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="region" /> is <see langword="null" />.</exception>
    </member>
    <member name="T:System.Drawing.RotateFlipType">
      <summary>Specifies how much an image is rotated and the axis used to flip the image.</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate180FlipNone">
      <summary>Specifies a 180-degree clockwise rotation without flipping.</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate180FlipX">
      <summary>Specifies a 180-degree clockwise rotation followed by a horizontal flip.</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate180FlipXY">
      <summary>Specifies a 180-degree clockwise rotation followed by a horizontal and vertical flip.</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate180FlipY">
      <summary>Specifies a 180-degree clockwise rotation followed by a vertical flip.</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate270FlipNone">
      <summary>Specifies a 270-degree clockwise rotation without flipping.</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate270FlipX">
      <summary>Specifies a 270-degree clockwise rotation followed by a horizontal flip.</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate270FlipXY">
      <summary>Specifies a 270-degree clockwise rotation followed by a horizontal and vertical flip.</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate270FlipY">
      <summary>Specifies a 270-degree clockwise rotation followed by a vertical flip.</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate90FlipNone">
      <summary>Specifies a 90-degree clockwise rotation without flipping.</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate90FlipX">
      <summary>Specifies a 90-degree clockwise rotation followed by a horizontal flip.</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate90FlipXY">
      <summary>Specifies a 90-degree clockwise rotation followed by a horizontal and vertical flip.</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate90FlipY">
      <summary>Specifies a 90-degree clockwise rotation followed by a vertical flip.</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.RotateNoneFlipNone">
      <summary>Specifies no clockwise rotation and no flipping.</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.RotateNoneFlipX">
      <summary>Specifies no clockwise rotation followed by a horizontal flip.</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.RotateNoneFlipXY">
      <summary>Specifies no clockwise rotation followed by a horizontal and vertical flip.</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.RotateNoneFlipY">
      <summary>Specifies no clockwise rotation followed by a vertical flip.</summary>
    </member>
    <member name="T:System.Drawing.SolidBrush">
      <summary>Defines a brush of a single color. Brushes are used to fill graphics shapes, such as rectangles, ellipses, pies, polygons, and paths. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Drawing.SolidBrush.#ctor(System.Drawing.Color)">
      <summary>Initializes a new <see cref="T:System.Drawing.SolidBrush" /> object of the specified color.</summary>
      <param name="color">A <see cref="T:System.Drawing.Color" /> structure that represents the color of this brush.</param>
    </member>
    <member name="M:System.Drawing.SolidBrush.Clone">
      <summary>Creates an exact copy of this <see cref="T:System.Drawing.SolidBrush" /> object.</summary>
      <returns>The <see cref="T:System.Drawing.SolidBrush" /> object that this method creates.</returns>
    </member>
    <member name="P:System.Drawing.SolidBrush.Color">
      <summary>Gets or sets the color of this <see cref="T:System.Drawing.SolidBrush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> structure that represents the color of this brush.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Drawing.SolidBrush.Color" /> property is set on an immutable <see cref="T:System.Drawing.SolidBrush" />.</exception>
    </member>
    <member name="T:System.Drawing.StringAlignment">
      <summary>Specifies the alignment of a text string relative to its layout rectangle.</summary>
    </member>
    <member name="F:System.Drawing.StringAlignment.Center">
      <summary>Specifies that text is aligned in the center of the layout rectangle.</summary>
    </member>
    <member name="F:System.Drawing.StringAlignment.Far">
      <summary>Specifies that text is aligned far from the origin position of the layout rectangle. In a left-to-right layout, the far position is right. In a right-to-left layout, the far position is left.</summary>
    </member>
    <member name="F:System.Drawing.StringAlignment.Near">
      <summary>Specifies the text be aligned near the layout. In a left-to-right layout, the near position is left. In a right-to-left layout, the near position is right.</summary>
    </member>
    <member name="T:System.Drawing.StringDigitSubstitute">
      <summary>The <see cref="T:System.Drawing.StringDigitSubstitute" /> enumeration specifies how to substitute digits in a string according to a user's locale or language.</summary>
    </member>
    <member name="F:System.Drawing.StringDigitSubstitute.National">
      <summary>Specifies substitution digits that correspond with the official national language of the user's locale.</summary>
    </member>
    <member name="F:System.Drawing.StringDigitSubstitute.None">
      <summary>Specifies to disable substitutions.</summary>
    </member>
    <member name="F:System.Drawing.StringDigitSubstitute.Traditional">
      <summary>Specifies substitution digits that correspond with the user's native script or language, which may be different from the official national language of the user's locale.</summary>
    </member>
    <member name="F:System.Drawing.StringDigitSubstitute.User">
      <summary>Specifies a user-defined substitution scheme.</summary>
    </member>
    <member name="T:System.Drawing.StringFormat">
      <summary>Encapsulates text layout information (such as alignment, orientation and tab stops) display manipulations (such as ellipsis insertion and national digit substitution) and OpenType features. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Drawing.StringFormat.#ctor">
      <summary>Initializes a new <see cref="T:System.Drawing.StringFormat" /> object.</summary>
    </member>
    <member name="M:System.Drawing.StringFormat.#ctor(System.Drawing.StringFormat)">
      <summary>Initializes a new <see cref="T:System.Drawing.StringFormat" /> object from the specified existing <see cref="T:System.Drawing.StringFormat" /> object.</summary>
      <param name="format">The <see cref="T:System.Drawing.StringFormat" /> object from which to initialize the new <see cref="T:System.Drawing.StringFormat" /> object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.StringFormat.#ctor(System.Drawing.StringFormatFlags)">
      <summary>Initializes a new <see cref="T:System.Drawing.StringFormat" /> object with the specified <see cref="T:System.Drawing.StringFormatFlags" /> enumeration.</summary>
      <param name="options">The <see cref="T:System.Drawing.StringFormatFlags" /> enumeration for the new <see cref="T:System.Drawing.StringFormat" /> object.</param>
    </member>
    <member name="M:System.Drawing.StringFormat.#ctor(System.Drawing.StringFormatFlags,System.Int32)">
      <summary>Initializes a new <see cref="T:System.Drawing.StringFormat" /> object with the specified <see cref="T:System.Drawing.StringFormatFlags" /> enumeration and language.</summary>
      <param name="options">The <see cref="T:System.Drawing.StringFormatFlags" /> enumeration for the new <see cref="T:System.Drawing.StringFormat" /> object.</param>
      <param name="language">A value that indicates the language of the text.</param>
    </member>
    <member name="P:System.Drawing.StringFormat.Alignment">
      <summary>Gets or sets horizontal alignment of the string.</summary>
      <returns>A <see cref="T:System.Drawing.StringAlignment" /> enumeration that specifies the horizontal  alignment of the string.</returns>
    </member>
    <member name="M:System.Drawing.StringFormat.Clone">
      <summary>Creates an exact copy of this <see cref="T:System.Drawing.StringFormat" /> object.</summary>
      <returns>The <see cref="T:System.Drawing.StringFormat" /> object this method creates.</returns>
    </member>
    <member name="P:System.Drawing.StringFormat.DigitSubstitutionLanguage">
      <summary>Gets the language that is used when local digits are substituted for western digits.</summary>
      <returns>A National Language Support (NLS) language identifier that identifies the language that will be used when local digits are substituted for western digits. You can pass the <see cref="P:System.Globalization.CultureInfo.LCID" /> property of a <see cref="T:System.Globalization.CultureInfo" /> object as the NLS language identifier. For example, suppose you create a <see cref="T:System.Globalization.CultureInfo" /> object by passing the string "ar-EG" to a <see cref="T:System.Globalization.CultureInfo" /> constructor. If you pass the <see cref="P:System.Globalization.CultureInfo.LCID" /> property of that <see cref="T:System.Globalization.CultureInfo" /> object along with <see cref="F:System.Drawing.StringDigitSubstitute.Traditional" /> to the <see cref="M:System.Drawing.StringFormat.SetDigitSubstitution(System.Int32,System.Drawing.StringDigitSubstitute)" /> method, then Arabic-Indic digits will be substituted for western digits at display time.</returns>
    </member>
    <member name="P:System.Drawing.StringFormat.DigitSubstitutionMethod">
      <summary>Gets the method to be used for digit substitution.</summary>
      <returns>A <see cref="T:System.Drawing.StringDigitSubstitute" /> enumeration value that specifies how to substitute characters in a string that cannot be displayed because they are not supported by the current font.</returns>
    </member>
    <member name="M:System.Drawing.StringFormat.Dispose">
      <summary>Releases all resources used by this <see cref="T:System.Drawing.StringFormat" /> object.</summary>
    </member>
    <member name="M:System.Drawing.StringFormat.Finalize">
      <summary>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</summary>
    </member>
    <member name="P:System.Drawing.StringFormat.FormatFlags">
      <summary>Gets or sets a <see cref="T:System.Drawing.StringFormatFlags" /> enumeration that contains formatting information.</summary>
      <returns>A <see cref="T:System.Drawing.StringFormatFlags" /> enumeration that contains formatting information.</returns>
    </member>
    <member name="P:System.Drawing.StringFormat.GenericDefault">
      <summary>Gets a generic default <see cref="T:System.Drawing.StringFormat" /> object.</summary>
      <returns>The generic default <see cref="T:System.Drawing.StringFormat" /> object.</returns>
    </member>
    <member name="P:System.Drawing.StringFormat.GenericTypographic">
      <summary>Gets a generic typographic <see cref="T:System.Drawing.StringFormat" /> object.</summary>
      <returns>A generic typographic <see cref="T:System.Drawing.StringFormat" /> object.</returns>
    </member>
    <member name="M:System.Drawing.StringFormat.GetTabStops(System.Single@)">
      <summary>Gets the tab stops for this <see cref="T:System.Drawing.StringFormat" /> object.</summary>
      <param name="firstTabOffset">The number of spaces between the beginning of a text line and the first tab stop.</param>
      <returns>An array of distances (in number of spaces) between tab stops.</returns>
    </member>
    <member name="P:System.Drawing.StringFormat.HotkeyPrefix">
      <summary>Gets or sets the <see cref="T:System.Drawing.Text.HotkeyPrefix" /> object for this <see cref="T:System.Drawing.StringFormat" /> object.</summary>
      <returns>The <see cref="T:System.Drawing.Text.HotkeyPrefix" /> object for this <see cref="T:System.Drawing.StringFormat" /> object, the default is <see cref="F:System.Drawing.Text.HotkeyPrefix.None" />.</returns>
    </member>
    <member name="P:System.Drawing.StringFormat.LineAlignment">
      <summary>Gets or sets the vertical alignment of the string.</summary>
      <returns>A <see cref="T:System.Drawing.StringAlignment" /> enumeration that represents the vertical line alignment.</returns>
    </member>
    <member name="M:System.Drawing.StringFormat.SetDigitSubstitution(System.Int32,System.Drawing.StringDigitSubstitute)">
      <summary>Specifies the language and method to be used when local digits are substituted for western digits.</summary>
      <param name="language">A National Language Support (NLS) language identifier that identifies the language that will be used when local digits are substituted for western digits. You can pass the <see cref="P:System.Globalization.CultureInfo.LCID" /> property of a <see cref="T:System.Globalization.CultureInfo" /> object as the NLS language identifier. For example, suppose you create a <see cref="T:System.Globalization.CultureInfo" /> object by passing the string "ar-EG" to a <see cref="T:System.Globalization.CultureInfo" /> constructor. If you pass the <see cref="P:System.Globalization.CultureInfo.LCID" /> property of that <see cref="T:System.Globalization.CultureInfo" /> object along with <see cref="F:System.Drawing.StringDigitSubstitute.Traditional" /> to the <see cref="M:System.Drawing.StringFormat.SetDigitSubstitution(System.Int32,System.Drawing.StringDigitSubstitute)" /> method, then Arabic-Indic digits will be substituted for western digits at display time.</param>
      <param name="substitute">An element of the <see cref="T:System.Drawing.StringDigitSubstitute" /> enumeration that specifies how digits are displayed.</param>
    </member>
    <member name="M:System.Drawing.StringFormat.SetMeasurableCharacterRanges(System.Drawing.CharacterRange[])">
      <summary>Specifies an array of <see cref="T:System.Drawing.CharacterRange" /> structures that represent the ranges of characters measured by a call to the <see cref="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)" /> method.</summary>
      <param name="ranges">An array of <see cref="T:System.Drawing.CharacterRange" /> structures that specifies the ranges of characters measured by a call to the <see cref="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)" /> method.</param>
      <exception cref="T:System.OverflowException">More than 32 character ranges are set.</exception>
    </member>
    <member name="M:System.Drawing.StringFormat.SetTabStops(System.Single,System.Single[])">
      <summary>Sets tab stops for this <see cref="T:System.Drawing.StringFormat" /> object.</summary>
      <param name="firstTabOffset">The number of spaces between the beginning of a line of text and the first tab stop.</param>
      <param name="tabStops">An array of distances between tab stops in the units specified by the <see cref="P:System.Drawing.Graphics.PageUnit" /> property.</param>
    </member>
    <member name="M:System.Drawing.StringFormat.ToString">
      <summary>Converts this <see cref="T:System.Drawing.StringFormat" /> object to a human-readable string.</summary>
      <returns>A string representation of this <see cref="T:System.Drawing.StringFormat" /> object.</returns>
    </member>
    <member name="P:System.Drawing.StringFormat.Trimming">
      <summary>Gets or sets the <see cref="T:System.Drawing.StringTrimming" /> enumeration for this <see cref="T:System.Drawing.StringFormat" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.StringTrimming" /> enumeration that indicates how text drawn with this <see cref="T:System.Drawing.StringFormat" /> object is trimmed when it exceeds the edges of the layout rectangle.</returns>
    </member>
    <member name="T:System.Drawing.StringFormatFlags">
      <summary>Specifies the display and layout information for text strings.</summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.DirectionRightToLeft">
      <summary>Text is displayed from right to left.</summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.DirectionVertical">
      <summary>Text is vertically aligned.</summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.DisplayFormatControl">
      <summary>Control characters such as the left-to-right mark are shown in the output with a representative glyph.</summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.FitBlackBox">
      <summary>Parts of characters are allowed to overhang the string's layout rectangle. By default, characters are repositioned to avoid any overhang.</summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.LineLimit">
      <summary>Only entire lines are laid out in the formatting rectangle. By default layout continues until the end of the text, or until no more lines are visible as a result of clipping, whichever comes first. Note that the default settings allow the last line to be partially obscured by a formatting rectangle that is not a whole multiple of the line height. To ensure that only whole lines are seen, specify this value and be careful to provide a formatting rectangle at least as tall as the height of one line.</summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.MeasureTrailingSpaces">
      <summary>Includes the trailing space at the end of each line. By default the boundary rectangle returned by the <see cref="Overload:System.Drawing.Graphics.MeasureString" /> method excludes the space at the end of each line. Set this flag to include that space in measurement.</summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.NoClip">
      <summary>Overhanging parts of glyphs, and unwrapped text reaching outside the formatting rectangle are allowed to show. By default all text and glyph parts reaching outside the formatting rectangle are clipped.</summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.NoFontFallback">
      <summary>Fallback to alternate fonts for characters not supported in the requested font is disabled. Any missing characters are displayed with the fonts missing glyph, usually an open square.</summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.NoWrap">
      <summary>Text wrapping between lines when formatting within a rectangle is disabled. This flag is implied when a point is passed instead of a rectangle, or when the specified rectangle has a zero line length.</summary>
    </member>
    <member name="T:System.Drawing.StringTrimming">
      <summary>Specifies how to trim characters from a string that does not completely fit into a layout shape.</summary>
    </member>
    <member name="F:System.Drawing.StringTrimming.Character">
      <summary>Specifies that the text is trimmed to the nearest character.</summary>
    </member>
    <member name="F:System.Drawing.StringTrimming.EllipsisCharacter">
      <summary>Specifies that the text is trimmed to the nearest character, and an ellipsis is inserted at the end of a trimmed line.</summary>
    </member>
    <member name="F:System.Drawing.StringTrimming.EllipsisPath">
      <summary>The center is removed from trimmed lines and replaced by an ellipsis. The algorithm keeps as much of the last slash-delimited segment of the line as possible.</summary>
    </member>
    <member name="F:System.Drawing.StringTrimming.EllipsisWord">
      <summary>Specifies that text is trimmed to the nearest word, and an ellipsis is inserted at the end of a trimmed line.</summary>
    </member>
    <member name="F:System.Drawing.StringTrimming.None">
      <summary>Specifies no trimming.</summary>
    </member>
    <member name="F:System.Drawing.StringTrimming.Word">
      <summary>Specifies that text is trimmed to the nearest word.</summary>
    </member>
    <member name="T:System.Drawing.StringUnit">
      <summary>Specifies the units of measure for a text string.</summary>
    </member>
    <member name="F:System.Drawing.StringUnit.Display">
      <summary>Specifies the device unit as the unit of measure.</summary>
    </member>
    <member name="F:System.Drawing.StringUnit.Document">
      <summary>Specifies 1/300 of an inch as the unit of measure.</summary>
    </member>
    <member name="F:System.Drawing.StringUnit.Em">
      <summary>Specifies a printer's em size of 32 as the unit of measure.</summary>
    </member>
    <member name="F:System.Drawing.StringUnit.Inch">
      <summary>Specifies an inch as the unit of measure.</summary>
    </member>
    <member name="F:System.Drawing.StringUnit.Millimeter">
      <summary>Specifies a millimeter as the unit of measure</summary>
    </member>
    <member name="F:System.Drawing.StringUnit.Pixel">
      <summary>Specifies a pixel as the unit of measure.</summary>
    </member>
    <member name="F:System.Drawing.StringUnit.Point">
      <summary>Specifies a printer's point (1/72 inch) as the unit of measure.</summary>
    </member>
    <member name="F:System.Drawing.StringUnit.World">
      <summary>Specifies world units as the unit of measure.</summary>
    </member>
    <member name="T:System.Drawing.SystemBrushes">
      <summary>Each property of the <see cref="T:System.Drawing.SystemBrushes" /> class is a <see cref="T:System.Drawing.SolidBrush" /> that is the color of a Windows display element.</summary>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ActiveBorder">
      <summary>Gets a <see cref="T:System.Drawing.SolidBrush" /> that is the color of the active window's border.</summary>
      <returns>A <see cref="T:System.Drawing.SolidBrush" /> that is the color of the active window's border.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ActiveCaption">
      <summary>Gets a <see cref="T:System.Drawing.SolidBrush" /> that is the color of the background of the active window's title bar.</summary>
      <returns>A <see cref="T:System.Drawing.SolidBrush" /> that is the color of the background of the active window's title bar.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ActiveCaptionText">
      <summary>Gets a <see cref="T:System.Drawing.SolidBrush" /> that is the color of the text in the active window's title bar.</summary>
      <returns>A <see cref="T:System.Drawing.SolidBrush" /> that is the color of the background of the active window's title bar.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.AppWorkspace">
      <summary>Gets a <see cref="T:System.Drawing.SolidBrush" /> that is the color of the application workspace.</summary>
      <returns>A <see cref="T:System.Drawing.SolidBrush" /> that is the color of the application workspace.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ButtonFace">
      <summary>Gets a <see cref="T:System.Drawing.SolidBrush" /> that is the face color of a 3-D element.</summary>
      <returns>A <see cref="T:System.Drawing.SolidBrush" /> that is the face color of a 3-D element.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ButtonHighlight">
      <summary>Gets a <see cref="T:System.Drawing.SolidBrush" /> that is the highlight color of a 3-D element.</summary>
      <returns>A <see cref="T:System.Drawing.SolidBrush" /> that is the highlight color of a 3-D element.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ButtonShadow">
      <summary>Gets a <see cref="T:System.Drawing.SolidBrush" /> that is the shadow color of a 3-D element.</summary>
      <returns>A <see cref="T:System.Drawing.SolidBrush" /> that is the shadow color of a 3-D element.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.Control">
      <summary>Gets a <see cref="T:System.Drawing.SolidBrush" /> that is the face color of a 3-D element.</summary>
      <returns>A <see cref="T:System.Drawing.SolidBrush" /> that is the face color of a 3-D element.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ControlDark">
      <summary>Gets a <see cref="T:System.Drawing.SolidBrush" /> that is the shadow color of a 3-D element.</summary>
      <returns>A <see cref="T:System.Drawing.SolidBrush" /> that is the shadow color of a 3-D element.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ControlDarkDark">
      <summary>Gets a <see cref="T:System.Drawing.SolidBrush" /> that is the dark shadow color of a 3-D element.</summary>
      <returns>A <see cref="T:System.Drawing.SolidBrush" /> that is the dark shadow color of a 3-D element.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ControlLight">
      <summary>Gets a <see cref="T:System.Drawing.SolidBrush" /> that is the light color of a 3-D element.</summary>
      <returns>A <see cref="T:System.Drawing.SolidBrush" /> that is the light color of a 3-D element.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ControlLightLight">
      <summary>Gets a <see cref="T:System.Drawing.SolidBrush" /> that is the highlight color of a 3-D element.</summary>
      <returns>A <see cref="T:System.Drawing.SolidBrush" /> that is the highlight color of a 3-D element.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ControlText">
      <summary>Gets a <see cref="T:System.Drawing.SolidBrush" /> that is the color of text in a 3-D element.</summary>
      <returns>A <see cref="T:System.Drawing.SolidBrush" /> that is the color of text in a 3-D element.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.Desktop">
      <summary>Gets a <see cref="T:System.Drawing.SolidBrush" /> that is the color of the desktop.</summary>
      <returns>A <see cref="T:System.Drawing.SolidBrush" /> that is the color of the desktop.</returns>
    </member>
    <member name="M:System.Drawing.SystemBrushes.FromSystemColor(System.Drawing.Color)">
      <summary>Creates a <see cref="T:System.Drawing.Brush" /> from the specified <see cref="T:System.Drawing.Color" /> structure.</summary>
      <param name="c">The <see cref="T:System.Drawing.Color" /> structure from which to create the <see cref="T:System.Drawing.Brush" />.</param>
      <returns>The <see cref="T:System.Drawing.Brush" /> this method creates.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.GradientActiveCaption">
      <summary>Gets a <see cref="T:System.Drawing.SolidBrush" /> that is the lightest color in the color gradient of an active window's title bar.</summary>
      <returns>A <see cref="T:System.Drawing.SolidBrush" /> that is the lightest color in the color gradient of an active window's title bar.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.GradientInactiveCaption">
      <summary>Gets a <see cref="T:System.Drawing.SolidBrush" /> that is the lightest color in the color gradient of an inactive window's title bar.</summary>
      <returns>A <see cref="T:System.Drawing.SolidBrush" /> that is the lightest color in the color gradient of an inactive window's title bar.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.GrayText">
      <summary>Gets a <see cref="T:System.Drawing.SolidBrush" /> that is the color of dimmed text.</summary>
      <returns>A <see cref="T:System.Drawing.SolidBrush" /> that is the color of dimmed text.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.Highlight">
      <summary>Gets a <see cref="T:System.Drawing.SolidBrush" /> that is the color of the background of selected items.</summary>
      <returns>A <see cref="T:System.Drawing.SolidBrush" /> that is the color of the background of selected items.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.HighlightText">
      <summary>Gets a <see cref="T:System.Drawing.SolidBrush" /> that is the color of the text of selected items.</summary>
      <returns>A <see cref="T:System.Drawing.SolidBrush" /> that is the color of the text of selected items.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.HotTrack">
      <summary>Gets a <see cref="T:System.Drawing.SolidBrush" /> that is the color used to designate a hot-tracked item.</summary>
      <returns>A <see cref="T:System.Drawing.SolidBrush" /> that is the color used to designate a hot-tracked item.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.InactiveBorder">
      <summary>Gets a <see cref="T:System.Drawing.SolidBrush" /> that is the color of an inactive window's border.</summary>
      <returns>A <see cref="T:System.Drawing.SolidBrush" /> that is the color of an inactive window's border.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.InactiveCaption">
      <summary>Gets a <see cref="T:System.Drawing.SolidBrush" /> that is the color of the background of an inactive window's title bar.</summary>
      <returns>A <see cref="T:System.Drawing.SolidBrush" /> that is the color of the background of an inactive window's title bar.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.InactiveCaptionText">
      <summary>Gets a <see cref="T:System.Drawing.SolidBrush" /> that is the color of the text in an inactive window's title bar.</summary>
      <returns>A <see cref="T:System.Drawing.SolidBrush" /> that is the color of the text in an inactive window's title bar.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.Info">
      <summary>Gets a <see cref="T:System.Drawing.SolidBrush" /> that is the color of the background of a ToolTip.</summary>
      <returns>A <see cref="T:System.Drawing.SolidBrush" /> that is the color of the background of a ToolTip.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.InfoText">
      <summary>Gets a <see cref="T:System.Drawing.SolidBrush" /> that is the color of the text of a ToolTip.</summary>
      <returns>A <see cref="T:System.Drawing.SolidBrush" /> is the color of the text of a ToolTip.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.Menu">
      <summary>Gets a <see cref="T:System.Drawing.SolidBrush" /> that is the color of a menu's background.</summary>
      <returns>A <see cref="T:System.Drawing.SolidBrush" /> that is the color of a menu's background.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.MenuBar">
      <summary>Gets a <see cref="T:System.Drawing.SolidBrush" /> that is the color of the background of a menu bar.</summary>
      <returns>A <see cref="T:System.Drawing.SolidBrush" /> that is the color of the background of a menu bar.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.MenuHighlight">
      <summary>Gets a <see cref="T:System.Drawing.SolidBrush" /> that is the color used to highlight menu items when the menu appears as a flat menu.</summary>
      <returns>A <see cref="T:System.Drawing.SolidBrush" /> that is the color used to highlight menu items when the menu appears as a flat menu.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.MenuText">
      <summary>Gets a <see cref="T:System.Drawing.SolidBrush" /> that is the color of a menu's text.</summary>
      <returns>A <see cref="T:System.Drawing.SolidBrush" /> that is the color of a menu's text.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ScrollBar">
      <summary>Gets a <see cref="T:System.Drawing.SolidBrush" /> that is the color of the background of a scroll bar.</summary>
      <returns>A <see cref="T:System.Drawing.SolidBrush" /> that is the color of the background of a scroll bar.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.Window">
      <summary>Gets a <see cref="T:System.Drawing.SolidBrush" /> that is the color of the background in the client area of a window.</summary>
      <returns>A <see cref="T:System.Drawing.SolidBrush" /> that is the color of the background in the client area of a window.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.WindowFrame">
      <summary>Gets a <see cref="T:System.Drawing.SolidBrush" /> that is the color of a window frame.</summary>
      <returns>A <see cref="T:System.Drawing.SolidBrush" /> that is the color of a window frame.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.WindowText">
      <summary>Gets a <see cref="T:System.Drawing.SolidBrush" /> that is the color of the text in the client area of a window.</summary>
      <returns>A <see cref="T:System.Drawing.SolidBrush" /> that is the color of the text in the client area of a window.</returns>
    </member>
    <member name="T:System.Drawing.SystemColors">
      <summary>Each property of the <see cref="T:System.Drawing.SystemColors" /> class is a <see cref="T:System.Drawing.Color" /> structure that is the color of a Windows display element.</summary>
    </member>
    <member name="P:System.Drawing.SystemColors.ActiveBorder">
      <summary>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of the active window's border.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that is the color of the active window's border.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.ActiveCaption">
      <summary>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of the background of the active window's title bar.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that is the color of the active window's title bar.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.ActiveCaptionText">
      <summary>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of the text in the active window's title bar.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that is the color of the text in the active window's title bar.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.AppWorkspace">
      <summary>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of the application workspace.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that is the color of the application workspace.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.ButtonFace">
      <summary>Gets a <see cref="T:System.Drawing.Color" /> structure that is the face color of a 3-D element.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that is the face color of a 3-D element.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.ButtonHighlight">
      <summary>Gets a <see cref="T:System.Drawing.Color" /> structure that is the highlight color of a 3-D element.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that is the highlight color of a 3-D element.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.ButtonShadow">
      <summary>Gets a <see cref="T:System.Drawing.Color" /> structure that is the shadow color of a 3-D element.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that is the shadow color of a 3-D element.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.Control">
      <summary>Gets a <see cref="T:System.Drawing.Color" /> structure that is the face color of a 3-D element.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that is the face color of a 3-D element.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.ControlDark">
      <summary>Gets a <see cref="T:System.Drawing.Color" /> structure that is the shadow color of a 3-D element.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that is the shadow color of a 3-D element.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.ControlDarkDark">
      <summary>Gets a <see cref="T:System.Drawing.Color" /> structure that is the dark shadow color of a 3-D element.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that is the dark shadow color of a 3-D element.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.ControlLight">
      <summary>Gets a <see cref="T:System.Drawing.Color" /> structure that is the light color of a 3-D element.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that is the light color of a 3-D element.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.ControlLightLight">
      <summary>Gets a <see cref="T:System.Drawing.Color" /> structure that is the highlight color of a 3-D element.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that is the highlight color of a 3-D element.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.ControlText">
      <summary>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of text in a 3-D element.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that is the color of text in a 3-D element.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.Desktop">
      <summary>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of the desktop.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that is the color of the desktop.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.GradientActiveCaption">
      <summary>Gets a <see cref="T:System.Drawing.Color" /> structure that is the lightest color in the color gradient of an active window's title bar.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that is the lightest color in the color gradient of an active window's title bar.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.GradientInactiveCaption">
      <summary>Gets a <see cref="T:System.Drawing.Color" /> structure that is the lightest color in the color gradient of an inactive window's title bar.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that is the lightest color in the color gradient of an inactive window's title bar.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.GrayText">
      <summary>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of dimmed text.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that is the color of dimmed text.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.Highlight">
      <summary>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of the background of selected items.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that is the color of the background of selected items.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.HighlightText">
      <summary>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of the text of selected items.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that is the color of the text of selected items.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.HotTrack">
      <summary>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color used to designate a hot-tracked item.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that is the color used to designate a hot-tracked item.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.InactiveBorder">
      <summary>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of an inactive window's border.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that is the color of an inactive window's border.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.InactiveCaption">
      <summary>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of the background of an inactive window's title bar.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that is the color of the background of an inactive window's title bar.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.InactiveCaptionText">
      <summary>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of the text in an inactive window's title bar.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that is the color of the text in an inactive window's title bar.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.Info">
      <summary>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of the background of a ToolTip.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that is the color of the background of a ToolTip.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.InfoText">
      <summary>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of the text of a ToolTip.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that is the color of the text of a ToolTip.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.Menu">
      <summary>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of a menu's background.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that is the color of a menu's background.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.MenuBar">
      <summary>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of the background of a menu bar.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that is the color of the background of a menu bar.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.MenuHighlight">
      <summary>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color used to highlight menu items when the menu appears as a flat menu.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that is the color used to highlight menu items when the menu appears as a flat menu.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.MenuText">
      <summary>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of a menu's text.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that is the color of a menu's text.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.ScrollBar">
      <summary>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of the background of a scroll bar.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that is the color of the background of a scroll bar.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.Window">
      <summary>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of the background in the client area of a window.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that is the color of the background in the client area of a window.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.WindowFrame">
      <summary>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of a window frame.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that is the color of a window frame.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.WindowText">
      <summary>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of the text in the client area of a window.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that is the color of the text in the client area of a window.</returns>
    </member>
    <member name="T:System.Drawing.SystemFonts">
      <summary>Specifies the fonts used to display text in Windows display elements.</summary>
    </member>
    <member name="P:System.Drawing.SystemFonts.CaptionFont">
      <summary>Gets a <see cref="T:System.Drawing.Font" /> that is used to display text in the title bars of windows.</summary>
      <returns>A <see cref="T:System.Drawing.Font" /> that is used to display text in the title bars of windows.</returns>
    </member>
    <member name="P:System.Drawing.SystemFonts.DefaultFont">
      <summary>Gets the default font that applications can use for dialog boxes and forms.</summary>
      <returns>The default <see cref="T:System.Drawing.Font" /> of the system. The value returned will vary depending on the user's operating system and the local culture setting of their system.</returns>
    </member>
    <member name="P:System.Drawing.SystemFonts.DialogFont">
      <summary>Gets a font that applications can use for dialog boxes and forms.</summary>
      <returns>A <see cref="T:System.Drawing.Font" /> that can be used for dialog boxes and forms, depending on the operating system and local culture setting of the system.</returns>
    </member>
    <member name="M:System.Drawing.SystemFonts.GetFontByName(System.String)">
      <summary>Returns a font object that corresponds to the specified system font name.</summary>
      <param name="systemFontName">The name of the system font you need a font object for.</param>
      <returns>A <see cref="T:System.Drawing.Font" /> if the specified name matches a value in <see cref="T:System.Drawing.SystemFonts" />; otherwise, <see langword="null" />.</returns>
    </member>
    <member name="P:System.Drawing.SystemFonts.IconTitleFont">
      <summary>Gets a <see cref="T:System.Drawing.Font" /> that is used for icon titles.</summary>
      <returns>A <see cref="T:System.Drawing.Font" /> that is used for icon titles.</returns>
    </member>
    <member name="P:System.Drawing.SystemFonts.MenuFont">
      <summary>Gets a <see cref="T:System.Drawing.Font" /> that is used for menus.</summary>
      <returns>A <see cref="T:System.Drawing.Font" /> that is used for menus.</returns>
    </member>
    <member name="P:System.Drawing.SystemFonts.MessageBoxFont">
      <summary>Gets a <see cref="T:System.Drawing.Font" /> that is used for message boxes.</summary>
      <returns>A <see cref="T:System.Drawing.Font" /> that is used for message boxes</returns>
    </member>
    <member name="P:System.Drawing.SystemFonts.SmallCaptionFont">
      <summary>Gets a <see cref="T:System.Drawing.Font" /> that is used to display text in the title bars of small windows, such as tool windows.</summary>
      <returns>A <see cref="T:System.Drawing.Font" /> that is used to display text in the title bars of small windows, such as tool windows.</returns>
    </member>
    <member name="P:System.Drawing.SystemFonts.StatusFont">
      <summary>Gets a <see cref="T:System.Drawing.Font" /> that is used to display text in the status bar.</summary>
      <returns>A <see cref="T:System.Drawing.Font" /> that is used to display text in the status bar.</returns>
    </member>
    <member name="T:System.Drawing.SystemIcons">
      <summary>Each property of the <see cref="T:System.Drawing.SystemIcons" /> class is an <see cref="T:System.Drawing.Icon" /> object for Windows system-wide icons. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Drawing.SystemIcons.Application">
      <summary>Gets an <see cref="T:System.Drawing.Icon" /> object that contains the default application icon (WIN32: IDI_APPLICATION).</summary>
      <returns>An <see cref="T:System.Drawing.Icon" /> object that contains the default application icon.</returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Asterisk">
      <summary>Gets an <see cref="T:System.Drawing.Icon" /> object that contains the system asterisk icon (WIN32: IDI_ASTERISK).</summary>
      <returns>An <see cref="T:System.Drawing.Icon" /> object that contains the system asterisk icon.</returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Error">
      <summary>Gets an <see cref="T:System.Drawing.Icon" /> object that contains the system error icon (WIN32: IDI_ERROR).</summary>
      <returns>An <see cref="T:System.Drawing.Icon" /> object that contains the system error icon.</returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Exclamation">
      <summary>Gets an <see cref="T:System.Drawing.Icon" /> object that contains the system exclamation icon (WIN32: IDI_EXCLAMATION).</summary>
      <returns>An <see cref="T:System.Drawing.Icon" /> object that contains the system exclamation icon.</returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Hand">
      <summary>Gets an <see cref="T:System.Drawing.Icon" /> object that contains the system hand icon (WIN32: IDI_HAND).</summary>
      <returns>An <see cref="T:System.Drawing.Icon" /> object that contains the system hand icon.</returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Information">
      <summary>Gets an <see cref="T:System.Drawing.Icon" /> object that contains the system information icon (WIN32: IDI_INFORMATION).</summary>
      <returns>An <see cref="T:System.Drawing.Icon" /> object that contains the system information icon.</returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Question">
      <summary>Gets an <see cref="T:System.Drawing.Icon" /> object that contains the system question icon (WIN32: IDI_QUESTION).</summary>
      <returns>An <see cref="T:System.Drawing.Icon" /> object that contains the system question icon.</returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Shield">
      <summary>Gets an <see cref="T:System.Drawing.Icon" /> object that contains the shield icon.</summary>
      <returns>An <see cref="T:System.Drawing.Icon" /> object that contains the shield icon.</returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Warning">
      <summary>Gets an <see cref="T:System.Drawing.Icon" /> object that contains the system warning icon (WIN32: IDI_WARNING).</summary>
      <returns>An <see cref="T:System.Drawing.Icon" /> object that contains the system warning icon.</returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.WinLogo">
      <summary>Gets an <see cref="T:System.Drawing.Icon" /> object that contains the Windows logo icon (WIN32: IDI_WINLOGO).</summary>
      <returns>An <see cref="T:System.Drawing.Icon" /> object that contains the Windows logo icon.</returns>
    </member>
    <member name="T:System.Drawing.SystemPens">
      <summary>Each property of the <see cref="T:System.Drawing.SystemPens" /> class is a <see cref="T:System.Drawing.Pen" /> that is the color of a Windows display element and that has a width of 1 pixel.</summary>
    </member>
    <member name="P:System.Drawing.SystemPens.ActiveBorder">
      <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the color of the active window's border.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> that is the color of the active window's border.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ActiveCaption">
      <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the color of the background of the active window's title bar.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> that is the color of the background of the active window's title bar.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ActiveCaptionText">
      <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the color of the text in the active window's title bar.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> that is the color of the text in the active window's title bar.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.AppWorkspace">
      <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the color of the application workspace.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> that is the color of the application workspace.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ButtonFace">
      <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the face color of a 3-D element.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> that is the face color of a 3-D element.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ButtonHighlight">
      <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the highlight color of a 3-D element.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> that is the highlight color of a 3-D element.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ButtonShadow">
      <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the shadow color of a 3-D element.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> that is the shadow color of a 3-D element.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.Control">
      <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the face color of a 3-D element.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> that is the face color of a 3-D element.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ControlDark">
      <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the shadow color of a 3-D element.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> that is the shadow color of a 3-D element.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ControlDarkDark">
      <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the dark shadow color of a 3-D element.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> that is the dark shadow color of a 3-D element.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ControlLight">
      <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the light color of a 3-D element.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> that is the light color of a 3-D element.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ControlLightLight">
      <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the highlight color of a 3-D element.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> that is the highlight color of a 3-D element.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ControlText">
      <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the color of text in a 3-D element.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> that is the color of text in a 3-D element.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.Desktop">
      <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the color of the Windows desktop.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> that is the color of the Windows desktop.</returns>
    </member>
    <member name="M:System.Drawing.SystemPens.FromSystemColor(System.Drawing.Color)">
      <summary>Creates a <see cref="T:System.Drawing.Pen" /> from the specified <see cref="T:System.Drawing.Color" />.</summary>
      <param name="c">The <see cref="T:System.Drawing.Color" /> for the new <see cref="T:System.Drawing.Pen" />.</param>
      <returns>The <see cref="T:System.Drawing.Pen" /> this method creates.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.GradientActiveCaption">
      <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the lightest color in the color gradient of an active window's title bar.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> that is the lightest color in the color gradient of an active window's title bar.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.GradientInactiveCaption">
      <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the lightest color in the color gradient of an inactive window's title bar.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> that is the lightest color in the color gradient of an inactive window's title bar.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.GrayText">
      <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the color of dimmed text.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> that is the color of dimmed text.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.Highlight">
      <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the color of the background of selected items.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> that is the color of the background of selected items.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.HighlightText">
      <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the color of the text of selected items.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> that is the color of the text of selected items.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.HotTrack">
      <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the color used to designate a hot-tracked item.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> that is the color used to designate a hot-tracked item.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.InactiveBorder">
      <summary>Gets a <see cref="T:System.Drawing.Pen" /> is the color of the border of an inactive window.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> that is the color of the border of an inactive window.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.InactiveCaption">
      <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the color of the title bar caption of an inactive window.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> that is the color of the title bar caption of an inactive window.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.InactiveCaptionText">
      <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the color of the text in an inactive window's title bar.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> that is the color of the text in an inactive window's title bar.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.Info">
      <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the color of the background of a ToolTip.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> that is the color of the background of a ToolTip.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.InfoText">
      <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the color of the text of a ToolTip.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> that is the color of the text of a ToolTip.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.Menu">
      <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the color of a menu's background.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> that is the color of a menu's background.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.MenuBar">
      <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the color of the background of a menu bar.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> that is the color of the background of a menu bar.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.MenuHighlight">
      <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the color used to highlight menu items when the menu appears as a flat menu.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> that is the color used to highlight menu items when the menu appears as a flat menu.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.MenuText">
      <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the color of a menu's text.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> that is the color of a menu's text.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ScrollBar">
      <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the color of the background of a scroll bar.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> that is the color of the background of a scroll bar.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.Window">
      <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the color of the background in the client area of a window.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> that is the color of the background in the client area of a window.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.WindowFrame">
      <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the color of a window frame.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> that is the color of a window frame.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.WindowText">
      <summary>Gets a <see cref="T:System.Drawing.Pen" /> that is the color of the text in the client area of a window.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> that is the color of the text in the client area of a window.</returns>
    </member>
    <member name="T:System.Drawing.Text.FontCollection">
      <summary>Provides a base class for installed and private font collections.</summary>
    </member>
    <member name="M:System.Drawing.Text.FontCollection.Dispose">
      <summary>Releases all resources used by this <see cref="T:System.Drawing.Text.FontCollection" />.</summary>
    </member>
    <member name="M:System.Drawing.Text.FontCollection.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Drawing.Text.FontCollection" /> and optionally releases the managed resources.</summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
    </member>
    <member name="P:System.Drawing.Text.FontCollection.Families">
      <summary>Gets the array of <see cref="T:System.Drawing.FontFamily" /> objects associated with this <see cref="T:System.Drawing.Text.FontCollection" />.</summary>
      <returns>An array of <see cref="T:System.Drawing.FontFamily" /> objects.</returns>
    </member>
    <member name="M:System.Drawing.Text.FontCollection.Finalize">
      <summary>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</summary>
    </member>
    <member name="T:System.Drawing.Text.GenericFontFamilies">
      <summary>Specifies a generic <see cref="T:System.Drawing.FontFamily" /> object.</summary>
    </member>
    <member name="F:System.Drawing.Text.GenericFontFamilies.Monospace">
      <summary>A generic Monospace <see cref="T:System.Drawing.FontFamily" /> object.</summary>
    </member>
    <member name="F:System.Drawing.Text.GenericFontFamilies.SansSerif">
      <summary>A generic Sans Serif <see cref="T:System.Drawing.FontFamily" /> object.</summary>
    </member>
    <member name="F:System.Drawing.Text.GenericFontFamilies.Serif">
      <summary>A generic Serif <see cref="T:System.Drawing.FontFamily" /> object.</summary>
    </member>
    <member name="T:System.Drawing.Text.HotkeyPrefix">
      <summary>Specifies the type of display for hot-key prefixes that relate to text.</summary>
    </member>
    <member name="F:System.Drawing.Text.HotkeyPrefix.Hide">
      <summary>Do not display the hot-key prefix.</summary>
    </member>
    <member name="F:System.Drawing.Text.HotkeyPrefix.None">
      <summary>No hot-key prefix.</summary>
    </member>
    <member name="F:System.Drawing.Text.HotkeyPrefix.Show">
      <summary>Display the hot-key prefix.</summary>
    </member>
    <member name="T:System.Drawing.Text.InstalledFontCollection">
      <summary>Represents the fonts installed on the system. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Drawing.Text.InstalledFontCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Text.InstalledFontCollection" /> class.</summary>
    </member>
    <member name="T:System.Drawing.Text.PrivateFontCollection">
      <summary>Provides a collection of font families built from font files that are provided by the client application.</summary>
    </member>
    <member name="M:System.Drawing.Text.PrivateFontCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Text.PrivateFontCollection" /> class.</summary>
    </member>
    <member name="M:System.Drawing.Text.PrivateFontCollection.AddFontFile(System.String)">
      <summary>Adds a font from the specified file to this <see cref="T:System.Drawing.Text.PrivateFontCollection" />.</summary>
      <param name="filename">A <see cref="T:System.String" /> that contains the file name of the font to add.</param>
      <exception cref="T:System.IO.FileNotFoundException">The specified font is not supported or the font file cannot be found.</exception>
    </member>
    <member name="M:System.Drawing.Text.PrivateFontCollection.AddMemoryFont(System.IntPtr,System.Int32)">
      <summary>Adds a font contained in system memory to this <see cref="T:System.Drawing.Text.PrivateFontCollection" />.</summary>
      <param name="memory">The memory address of the font to add.</param>
      <param name="length">The memory length of the font to add.</param>
    </member>
    <member name="T:System.Drawing.Text.TextRenderingHint">
      <summary>Specifies the quality of text rendering.</summary>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.AntiAlias">
      <summary>Each character is drawn using its antialiased glyph bitmap without hinting. Better quality due to antialiasing. Stem width differences may be noticeable because hinting is turned off.</summary>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.AntiAliasGridFit">
      <summary>Each character is drawn using its antialiased glyph bitmap with hinting. Much better quality due to antialiasing, but at a higher performance cost.</summary>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.ClearTypeGridFit">
      <summary>Each character is drawn using its glyph ClearType bitmap with hinting. The highest quality setting. Used to take advantage of ClearType font features.</summary>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.SingleBitPerPixel">
      <summary>Each character is drawn using its glyph bitmap. Hinting is not used.</summary>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.SingleBitPerPixelGridFit">
      <summary>Each character is drawn using its glyph bitmap. Hinting is used to improve character appearance on stems and curvature.</summary>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.SystemDefault">
      <summary>Each character is drawn using its glyph bitmap, with the system default rendering hint. The text will be drawn using whatever font-smoothing settings the user has selected for the system.</summary>
    </member>
    <member name="T:System.Drawing.TextureBrush">
      <summary>Each property of the <see cref="T:System.Drawing.TextureBrush" /> class is a <see cref="T:System.Drawing.Brush" /> object that uses an image to fill the interior of a shape. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image)">
      <summary>Initializes a new <see cref="T:System.Drawing.TextureBrush" /> object that uses the specified image.</summary>
      <param name="bitmap">The <see cref="T:System.Drawing.Image" /> object with which this <see cref="T:System.Drawing.TextureBrush" /> object fills interiors.</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.Drawing2D.WrapMode)">
      <summary>Initializes a new <see cref="T:System.Drawing.TextureBrush" /> object that uses the specified image and wrap mode.</summary>
      <param name="image">The <see cref="T:System.Drawing.Image" /> object with which this <see cref="T:System.Drawing.TextureBrush" /> object fills interiors.</param>
      <param name="wrapMode">A <see cref="T:System.Drawing.Drawing2D.WrapMode" /> enumeration that specifies how this <see cref="T:System.Drawing.TextureBrush" /> object is tiled.</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.Drawing2D.WrapMode,System.Drawing.Rectangle)">
      <summary>Initializes a new <see cref="T:System.Drawing.TextureBrush" /> object that uses the specified image, wrap mode, and bounding rectangle.</summary>
      <param name="image">The <see cref="T:System.Drawing.Image" /> object with which this <see cref="T:System.Drawing.TextureBrush" /> object fills interiors.</param>
      <param name="wrapMode">A <see cref="T:System.Drawing.Drawing2D.WrapMode" /> enumeration that specifies how this <see cref="T:System.Drawing.TextureBrush" /> object is tiled.</param>
      <param name="dstRect">A <see cref="T:System.Drawing.Rectangle" /> structure that represents the bounding rectangle for this <see cref="T:System.Drawing.TextureBrush" /> object.</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.Drawing2D.WrapMode,System.Drawing.RectangleF)">
      <summary>Initializes a new <see cref="T:System.Drawing.TextureBrush" /> object that uses the specified image, wrap mode, and bounding rectangle.</summary>
      <param name="image">The <see cref="T:System.Drawing.Image" /> object with which this <see cref="T:System.Drawing.TextureBrush" /> object fills interiors.</param>
      <param name="wrapMode">A <see cref="T:System.Drawing.Drawing2D.WrapMode" /> enumeration that specifies how this <see cref="T:System.Drawing.TextureBrush" /> object is tiled.</param>
      <param name="dstRect">A <see cref="T:System.Drawing.RectangleF" /> structure that represents the bounding rectangle for this <see cref="T:System.Drawing.TextureBrush" /> object.</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.Rectangle)">
      <summary>Initializes a new <see cref="T:System.Drawing.TextureBrush" /> object that uses the specified image and bounding rectangle.</summary>
      <param name="image">The <see cref="T:System.Drawing.Image" /> object with which this <see cref="T:System.Drawing.TextureBrush" /> object fills interiors.</param>
      <param name="dstRect">A <see cref="T:System.Drawing.Rectangle" /> structure that represents the bounding rectangle for this <see cref="T:System.Drawing.TextureBrush" /> object.</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Imaging.ImageAttributes)">
      <summary>Initializes a new <see cref="T:System.Drawing.TextureBrush" /> object that uses the specified image, bounding rectangle, and image attributes.</summary>
      <param name="image">The <see cref="T:System.Drawing.Image" /> object with which this <see cref="T:System.Drawing.TextureBrush" /> object fills interiors.</param>
      <param name="dstRect">A <see cref="T:System.Drawing.Rectangle" /> structure that represents the bounding rectangle for this <see cref="T:System.Drawing.TextureBrush" /> object.</param>
      <param name="imageAttr">An <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that contains additional information about the image used by this <see cref="T:System.Drawing.TextureBrush" /> object.</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.RectangleF)">
      <summary>Initializes a new <see cref="T:System.Drawing.TextureBrush" /> object that uses the specified image and bounding rectangle.</summary>
      <param name="image">The <see cref="T:System.Drawing.Image" /> object with which this <see cref="T:System.Drawing.TextureBrush" /> object fills interiors.</param>
      <param name="dstRect">A <see cref="T:System.Drawing.RectangleF" /> structure that represents the bounding rectangle for this <see cref="T:System.Drawing.TextureBrush" /> object.</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.Imaging.ImageAttributes)">
      <summary>Initializes a new <see cref="T:System.Drawing.TextureBrush" /> object that uses the specified image, bounding rectangle, and image attributes.</summary>
      <param name="image">The <see cref="T:System.Drawing.Image" /> object with which this <see cref="T:System.Drawing.TextureBrush" /> object fills interiors.</param>
      <param name="dstRect">A <see cref="T:System.Drawing.RectangleF" /> structure that represents the bounding rectangle for this <see cref="T:System.Drawing.TextureBrush" /> object.</param>
      <param name="imageAttr">An <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that contains additional information about the image used by this <see cref="T:System.Drawing.TextureBrush" /> object.</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.Clone">
      <summary>Creates an exact copy of this <see cref="T:System.Drawing.TextureBrush" /> object.</summary>
      <returns>The <see cref="T:System.Drawing.TextureBrush" /> object this method creates, cast as an <see cref="T:System.Object" /> object.</returns>
    </member>
    <member name="P:System.Drawing.TextureBrush.Image">
      <summary>Gets the <see cref="T:System.Drawing.Image" /> object associated with this <see cref="T:System.Drawing.TextureBrush" /> object.</summary>
      <returns>An <see cref="T:System.Drawing.Image" /> object that represents the image with which this <see cref="T:System.Drawing.TextureBrush" /> object fills shapes.</returns>
    </member>
    <member name="M:System.Drawing.TextureBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
      <summary>Multiplies the <see cref="T:System.Drawing.Drawing2D.Matrix" /> object that represents the local geometric transformation of this <see cref="T:System.Drawing.TextureBrush" /> object by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> object by prepending the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> object.</summary>
      <param name="matrix">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> object by which to multiply the geometric transformation.</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>Multiplies the <see cref="T:System.Drawing.Drawing2D.Matrix" /> object that represents the local geometric transformation of this <see cref="T:System.Drawing.TextureBrush" /> object by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> object in the specified order.</summary>
      <param name="matrix">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> object by which to multiply the geometric transformation.</param>
      <param name="order">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that specifies the order in which to multiply the two matrices.</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.ResetTransform">
      <summary>Resets the <see langword="Transform" /> property of this <see cref="T:System.Drawing.TextureBrush" /> object to identity.</summary>
    </member>
    <member name="M:System.Drawing.TextureBrush.RotateTransform(System.Single)">
      <summary>Rotates the local geometric transformation of this <see cref="T:System.Drawing.TextureBrush" /> object by the specified amount. This method prepends the rotation to the transformation.</summary>
      <param name="angle">The angle of rotation.</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>Rotates the local geometric transformation of this <see cref="T:System.Drawing.TextureBrush" /> object by the specified amount in the specified order.</summary>
      <param name="angle">The angle of rotation.</param>
      <param name="order">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that specifies whether to append or prepend the rotation matrix.</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.ScaleTransform(System.Single,System.Single)">
      <summary>Scales the local geometric transformation of this <see cref="T:System.Drawing.TextureBrush" /> object by the specified amounts. This method prepends the scaling matrix to the transformation.</summary>
      <param name="sx">The amount by which to scale the transformation in the x direction.</param>
      <param name="sy">The amount by which to scale the transformation in the y direction.</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>Scales the local geometric transformation of this <see cref="T:System.Drawing.TextureBrush" /> object by the specified amounts in the specified order.</summary>
      <param name="sx">The amount by which to scale the transformation in the x direction.</param>
      <param name="sy">The amount by which to scale the transformation in the y direction.</param>
      <param name="order">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that specifies whether to append or prepend the scaling matrix.</param>
    </member>
    <member name="P:System.Drawing.TextureBrush.Transform">
      <summary>Gets or sets a copy of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> object that defines a local geometric transformation for the image associated with this <see cref="T:System.Drawing.TextureBrush" /> object.</summary>
      <returns>A copy of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> object that defines a geometric transformation that applies only to fills drawn by using this <see cref="T:System.Drawing.TextureBrush" /> object.</returns>
    </member>
    <member name="M:System.Drawing.TextureBrush.TranslateTransform(System.Single,System.Single)">
      <summary>Translates the local geometric transformation of this <see cref="T:System.Drawing.TextureBrush" /> object by the specified dimensions. This method prepends the translation to the transformation.</summary>
      <param name="dx">The dimension by which to translate the transformation in the x direction.</param>
      <param name="dy">The dimension by which to translate the transformation in the y direction.</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>Translates the local geometric transformation of this <see cref="T:System.Drawing.TextureBrush" /> object by the specified dimensions in the specified order.</summary>
      <param name="dx">The dimension by which to translate the transformation in the x direction.</param>
      <param name="dy">The dimension by which to translate the transformation in the y direction.</param>
      <param name="order">The order (prepend or append) in which to apply the translation.</param>
    </member>
    <member name="P:System.Drawing.TextureBrush.WrapMode">
      <summary>Gets or sets a <see cref="T:System.Drawing.Drawing2D.WrapMode" /> enumeration that indicates the wrap mode for this <see cref="T:System.Drawing.TextureBrush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Drawing2D.WrapMode" /> enumeration that specifies how fills drawn by using this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> object are tiled.</returns>
    </member>
    <member name="T:System.Drawing.ToolboxBitmapAttribute">
      <summary>Allows you to specify an icon to represent a control in a container, such as the Microsoft Visual Studio Form Designer.</summary>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.String)">
      <summary>Initializes a new <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object with an image from a specified file.</summary>
      <param name="imageFile">The name of a file that contains a 16 by 16 bitmap.</param>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type)">
      <summary>Initializes a new <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object based on a 16 x 16 bitmap that is embedded as a resource in a specified assembly.</summary>
      <param name="t">A <see cref="T:System.Type" /> whose defining assembly is searched for the bitmap resource.</param>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)">
      <summary>Initializes a new <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object based on a 16 by 16 bitmap that is embedded as a resource in a specified assembly.</summary>
      <param name="t">A <see cref="T:System.Type" /> whose defining assembly is searched for the bitmap resource.</param>
      <param name="name">The name of the embedded bitmap resource.</param>
    </member>
    <member name="F:System.Drawing.ToolboxBitmapAttribute.Default">
      <summary>A <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object that has its small image and its large image set to <see langword="null" />.</summary>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.Equals(System.Object)">
      <summary>Indicates whether the specified object is a <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object and is identical to this <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object.</summary>
      <param name="value">The <see cref="T:System.Object" /> to test.</param>
      <returns>This method returns <see langword="true" /> if <paramref name="value" /> is both a <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object and is identical to this <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object.</returns>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetHashCode">
      <summary>Gets a hash code for this <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object.</summary>
      <returns>The hash code for this <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object.</returns>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object)">
      <summary>Gets the small <see cref="T:System.Drawing.Image" /> associated with this <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object.</summary>
      <param name="component">If this <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object does not already have a small image, this method searches for a bitmap resource in the assembly that defines the type of the object specified by the component parameter. For example, if you pass an object of type ControlA to the component parameter, then this method searches the assembly that defines ControlA.</param>
      <returns>The small <see cref="T:System.Drawing.Image" /> associated with this <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object.</returns>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)">
      <summary>Gets the small or large <see cref="T:System.Drawing.Image" /> associated with this <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object.</summary>
      <param name="component">If this <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object does not already have a small image, this method searches for a bitmap resource in the assembly that defines the type of the object specified by the component parameter. For example, if you pass an object of type ControlA to the component parameter, then this method searches the assembly that defines ControlA.</param>
      <param name="large">Specifies whether this method returns a large image (<see langword="true" />) or a small image (<see langword="false" />). The small image is 16 by 16, and the large image is 32 by 32.</param>
      <returns>An <see cref="T:System.Drawing.Image" /> object associated with this <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object.</returns>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type)">
      <summary>Gets the small <see cref="T:System.Drawing.Image" /> associated with this <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object.</summary>
      <param name="type">If this <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object does not already have a small image, this method searches for a bitmap resource in the assembly that defines the type specified by the type parameter. For example, if you pass typeof(ControlA) to the type parameter, then this method searches the assembly that defines ControlA.</param>
      <returns>The small <see cref="T:System.Drawing.Image" /> associated with this <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object.</returns>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)">
      <summary>Gets the small or large <see cref="T:System.Drawing.Image" /> associated with this <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object.</summary>
      <param name="type">If this <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object does not already have a small image, this method searches for a bitmap resource in the assembly that defines the type specified by the component type. For example, if you pass typeof(ControlA) to the type parameter, then this method searches the assembly that defines ControlA.</param>
      <param name="large">Specifies whether this method returns a large image (<see langword="true" />) or a small image (<see langword="false" />). The small image is 16 by 16, and the large image is 32 by 32.</param>
      <returns>An <see cref="T:System.Drawing.Image" /> associated with this <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object.</returns>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)">
      <summary>Gets the small or large <see cref="T:System.Drawing.Image" /> associated with this <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object.</summary>
      <param name="type">If this <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object does not already have a small image, this method searches for an embedded bitmap resource in the assembly that defines the type specified by the component type. For example, if you pass typeof(ControlA) to the type parameter, then this method searches the assembly that defines ControlA.</param>
      <param name="imgName">The name of the embedded bitmap resource.</param>
      <param name="large">Specifies whether this method returns a large image (<see langword="true" />) or a small image (<see langword="false" />). The small image is 16 by 16, and the large image is 32 by 32.</param>
      <returns>An <see cref="T:System.Drawing.Image" /> associated with this <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object.</returns>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
      <summary>Returns an <see cref="T:System.Drawing.Image" /> object based on a bitmap resource that is embedded in an assembly.</summary>
      <param name="t">This method searches for an embedded bitmap resource in the assembly that defines the type specified by the t parameter. For example, if you pass typeof(ControlA) to the t parameter, then this method searches the assembly that defines ControlA.</param>
      <param name="imageName">The name of the embedded bitmap resource.</param>
      <param name="large">Specifies whether this method returns a large image (true) or a small image (false). The small image is 16 by 16, and the large image is 32 x 32.</param>
      <returns>An <see cref="T:System.Drawing.Image" /> object based on the retrieved bitmap.</returns>
    </member>
  </members>
</doc>