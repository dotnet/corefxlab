<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>PresentationFramework</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Win32.CommonDialog">
      <summary>An abstract base class for displaying common Win32 dialogs.</summary>
    </member>
    <member name="M:Microsoft.Win32.CommonDialog.#ctor">
      <summary>Provides initialization for base class values when called by the constructor of a derived class.</summary>
    </member>
    <member name="M:Microsoft.Win32.CommonDialog.CheckPermissionsToShowDialog">
      <summary>Determines whether sufficient permissions for displaying a dialog exist.</summary>
      <exception cref="T:System.Security.SecurityException">if sufficient permissions do not exist to display a dialog.</exception>
    </member>
    <member name="M:Microsoft.Win32.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
      <summary>Defines the common dialog box hook procedure that is overridden to add specific functionality to a common dialog box.</summary>
      <param name="hwnd">Window handle for the Win32 dialog.</param>
      <param name="msg">Windows message to be processed by the Win32 dialog.</param>
      <param name="wParam">Parameters for dialog actions.</param>
      <param name="lParam">Parameters for dialog actions.</param>
      <returns>Always returns <see cref="F:System.IntPtr.Zero" />.</returns>
    </member>
    <member name="M:Microsoft.Win32.CommonDialog.Reset">
      <summary>When overridden in a derived class, resets the properties of a common dialog to their default values.</summary>
    </member>
    <member name="M:Microsoft.Win32.CommonDialog.RunDialog(System.IntPtr)">
      <summary>When overridden in a derived class, is called to display a particular type of Win32 common dialog.</summary>
      <param name="hwndOwner">Handle to the window that owns the dialog box.</param>
      <returns>If the user clicks the OK button of the dialog that is displayed (e.g. <see cref="T:Microsoft.Win32.OpenFileDialog" />, <see cref="T:Microsoft.Win32.SaveFileDialog" />), <see langword="true" /> is returned; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:Microsoft.Win32.CommonDialog.ShowDialog">
      <summary>Displays a common dialog.</summary>
      <returns>If the user clicks the OK button of the dialog that is displayed (e.g. <see cref="T:Microsoft.Win32.OpenFileDialog" />, <see cref="T:Microsoft.Win32.SaveFileDialog" />), <see langword="true" /> is returned; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:Microsoft.Win32.CommonDialog.ShowDialog(System.Windows.Window)">
      <summary>Displays a common dialog.</summary>
      <param name="owner">Handle to the window that owns the dialog.</param>
      <returns>If the user clicks the OK button of the dialog that is displayed (e.g. <see cref="T:Microsoft.Win32.OpenFileDialog" />, <see cref="T:Microsoft.Win32.SaveFileDialog" />), <see langword="true" /> is returned; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:Microsoft.Win32.CommonDialog.Tag">
      <summary>Gets or sets an object associated with the dialog. This provides the ability to attach an arbitrary object to the dialog.</summary>
      <returns>A <see cref="T:System.Object" /> that is attached or associated with a dialog.</returns>
    </member>
    <member name="T:Microsoft.Win32.FileDialog">
      <summary>An abstract base class that encapsulates functionality that is common to file dialogs, including <see cref="T:Microsoft.Win32.OpenFileDialog" /> and <see cref="T:Microsoft.Win32.SaveFileDialog" />.</summary>
    </member>
    <member name="M:Microsoft.Win32.FileDialog.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Win32.FileDialog" /> class.</summary>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.AddExtension">
      <summary>Gets or sets a value indicating whether a file dialog automatically adds an extension to a file name if the user omits an extension.</summary>
      <returns>
        <see langword="true" /> if extensions are added; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.CheckFileExists">
      <summary>Gets or sets a value indicating whether a file dialog displays a warning if the user specifies a file name that does not exist.</summary>
      <returns>
        <see langword="true" /> if warnings are displayed; otherwise, <see langword="false" />. The default in this base class is <see langword="false" />.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.CheckPathExists">
      <summary>Gets or sets a value that specifies whether warnings are displayed if the user types invalid paths and file names.</summary>
      <returns>
        <see langword="true" /> if warnings are displayed; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.CustomPlaces">
      <summary>Gets or sets the list of custom places for file dialog boxes.</summary>
      <returns>The list of custom places.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.DefaultExt">
      <summary>Gets or sets a value that specifies the default extension string to use to filter the list of files that are displayed.</summary>
      <returns>The default extension string. The default is <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.DereferenceLinks">
      <summary>Gets or sets a value indicating whether a file dialog returns either the location of the file referenced by a shortcut or the location of the shortcut file (.lnk).</summary>
      <returns>
        <see langword="true" /> to return the location referenced; <see langword="false" /> to return the shortcut location. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.FileName">
      <summary>Gets or sets a string containing the full path of the file selected in a file dialog.</summary>
      <returns>A <see cref="T:System.String" /> that is the full path of the file selected in the file dialog. The default is <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.FileNames">
      <summary>Gets an array that contains one file name for each selected file.</summary>
      <returns>An array of <see cref="T:System.String" /> that contains one file name for each selected file. The default is an array with a single item whose value is <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="E:Microsoft.Win32.FileDialog.FileOk">
      <summary>Occurs when the user selects a file name by either clicking the Open button of the <see cref="T:Microsoft.Win32.OpenFileDialog" /> or the Save button of the <see cref="T:Microsoft.Win32.SaveFileDialog" />.</summary>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.Filter">
      <summary>Gets or sets the filter string that determines what types of files are displayed from either the <see cref="T:Microsoft.Win32.OpenFileDialog" /> or <see cref="T:Microsoft.Win32.SaveFileDialog" />.</summary>
      <returns>A <see cref="T:System.String" /> that contains the filter. The default is <see cref="F:System.String.Empty" />, which means that no filter is applied and all file types are displayed.</returns>
      <exception cref="T:System.ArgumentException">The filter string is invalid.</exception>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.FilterIndex">
      <summary>Gets or sets the index of the filter currently selected in a file dialog.</summary>
      <returns>The <see cref="T:System.Int32" /> that is the index of the selected filter. The default is 1.</returns>
    </member>
    <member name="M:Microsoft.Win32.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
      <summary>Defines the common file dialog hook procedure that is overridden to add common functionality to a file dialog.</summary>
      <param name="hwnd">Window handle for the Win32 dialog.</param>
      <param name="msg">Message to be processed by the Win32 dialog.</param>
      <param name="wParam">Parameters for dialog actions.</param>
      <param name="lParam">Parameters for dialog actions.</param>
      <returns>Returns <see cref="F:System.IntPtr.Zero" /> to indicate success; otherwise, a non-zero value is returned to indicate failure.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.InitialDirectory">
      <summary>Gets or sets the initial directory that is displayed by a file dialog.</summary>
      <returns>A <see cref="T:System.String" /> that contains the initial directory. The default is <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="M:Microsoft.Win32.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)">
      <summary>Raises the <see cref="E:Microsoft.Win32.FileDialog.FileOk" /> event.</summary>
      <param name="e">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.Options">
      <summary>Gets the Win32 common file dialog flags that are used by file dialogs for initialization.</summary>
      <returns>A <see cref="T:System.Int32" /> that contains the Win32 common file dialog flags that are used by file dialogs for initialization.</returns>
    </member>
    <member name="M:Microsoft.Win32.FileDialog.Reset">
      <summary>Sets all properties of a file dialog back to their initial values.</summary>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.RestoreDirectory">
      <summary>This property is not implemented.</summary>
      <returns>Not implemented.</returns>
    </member>
    <member name="M:Microsoft.Win32.FileDialog.RunDialog(System.IntPtr)">
      <summary>
        <see cref="M:Microsoft.Win32.CommonDialog.RunDialog(System.IntPtr)" /> is called to display a file dialog in a derived class, such as <see cref="T:Microsoft.Win32.OpenFileDialog" /> and <see cref="T:Microsoft.Win32.SaveFileDialog" />.</summary>
      <param name="hwndOwner">Handle to the window that owns the dialog.</param>
      <returns>
        <see langword="true" /> if the user clicks the OK button of the dialog that is displayed (for example, <see cref="T:Microsoft.Win32.OpenFileDialog" />, <see cref="T:Microsoft.Win32.SaveFileDialog" />); otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.SafeFileName">
      <summary>Gets a string that only contains the file name for the selected file.</summary>
      <returns>A <see cref="T:System.String" /> that only contains the file name for the selected file. The default is <see cref="F:System.String.Empty" />, which is also the value when either no file is selected or a directory is selected.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.SafeFileNames">
      <summary>Gets an array that contains one safe file name for each selected file.</summary>
      <returns>An array of <see cref="T:System.String" /> that contains one safe file name for each selected file. The default is an array with a single item whose value is <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.Title">
      <summary>Gets or sets the text that appears in the title bar of a file dialog.</summary>
      <returns>A <see cref="T:System.String" /> that is the text that appears in the title bar of a file dialog. The default is <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="M:Microsoft.Win32.FileDialog.ToString">
      <summary>Returns a string that represents a file dialog.</summary>
      <returns>A <see cref="T:System.String" /> representation of <see cref="T:Microsoft.Win32.FileDialog" /> that contains the full pathname for any files selected from either <see cref="T:Microsoft.Win32.OpenFileDialog" />, <see cref="T:Microsoft.Win32.SaveFileDialog" />.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.ValidateNames">
      <summary>Gets or sets a value indicating whether the dialog accepts only valid Win32 file names.</summary>
      <returns>
        <see langword="true" /> if warnings will be shown when an invalid file name is provided; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="T:Microsoft.Win32.FileDialogCustomPlace">
      <summary>Represents an entry in a <see cref="T:Microsoft.Win32.FileDialog" /> custom place list.</summary>
    </member>
    <member name="M:Microsoft.Win32.FileDialogCustomPlace.#ctor(System.Guid)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Win32.FileDialogCustomPlace" /> class with the specified known folder GUID.</summary>
      <param name="knownFolder">The GUID of a known folder.</param>
    </member>
    <member name="M:Microsoft.Win32.FileDialogCustomPlace.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Win32.FileDialogCustomPlace" /> class with the specified path.</summary>
      <param name="path">The path for the folder.</param>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlace.KnownFolder">
      <summary>Gets the GUID of the known folder for the custom place.</summary>
      <returns>The GUID of a known folder.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlace.Path">
      <summary>Gets the file path for the custom place.</summary>
      <returns>The path for a custom place.</returns>
    </member>
    <member name="T:Microsoft.Win32.FileDialogCustomPlaces">
      <summary>Defines the known folders for custom places in file dialog boxes.</summary>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.Contacts">
      <summary>Gets the Contacts folder for the current user.</summary>
      <returns>The Contacts folder for the current user.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.Cookies">
      <summary>Gets the Internet cookies folder for the current user.</summary>
      <returns>The Internet cookies folder for the current user.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.Desktop">
      <summary>Gets the folder for storing files on the desktop for the current user.</summary>
      <returns>The folder for storing files on the desktop for the current user.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.Documents">
      <summary>Gets the Documents folder for the current user.</summary>
      <returns>The Documents folder for the current user.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.Favorites">
      <summary>Gets the Favorites folder for the current user.</summary>
      <returns>The  Favorites folder for the current user.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.LocalApplicationData">
      <summary>Gets the folder for application-specific data that is used by the current, non-roaming user.</summary>
      <returns>The folder for application-specific data that is used by the current, non-roaming user.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.Music">
      <summary>Gets the Music folder for the current user.</summary>
      <returns>The Music folder for the current user.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.Pictures">
      <summary>Gets the Pictures folder for the current user.</summary>
      <returns>The Pictures folder for the current user.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.ProgramFiles">
      <summary>Gets the Program Files folder.</summary>
      <returns>The Program Files folder.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.ProgramFilesCommon">
      <summary>Gets the folder for components that are shared across applications.</summary>
      <returns>The folder for components that are shared across applications.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.Programs">
      <summary>Gets the folder that contains the program groups for the current user.</summary>
      <returns>The folder that contains the program groups for the current user.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.RoamingApplicationData">
      <summary>Gets the folder for application-specific data for the current roaming user.</summary>
      <returns>The folder for application-specific data for the current roaming user.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.SendTo">
      <summary>Gets the folder that contains the Send To menu items for the current user.</summary>
      <returns>The folder that contains the Send To menu items for the current user.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.StartMenu">
      <summary>Gets the folder that contains the Start menu items for the current user.</summary>
      <returns>The folder that contains the Start menu items for the current user.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.Startup">
      <summary>Gets the folder that corresponds to the Startup program group for the current user.</summary>
      <returns>The folder that corresponds to the Startup program group for the current user.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.System">
      <summary>Gets the System folder.</summary>
      <returns>The System folder.</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.Templates">
      <summary>Gets the folder for document templates for the current user.</summary>
      <returns>The folder for document templates for the current user.</returns>
    </member>
    <member name="T:Microsoft.Win32.OpenFileDialog">
      <summary>Represents a common dialog box that allows a user to specify a filename for one or more files to open.</summary>
    </member>
    <member name="M:Microsoft.Win32.OpenFileDialog.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Win32.OpenFileDialog" /> class.</summary>
    </member>
    <member name="P:Microsoft.Win32.OpenFileDialog.Multiselect">
      <summary>Gets or sets an option indicating whether <see cref="T:Microsoft.Win32.OpenFileDialog" /> allows users to select multiple files.</summary>
      <returns>
        <see langword="true" /> if multiple selections are allowed; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="M:Microsoft.Win32.OpenFileDialog.OpenFile">
      <summary>Opens a read-only stream for the file that is selected by the user using <see cref="T:Microsoft.Win32.OpenFileDialog" />.</summary>
      <returns>A new <see cref="T:System.IO.Stream" /> that contains the selected file.</returns>
      <exception cref="T:System.InvalidOperationException">No files were selected in the dialog.</exception>
    </member>
    <member name="M:Microsoft.Win32.OpenFileDialog.OpenFiles">
      <summary>Creates an array that contains one read-only stream for each file selected by the user using <see cref="T:Microsoft.Win32.OpenFileDialog" />.</summary>
      <returns>An array of multiple new <see cref="T:System.IO.Stream" /> objects that contain the selected files.</returns>
      <exception cref="T:System.InvalidOperationException">No files were selected in the dialog.</exception>
    </member>
    <member name="P:Microsoft.Win32.OpenFileDialog.ReadOnlyChecked">
      <summary>Gets or sets a value indicating whether the read-only check box displayed by <see cref="T:Microsoft.Win32.OpenFileDialog" /> is selected.</summary>
      <returns>
        <see langword="true" /> if the checkbox is selected; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="M:Microsoft.Win32.OpenFileDialog.Reset">
      <summary>Resets all <see cref="T:Microsoft.Win32.OpenFileDialog" /> properties to their default values.</summary>
    </member>
    <member name="P:Microsoft.Win32.OpenFileDialog.ShowReadOnly">
      <summary>Gets or sets a value indicating whether <see cref="T:Microsoft.Win32.OpenFileDialog" /> contains a read-only check box.</summary>
      <returns>
        <see langword="true" /> if the checkbox is displayed; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="T:Microsoft.Win32.SaveFileDialog">
      <summary>Represents a common dialog that allows the user to specify a filename to save a file as. <see cref="T:Microsoft.Win32.SaveFileDialog" /> cannot be used by an application that is executing under partial trust.</summary>
    </member>
    <member name="M:Microsoft.Win32.SaveFileDialog.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Win32.SaveFileDialog" /> class.</summary>
    </member>
    <member name="P:Microsoft.Win32.SaveFileDialog.CreatePrompt">
      <summary>Gets or sets a value indicating whether <see cref="T:Microsoft.Win32.SaveFileDialog" /> prompts the user for permission to create a file if the user specifies a file that does not exist.</summary>
      <returns>
        <see langword="true" /> if dialog should prompt prior to saving to a filename that did not previously exist; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="M:Microsoft.Win32.SaveFileDialog.OpenFile">
      <summary>Creates a read-write file stream for the filename selected by the user using <see cref="T:Microsoft.Win32.SaveFileDialog" />.</summary>
      <returns>A new <see cref="T:System.IO.Stream" /> that contains the selected file.</returns>
      <exception cref="T:System.InvalidOperationException">No files were selected in the dialog.</exception>
    </member>
    <member name="P:Microsoft.Win32.SaveFileDialog.OverwritePrompt">
      <summary>Gets or sets a value indicating whether <see cref="T:Microsoft.Win32.SaveFileDialog" /> displays a warning if the user specifies the name of a file that already exists.</summary>
      <returns>
        <see langword="true" /> if dialog should prompt prior to saving over a filename that previously existed; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="M:Microsoft.Win32.SaveFileDialog.Reset">
      <summary>Resets all <see cref="T:Microsoft.Win32.SaveFileDialog" /> properties to their default values.</summary>
    </member>
    <member name="T:System.ComponentModel.DesignerProperties">
      <summary>Provides attached properties used to communicate with a designer.</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerProperties.GetIsInDesignMode(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.ComponentModel.DesignerProperties.IsInDesignMode" /> attached property for the specified <see cref="T:System.Windows.UIElement" />.</summary>
      <param name="element">The element from which the property value is read.</param>
      <returns>The <see cref="P:System.ComponentModel.DesignerProperties.IsInDesignMode" /> property value for the element.</returns>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.DesignerProperties.IsInDesignMode">
      <summary>Gets or sets whether a <see cref="T:System.Windows.DependencyObject" /> is running in the context of a designer.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerProperties.IsInDesignModeProperty">
      <summary>Identifies the <see cref="P:System.ComponentModel.DesignerProperties.IsInDesignMode" /> attached property.</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerProperties.SetIsInDesignMode(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.ComponentModel.DesignerProperties.IsInDesignMode" /> attached property to a specified element.</summary>
      <param name="element">The element to which the attached property is written.</param>
      <param name="value">The needed <see cref="T:System.Boolean" /> value.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="T:System.Windows.Annotations.Annotation">
      <summary>Represents a user annotation in the Microsoft Annotations Framework.</summary>
    </member>
    <member name="M:System.Windows.Annotations.Annotation.#ctor">
      <summary>This constructor supports the Windows Presentation Foundation infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Windows.Annotations.Annotation.#ctor(System.Xml.XmlQualifiedName)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Annotations.Annotation" /> class that has a specified type name and namespace.</summary>
      <param name="annotationType">The type name of the annotation.</param>
    </member>
    <member name="M:System.Windows.Annotations.Annotation.#ctor(System.Xml.XmlQualifiedName,System.Guid,System.DateTime,System.DateTime)">
      <summary>This constructor supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="annotationType">The type name of the annotation.</param>
      <param name="id">The GUID for the annotation.</param>
      <param name="creationTime">The date and time the annotation was first created.</param>
      <param name="lastModificationTime">The date and time the annotation was last modified.</param>
    </member>
    <member name="E:System.Windows.Annotations.Annotation.AnchorChanged">
      <summary>Occurs when an anchor is added, removed, or modified in the list of annotation <see cref="P:System.Windows.Annotations.Annotation.Anchors" />.</summary>
    </member>
    <member name="P:System.Windows.Annotations.Annotation.Anchors">
      <summary>Gets a collection of zero or more <see cref="T:System.Windows.Annotations.AnnotationResource" /> anchor elements that define the data selection(s) being annotated.</summary>
      <returns>A collection of zero or more <see cref="T:System.Windows.Annotations.AnnotationResource" /> anchor elements.</returns>
    </member>
    <member name="P:System.Windows.Annotations.Annotation.AnnotationType">
      <summary>Gets the <see cref="T:System.Xml.XmlQualifiedName" /> of the annotation type.</summary>
      <returns>The XML qualified name for this kind of annotation.</returns>
    </member>
    <member name="E:System.Windows.Annotations.Annotation.AuthorChanged">
      <summary>Occurs when an author is added, removed, or modified in the list of annotation <see cref="P:System.Windows.Annotations.Annotation.Authors" />.</summary>
    </member>
    <member name="P:System.Windows.Annotations.Annotation.Authors">
      <summary>Gets a collection of zero or more author strings that identify who created the <see cref="T:System.Windows.Annotations.Annotation" />.</summary>
      <returns>A collection of zero or more author strings.</returns>
    </member>
    <member name="E:System.Windows.Annotations.Annotation.CargoChanged">
      <summary>Occurs when a cargo is added, removed, or modified in the list of annotation <see cref="P:System.Windows.Annotations.Annotation.Cargos" />.</summary>
    </member>
    <member name="P:System.Windows.Annotations.Annotation.Cargos">
      <summary>Gets a collection of zero or more <see cref="T:System.Windows.Annotations.AnnotationResource" /> cargo elements that contain data for the annotation.</summary>
      <returns>A collection of zero or more <see cref="T:System.Windows.Annotations.AnnotationResource" /> cargo elements.</returns>
    </member>
    <member name="P:System.Windows.Annotations.Annotation.CreationTime">
      <summary>Gets the date and the time that the annotation was created.</summary>
      <returns>The date and the time the annotation was created.</returns>
    </member>
    <member name="M:System.Windows.Annotations.Annotation.GetSchema">
      <summary>Always returns <see langword="null" />.  See Annotations Schema for schema details.</summary>
      <returns>Always <see langword="null" />.  See Annotations Schema for schema details.</returns>
    </member>
    <member name="P:System.Windows.Annotations.Annotation.Id">
      <summary>Gets the GUID of the <see cref="T:System.Windows.Annotations.Annotation" />.</summary>
      <returns>The GUID of the annotation.</returns>
    </member>
    <member name="P:System.Windows.Annotations.Annotation.LastModificationTime">
      <summary>Gets the date and the time that the annotation was last modified.</summary>
      <returns>The date and the time the annotation was last modified.</returns>
    </member>
    <member name="M:System.Windows.Annotations.Annotation.ReadXml(System.Xml.XmlReader)">
      <summary>Deserializes the <see cref="T:System.Windows.Annotations.Annotation" /> from a specified <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">The XML reader to use to deserialize the annotation.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException">The serialized XML for the <see cref="T:System.Windows.Annotations.Annotation" /> is not valid.</exception>
    </member>
    <member name="M:System.Windows.Annotations.Annotation.WriteXml(System.Xml.XmlWriter)">
      <summary>Serializes the annotation to a specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The XML writer to use to serialize the annotation.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Windows.Annotations.Annotation.AnnotationType" /> is not valid.</exception>
    </member>
    <member name="T:System.Windows.Annotations.AnnotationAction">
      <summary>Specifies the actions that occur with <see cref="T:System.Windows.Annotations.Annotation" /> author, anchor, and cargo resources.</summary>
    </member>
    <member name="F:System.Windows.Annotations.AnnotationAction.Added">
      <summary>The component was added to the annotation.</summary>
    </member>
    <member name="F:System.Windows.Annotations.AnnotationAction.Modified">
      <summary>The component was modified within the annotation.</summary>
    </member>
    <member name="F:System.Windows.Annotations.AnnotationAction.Removed">
      <summary>The component was removed from the annotation.</summary>
    </member>
    <member name="T:System.Windows.Annotations.AnnotationAuthorChangedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Annotations.Annotation.AuthorChanged" /> event.</summary>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationAuthorChangedEventArgs.#ctor(System.Windows.Annotations.Annotation,System.Windows.Annotations.AnnotationAction,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Annotations.AnnotationAuthorChangedEventArgs" /> class.</summary>
      <param name="annotation">The annotation raising the event.</param>
      <param name="action">The author operation performed: <see cref="F:System.Windows.Annotations.AnnotationAction.Added" />, <see cref="F:System.Windows.Annotations.AnnotationAction.Removed" />, or <see cref="F:System.Windows.Annotations.AnnotationAction.Modified" />.</param>
      <param name="author">The author object being changed by the event.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="annotation" /> or <paramref name="action" /> is a null reference (Nothing in Visual Basic).</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="action" /> is an invalid <see cref="T:System.Windows.Annotations.AnnotationAction" />.</exception>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationAuthorChangedEventArgs.Action">
      <summary>Gets the author change operation for the event.</summary>
      <returns>The author change operation: <see cref="F:System.Windows.Annotations.AnnotationAction.Added" />, <see cref="F:System.Windows.Annotations.AnnotationAction.Removed" />, or <see cref="F:System.Windows.Annotations.AnnotationAction.Modified" />.</returns>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationAuthorChangedEventArgs.Annotation">
      <summary>Gets the annotation that raised the event.</summary>
      <returns>The annotation that raised the event.</returns>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationAuthorChangedEventArgs.Author">
      <summary>Gets the author object that is the target of the event.</summary>
      <returns>The author object that is the target of the event.</returns>
    </member>
    <member name="T:System.Windows.Annotations.AnnotationAuthorChangedEventHandler">
      <summary>Represents the method that handles the <see cref="E:System.Windows.Annotations.Annotation.AuthorChanged" /> event raised by the <see cref="T:System.Windows.Annotations.Annotation" /> class.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Annotations.AnnotationDocumentPaginator">
      <summary>Provides a <see cref="T:System.Windows.Documents.DocumentPaginator" /> for printing a document together with its associated annotations.</summary>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationDocumentPaginator.#ctor(System.Windows.Documents.DocumentPaginator,System.IO.Stream)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Annotations.AnnotationDocumentPaginator" /> class based on a specified <see cref="T:System.Windows.Documents.DocumentPaginator" /> and annotation storage <see cref="T:System.IO.Stream" />.</summary>
      <param name="originalPaginator">The document to add the printed annotations to.</param>
      <param name="annotationStore">The annotation storage stream to retrieve the annotations from.</param>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationDocumentPaginator.#ctor(System.Windows.Documents.DocumentPaginator,System.IO.Stream,System.Windows.FlowDirection)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Annotations.AnnotationDocumentPaginator" /> class based on a specified <see cref="T:System.Windows.Documents.DocumentPaginator" />, annotation storage <see cref="T:System.IO.Stream" />, and text <see cref="T:System.Windows.FlowDirection" />.</summary>
      <param name="originalPaginator">The document to add the printed annotations to.</param>
      <param name="annotationStore">The annotation storage stream to retrieve the annotations from.</param>
      <param name="flowDirection">The text flow direction, <see cref="F:System.Windows.FlowDirection.LeftToRight" /> or <see cref="F:System.Windows.FlowDirection.RightToLeft" />.</param>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationDocumentPaginator.#ctor(System.Windows.Documents.DocumentPaginator,System.Windows.Annotations.Storage.AnnotationStore)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Annotations.AnnotationDocumentPaginator" /> class based on a specified <see cref="T:System.Windows.Documents.DocumentPaginator" /> and <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" />.</summary>
      <param name="originalPaginator">The document to add the printed annotations to.</param>
      <param name="annotationStore">The store to retrieve the annotations from.</param>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationDocumentPaginator.#ctor(System.Windows.Documents.DocumentPaginator,System.Windows.Annotations.Storage.AnnotationStore,System.Windows.FlowDirection)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Annotations.AnnotationDocumentPaginator" /> class based on a specified <see cref="T:System.Windows.Documents.DocumentPaginator" />, <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" />, and text <see cref="T:System.Windows.FlowDirection" />.</summary>
      <param name="originalPaginator">The document to add the printed annotations to.</param>
      <param name="annotationStore">The store to retrieve the annotations from.</param>
      <param name="flowDirection">The text flow direction, <see cref="F:System.Windows.FlowDirection.LeftToRight" /> or <see cref="F:System.Windows.FlowDirection.RightToLeft" />.</param>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationDocumentPaginator.CancelAsync(System.Object)">
      <summary>Cancels all asynchronous operations initiated with a given <paramref name="userState" /> object.</summary>
      <param name="userState">The unique application-defined identifier passed in the call to start the asynchronous operation.</param>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationDocumentPaginator.ComputePageCount">
      <summary>Forces a pagination of the content, updates <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount" /> with the new total, and sets <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid" /> to <see langword="true" />.</summary>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationDocumentPaginator.ComputePageCountAsync(System.Object)">
      <summary>Starts an asynchronous pagination of the content, updates <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount" /> with the new total, and sets <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid" /> to <see langword="true" /> when it is finished.</summary>
      <param name="userState">An application-defined object for identifying the asynchronous operation.</param>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationDocumentPaginator.GetPage(System.Int32)">
      <summary>Returns a <see cref="T:System.Windows.Documents.DocumentPage" /> together with associated user-annotations for a specified page number.</summary>
      <param name="pageNumber">The zero-based page number of the <see cref="T:System.Windows.Documents.DocumentPage" /> to return.</param>
      <returns>The <see cref="T:System.Windows.Documents.DocumentPage" /> for the specified <paramref name="pageNumber" />; or <see cref="F:System.Windows.Documents.DocumentPage.Missing" />, if the specified <paramref name="pageNumber" /> does not exist.</returns>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationDocumentPaginator.GetPageAsync(System.Int32,System.Object)">
      <summary>Asynchronously returns a <see cref="T:System.Windows.Documents.DocumentPage" /> together with associated user-annotations for a specified page number.</summary>
      <param name="pageNumber">The zero-based page number of the <see cref="T:System.Windows.Documents.DocumentPage" /> to retrieve.</param>
      <param name="userState">An application-defined object that is used to identify the asynchronous operation.</param>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid">
      <summary>Gets a value that indicates whether <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount" /> is the total number of pages.</summary>
      <returns>
        <see langword="true" /> if pagination is complete and <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount" /> represents the total number of pages; otherwise, <see langword="false" /> if pagination is in process and <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount" /> represents the number of pages currently formatted.</returns>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount">
      <summary>Gets a value that indicates the number of pages currently formatted.</summary>
      <returns>If <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid" /> is <see langword="true" />, the total number of annotation pages; otherwise if <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid" /> is <see langword="false" />, the number of pages currently formatted (pagination in process).</returns>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageSize">
      <summary>Gets or sets the suggested width and height of each page.</summary>
      <returns>The suggested width and height for formatting pages.</returns>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationDocumentPaginator.Source">
      <summary>Gets the source document that is being paginated.</summary>
      <returns>The source document that is being paginated.</returns>
    </member>
    <member name="T:System.Windows.Annotations.AnnotationHelper">
      <summary>Provides utility methods and commands to create and delete highlight, ink sticky note, and text sticky note annotations.</summary>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationHelper.ClearHighlightsForSelection(System.Windows.Annotations.AnnotationService)">
      <summary>Clears all highlight annotations from the current selection of the viewer control associated with the given <see cref="T:System.Windows.Annotations.AnnotationService" />.</summary>
      <param name="service">The annotation service from which to remove highlight annotations.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="service" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="service" /> is not enabled.</exception>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationHelper.CreateHighlightForSelection(System.Windows.Annotations.AnnotationService,System.String,System.Windows.Media.Brush)">
      <summary>Creates a highlight annotation on the current selection of the viewer control associated with the specified <see cref="T:System.Windows.Annotations.AnnotationService" />.</summary>
      <param name="service">The annotation service to use to create the highlight annotation.</param>
      <param name="author">The author of the annotation.</param>
      <param name="highlightBrush">The brush to use to draw the highlight over the selected content.</param>
      <returns>The highlight annotation; or <see langword="null" />, if there is no selected content to highlight.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="service" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="service" /> is not enabled.  
-or-  
<paramref name="highlightBrush" /> in not a <see cref="T:System.Windows.Media.SolidColorBrush" />.</exception>
      <exception cref="T:System.InvalidOperationException">The viewer control contains no content selection.</exception>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationHelper.CreateInkStickyNoteForSelection(System.Windows.Annotations.AnnotationService,System.String)">
      <summary>Creates an ink sticky note annotation on the current selection of the viewer control associated with the specified <see cref="T:System.Windows.Annotations.AnnotationService" />.</summary>
      <param name="service">The annotation service to use to create the ink sticky note annotation.</param>
      <param name="author">The author of the annotation.</param>
      <returns>The ink sticky note annotation; or <see langword="null" />, if there is no selected content to annotate.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="service" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="service" /> is not enabled.</exception>
      <exception cref="T:System.InvalidOperationException">The viewer control contains no content selection.</exception>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationHelper.CreateTextStickyNoteForSelection(System.Windows.Annotations.AnnotationService,System.String)">
      <summary>Creates a text sticky note annotation on the current selection of the viewer control associated with the specified <see cref="T:System.Windows.Annotations.AnnotationService" />.</summary>
      <param name="service">The annotation service to use to create the text sticky note annotation.</param>
      <param name="author">The author of the annotation.</param>
      <returns>The text sticky note annotation; or <see langword="null" />, if there is no selected content to annotate.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="service" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="service" /> is not enabled.</exception>
      <exception cref="T:System.InvalidOperationException">The viewer control contains no content selection.</exception>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationHelper.DeleteInkStickyNotesForSelection(System.Windows.Annotations.AnnotationService)">
      <summary>Deletes ink sticky note annotations that are wholly contained within the current selection of the viewer control associated with the given <see cref="T:System.Windows.Annotations.AnnotationService" />.</summary>
      <param name="service">The annotation service from which to delete ink sticky note annotations.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="service" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="service" /> is not enabled.</exception>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationHelper.DeleteTextStickyNotesForSelection(System.Windows.Annotations.AnnotationService)">
      <summary>Deletes text sticky note annotations that are wholly contained within the current selection of the viewer control associated with the given <see cref="T:System.Windows.Annotations.AnnotationService" />.</summary>
      <param name="service">The annotation service from which to delete text sticky note annotations.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="service" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="service" /> is not enabled.</exception>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationHelper.GetAnchorInfo(System.Windows.Annotations.AnnotationService,System.Windows.Annotations.Annotation)">
      <summary>Returns an <see cref="T:System.Windows.Annotations.IAnchorInfo" /> object that provides anchoring information, such as the anchor location, about the specified annotation.</summary>
      <param name="service">The annotation service to use for this operation.</param>
      <param name="annotation">The annotation to get anchoring information for.</param>
      <returns>An <see cref="T:System.Windows.Annotations.IAnchorInfo" /> object that provides anchoring information about the specified annotation, or <see langword="null" /> if it cannot be resolved.</returns>
    </member>
    <member name="T:System.Windows.Annotations.AnnotationResource">
      <summary>Represents a content anchor or cargo resource for an <see cref="T:System.Windows.Annotations.Annotation" />.</summary>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationResource.#ctor">
      <summary>This constructor supports the Windows Presentation Foundation infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationResource.#ctor(System.Guid)">
      <summary>This constructor supports the Windows Presentation Foundation infrastructure and is not intended to be used directly from your code.</summary>
      <param name="id">The globally unique identifier (GUID) that identifies this resource.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="id" /> is equal to Guid.Empty.</exception>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationResource.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Annotations.AnnotationResource" /> class with a specified name.</summary>
      <param name="name">A name to identify this resource from other <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> and <see cref="P:System.Windows.Annotations.Annotation.Cargos" /> defined in the same annotation.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationResource.ContentLocators">
      <summary>Gets the collection of <see cref="T:System.Windows.Annotations.ContentLocatorBase" /> elements contained in this resource.</summary>
      <returns>The collection of content locators contained in this resource.</returns>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationResource.Contents">
      <summary>Gets a collection of the <see cref="T:System.Xml.XmlElement" /> objects that define the content of this resource.</summary>
      <returns>The collection of the <see cref="T:System.Xml.XmlElement" /> objects that define the content of this resource.</returns>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationResource.GetSchema">
      <summary>Always returns <see langword="null" />.  See Annotations Schema for schema details.</summary>
      <returns>Always <see langword="null" />.  See Annotations Schema for schema details.</returns>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationResource.Id">
      <summary>Gets the GUID of this resource.</summary>
      <returns>The GUID that identifies this resource.</returns>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationResource.Name">
      <summary>Gets or sets a name for this <see cref="T:System.Windows.Annotations.AnnotationResource" />.</summary>
      <returns>The name assigned to this <see cref="T:System.Windows.Annotations.AnnotationResource" /> to distinguish it from other <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> or <see cref="P:System.Windows.Annotations.Annotation.Cargos" /> in the annotation.</returns>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationResource.ReadXml(System.Xml.XmlReader)">
      <summary>Deserializes the <see cref="T:System.Windows.Annotations.AnnotationResource" /> from a specified <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">The XML reader to deserialize the <see cref="T:System.Windows.Annotations.AnnotationResource" /> from.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException">The serialized XML for the <see cref="T:System.Windows.Annotations.AnnotationResource" /> is not valid.</exception>
    </member>
    <member name="E:System.Windows.Annotations.AnnotationResource.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationResource.WriteXml(System.Xml.XmlWriter)">
      <summary>Serializes the <see cref="T:System.Windows.Annotations.AnnotationResource" /> to a specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The XML writer to serialize the <see cref="T:System.Windows.Annotations.AnnotationResource" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Windows.Annotations.Annotation.AnnotationType" /> is not valid.</exception>
    </member>
    <member name="T:System.Windows.Annotations.AnnotationResourceChangedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Annotations.Annotation.AnchorChanged" /> and <see cref="E:System.Windows.Annotations.Annotation.CargoChanged" /> events.</summary>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationResourceChangedEventArgs.#ctor(System.Windows.Annotations.Annotation,System.Windows.Annotations.AnnotationAction,System.Windows.Annotations.AnnotationResource)">
      <summary>Initializes a new instance of the <see cref="M:System.Windows.Annotations.AnnotationResourceChangedEventArgs.#ctor(System.Windows.Annotations.Annotation,System.Windows.Annotations.AnnotationAction,System.Windows.Annotations.AnnotationResource)" /> class.</summary>
      <param name="annotation">The annotation that raised the event.</param>
      <param name="action">The action of the event.</param>
      <param name="resource">The <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> or <see cref="P:System.Windows.Annotations.Annotation.Cargos" /> resource of the event.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="annotation" /> or <paramref name="action" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="action" /> is not a valid <see cref="T:System.Windows.Annotations.AnnotationAction" /> value.</exception>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationResourceChangedEventArgs.Action">
      <summary>Gets the action of the annotation <see cref="P:System.Windows.Annotations.AnnotationResourceChangedEventArgs.Resource" />.</summary>
      <returns>The action of the annotation <see cref="P:System.Windows.Annotations.AnnotationResourceChangedEventArgs.Resource" />.</returns>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationResourceChangedEventArgs.Annotation">
      <summary>Gets the <see cref="T:System.Windows.Annotations.Annotation" /> that raised the event.</summary>
      <returns>The <see cref="T:System.Windows.Annotations.Annotation" /> that raised the event.</returns>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationResourceChangedEventArgs.Resource">
      <summary>Gets the <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> or <see cref="P:System.Windows.Annotations.Annotation.Cargos" /> resource associated with the event.</summary>
      <returns>The annotation anchor or cargo resource that was <see cref="F:System.Windows.Annotations.AnnotationAction.Added" />, <see cref="F:System.Windows.Annotations.AnnotationAction.Removed" />, or <see cref="F:System.Windows.Annotations.AnnotationAction.Modified" />.</returns>
    </member>
    <member name="T:System.Windows.Annotations.AnnotationResourceChangedEventHandler">
      <summary>Represents the method that handles the <see cref="E:System.Windows.Annotations.Annotation.AnchorChanged" /> or <see cref="E:System.Windows.Annotations.Annotation.CargoChanged" /> events raised by the <see cref="T:System.Windows.Annotations.Annotation" /> class.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Annotations.AnnotationService">
      <summary>Provides core services of the Microsoft Annotations Framework to manage and display user annotations.</summary>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationService.#ctor(System.Windows.Controls.FlowDocumentReader)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Annotations.AnnotationService" /> class for use with a specified <see cref="T:System.Windows.Controls.FlowDocumentReader" /> control.</summary>
      <param name="viewer">The document reading control associated with the <see cref="T:System.Windows.Annotations.AnnotationService" />.</param>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationService.#ctor(System.Windows.Controls.FlowDocumentScrollViewer)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Annotations.AnnotationService" /> class for use with a specified <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> control.</summary>
      <param name="viewer">The document viewing control associated with the <see cref="T:System.Windows.Annotations.AnnotationService" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="viewer" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationService.#ctor(System.Windows.Controls.Primitives.DocumentViewerBase)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Annotations.AnnotationService" /> class for use with a specified <see cref="T:System.Windows.Controls.DocumentViewer" /> or <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" /> control.</summary>
      <param name="viewer">The document viewing control associated with the <see cref="T:System.Windows.Annotations.AnnotationService" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="viewer" /> is <see langword="null" />.</exception>
    </member>
    <member name="F:System.Windows.Annotations.AnnotationService.ClearHighlightsCommand">
      <summary>Represents the command to clear highlight annotations from the current selection.</summary>
    </member>
    <member name="F:System.Windows.Annotations.AnnotationService.CreateHighlightCommand">
      <summary>Represents the command to create a highlight annotation on the current selection.</summary>
    </member>
    <member name="F:System.Windows.Annotations.AnnotationService.CreateInkStickyNoteCommand">
      <summary>Represents the command to create an ink-note annotation on the current selection.</summary>
    </member>
    <member name="F:System.Windows.Annotations.AnnotationService.CreateTextStickyNoteCommand">
      <summary>Represents the command to create a text-note annotation on the current selection.</summary>
    </member>
    <member name="F:System.Windows.Annotations.AnnotationService.DeleteAnnotationsCommand">
      <summary>Represents the command to delete all ink-note, text-note, and highlight annotations in the current selection.</summary>
    </member>
    <member name="F:System.Windows.Annotations.AnnotationService.DeleteStickyNotesCommand">
      <summary>Represents the command to delete all ink-note and text-note annotations in the current selection.</summary>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationService.Disable">
      <summary>Disables annotations processing and hides all visible annotations.</summary>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationService.Enable(System.Windows.Annotations.Storage.AnnotationStore)">
      <summary>Enables the <see cref="T:System.Windows.Annotations.AnnotationService" /> for use with a given <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" /> and displays all visible annotations.</summary>
      <param name="annotationStore">The annotation store to use for reading, writing, and displaying annotations.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="annotationStore" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationService.GetService(System.Windows.Controls.FlowDocumentReader)">
      <summary>Returns the <see cref="T:System.Windows.Annotations.AnnotationService" /> associated with a specified <see cref="T:System.Windows.Controls.FlowDocumentReader" />.</summary>
      <param name="reader">The document reader control to return the <see cref="T:System.Windows.Annotations.AnnotationService" /> instance for.</param>
      <returns>The <see cref="T:System.Windows.Annotations.AnnotationService" /> associated with the given document reader control; or <see langword="null" /> if the specified document reader has no <see cref="T:System.Windows.Annotations.AnnotationService" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationService.GetService(System.Windows.Controls.FlowDocumentScrollViewer)">
      <summary>Returns the <see cref="T:System.Windows.Annotations.AnnotationService" /> associated with a specified <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" />.</summary>
      <param name="viewer">The document viewer control to return the <see cref="T:System.Windows.Annotations.AnnotationService" /> instance for.</param>
      <returns>The <see cref="T:System.Windows.Annotations.AnnotationService" /> associated with the given document viewer control; or <see langword="null" /> if the specified viewer control has no <see cref="T:System.Windows.Annotations.AnnotationService" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="viewer" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationService.GetService(System.Windows.Controls.Primitives.DocumentViewerBase)">
      <summary>Returns the <see cref="T:System.Windows.Annotations.AnnotationService" /> instance associated with a specified document viewing control.</summary>
      <param name="viewer">The document viewing control to return the <see cref="T:System.Windows.Annotations.AnnotationService" /> instance for.</param>
      <returns>The <see cref="T:System.Windows.Annotations.AnnotationService" /> associated with the given document viewing control; or <see langword="null" /> if the specified document viewing control has no <see cref="T:System.Windows.Annotations.AnnotationService" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="viewer" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationService.IsEnabled">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Annotations.AnnotationService" /> is enabled.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Annotations.AnnotationService" /> is enabled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationService.Store">
      <summary>Gets the <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" /> used by this <see cref="T:System.Windows.Annotations.AnnotationService" />.</summary>
      <returns>The <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" /> used by this <see cref="T:System.Windows.Annotations.AnnotationService" />.</returns>
    </member>
    <member name="T:System.Windows.Annotations.ContentLocator">
      <summary>Represents an ordered set of <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> elements that identify an item of content.</summary>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Annotations.ContentLocator" /> class.</summary>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocator.Clone">
      <summary>Creates a modifiable deep copy clone of this <see cref="T:System.Windows.Annotations.ContentLocator" />.</summary>
      <returns>A modifiable deep copy clone of this <see cref="T:System.Windows.Annotations.ContentLocator" />.</returns>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocator.GetSchema">
      <summary>Always returns <see langword="null" />.  See Annotations Schema for schema details.</summary>
      <returns>Always <see langword="null" />.  See Annotations Schema for schema details</returns>
    </member>
    <member name="P:System.Windows.Annotations.ContentLocator.Parts">
      <summary>Gets the collection of <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> elements that make up this <see cref="T:System.Windows.Annotations.ContentLocator" />.</summary>
      <returns>The collection of <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> elements that make up this <see cref="T:System.Windows.Annotations.ContentLocator" />.</returns>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocator.ReadXml(System.Xml.XmlReader)">
      <summary>Deserializes the <see cref="T:System.Windows.Annotations.ContentLocator" /> from a specified <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">The XML reader to use to deserialize the <see cref="T:System.Windows.Annotations.ContentLocator" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException">The serialized XML for the <see cref="T:System.Windows.Annotations.ContentLocator" /> is not valid.</exception>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocator.StartsWith(System.Windows.Annotations.ContentLocator)">
      <summary>Returns a value that indicates whether the starting sequence of <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> elements in a specified <see cref="T:System.Windows.Annotations.ContentLocator" /> are identical to those in this <see cref="T:System.Windows.Annotations.ContentLocator" />.</summary>
      <param name="locator">The <see cref="T:System.Windows.Annotations.ContentLocator" /> with the list of <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> elements to compare with this <see cref="T:System.Windows.Annotations.ContentLocator" />.</param>
      <returns>
        <see langword="true" /> if the starting sequence of <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> elements in this <see cref="T:System.Windows.Annotations.ContentLocator" /> matches those in the specified <paramref name="locator" />; otherwise, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="locator" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocator.WriteXml(System.Xml.XmlWriter)">
      <summary>Serializes the <see cref="T:System.Windows.Annotations.ContentLocator" /> to a specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The XML writer to use to serialize the <see cref="T:System.Windows.Annotations.ContentLocator" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is <see langword="null" />.</exception>
    </member>
    <member name="T:System.Windows.Annotations.ContentLocatorBase">
      <summary>Represents an object that identifies an item of content.</summary>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocatorBase.Clone">
      <summary>Creates a modifiable deep copy clone of this <see cref="T:System.Windows.Annotations.ContentLocatorBase" />.</summary>
      <returns>A modifiable deep copy clone of this <see cref="T:System.Windows.Annotations.ContentLocatorBase" />.</returns>
    </member>
    <member name="E:System.Windows.Annotations.ContentLocatorBase.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>For a description of this member, see <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</summary>
    </member>
    <member name="T:System.Windows.Annotations.ContentLocatorGroup">
      <summary>Represents an ordered set of <see cref="T:System.Windows.Annotations.ContentLocator" /> elements that identify an item of content.</summary>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocatorGroup.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Annotations.ContentLocatorGroup" /> class.</summary>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocatorGroup.Clone">
      <summary>Creates a modifiable deep copy clone of this <see cref="T:System.Windows.Annotations.ContentLocatorGroup" />.</summary>
      <returns>A modifiable deep copy clone of this <see cref="T:System.Windows.Annotations.ContentLocatorGroup" />.</returns>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocatorGroup.GetSchema">
      <summary>Always returns <see langword="null" />.  See Annotations Schema for schema details.</summary>
      <returns>Always <see langword="null" />.  See Annotations Schema for schema details.</returns>
    </member>
    <member name="P:System.Windows.Annotations.ContentLocatorGroup.Locators">
      <summary>Gets the collection of the <see cref="T:System.Windows.Annotations.ContentLocator" /> elements that make up this <see cref="T:System.Windows.Annotations.ContentLocatorGroup" />.</summary>
      <returns>The collection of <see cref="T:System.Windows.Annotations.ContentLocator" /> elements that make up this <see cref="T:System.Windows.Annotations.ContentLocatorGroup" />.</returns>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocatorGroup.ReadXml(System.Xml.XmlReader)">
      <summary>Deserializes the <see cref="T:System.Windows.Annotations.ContentLocatorGroup" /> from a specified <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">The XML reader to use to deserialize the <see cref="T:System.Windows.Annotations.ContentLocatorGroup" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException">The serialized XML for the <see cref="T:System.Windows.Annotations.ContentLocatorGroup" /> is not valid.</exception>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocatorGroup.WriteXml(System.Xml.XmlWriter)">
      <summary>Serializes the <see cref="T:System.Windows.Annotations.ContentLocatorGroup" /> to a specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The XML writer to use to serialize the <see cref="T:System.Windows.Annotations.ContentLocatorGroup" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is <see langword="null" />.</exception>
    </member>
    <member name="T:System.Windows.Annotations.ContentLocatorPart">
      <summary>Represents a set of name/value pairs that identify an item of content.</summary>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocatorPart.#ctor(System.Xml.XmlQualifiedName)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> class with a specified type name and namespace.</summary>
      <param name="partType">The type name and namespace for the <see cref="T:System.Windows.Annotations.ContentLocatorPart" />.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="partType" /> parameter is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">The strings <paramref name="partType" />.<see cref="P:System.Xml.XmlQualifiedName.Name" /> or <paramref name="partType" />.<see cref="P:System.Xml.XmlQualifiedName.Namespace" /> (or both) are <see langword="null" /> or empty.</exception>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocatorPart.Clone">
      <summary>Creates a modifiable deep copy clone of this <see cref="T:System.Windows.Annotations.ContentLocatorPart" />.</summary>
      <returns>A modifiable deep copy clone of this <see cref="T:System.Windows.Annotations.ContentLocatorPart" />.</returns>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocatorPart.Equals(System.Object)">
      <summary>Returns a value that indicates whether a given <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> is identical to this <see cref="T:System.Windows.Annotations.ContentLocatorPart" />.</summary>
      <param name="obj">The part to compare for equality.</param>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.Annotations.ContentLocatorPart.NameValuePairs" /> within both parts are identical; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocatorPart.GetHashCode">
      <summary>Returns the hash code for this part.</summary>
      <returns>The hash code for this part.</returns>
    </member>
    <member name="P:System.Windows.Annotations.ContentLocatorPart.NameValuePairs">
      <summary>Gets a collection of the name/value pairs that define this part.</summary>
      <returns>The collection of the name/value pairs that define this <see cref="T:System.Windows.Annotations.ContentLocatorPart" />.</returns>
    </member>
    <member name="P:System.Windows.Annotations.ContentLocatorPart.PartType">
      <summary>Gets the type name and namespace of the part.</summary>
      <returns>The type name and namespace of the part.</returns>
    </member>
    <member name="E:System.Windows.Annotations.ContentLocatorPart.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>This event supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Annotations.IAnchorInfo">
      <summary>Provides the capabilities for matching annotations with the corresponding annotated objects.</summary>
    </member>
    <member name="P:System.Windows.Annotations.IAnchorInfo.Anchor">
      <summary>Gets the anchor of the annotation.</summary>
      <returns>The anchor that is resolved.</returns>
    </member>
    <member name="P:System.Windows.Annotations.IAnchorInfo.Annotation">
      <summary>Gets the annotation object.</summary>
      <returns>The annotation object.</returns>
    </member>
    <member name="P:System.Windows.Annotations.IAnchorInfo.ResolvedAnchor">
      <summary>Gets the object that represents the location on the tree where the <see cref="P:System.Windows.Annotations.IAnchorInfo.Anchor" /> is resolved.</summary>
      <returns>The object that represents the location on the tree where the <see cref="P:System.Windows.Annotations.IAnchorInfo.Anchor" /> is resolved. The type is specified by the type of the annotated object. Sticky notes and highlights in flow or fixed documents always resolve to a <see cref="T:System.Windows.Annotations.TextAnchor" /> object.</returns>
    </member>
    <member name="T:System.Windows.Annotations.Storage.AnnotationStore">
      <summary>When overridden in a derived class, represents a data store for writing and reading user annotations.</summary>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" /> class.</summary>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.AddAnnotation(System.Windows.Annotations.Annotation)">
      <summary>Adds a new <see cref="T:System.Windows.Annotations.Annotation" /> to the store.</summary>
      <param name="newAnnotation">The annotation to add to the store.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="newAnnotation" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">An <see cref="T:System.Windows.Annotations.Annotation" /> with the same <see cref="P:System.Windows.Annotations.Annotation.Id" /> property value already exists in the store.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> has been called on the store.</exception>
    </member>
    <member name="E:System.Windows.Annotations.Storage.AnnotationStore.AnchorChanged">
      <summary>Occurs when an anchor on any <see cref="T:System.Windows.Annotations.Annotation" /> in the store changes.</summary>
    </member>
    <member name="E:System.Windows.Annotations.Storage.AnnotationStore.AuthorChanged">
      <summary>Occurs when an author on any <see cref="T:System.Windows.Annotations.Annotation" /> in the store changes.</summary>
    </member>
    <member name="P:System.Windows.Annotations.Storage.AnnotationStore.AutoFlush">
      <summary>Gets or sets a value that indicates whether data in annotation buffers is to be written immediately to the physical data store.</summary>
      <returns>
        <see langword="true" /> if data in annotation buffers is to be written immediately to the physical data store for each operation; otherwise, <see langword="false" /> if data in the annotation buffers is to be written when the application explicitly calls <see cref="M:System.Windows.Annotations.Storage.AnnotationStore.Flush" />.</returns>
    </member>
    <member name="E:System.Windows.Annotations.Storage.AnnotationStore.CargoChanged">
      <summary>Occurs when a cargo on any <see cref="T:System.Windows.Annotations.Annotation" /> in the store changes.</summary>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.DeleteAnnotation(System.Guid)">
      <summary>Deletes the annotation with the specified <see cref="P:System.Windows.Annotations.Annotation.Id" /> from the store.</summary>
      <param name="annotationId">The GUID <see cref="P:System.Windows.Annotations.Annotation.Id" /> property of the annotation to be deleted.</param>
      <returns>The annotation that was deleted; otherwise, <see langword="null" /> if an annotation with the specified <paramref name="annotationId" /> was not found in the store.</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> has been called on the store.</exception>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.Dispose">
      <summary>Releases all managed and unmanaged resources used by the store.</summary>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the store and optionally releases the managed resources.</summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.Finalize">
      <summary>Guarantees that <see cref="M:System.Windows.Annotations.Storage.AnnotationStore.Dispose(System.Boolean)" /> will eventually be called for this store.</summary>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.Flush">
      <summary>Forces any annotation data retained in internal buffers to be written to the underlying storage device.</summary>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> has been called on the store.</exception>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.GetAnnotation(System.Guid)">
      <summary>Returns the annotation with the specified <see cref="P:System.Windows.Annotations.Annotation.Id" /> from the store.</summary>
      <param name="annotationId">The GUID <see cref="P:System.Windows.Annotations.Annotation.Id" /> property of the annotation to be returned.</param>
      <returns>The annotation with the given <paramref name="annotationId" />; or <see langword="null" />, if an annotation with the specified <paramref name="annotationId" /> was not found in the store.</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> has been called on the store.</exception>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.GetAnnotations">
      <summary>Returns a list of all the annotations in the store.</summary>
      <returns>The list of all annotations currently contained in the store.</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> has been called on the store.</exception>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.GetAnnotations(System.Windows.Annotations.ContentLocator)">
      <summary>Returns a list of annotations that have <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> with locators that begin with a matching <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> sequence.</summary>
      <param name="anchorLocator">The starting <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> sequence to return matching annotations for.</param>
      <returns>The list of annotations that have <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> with locators that start and match the given <paramref name="anchorLocator" />; otherwise, <see langword="null" /> if no matching annotations were found.</returns>
    </member>
    <member name="P:System.Windows.Annotations.Storage.AnnotationStore.IsDisposed">
      <summary>Gets a value that indicates whether <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> has been called.</summary>
      <returns>
        <see langword="true" /> if <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> has been called; otherwise, <see langword="false" />.  The default is <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.OnAnchorChanged(System.Windows.Annotations.AnnotationResourceChangedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Annotations.Storage.AnnotationStore.AnchorChanged" /> event.</summary>
      <param name="args">The event data.</param>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.OnAuthorChanged(System.Windows.Annotations.AnnotationAuthorChangedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Annotations.Storage.AnnotationStore.AuthorChanged" /> event.</summary>
      <param name="args">The event data.</param>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.OnCargoChanged(System.Windows.Annotations.AnnotationResourceChangedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Annotations.Storage.AnnotationStore.CargoChanged" /> event.</summary>
      <param name="args">The event data.</param>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.OnStoreContentChanged(System.Windows.Annotations.Storage.StoreContentChangedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Annotations.Storage.AnnotationStore.StoreContentChanged" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="E:System.Windows.Annotations.Storage.AnnotationStore.StoreContentChanged">
      <summary>Occurs when an <see cref="T:System.Windows.Annotations.Annotation" /> is added to or deleted from the store.</summary>
    </member>
    <member name="P:System.Windows.Annotations.Storage.AnnotationStore.SyncRoot">
      <summary>Gets the object to use as a synchronization lock for <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" /> critical sections.</summary>
      <returns>The object to use as a synchronization lock for <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" /> critical sections.</returns>
    </member>
    <member name="T:System.Windows.Annotations.Storage.StoreContentAction">
      <summary>Specifies the actions performed on an <see cref="T:System.Windows.Annotations.Annotation" /> in an <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" />.</summary>
    </member>
    <member name="F:System.Windows.Annotations.Storage.StoreContentAction.Added">
      <summary>The <see cref="T:System.Windows.Annotations.Annotation" /> was added to the store.</summary>
    </member>
    <member name="F:System.Windows.Annotations.Storage.StoreContentAction.Deleted">
      <summary>The <see cref="T:System.Windows.Annotations.Annotation" /> was deleted from the store.</summary>
    </member>
    <member name="T:System.Windows.Annotations.Storage.StoreContentChangedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Annotations.Storage.AnnotationStore.StoreContentChanged" /> event.</summary>
    </member>
    <member name="M:System.Windows.Annotations.Storage.StoreContentChangedEventArgs.#ctor(System.Windows.Annotations.Storage.StoreContentAction,System.Windows.Annotations.Annotation)">
      <summary>Initializes a new instance of the <see cref="M:System.Windows.Annotations.Storage.StoreContentChangedEventArgs.#ctor(System.Windows.Annotations.Storage.StoreContentAction,System.Windows.Annotations.Annotation)" /> class.</summary>
      <param name="action">The action of the event.</param>
      <param name="annotation">The annotation added or removed.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="annotation" /> or <paramref name="action" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Annotations.Storage.StoreContentChangedEventArgs.Action">
      <summary>Gets the action performed.</summary>
      <returns>An action <see cref="F:System.Windows.Annotations.Storage.StoreContentAction.Added" /> or <see cref="F:System.Windows.Annotations.Storage.StoreContentAction.Deleted" /> value that identifies the operation performed.</returns>
    </member>
    <member name="P:System.Windows.Annotations.Storage.StoreContentChangedEventArgs.Annotation">
      <summary>Gets the <see cref="T:System.Windows.Annotations.Annotation" /> that changed in the store.</summary>
      <returns>The <see cref="T:System.Windows.Annotations.Annotation" /> that changed in the store.</returns>
    </member>
    <member name="T:System.Windows.Annotations.Storage.StoreContentChangedEventHandler">
      <summary>Represents the method that handles the <see cref="E:System.Windows.Annotations.Storage.AnnotationStore.StoreContentChanged" /> event raised by the <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" /> class.</summary>
      <param name="sender">The source <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" /> of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Annotations.Storage.XmlStreamStore">
      <summary>Represents an XML data store for writing and reading user annotations.</summary>
    </member>
    <member name="M:System.Windows.Annotations.Storage.XmlStreamStore.#ctor(System.IO.Stream)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Annotations.Storage.XmlStreamStore" /> class with a specified I/O <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream">The I/O stream for reading and writing user annotations.</param>
    </member>
    <member name="M:System.Windows.Annotations.Storage.XmlStreamStore.#ctor(System.IO.Stream,System.Collections.Generic.IDictionary{System.Uri,System.Collections.Generic.IList{System.Uri}})">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Annotations.Storage.XmlStreamStore" /> class with a specified I/O <see cref="T:System.IO.Stream" /> and dictionary of known compatible namespaces.</summary>
      <param name="stream">The I/O stream for reading and writing user annotations.</param>
      <param name="knownNamespaces">A dictionary with a list of known compatible namespaces.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> is <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="stream" /> contains invalid XML.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="knownNamespaces" /> dictionary contains a duplicate namespace.  
 -or-  
 The <paramref name="knownNamespaces" /> dictionary contains an element that has a <see langword="null" /> key.</exception>
    </member>
    <member name="M:System.Windows.Annotations.Storage.XmlStreamStore.AddAnnotation(System.Windows.Annotations.Annotation)">
      <summary>Adds a new <see cref="T:System.Windows.Annotations.Annotation" /> to the store.</summary>
      <param name="newAnnotation">The annotation to add to the store.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="newAnnotation" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">An <see cref="T:System.Windows.Annotations.Annotation" /> with the same <see cref="P:System.Windows.Annotations.Annotation.Id" /> already is in the store.</exception>
      <exception cref="T:System.InvalidOperationException">An I/O <see cref="T:System.IO.Stream" /> has not been set for the store.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> has been called on the store.</exception>
    </member>
    <member name="P:System.Windows.Annotations.Storage.XmlStreamStore.AutoFlush">
      <summary>Gets or sets a value that indicates whether data in annotation buffers is to be written immediately to the physical data store.</summary>
      <returns>
        <see langword="true" /> if data in annotation buffers is to be written immediately to the physical data store for each operation; otherwise, <see langword="false" /> if data in the annotation buffers is to be written when the application explicitly calls <see cref="M:System.Windows.Annotations.Storage.XmlStreamStore.Flush" />.</returns>
    </member>
    <member name="M:System.Windows.Annotations.Storage.XmlStreamStore.DeleteAnnotation(System.Guid)">
      <summary>Deletes the annotation with the specified <see cref="P:System.Windows.Annotations.Annotation.Id" /> from the store.</summary>
      <param name="annotationId">The globally unique identifier (GUID) <see cref="P:System.Windows.Annotations.Annotation.Id" /> property of the annotation to be deleted.</param>
      <returns>The annotation that was deleted; otherwise, <see langword="null" /> if an annotation with the specified <paramref name="annotationId" /> was not found in the store.</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> has been called on the store.</exception>
      <exception cref="T:System.InvalidOperationException">An I/O <see cref="T:System.IO.Stream" /> has not been set for the store.</exception>
    </member>
    <member name="M:System.Windows.Annotations.Storage.XmlStreamStore.Flush">
      <summary>Forces any annotation data retained in internal buffers to be written to the underlying storage device.</summary>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> has been called on the store.</exception>
      <exception cref="T:System.InvalidOperationException">An I/O <see cref="T:System.IO.Stream" /> has not been set for the store.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The store I/O <see cref="T:System.IO.Stream" /> is read-only and cannot be accessed for output.</exception>
    </member>
    <member name="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotation(System.Guid)">
      <summary>Returns the annotation with the specified <see cref="P:System.Windows.Annotations.Annotation.Id" /> from the store.</summary>
      <param name="annotationId">The GUID <see cref="P:System.Windows.Annotations.Annotation.Id" /> property of the annotation to be returned.</param>
      <returns>The annotation with the given <paramref name="annotationId" />; otherwise, <see langword="null" /> if an annotation with the specified <paramref name="annotationId" /> was not found in the store.</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> has been called on the store.</exception>
    </member>
    <member name="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations">
      <summary>Returns a list of all the annotations in the store.</summary>
      <returns>The list of all annotations that are currently in the store.</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> has been called on the store.</exception>
    </member>
    <member name="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations(System.Windows.Annotations.ContentLocator)">
      <summary>Returns a list of annotations that have <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> with locators that begin with a matching <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> sequence.</summary>
      <param name="anchorLocator">The starting <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> sequence to return matching annotations for.</param>
      <returns>The list of annotations that have <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> with locators that start and match the given <paramref name="anchorLocator" />; otherwise, <see langword="null" /> if no matching annotations were found.</returns>
    </member>
    <member name="M:System.Windows.Annotations.Storage.XmlStreamStore.GetWellKnownCompatibleNamespaces(System.Uri)">
      <summary>Returns a list of namespaces that are compatible as an input namespace.</summary>
      <param name="name">The starting URI sequence to return the list of namespaces for.</param>
      <returns>A list of compatible namespaces that match <paramref name="name" />; otherwise, <see langword="null" /> if there are no compatible namespaces found.</returns>
    </member>
    <member name="P:System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces">
      <summary>Gets a list of the namespaces that were ignored when the XML stream was loaded.</summary>
      <returns>The list of the namespaces that were ignored when the XML stream was loaded.</returns>
    </member>
    <member name="P:System.Windows.Annotations.Storage.XmlStreamStore.WellKnownNamespaces">
      <summary>Gets a list of all namespaces that are predefined by the Annotations Framework.</summary>
      <returns>The list of namespaces that are predefined by the Microsoft Annotations Framework.</returns>
    </member>
    <member name="T:System.Windows.Annotations.TextAnchor">
      <summary>Represents a selection of content that an annotation is anchored to.</summary>
    </member>
    <member name="P:System.Windows.Annotations.TextAnchor.BoundingEnd">
      <summary>Gets the end position of the text anchor.</summary>
      <returns>The end position of the text anchor.</returns>
    </member>
    <member name="P:System.Windows.Annotations.TextAnchor.BoundingStart">
      <summary>Gets the beginning position of the text anchor.</summary>
      <returns>The beginning position of the text anchor.</returns>
    </member>
    <member name="M:System.Windows.Annotations.TextAnchor.Equals(System.Object)">
      <summary>Returns a value that indicates whether the text anchor is equal to the specified object.</summary>
      <param name="obj">The object to compare to.</param>
      <returns>
        <see langword="true" /> if the two instances are equal; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Annotations.TextAnchor.GetHashCode">
      <summary>Returns the hash code of the text anchor instance.</summary>
      <returns>The hash code of the text anchor instance.</returns>
    </member>
    <member name="T:System.Windows.Application">
      <summary>Encapsulates a Windows Presentation Foundation application.</summary>
    </member>
    <member name="M:System.Windows.Application.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Application" /> class.</summary>
      <exception cref="T:System.InvalidOperationException">More than one instance of the <see cref="T:System.Windows.Application" /> class is created per <see cref="T:System.AppDomain" />.</exception>
    </member>
    <member name="E:System.Windows.Application.Activated">
      <summary>Occurs when an application becomes the foreground application.</summary>
    </member>
    <member name="P:System.Windows.Application.Current">
      <summary>Gets the <see cref="T:System.Windows.Application" /> object for the current <see cref="T:System.AppDomain" />.</summary>
      <returns>The <see cref="T:System.Windows.Application" /> object for the current <see cref="T:System.AppDomain" />.</returns>
    </member>
    <member name="E:System.Windows.Application.Deactivated">
      <summary>Occurs when an application stops being the foreground application.</summary>
    </member>
    <member name="E:System.Windows.Application.DispatcherUnhandledException">
      <summary>Occurs when an exception is thrown by an application but not handled.</summary>
    </member>
    <member name="E:System.Windows.Application.Exit">
      <summary>Occurs just before an application shuts down, and cannot be canceled.</summary>
    </member>
    <member name="M:System.Windows.Application.FindResource(System.Object)">
      <summary>Searches for a user interface (UI) resource, such as a <see cref="T:System.Windows.Style" /> or <see cref="T:System.Windows.Media.Brush" />, with the specified key, and throws an exception if the requested resource is not found (see XAML Resources).</summary>
      <param name="resourceKey">The name of the resource to find.</param>
      <returns>The requested resource object. If the requested resource is not found, a <see cref="T:System.Windows.ResourceReferenceKeyNotFoundException" /> is thrown.</returns>
      <exception cref="T:System.Windows.ResourceReferenceKeyNotFoundException">The resource cannot be found.</exception>
    </member>
    <member name="E:System.Windows.Application.FragmentNavigation">
      <summary>Occurs when a navigator in the application begins navigation to a content fragment, Navigation occurs immediately if the desired fragment is in the current content, or after the source XAML content has been loaded if the desired fragment is in different content.</summary>
    </member>
    <member name="M:System.Windows.Application.GetContentStream(System.Uri)">
      <summary>Returns a resource stream for a content data file that is located at the specified <see cref="T:System.Uri" /> (see WPF Application Resource, Content, and Data Files).</summary>
      <param name="uriContent">The relative <see cref="T:System.Uri" /> that maps to a loose resource.</param>
      <returns>A <see cref="T:System.Windows.Resources.StreamResourceInfo" /> that contains a content data file that is located at the specified <see cref="T:System.Uri" />. If a loose resource is not found, null is returned.</returns>
      <exception cref="T:System.ArgumentNullException">The <see cref="T:System.Uri" /> that is passed to <see cref="M:System.Windows.Application.GetContentStream(System.Uri)" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The <see cref="T:System.Uri" /> that is passed to <see cref="M:System.Windows.Application.GetContentStream(System.Uri)" /> is an absolute <see cref="T:System.Uri" />.</exception>
    </member>
    <member name="M:System.Windows.Application.GetCookie(System.Uri)">
      <summary>Retrieves a cookie for the location specified by a <see cref="T:System.Uri" />.</summary>
      <param name="uri">The <see cref="T:System.Uri" /> that specifies the location for which a cookie was created.</param>
      <returns>A <see cref="T:System.String" /> value, if the cookie exists; otherwise, a <see cref="T:System.ComponentModel.Win32Exception" /> is thrown.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">A Win32 error is raised by the <see langword="InternetGetCookie" /> function (called by <see cref="M:System.Windows.Application.GetCookie(System.Uri)" />) if a problem occurs when attempting to retrieve the specified cookie.</exception>
    </member>
    <member name="M:System.Windows.Application.GetRemoteStream(System.Uri)">
      <summary>Returns a resource stream for a site-of-origin data file that is located at the specified <see cref="T:System.Uri" /> (see WPF Application Resource, Content, and Data Files).</summary>
      <param name="uriRemote">The <see cref="T:System.Uri" /> that maps to a loose resource at the site of origin.</param>
      <returns>A <see cref="T:System.Windows.Resources.StreamResourceInfo" /> that contains a resource stream for a site-of-origin data file that is located at the specified <see cref="T:System.Uri" />. If the loose resource is not found, <see langword="null" /> is returned.</returns>
      <exception cref="T:System.ArgumentNullException">The <see cref="T:System.Uri" /> that is passed to <see cref="M:System.Windows.Application.GetRemoteStream(System.Uri)" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The <see cref="T:System.Uri" /> that is passed to <see cref="M:System.Windows.Application.GetRemoteStream(System.Uri)" /> is either not relative, or is absolute but not in the <c>pack://siteoforigin:,,,/</c> form.</exception>
    </member>
    <member name="M:System.Windows.Application.GetResourceStream(System.Uri)">
      <summary>Returns a resource stream for a resource data file that is located at the specified <see cref="T:System.Uri" /> (see WPF Application Resource, Content, and Data Files).</summary>
      <param name="uriResource">The <see cref="T:System.Uri" /> that maps to an embedded resource.</param>
      <returns>A <see cref="T:System.Windows.Resources.StreamResourceInfo" /> that contains a resource stream for resource data file that is located at the specified <see cref="T:System.Uri" />.</returns>
      <exception cref="T:System.ArgumentNullException">The <see cref="T:System.Uri" /> that is passed to <see cref="M:System.Windows.Application.GetResourceStream(System.Uri)" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The <see cref="T:System.Uri" /> that is passed to <see cref="M:System.Windows.Application.GetResourceStream(System.Uri)" /> is either not relative, or is absolute but not in the <c>pack://application:,,,/</c> form.</exception>
      <exception cref="T:System.IO.IOException">The <see cref="T:System.Uri" /> that is passed to <see cref="M:System.Windows.Application.GetResourceStream(System.Uri)" /> cannot be found.</exception>
    </member>
    <member name="E:System.Windows.Application.LoadCompleted">
      <summary>Occurs when content that was navigated to by a navigator in the application has been loaded, parsed, and has begun rendering.</summary>
    </member>
    <member name="M:System.Windows.Application.LoadComponent(System.Object,System.Uri)">
      <summary>Loads a XAML file that is located at the specified uniform resource identifier (URI) and converts it to an instance of the object that is specified by the root element of the XAML file.</summary>
      <param name="component">An object of the same type as the root element of the XAML file.</param>
      <param name="resourceLocator">A <see cref="T:System.Uri" /> that maps to a relative XAML file.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resourceLocator" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="resourceLocator" /> is an absolute URI.</exception>
      <exception cref="T:System.Exception">
        <paramref name="component" /> is of a type that does not match the root element of the XAML file.</exception>
    </member>
    <member name="M:System.Windows.Application.LoadComponent(System.Uri)">
      <summary>Loads a XAML file that is located at the specified uniform resource identifier (URI), and converts it to an instance of the object that is specified by the root element of the XAML file.</summary>
      <param name="resourceLocator">A <see cref="T:System.Uri" /> that maps to a relative XAML file.</param>
      <returns>An instance of the root element specified by the XAML file loaded.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resourceLocator" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="resourceLocator" /> is an absolute URI.</exception>
      <exception cref="T:System.Exception">The file is not a XAML file.</exception>
    </member>
    <member name="P:System.Windows.Application.MainWindow">
      <summary>Gets or sets the main window of the application.</summary>
      <returns>A <see cref="T:System.Windows.Window" /> that is designated as the main application window.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Application.MainWindow" /> is set from an application that's hosted in a browser, such as an XAML browser applications (XBAPs).</exception>
    </member>
    <member name="E:System.Windows.Application.Navigated">
      <summary>Occurs when the content that is being navigated to by a navigator in the application has been found, although it may not have completed loading.</summary>
    </member>
    <member name="E:System.Windows.Application.Navigating">
      <summary>Occurs when a new navigation is requested by a navigator in the application.</summary>
    </member>
    <member name="E:System.Windows.Application.NavigationFailed">
      <summary>Occurs when an error occurs while a navigator in the application is navigating to the requested content.</summary>
    </member>
    <member name="E:System.Windows.Application.NavigationProgress">
      <summary>Occurs periodically during a download that is being managed by a navigator in the application to provide navigation progress information.</summary>
    </member>
    <member name="E:System.Windows.Application.NavigationStopped">
      <summary>Occurs when the <see langword="StopLoading" /> method of a navigator in the application is called, or when a new navigation is requested by a navigator while a current navigation is in progress.</summary>
    </member>
    <member name="M:System.Windows.Application.OnActivated(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Application.Activated" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Application.OnDeactivated(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Application.Deactivated" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Application.OnExit(System.Windows.ExitEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Application.Exit" /> event.</summary>
      <param name="e">An <see cref="T:System.Windows.ExitEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Application.OnFragmentNavigation(System.Windows.Navigation.FragmentNavigationEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Application.FragmentNavigation" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Navigation.FragmentNavigationEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Application.OnLoadCompleted(System.Windows.Navigation.NavigationEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Application.LoadCompleted" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Navigation.NavigationEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Application.OnNavigated(System.Windows.Navigation.NavigationEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Application.Navigated" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Navigation.NavigationEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Application.OnNavigating(System.Windows.Navigation.NavigatingCancelEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Application.Navigating" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Navigation.NavigatingCancelEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Application.OnNavigationFailed(System.Windows.Navigation.NavigationFailedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Application.NavigationFailed" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Navigation.NavigationFailedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Application.OnNavigationProgress(System.Windows.Navigation.NavigationProgressEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Application.NavigationProgress" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Navigation.NavigationProgressEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Application.OnNavigationStopped(System.Windows.Navigation.NavigationEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Application.NavigationStopped" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Navigation.NavigationEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Application.OnSessionEnding(System.Windows.SessionEndingCancelEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Application.SessionEnding" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.SessionEndingCancelEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Application.OnStartup(System.Windows.StartupEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Application.Startup" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.StartupEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:System.Windows.Application.Properties">
      <summary>Gets a collection of application-scope properties.</summary>
      <returns>An <see cref="T:System.Collections.IDictionary" /> that contains the application-scope properties.</returns>
    </member>
    <member name="P:System.Windows.Application.ResourceAssembly">
      <summary>Gets or sets the <see cref="T:System.Reflection.Assembly" /> that provides the pack uniform resource identifiers (URIs) for resources in a WPF application.</summary>
      <returns>A reference to the <see cref="T:System.Reflection.Assembly" /> that provides the pack uniform resource identifiers (URIs) for resources in a WPF application.</returns>
      <exception cref="T:System.InvalidOperationException">A WPF application has an entry assembly, or <see cref="P:System.Windows.Application.ResourceAssembly" /> has already been set.</exception>
    </member>
    <member name="P:System.Windows.Application.Resources">
      <summary>Gets or sets a collection of application-scope resources, such as styles and brushes.</summary>
      <returns>A <see cref="T:System.Windows.ResourceDictionary" /> object that contains zero or more application-scope resources.</returns>
    </member>
    <member name="M:System.Windows.Application.Run">
      <summary>Starts a Windows Presentation Foundation application.</summary>
      <returns>The <see cref="T:System.Int32" /> application exit code that is returned to the operating system when the application shuts down. By default, the exit code value is 0.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Windows.Application.Run" /> is called from a browser-hosted application (for example, an XAML browser application (XBAP)).</exception>
    </member>
    <member name="M:System.Windows.Application.Run(System.Windows.Window)">
      <summary>Starts a Windows Presentation Foundation application and opens the specified window.</summary>
      <param name="window">A <see cref="T:System.Windows.Window" /> that opens automatically when an application starts.</param>
      <returns>The <see cref="T:System.Int32" /> application exit code that is returned to the operating system when the application shuts down. By default, the exit code value is 0.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Windows.Application.Run" /> is called from a browser-hosted application (for example, an XAML browser application (XBAP)).</exception>
    </member>
    <member name="E:System.Windows.Application.SessionEnding">
      <summary>Occurs when the user ends the Windows session by logging off or shutting down the operating system.</summary>
    </member>
    <member name="M:System.Windows.Application.SetCookie(System.Uri,System.String)">
      <summary>Creates a cookie for the location specified by a <see cref="T:System.Uri" />.</summary>
      <param name="uri">The <see cref="T:System.Uri" /> that specifies the location for which the cookie should be created.</param>
      <param name="value">The <see cref="T:System.String" /> that contains the cookie data.</param>
      <exception cref="T:System.ComponentModel.Win32Exception">A Win32 error is raised by the <see langword="InternetSetCookie" /> function (called by <see cref="M:System.Windows.Application.SetCookie(System.Uri,System.String)" />) if a problem occurs when attempting to create the specified cookie.</exception>
    </member>
    <member name="M:System.Windows.Application.Shutdown">
      <summary>Shuts down an application.</summary>
    </member>
    <member name="M:System.Windows.Application.Shutdown(System.Int32)">
      <summary>Shuts down an application that returns the specified exit code to the operating system.</summary>
      <param name="exitCode">An integer exit code for an application. The default exit code is 0.</param>
    </member>
    <member name="P:System.Windows.Application.ShutdownMode">
      <summary>Gets or sets the condition that causes the <see cref="M:System.Windows.Application.Shutdown" /> method to be called.</summary>
      <returns>A <see cref="T:System.Windows.ShutdownMode" /> enumeration value. The default value is <see cref="F:System.Windows.ShutdownMode.OnLastWindowClose" />.</returns>
    </member>
    <member name="E:System.Windows.Application.Startup">
      <summary>Occurs when the <see cref="M:System.Windows.Application.Run" /> method of the <see cref="T:System.Windows.Application" /> object is called.</summary>
    </member>
    <member name="P:System.Windows.Application.StartupUri">
      <summary>Gets or sets a UI that is automatically shown when an application starts.</summary>
      <returns>A <see cref="T:System.Uri" /> that refers to the UI that automatically opens when an application starts.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Windows.Application.StartupUri" /> is set with a value of null.</exception>
    </member>
    <member name="M:System.Windows.Application.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)">
      <summary>Queries for whether a specified ambient property is available in the current scope.</summary>
      <param name="propertyName">The name of the requested ambient property.</param>
      <returns>
        <see langword="true" /> if the requested ambient property is available; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Application.TryFindResource(System.Object)">
      <summary>Searches for the specified resource.</summary>
      <param name="resourceKey">The name of the resource to find.</param>
      <returns>The requested resource object. If the requested resource is not found, a null reference is returned.</returns>
    </member>
    <member name="P:System.Windows.Application.Windows">
      <summary>Gets the instantiated windows in an application.</summary>
      <returns>A <see cref="T:System.Windows.WindowCollection" /> that contains references to all window objects in the current <see cref="T:System.AppDomain" />.</returns>
    </member>
    <member name="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute">
      <summary>Specifies that an attached property has a browsable scope that extends to child elements in the logical tree.</summary>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> class.</summary>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.Equals(System.Object)">
      <summary>Determines whether the current <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> .NET Framework attribute is equal to a specified object.</summary>
      <param name="obj">The <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> to compare to the current <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" />.</param>
      <returns>
        <see langword="true" /> if the specified <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> is equal to the current <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.GetHashCode">
      <summary>Returns the hash code for this <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> .NET Framework attribute.</summary>
      <returns>An unsigned 32-bit integer value.</returns>
    </member>
    <member name="P:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants">
      <summary>Gets or sets a value that declares whether to use the deep mode for detection of parent elements on the attached property where this  .NET Framework attribute is applied.</summary>
      <returns>
        <see langword="true" /> if the attached property is browsable for all child elements in the logical tree of the parent element that owns the attached property. <see langword="false" /> if the attached property is only browsable for immediate child elements of a parent element that owns the attached property. The default is <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ButtonAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.Button" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonAutomationPeer.#ctor(System.Windows.Controls.Button)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.ButtonAutomationPeer" /> class.</summary>
      <param name="owner">The element associated with this automation peer.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type of the element that is associated with the UI Automation peer.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Button" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the control that is associated with this UI Automation peer.</summary>
      <returns>A string that contains "Button".</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the object that supports the specified control pattern of the element that is associated with this automation peer.</summary>
      <param name="patternInterface">A value in the enumeration.</param>
      <returns>If <paramref name="patternInterface" /> is <see cref="F:System.Windows.Automation.Peers.PatternInterface.Invoke" />, this method returns a <see langword="this" /> pointer, otherwise this method returns <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.ButtonBaseAutomationPeer">
      <summary>Represents a base class for exposing elements derived from <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonBaseAutomationPeer.#ctor(System.Windows.Controls.Primitives.ButtonBase)">
      <summary>Provides initialization for base class values when called by the constructor of a derived class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> that is associated with this peer.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonBaseAutomationPeer.GetAcceleratorKeyCore">
      <summary>Gets the accelerator key for the element associated with this <see cref="T:System.Windows.Automation.Peers.ButtonBaseAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAcceleratorKey" />.</summary>
      <returns>A string containing the accelerator key.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonBaseAutomationPeer.GetAutomationIdCore">
      <summary>Gets the <see cref="P:System.Windows.Automation.AutomationProperties.AutomationId" /> for the element associated with this <see cref="T:System.Windows.Automation.Peers.ButtonBaseAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId" />.</summary>
      <returns>The string that contains the <see cref="P:System.Windows.Automation.AutomationProperties.AutomationId" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonBaseAutomationPeer.GetNameCore">
      <summary>Gets the name of the class of the element associated with this <see cref="T:System.Windows.Automation.Peers.ButtonBaseAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" />.</summary>
      <returns>A string that contains the class name, minus the accelerator key.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.CalendarAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.Calendar" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.#ctor(System.Windows.Controls.Calendar)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.CalendarAutomationPeer" /> class.</summary>
      <param name="owner">The element associated with this automation peer.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the object that supports the specified control pattern of the element that is associated with this automation peer.</summary>
      <param name="patternInterface">An enumeration value that specifies the control pattern.</param>
      <returns>If <paramref name="patternInterface" /> is <see cref="F:System.Windows.Automation.Peers.PatternInterface.Grid" />, <see cref="F:System.Windows.Automation.Peers.PatternInterface.Table" />, <see cref="F:System.Windows.Automation.Peers.PatternInterface.MultipleView" />, or <see cref="F:System.Windows.Automation.Peers.PatternInterface.Selection" />, this method returns a <see langword="this" /> pointer; otherwise, this method returns <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IGridProvider#ColumnCount">
      <summary>Gets the total number of columns in a grid.</summary>
      <returns>The total number of columns in a grid.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IGridProvider#GetItem(System.Int32,System.Int32)">
      <summary>Retrieves the UI Automation provider for the specified cell.</summary>
      <param name="row">The ordinal number of the row of interest.</param>
      <param name="column">The ordinal number of the column of interest.</param>
      <returns>The UI Automation provider for the specified cell.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IGridProvider#RowCount">
      <summary>Gets the total number of rows in a grid.</summary>
      <returns>The total number of rows in a grid.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IItemContainerProvider#FindItemByProperty(System.Windows.Automation.Provider.IRawElementProviderSimple,System.Int32,System.Object)">
      <summary>Retrieves an element by the specified property value.</summary>
      <param name="startAfterProvider">The item in the container after which to begin the search.</param>
      <param name="propertyId">The property that contains the value to retrieve.</param>
      <param name="value">The value to retrieve.</param>
      <returns>The first item that matches the search criterion; otherwise, <see langword="null" /> if no items match.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#CurrentView">
      <summary>Gets the current control-specific view.</summary>
      <returns>The value for the current view of the UI Automation element.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#GetSupportedViews">
      <summary>Retrieves a collection of control-specific view identifiers.</summary>
      <returns>A collection of values that identifies the views available for a UI Automation element.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#GetViewName(System.Int32)">
      <summary>Retrieves the name of a control-specific view.</summary>
      <param name="viewId">The view identifier.</param>
      <returns>A localized name for the view.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#SetCurrentView(System.Int32)">
      <summary>Sets the current control-specific view.</summary>
      <param name="viewId">A view identifier.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="viewId" /> is not a member of the supported views collection.</exception>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#CanSelectMultiple">
      <summary>Gets a value that specifies whether the UI Automation provider allows more than one child element to be selected concurrently.</summary>
      <returns>
        <see langword="true" /> if multiple selection is allowed; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#GetSelection">
      <summary>Retrieves a UI Automation provider for each child element that is selected.</summary>
      <returns>A collection of UI Automation providers.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#IsSelectionRequired">
      <summary>Gets a value that specifies whether the UI Automation provider requires at least one child element to be selected.</summary>
      <returns>
        <see langword="false" /> in all cases.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#ITableProvider#GetColumnHeaders">
      <summary>Gets a collection of UI Automation providers that represents all the column headers in a table.</summary>
      <returns>A collection of UI Automation providers.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#ITableProvider#GetRowHeaders">
      <summary>Retrieves a collection of UI Automation providers that represents all row headers in the table.</summary>
      <returns>A collection of UI Automation providers.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#ITableProvider#RowOrColumnMajor">
      <summary>Retrieves the primary direction of traversal for the table.</summary>
      <returns>The primary direction of traversal.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.CalendarButtonAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.Primitives.CalendarButton" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.#ctor(System.Windows.Controls.Button)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.CalendarButtonAutomationPeer" /> class.</summary>
      <param name="owner">The element associated with this automation peer.</param>
    </member>
    <member name="T:System.Windows.Automation.Peers.CheckBoxAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.CheckBox" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.CheckBoxAutomationPeer.#ctor(System.Windows.Controls.CheckBox)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.CheckBoxAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.CheckBox" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.CheckBoxAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.CheckBoxAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the <see cref="T:System.Windows.Automation.Peers.AutomationControlType" /> for the element associated with this <see cref="T:System.Windows.Automation.Peers.CheckBoxAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.CheckBox" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CheckBoxAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the element associated with this <see cref="T:System.Windows.Automation.Peers.CheckBoxAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains "CheckBox".</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.ComboBox" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.#ctor(System.Windows.Controls.ComboBox)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.ComboBox" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.CreateItemAutomationPeer(System.Object)">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> class.</summary>
      <param name="item">The <see cref="T:System.Windows.Controls.ComboBoxItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" />.</param>
      <returns>A new instance of the <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> class.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for this <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.ComboBox" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.GetChildrenCore">
      <summary>Gets a collection of child elements. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" />.</summary>
      <returns>A collection of child elements.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the class that defines the type that is associated with this <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains "ComboBox".</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for this <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" />.</summary>
      <param name="pattern">One of the enumeration values.</param>
      <returns>If <paramref name="pattern" /> is <see cref="F:System.Windows.Automation.Peers.PatternInterface.Value" /> or <see cref="F:System.Windows.Automation.Peers.PatternInterface.ExpandCollapse" />, this method returns a reference to the current instance of the <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" />; otherwise, this method calls the base implementation on <see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.SetFocusCore">
      <summary>Sets the keyboard input focus on the <see cref="T:System.Windows.Controls.ComboBox" /> control that is associated with this <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" /> object. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.SetFocus" />.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Controls.ComboBox" /> control that is associated with this <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" /> object cannot receive focus.</exception>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Collapse">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Expand">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.ComboBoxAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#ExpandCollapseState">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>The <see cref="T:System.Windows.Automation.ExpandCollapseState" /> for the current element.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ComboBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#IsReadOnly">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>
        <see langword="true" /> if the value is read-only; <see langword="false" /> if it can be modified.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#SetValue(System.String)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="val">The string value of a control.</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.ComboBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#Value">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>A string value of the control.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ContentTextAutomationPeer">
      <summary>Represents a base class for exposing <see cref="T:System.Windows.Automation.TextPattern" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ContentTextAutomationPeer.#ctor(System.Windows.FrameworkContentElement)">
      <summary>Provides initialization for base class values when called by the constructor of a derived class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Automation.TextPattern" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ContentTextAutomationPeer" />.</param>
    </member>
    <member name="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.ContextMenu" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ContextMenuAutomationPeer.#ctor(System.Windows.Controls.ContextMenu)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.ContextMenu" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ContextMenuAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.ContextMenu" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Menu" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ContextMenuAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.ContextMenu" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains "ContextMenu".</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ContextMenuAutomationPeer.IsContentElementCore">
      <summary>Gets a value that indicates whether the element that is associated with this automation peer contains data that is presented to the user. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement" />.</summary>
      <returns>
        <see langword="false" /> in all cases.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.DataGridAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.DataGrid" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridAutomationPeer.#ctor(System.Windows.Controls.DataGrid)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.DataGridAutomationPeer" /> class.</summary>
      <param name="owner">The element associated with this automation peer.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Returns the object that supports the specified control pattern of the element that is associated with this automation peer.</summary>
      <param name="patternInterface">A value in the enumeration.</param>
      <returns>If <paramref name="patternInterface" /> is <see cref="F:System.Windows.Automation.Peers.PatternInterface.Grid" />, <see cref="F:System.Windows.Automation.Peers.PatternInterface.Selection" />, or <see cref="F:System.Windows.Automation.Peers.PatternInterface.Table" />, this method returns a <see langword="this" /> pointer; otherwise, this method returns <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#IGridProvider#ColumnCount">
      <summary>Gets the total number of columns in a grid.</summary>
      <returns>The total number of columns in a grid.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#IGridProvider#GetItem(System.Int32,System.Int32)">
      <summary>Retrieves the UI Automation provider for the specified cell.</summary>
      <param name="row">The ordinal number of the row of interest.</param>
      <param name="column">The ordinal number of the column of interest.</param>
      <returns>The UI Automation provider for the specified cell.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#IGridProvider#RowCount">
      <summary>Gets the total number of rows in a grid.</summary>
      <returns>The total number of rows in a grid.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#CanSelectMultiple">
      <summary>Gets a value that specifies whether the UI Automation provider allows more than one child element to be selected concurrently.</summary>
      <returns>
        <see langword="true" /> if multiple selection is allowed; otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#GetSelection">
      <summary>Retrieves a UI Automation provider for each child element that is selected.</summary>
      <returns>A collection of UI Automation providers.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#IsSelectionRequired">
      <summary>Gets a value that specifies whether the UI Automation provider requires at least one child element to be selected.</summary>
      <returns>
        <see langword="false" /> in all cases.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#ITableProvider#GetColumnHeaders">
      <summary>Gets a collection of UI Automation providers that represents all the column headers in a table.</summary>
      <returns>A collection of UI Automation providers.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#ITableProvider#GetRowHeaders">
      <summary>Retrieves a collection of UI Automation providers that represents all row headers in the table.</summary>
      <returns>A collection of UI Automation providers.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#ITableProvider#RowOrColumnMajor">
      <summary>Retrieves the primary direction of traversal for the table.</summary>
      <returns>The primary direction of traversal.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.DataGridCellAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.DataGridCell" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellAutomationPeer.#ctor(System.Windows.Controls.DataGridCell)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.DataGridCellAutomationPeer" /> class.</summary>
      <param name="owner">An enumeration value that specifies the control pattern.</param>
    </member>
    <member name="T:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.DataGridCell" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.#ctor(System.Object,System.Windows.Controls.DataGridColumn)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer" /> class.</summary>
      <param name="item">The element that is associated with this automation peer.</param>
      <param name="dataGridColumn">The <see cref="T:System.Windows.Controls.DataGrid" /> column that <paramref name="item" /> is in.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Returns the object that supports the specified control pattern of the element that is associated with this automation peer.</summary>
      <param name="patternInterface">An enumeration that specifies the control pattern.</param>
      <returns>The current <see cref="T:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer" /> object, if <paramref name="patternInterface" /> is a supported value; otherwise, <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Column">
      <summary>Gets the ordinal number of the column that contains the cell or item.</summary>
      <returns>A zero-based ordinal number that identifies the column containing the cell or item.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ColumnSpan">
      <summary>Gets the number of columns spanned by a cell or item.</summary>
      <returns>The number of columns spanned.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ContainingGrid">
      <summary>Gets a UI Automation provider that implements <see cref="T:System.Windows.Automation.Provider.IGridProvider" /> and represents the container of the cell or item.</summary>
      <returns>A UI Automation provider that implements the <see cref="T:System.Windows.Automation.GridPattern" /> and represents the cell or item container.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Row">
      <summary>Gets the ordinal number of the row that contains the cell or item.</summary>
      <returns>A zero-based ordinal number that identifies the row containing the cell or item.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#RowSpan">
      <summary>Gets the number of rows spanned by a cell or item.</summary>
      <returns>The number of rows spanned.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
      <summary>Sends a request to activate a control and initiate its single, unambiguous action.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#IScrollItemProvider#ScrollIntoView">
      <summary>Scrolls the content area of a container object in order to display the control within the visible region (viewport) of the container.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
      <summary>Adds the current element to the collection of selected items.</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
      <summary>Gets a value that indicates whether an item is selected.</summary>
      <returns>
        <see langword="true" /> if the element is selected; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
      <summary>Removes the current element from the collection of selected items.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
      <summary>Deselects any selected items and then selects the current element.</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
      <summary>Gets the UI Automation provider that implements <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" /> and acts as the container for the calling object.</summary>
      <returns>The provider that supports <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#ITableItemProvider#GetColumnHeaderItems">
      <summary>Retrieves a collection of UI Automation providers representing all the column headers associated with a table item or cell.</summary>
      <returns>A collection of UI Automation providers.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#ITableItemProvider#GetRowHeaderItems">
      <summary>Retrieves a collection of UI Automation providers representing all the row headers associated with a table item or cell.</summary>
      <returns>A collection of UI Automation providers.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#IValueProvider#IsReadOnly">
      <summary>Gets a value that specifies whether the value of a control is read-only.</summary>
      <returns>
        <see langword="true" /> if the value is read-only; <see langword="false" /> if it can be modified.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#IValueProvider#SetValue(System.String)">
      <summary>Sets the value of a control.</summary>
      <param name="value">The value to set. The provider is responsible for converting the value to the appropriate data type.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Controls.DataGridCell" /> object that is associated with this <see cref="T:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer" /> object is read-only.</exception>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#IValueProvider#Value">
      <summary>Gets the value of the control.</summary>
      <returns>The value of the control as a string.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#IVirtualizedItemProvider#Realize">
      <summary>Makes the virtual item fully accessible as a UI Automation element.</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.DataGridColumnHeaderAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.Primitives.DataGridColumnHeader" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderAutomationPeer.#ctor(System.Windows.Controls.Primitives.DataGridColumnHeader)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeaderAutomationPeer" /> class.</summary>
      <param name="owner">The element associated with this automation peer.</param>
    </member>
    <member name="T:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer">
      <summary>Exposes the <see cref="P:System.Windows.Controls.DataGridColumn.Header" /> of a <see cref="T:System.Windows.Controls.DataGridColumn" /> that is in a <see cref="T:System.Windows.Controls.DataGrid" /> to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.#ctor(System.Object,System.Windows.Controls.DataGridColumn,System.Windows.Automation.Peers.DataGridColumnHeadersPresenterAutomationPeer)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer" /> class.</summary>
      <param name="item">The <see cref="P:System.Windows.Controls.DataGridColumn.Header" /> in the <see cref="T:System.Windows.Controls.DataGridColumn" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer" />.</param>
      <param name="column">The column that is associated with the <see cref="P:System.Windows.Controls.DataGridColumn.Header" />.</param>
      <param name="peer">The automation peer for the <see cref="T:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter" /> that is associated with the <see cref="T:System.Windows.Controls.DataGrid" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the header that is associated with this <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.HeaderItem" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.GetClassNameCore">
      <summary>Gets a name that differentiates the header that is represented by this <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>The type name of the <see cref="P:System.Windows.Controls.DataGridColumn.Header" /> property that is associated with this <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Returns the object that supports the specified control pattern of the element that is associated with this automation peer.</summary>
      <param name="patternInterface">An enumeration value that specifies the control pattern.</param>
      <returns>The current <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer" /> object, if <paramref name="patternInterface" /> is a supported value; otherwise, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.IsContentElementCore">
      <summary>Gets a value that indicates whether the element that is associated with this automation peer contains data that is presented to the user.</summary>
      <returns>
        <see langword="false" /> in all cases.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
      <summary>Sends a request to activate a control and initiate its single, unambiguous action.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.System#Windows#Automation#Provider#IScrollItemProvider#ScrollIntoView">
      <summary>Scrolls the header and column that is associated with the <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer" /> into view.</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanMove">
      <summary>Gets a value that specifies whether the column can be moved.</summary>
      <returns>
        <see langword="false" /> in all cases.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanResize">
      <summary>Gets a value that specifies whether the column can be resized.</summary>
      <returns>
        <see langword="true" /> if the element can be resized; otherwise <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanRotate">
      <summary>Gets a value that specifies whether the control can be rotated.</summary>
      <returns>
        <see langword="false" /> in all cases.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Move(System.Double,System.Double)">
      <summary>Throws an exception in all cases.</summary>
      <param name="x">This parameter is not used.</param>
      <param name="y">This parameter is not used.</param>
      <exception cref="T:System.InvalidOperationException">In all cases.</exception>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Resize(System.Double,System.Double)">
      <summary>Resizes the width of the column that is associated with the <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer" />.</summary>
      <param name="width">The new width of the column, in pixels.</param>
      <param name="height">This parameter is not used.</param>
      <exception cref="T:System.InvalidOperationException">The column that is associated with this <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer" /> cannot be resized.</exception>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Rotate(System.Double)">
      <summary>Throws an exception in all cases.</summary>
      <param name="degrees">This parameter is not used.</param>
      <exception cref="T:System.InvalidOperationException">In all cases.</exception>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.System#Windows#Automation#Provider#IVirtualizedItemProvider#Realize">
      <summary>Makes the virtual column fully accessible as a UI Automation element.</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.DataGridColumnHeadersPresenterAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeadersPresenterAutomationPeer.#ctor(System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeadersPresenterAutomationPeer" /> class.</summary>
      <param name="owner">The element associated with this automation peer.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeadersPresenterAutomationPeer.System#Windows#Automation#Provider#IItemContainerProvider#FindItemByProperty(System.Windows.Automation.Provider.IRawElementProviderSimple,System.Int32,System.Object)">
      <summary>Retrieves an element with the specified property value.</summary>
      <param name="startAfter">The item in the container after which to begin the search.</param>
      <param name="propertyId">The property that contains the value to retrieve.</param>
      <param name="value">The value to retrieve.</param>
      <returns>The first item that matches the search criterion; otherwise, <see langword="null" /> if no items match.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.DataGridDetailsPresenterAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.Primitives.DataGridDetailsPresenter" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridDetailsPresenterAutomationPeer.#ctor(System.Windows.Controls.Primitives.DataGridDetailsPresenter)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.DataGridDetailsPresenterAutomationPeer" /> class.</summary>
      <param name="owner">The element associated with this automation peer.</param>
    </member>
    <member name="T:System.Windows.Automation.Peers.DataGridItemAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.DataGridRow" /> types to UI Automation. The <see cref="T:System.Windows.Controls.DataGridRow" /> may or may not actually exist in memory.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.#ctor(System.Object,System.Windows.Automation.Peers.DataGridAutomationPeer)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.DataGridItemAutomationPeer" /> class.</summary>
      <param name="item">The data item in the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection that is associated with this <see cref="T:System.Windows.Automation.Peers.DataGridItemAutomationPeer" />.</param>
      <param name="dataGridPeer">The <see cref="T:System.Windows.Automation.Peers.DataGridAutomationPeer" /> that is associated with the <see cref="T:System.Windows.Controls.DataGrid" /> that holds the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Returns the object that supports the specified control pattern of the element that is associated with this automation peer.</summary>
      <param name="patternInterface">An enumeration value that specifies the control pattern.</param>
      <returns>The current <see cref="T:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer" /> object, if <paramref name="patternInterface" /> is a supported value; otherwise, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
      <summary>Sends a request to activate a control and initiate its single, unambiguous action.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#IItemContainerProvider#FindItemByProperty(System.Windows.Automation.Provider.IRawElementProviderSimple,System.Int32,System.Object)">
      <summary>Retrieves an element by the specified property value.</summary>
      <param name="startAfter">The item in the container after which to begin the search.</param>
      <param name="propertyId">The property that contains the value to retrieve.</param>
      <param name="value">The value to retrieve.</param>
      <returns>The first item that matches the search criterion; otherwise, <see langword="null" /> if no items match.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#IScrollItemProvider#ScrollIntoView">
      <summary>Scrolls the content area of a container object to display the control within the visible region (viewport) of the container.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
      <summary>Adds the current element to the collection of selected items.</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
      <summary>Gets a value that indicates whether an item is selected.</summary>
      <returns>
        <see langword="true" /> if the element is selected; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
      <summary>Removes the current element from the collection of selected items.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
      <summary>Clears any selected items and then selects the current element.</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
      <summary>Gets the UI Automation provider that implements <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" /> and acts as the container for the calling object.</summary>
      <returns>The provider for the <see cref="T:System.Windows.Controls.DataGrid" /> control.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#CanSelectMultiple">
      <summary>Gets a value that indicates whether the UI Automation provider allows more than one child element to be selected concurrently.</summary>
      <returns>
        <see langword="true" /> if multiple selection is allowed; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#GetSelection">
      <summary>Retrieves a UI Automation provider for each child element that is selected.</summary>
      <returns>A collection of UI Automation providers.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#IsSelectionRequired">
      <summary>Gets a value that specifies whether the UI Automation provider requires at least one child element to be selected.</summary>
      <returns>
        <see langword="false" /> in all cases.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.DataGridRowAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.DataGridRow" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridRowAutomationPeer.#ctor(System.Windows.Controls.DataGridRow)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.DataGridRowAutomationPeer" /> class.</summary>
      <param name="owner">The element associated with this automation peer.</param>
    </member>
    <member name="T:System.Windows.Automation.Peers.DataGridRowHeaderAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.Primitives.DataGridRowHeader" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridRowHeaderAutomationPeer.#ctor(System.Windows.Controls.Primitives.DataGridRowHeader)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.DataGridRowHeaderAutomationPeer" /> class.</summary>
      <param name="owner">The element associated with this automation peer.</param>
    </member>
    <member name="T:System.Windows.Automation.Peers.DatePickerAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.DatePicker" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DatePickerAutomationPeer.#ctor(System.Windows.Controls.DatePicker)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.DatePickerAutomationPeer" /> class.</summary>
      <param name="owner">The element associated with this automation peer.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DatePickerAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Returns the object that supports the specified control pattern of the element that is associated with this automation peer.</summary>
      <param name="patternInterface">An enumeration value that specifies the control pattern.</param>
      <returns>If <paramref name="patternInterface" /> is <see cref="F:System.Windows.Automation.Peers.PatternInterface.ExpandCollapse" /> or <see cref="F:System.Windows.Automation.Peers.PatternInterface.Value" />, this method returns a <see langword="this" /> pointer; otherwise, this method returns <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DatePickerAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Collapse">
      <summary>Hides all nodes, controls, or content that are descendants of the control.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DatePickerAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Expand">
      <summary>Displays all child nodes, controls, or content of the control.</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.DatePickerAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#ExpandCollapseState">
      <summary>Gets the state (expanded or collapsed) of the control.</summary>
      <returns>The state (expanded or collapsed) of the control.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DatePickerAutomationPeer.System#Windows#Automation#Provider#IValueProvider#IsReadOnly">
      <summary>Gets a value that specifies whether the value of a control is read-only.</summary>
      <returns>
        <see langword="true" /> if the value is read-only; <see langword="false" /> if it can be modified.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DatePickerAutomationPeer.System#Windows#Automation#Provider#IValueProvider#SetValue(System.String)">
      <summary>Sets the value of a control.</summary>
      <param name="value">The value to set. The provider is responsible for converting the value to the appropriate data type.</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.DatePickerAutomationPeer.System#Windows#Automation#Provider#IValueProvider#Value">
      <summary>Gets the value of the control.</summary>
      <returns>A string that represents the value of the control.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.DateTimeAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.Primitives.CalendarDayButton" /> and <see cref="T:System.Windows.Controls.Primitives.CalendarButton" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DateTimeAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern implementation for this <see cref="T:System.Windows.Automation.Peers.DateTimeAutomationPeer" />.</summary>
      <param name="patternInterface">The type of pattern implemented by the element to retrieve.</param>
      <returns>The object that implements the pattern interface, or <see langword="null" /> if the specified pattern interface is not implemented by this peer.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Column">
      <summary>Gets the ordinal number of the column that contains the cell or item.</summary>
      <returns>A zero-based ordinal number that identifies the column containing the cell or item.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ColumnSpan">
      <summary>Gets the number of columns spanned by a cell or item.</summary>
      <returns>The number of columns spanned.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ContainingGrid">
      <summary>Gets a UI Automation provider that implements <see cref="T:System.Windows.Automation.Provider.IGridProvider" /> and represents the container of the cell or item.</summary>
      <returns>A UI Automation provider that represents the cell or item container.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Row">
      <summary>Gets the ordinal number of the row that contains the cell or item.</summary>
      <returns>A zero-based ordinal number that identifies the row containing the cell or item.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#RowSpan">
      <summary>Gets the number of rows spanned by a cell or item.</summary>
      <returns>The number of rows spanned.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
      <summary>Sends a request to activate a control and initiate its single, unambiguous action.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
      <summary>Adds the current element to the collection of selected items.</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
      <summary>Gets a value that indicates whether an item is selected.</summary>
      <returns>
        <see langword="true" /> if the element is selected; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
      <summary>Removes the current element from the collection of selected items.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
      <summary>Clears any selected items and then selects the current element.</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
      <summary>Gets the UI Automation provider that implements <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" /> and acts as the container for the calling object.</summary>
      <returns>The provider that acts as the container for the calling object.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#ITableItemProvider#GetColumnHeaderItems">
      <summary>Retrieves a collection of UI Automation providers that represents all the column headers associated with a table item or cell.</summary>
      <returns>A collection of UI Automation providers.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#ITableItemProvider#GetRowHeaderItems">
      <summary>Retrieves a collection of UI Automation providers that represents all the row headers associated with a table item or cell.</summary>
      <returns>A collection of UI Automation providers.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#IVirtualizedItemProvider#Realize">
      <summary>Makes the virtual item fully accessible as a UI Automation element.</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.DocumentAutomationPeer">
      <summary>Exposes <see cref="F:System.Windows.Automation.ControlType.Document" /> control types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentAutomationPeer.#ctor(System.Windows.FrameworkContentElement)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.FrameworkContentElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the control that is associated with this <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Text" /> in all cases.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentAutomationPeer.GetBoundingRectangleCore">
      <summary>Gets the <see cref="T:System.Windows.Rect" /> that represents the screen coordinates of the element that is associated with this <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangle" />.</summary>
      <returns>The bounding rectangle.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentAutomationPeer.GetChildrenCore">
      <summary>Gets the collection of child elements for the <see cref="T:System.Windows.FrameworkContentElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" />.</summary>
      <returns>Because <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" /> gives access to its content through <see cref="T:System.Windows.Automation.TextPattern" />, this method always returns <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.FrameworkContentElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains "Document".</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentAutomationPeer.GetClickablePointCore">
      <summary>Gets a <see cref="T:System.Windows.Point" /> that represents the clickable space that is on the <see cref="T:System.Windows.FrameworkContentElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint" />.</summary>
      <returns>The point that represents the clickable space that is on the element.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the <see cref="T:System.Windows.FrameworkContentElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" />.</summary>
      <param name="patternInterface">One of the enumeration values.</param>
      <returns>If <paramref name="patternInterface" /> is <see cref="F:System.Windows.Automation.Peers.PatternInterface.Text" />, this method returns an <see cref="T:System.Windows.Automation.Provider.ITextProvider" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentAutomationPeer.IsControlElementCore">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.FrameworkContentElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" /> is understood by the end user as interactive or the user might understand the <see cref="T:System.Windows.FrameworkContentElement" /> as contributing to the logical structure of the control in the GUI. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement" />.</summary>
      <returns>
        <see langword="true" /> in all cases.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentAutomationPeer.IsOffscreenCore">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.FrameworkContentElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" /> is off the screen. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen" />.</summary>
      <returns>
        <see langword="true" /> if the element is not on the screen; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.DocumentPageViewAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentPageViewAutomationPeer.#ctor(System.Windows.Controls.Primitives.DocumentPageView)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.DocumentPageViewAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.DocumentPageViewAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentPageViewAutomationPeer.GetAutomationIdCore">
      <summary>Gets the string that uniquely identifies the <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.DocumentPageViewAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId" />.</summary>
      <returns>A string that contains the automation identifier.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentPageViewAutomationPeer.GetChildrenCore">
      <summary>Gets the collection of child elements of the <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.DocumentPageViewAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" />.</summary>
      <returns>The collection of child elements of the <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.DocumentPageViewAutomationPeer" />.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.DocumentViewerAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.DocumentViewer" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentViewerAutomationPeer.#ctor(System.Windows.Controls.DocumentViewer)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.DocumentViewerAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.DocumentViewer" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.DocumentViewerAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentViewerAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.DocumentViewer" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.DocumentViewerAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains "DocumentViewer".</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentViewerAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.DocumentViewer" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.DocumentViewerAutomationPeer" />.</summary>
      <param name="patternInterface">One of the enumeration values.</param>
      <returns>If <paramref name="patternInterface" /> is <see cref="F:System.Windows.Automation.Peers.PatternInterface.ScrollItem" />, this method returns the <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer" /> for this <see cref="T:System.Windows.Automation.Peers.DocumentViewerAutomationPeer" />. This method also sets <see cref="T:System.Windows.Automation.Peers.DocumentViewerAutomationPeer" /> as the <see cref="P:System.Windows.Automation.Peers.AutomationPeer.EventsSource" />.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.Primitives.DocumentViewerBase" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer.#ctor(System.Windows.Controls.Primitives.DocumentViewerBase)">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.Primitives.DocumentViewerBase" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.Primitives.DocumentViewerBase" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Document" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer.GetChildrenCore">
      <summary>Gets the collection of child elements of the <see cref="T:System.Windows.Controls.Primitives.DocumentViewerBase" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" />.</summary>
      <returns>The collection of child elements.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.Primitives.DocumentViewerBase" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains "DocumentViewer".</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.Primitives.DocumentViewerBase" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer" />.</summary>
      <param name="patternInterface">One of the enumeration values.</param>
      <returns>If <paramref name="patternInterface" /> is <see cref="F:System.Windows.Automation.Peers.PatternInterface.Text" />, this method returns an <see cref="T:System.Windows.Automation.Provider.ITextProvider" /> reference.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ExpanderAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.Expander" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.#ctor(System.Windows.Controls.Expander)">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.Expander" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.Expander" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Group" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.GetChildrenCore">
      <summary>Gets the collection of child elements of the <see cref="T:System.Windows.Controls.Expander" /> control that is associated with this <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer" />, and sets the event source of the templated toggle button to this <see cref="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.GetChildrenCore" /> instance.</summary>
      <returns>The collection of child elements of the <see cref="T:System.Windows.Controls.Expander" /> control associated with this <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.Expander" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains "Expander".</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.Expander" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer" />.</summary>
      <param name="pattern">One of the enumeration values.</param>
      <returns>If <paramref name="pattern" /> is <see cref="F:System.Windows.Automation.Peers.PatternInterface.ExpandCollapse" />, this method returns a reference to the current instance of the <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer" />, otherwise this method calls the base implementation on <see cref="T:System.Windows.Automation.Peers.UIElementAutomationPeer" /> which returns <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.HasKeyboardFocusCore">
      <summary>Indicates whether the expander has automation keyboard focus.</summary>
      <returns>
        <see langword="true" /> if the expander has automation keyboard focus; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Collapse">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Expand">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.ExpanderAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#ExpandCollapseState">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>The state (expanded or collapsed) of the control.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.FixedPageAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Documents.FixedPage" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.FixedPageAutomationPeer.#ctor(System.Windows.Documents.FixedPage)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.FixedPageAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Documents.FixedPage" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.FixedPageAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.FixedPageAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Documents.FixedPage" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.FixedPageAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Pane" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FixedPageAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Documents.FixedPage" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.FixedPageAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains "FixedPage".</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.FlowDocumentPageViewerAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentPageViewerAutomationPeer.#ctor(System.Windows.Controls.FlowDocumentPageViewer)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.FlowDocumentPageViewerAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.FlowDocumentPageViewerAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentPageViewerAutomationPeer.GetChildrenCore">
      <summary>Gets the collection of child elements of the <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.FlowDocumentPageViewerAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" />.</summary>
      <returns>The collection of child elements.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentPageViewerAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.FlowDocumentPageViewerAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains " FlowDocumentPageViewer".</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.FlowDocumentReader" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer.#ctor(System.Windows.Controls.FlowDocumentReader)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.FlowDocumentReader" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer.GetChildrenCore">
      <summary>Gets the collection of child elements of the <see cref="T:System.Windows.Controls.FlowDocumentReader" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" />.</summary>
      <returns>The collection of child elements.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.FlowDocumentReader" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>The name of the <see cref="T:System.Windows.Controls.FlowDocumentReader" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.FlowDocumentReader" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer" />.</summary>
      <param name="patternInterface">A value in the enumeration.</param>
      <returns>If <paramref name="patternInterface" /> is <see cref="F:System.Windows.Automation.Peers.PatternInterface.MultipleView" />, this method returns a <see langword="this" /> pointer. Otherwise, this method returns <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#CurrentView">
      <summary>Gets the current control-specific view.</summary>
      <returns>The value for the current view of the UI Automation element.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#GetSupportedViews">
      <summary>Returns a collection of control-specific view identifiers.</summary>
      <returns>A collection of values that identifies the views available for a UI Automation element.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#GetViewName(System.Int32)">
      <summary>Returns the name of a control-specific view.</summary>
      <param name="viewId">The ID of a view.</param>
      <returns>The name of a control-specific view.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#SetCurrentView(System.Int32)">
      <summary>Sets the current control-specific view.</summary>
      <param name="viewId">The ID of a view.</param>
    </member>
    <member name="T:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer.#ctor(System.Windows.Controls.FlowDocumentScrollViewer)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Document" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer.GetChildrenCore">
      <summary>Gets the collection of child elements of the <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" />.</summary>
      <returns>The collection of child elements.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains "FlowDocumentScrollViewer".</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer" />.</summary>
      <param name="patternInterface">One of the enumeration values.</param>
      <returns>An object that supports the control pattern if <paramref name="patternInterface" /> is a supported value; otherwise, <see langword="null" />.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.FrameAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.Frame" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameAutomationPeer.#ctor(System.Windows.Controls.Frame)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.FrameAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.Frame" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.Frame" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Pane" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.Frame" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains "Frame".</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.FrameworkContentElementAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.FrameworkContentElement" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkContentElementAutomationPeer.#ctor(System.Windows.FrameworkContentElement)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.FrameworkContentElementAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.FrameworkContentElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkContentElementAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkContentElementAutomationPeer.GetAutomationIdCore">
      <summary>Gets the string that uniquely identifies the <see cref="T:System.Windows.FrameworkContentElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId" />.</summary>
      <returns>The string that uniquely identifies the <see cref="T:System.Windows.FrameworkContentElement" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkContentElementAutomationPeer.GetHelpTextCore">
      <summary>Gets the string that describes the functionality of the <see cref="T:System.Windows.FrameworkContentElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpText" />.</summary>
      <returns>The string describing the functionality of the element.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkContentElementAutomationPeer.GetLabeledByCore">
      <summary>Gets the <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" /> for the <see cref="T:System.Windows.Controls.Label" /> that is targeted to the <see cref="T:System.Windows.FrameworkContentElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkContentElementAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy" />.</summary>
      <returns>The <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" /> for the element that is targeted by the <see cref="T:System.Windows.Controls.Label" />.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.FrameworkElement" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.#ctor(System.Windows.FrameworkElement)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.FrameworkElement" /> associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetAutomationIdCore">
      <summary>Gets the string that uniquely identifies the <see cref="T:System.Windows.FrameworkElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId" />.</summary>
      <returns>The automation identifier for the element associated with the <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" />, or <see cref="F:System.String.Empty" /> if there isn't an automation identifier.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetHelpTextCore">
      <summary>Gets the string that describes the functionality of the <see cref="T:System.Windows.ContentElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpText" />.</summary>
      <returns>The help text, usually from the <see cref="T:System.Windows.Controls.ToolTip" />, or <see cref="F:System.String.Empty" /> if there is no help text.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetNameCore">
      <summary>Gets the text label of the <see cref="T:System.Windows.ContentElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" />.</summary>
      <returns>The text label of the element that is associated with this automation peer.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.GridSplitterAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.GridSplitter" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridSplitterAutomationPeer.#ctor(System.Windows.Controls.GridSplitter)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.GridSplitterAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.GridSplitter" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.GridSplitterAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridSplitterAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.GridSplitter" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.GridSplitterAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains "GridSplitter".</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridSplitterAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the <see cref="T:System.Windows.Automation.Peers.GridSplitterAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <param name="patternInterface">A value in the enumeration.</param>
      <returns>If <paramref name="patternInterface" /> is <see cref="F:System.Windows.Automation.Peers.PatternInterface.Transform" />, this method returns a <see langword="this" /> pointer; otherwise this method returns <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridSplitterAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanMove">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>
        <see langword="true" /> if the element can be moved; otherwise <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridSplitterAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanResize">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>
        <see langword="true" /> if the element can be resized; otherwise <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridSplitterAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanRotate">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>
        <see langword="true" /> if the element can rotate; otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridSplitterAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Move(System.Double,System.Double)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="x">Absolute screen coordinates of the left side of the control.</param>
      <param name="y">Absolute screen coordinates of the top of the control.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridSplitterAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Resize(System.Double,System.Double)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="width">The new width of the window, in pixels.</param>
      <param name="height">The new height of the window, in pixels.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridSplitterAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Rotate(System.Double)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="degrees">The number of degrees to rotate the control.</param>
    </member>
    <member name="T:System.Windows.Automation.Peers.GridViewAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.GridView" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewAutomationPeer.#ctor(System.Windows.Controls.GridView,System.Windows.Controls.ListView)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.GridViewAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.GridView" /> associated with this <see cref="T:System.Windows.Automation.Peers.GridViewAutomationPeer" />.</param>
      <param name="listview">The <see cref="T:System.Windows.Controls.ListView" /> that the <see cref="T:System.Windows.Controls.GridView" /> is using as a view mode.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewAutomationPeer.System#Windows#Automation#Peers#IViewAutomationPeer#CreateItemAutomationPeer(System.Object)">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> class.</summary>
      <param name="item">Item to create.</param>
      <returns>The item created.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewAutomationPeer.System#Windows#Automation#Peers#IViewAutomationPeer#GetAutomationControlType">
      <summary>Gets the control type for the element that is associated with this <see cref="T:System.Windows.Automation.Peers.GridViewAutomationPeer" />.</summary>
      <returns>A value in the enumeration.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewAutomationPeer.System#Windows#Automation#Peers#IViewAutomationPeer#GetChildren(System.Collections.Generic.List{System.Windows.Automation.Peers.AutomationPeer})">
      <summary>Gets the collection of immediate child elements of the specified UI Automation peer.</summary>
      <param name="children">Collection of child objects you want to get.</param>
      <returns>Collection of child objects.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewAutomationPeer.System#Windows#Automation#Peers#IViewAutomationPeer#GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern that is associated with the specified <paramref name="patternInterface" />.</summary>
      <param name="patternInterface">A value in the enumeration.</param>
      <returns>If <paramref name="patternInterface" /> is <see cref="F:System.Windows.Automation.Peers.PatternInterface.Grid" /> or <see cref="F:System.Windows.Automation.Peers.PatternInterface.Table" />, this method returns an object that implements the control pattern, otherwise this method returns <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewAutomationPeer.System#Windows#Automation#Peers#IViewAutomationPeer#ItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>Called when the collection of items changes.</summary>
      <param name="e">Data associated with the event.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewAutomationPeer.System#Windows#Automation#Peers#IViewAutomationPeer#ViewDetached">
      <summary>Called when the custom view is no longer applied to the control.</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridViewAutomationPeer.System#Windows#Automation#Provider#IGridProvider#ColumnCount">
      <summary>Gets the total number of columns in a grid.</summary>
      <returns>The total number of columns in a grid.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewAutomationPeer.System#Windows#Automation#Provider#IGridProvider#GetItem(System.Int32,System.Int32)">
      <summary>Returns the UI Automation provider for the specified cell.</summary>
      <param name="row">The ordinal number of the row of interest.</param>
      <param name="column">The ordinal number of the column of interest.</param>
      <returns>The UI Automation provider for the specified cell.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridViewAutomationPeer.System#Windows#Automation#Provider#IGridProvider#RowCount">
      <summary>Gets the total number of rows in a grid.</summary>
      <returns>The total number of rows in a grid.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewAutomationPeer.System#Windows#Automation#Provider#ITableProvider#GetColumnHeaders">
      <summary>Returns a collection of UI Automation providers that represents all the column headers in a table.</summary>
      <returns>A collection of UI Automation providers.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewAutomationPeer.System#Windows#Automation#Provider#ITableProvider#GetRowHeaders">
      <summary>Returns a collection of UI Automation providers that represents all row headers in the table.</summary>
      <returns>A collection of UI Automation providers.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridViewAutomationPeer.System#Windows#Automation#Provider#ITableProvider#RowOrColumnMajor">
      <summary>Gets the primary direction of traversal for the table.</summary>
      <returns>The primary direction of traversal.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.GridViewCellAutomationPeer">
      <summary>Exposes the cells in a <see cref="T:System.Windows.Controls.GridView" /> to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewCellAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the element that is associated with this <see cref="T:System.Windows.Automation.Peers.GridViewCellAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>If this <see cref="T:System.Windows.Automation.Peers.GridViewCellAutomationPeer" /> is associated with a <see cref="T:System.Windows.Controls.TextBlock" /> element, this method returns <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Text" />; otherwise, this method returns <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Custom" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewCellAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the element that is associated with this <see cref="T:System.Windows.Automation.Peers.GridViewCellAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>The name of the element.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewCellAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the element that is associated with this <see cref="T:System.Windows.Automation.Peers.GridViewCellAutomationPeer" />.</summary>
      <param name="patternInterface">One of the enumeration values.</param>
      <returns>If <paramref name="patternInterface" /> is <see cref="F:System.Windows.Automation.Peers.PatternInterface.GridItem" /> or <see cref="F:System.Windows.Automation.Peers.PatternInterface.TableItem" />, this method returns the current <see cref="T:System.Windows.Automation.Peers.GridViewCellAutomationPeer" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewCellAutomationPeer.IsControlElementCore">
      <summary>Gets or sets a value that indicates whether the element that is associated with this <see cref="T:System.Windows.Automation.Peers.GridViewCellAutomationPeer" /> is understood by the end user as interactive or the user might understand the element as contributing to the logical structure of the control in the GUI. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement" />.</summary>
      <returns>If this <see cref="T:System.Windows.Automation.Peers.GridViewCellAutomationPeer" /> is associated with a <see cref="T:System.Windows.Controls.TextBlock" /> element, this method returns <see langword="true" />; otherwise, this method returns a list of child elements.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridViewCellAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Column">
      <summary>Gets the ordinal number of the column that contains the cell or item.</summary>
      <returns>A zero-based ordinal number that identifies the column containing the cell or item.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridViewCellAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ColumnSpan">
      <summary>Gets the number of columns spanned by a cell or item.</summary>
      <returns>The number of columns spanned.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridViewCellAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ContainingGrid">
      <summary>Gets a UI Automation provider that implements <see cref="T:System.Windows.Automation.GridPattern" /> and represents the container of the cell or item.</summary>
      <returns>A UI Automation provider that implements the <see cref="T:System.Windows.Automation.GridPattern" /> and represents the cell or item container.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridViewCellAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Row">
      <summary>Gets the ordinal number of the row that contains the cell or item.</summary>
      <returns>A zero-based ordinal number that identifies the row containing the cell or item.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridViewCellAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#RowSpan">
      <summary>Gets the number of rows spanned by a cell or item.</summary>
      <returns>The number of rows spanned.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewCellAutomationPeer.System#Windows#Automation#Provider#ITableItemProvider#GetColumnHeaderItems">
      <summary>Retrieves a collection of UI Automation providers that represent all the column headers associated with a table item or cell.</summary>
      <returns>A collection of UI Automation providers.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewCellAutomationPeer.System#Windows#Automation#Provider#ITableItemProvider#GetRowHeaderItems">
      <summary>Retrieves a collection of UI Automation providers that represent all the row headers associated with a table item or cell.</summary>
      <returns>A collection of UI Automation providers.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.GridViewColumnHeader" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.#ctor(System.Windows.Controls.GridViewColumnHeader)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.GridViewColumnHeader" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.GridViewColumnHeader" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.HeaderItem" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.GridViewColumnHeader" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains "GridViewColumnHeader".</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.GridViewColumnHeader" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer" />.</summary>
      <param name="patternInterface">One of the enumeration values.</param>
      <returns>If <paramref name="patternInterface" /> is <see cref="F:System.Windows.Automation.Peers.PatternInterface.Transform" /> or <see cref="F:System.Windows.Automation.Peers.PatternInterface.Invoke" />, this method returns a <see langword="this" /> pointer; otherwise this method returns <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.IsContentElementCore">
      <summary>Gets a value that indicates whether the element that is associated with this automation peer contains data that is presented to the user. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement" />.</summary>
      <returns>
        <see langword="false" /> in all cases.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanMove">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>
        <see langword="true" /> if the element can be moved; otherwise <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanResize">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>
        <see langword="true" /> if the element can be resized; otherwise <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanRotate">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>
        <see langword="true" /> if the element can rotate; otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Move(System.Double,System.Double)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="x">Absolute screen coordinates of the left side of the control.</param>
      <param name="y">Absolute screen coordinates of the top of the control.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Resize(System.Double,System.Double)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="width">The new width of the window, in pixels.</param>
      <param name="height">The new height of the window, in pixels.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Rotate(System.Double)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="degrees">The number of degrees to rotate the control.</param>
    </member>
    <member name="T:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.GridViewHeaderRowPresenter" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer.#ctor(System.Windows.Controls.GridViewHeaderRowPresenter)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.GridViewHeaderRowPresenter" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.GridViewHeaderRowPresenter" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Header" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer.GetChildrenCore">
      <summary>Gets the collection of child elements of the <see cref="T:System.Windows.Controls.GridViewHeaderRowPresenter" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" />.</summary>
      <returns>The collection of child elements.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.GridViewHeaderRowPresenter" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains "GridViewHeaderRowPresenter".</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer.IsContentElementCore">
      <summary>Gets a value that indicates whether the element that is associated with this automation peer contains data that is presented to the user. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement" />.</summary>
      <returns>
        <see langword="false" /> in all cases.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.GridViewItemAutomationPeer">
      <summary>Exposes the data items in the collection of <see cref="P:System.Windows.Controls.ItemsControl.Items" /> in <see cref="T:System.Windows.Controls.GridView" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewItemAutomationPeer.#ctor(System.Object,System.Windows.Automation.Peers.ListViewAutomationPeer)">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Automation.Peers.GridViewItemAutomationPeer" /> class.</summary>
      <param name="owner">The data item that is associated with this <see cref="T:System.Windows.Automation.Peers.GridViewItemAutomationPeer" />.</param>
      <param name="listviewAP">The <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" /> that is the parent of this <see cref="T:System.Windows.Automation.Peers.GridViewItemAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewItemAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection that is associated with this <see cref="T:System.Windows.Automation.Peers.GridViewItemAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.DataItem" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewItemAutomationPeer.GetChildrenCore">
      <summary>Gets the collection of child elements of the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection that is associated with this <see cref="T:System.Windows.Automation.Peers.GridViewItemAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" />.</summary>
      <returns>The collection of child elements.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewItemAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection that is associated with this <see cref="T:System.Windows.Automation.Peers.GridViewItemAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains "ListViewItem".</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.GroupBoxAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.GroupBox" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.GroupBoxAutomationPeer.#ctor(System.Windows.Controls.GroupBox)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.GroupBoxAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.GroupBox" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.GroupBoxAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GroupBoxAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.GroupBox" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.GroupBoxAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Group" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GroupBoxAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.GroupBox" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.GroupBoxAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains "GroupBox".</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GroupBoxAutomationPeer.GetNameCore">
      <summary>Gets the text label of the <see cref="T:System.Windows.ContentElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" />.</summary>
      <returns>The string that contains the label.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.GroupItemAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.GroupItem" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.GroupItemAutomationPeer.#ctor(System.Windows.Controls.GroupItem)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.GroupItemAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.GroupItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.GroupItemAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GroupItemAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.GroupItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.GroupItemAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Group" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GroupItemAutomationPeer.GetChildrenCore">
      <summary>Gets the collection of child elements of the <see cref="T:System.Windows.Controls.GroupItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.GroupItemAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" />.</summary>
      <returns>The collection of child elements.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GroupItemAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.GroupItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.GroupItemAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains "GroupItem".</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GroupItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.GroupItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.GroupItemAutomationPeer" />.</summary>
      <param name="patternInterface">One of the enumeration values.</param>
      <returns>If <paramref name="pattern" /> is <see cref="F:System.Windows.Automation.Peers.PatternInterface.ExpandCollapse" /> and the <see cref="T:System.Windows.Controls.GroupItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.GroupItemAutomationPeer" /> contains an <see cref="T:System.Windows.Controls.Expander" />, this method returns a reference to the current instance of the <see cref="T:System.Windows.Automation.Peers.GroupItemAutomationPeer" />.  Otherwise, this method calls the base implementation on <see cref="T:System.Windows.Automation.Peers.UIElementAutomationPeer" /> which returns <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GroupItemAutomationPeer.GetPositionInSetCore">
      <summary>Gets the position of this <see cref="T:System.Windows.Controls.GroupItem" /> within a set.</summary>
      <returns>The position of this <see cref="T:System.Windows.Controls.GroupItem" /> within a set.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GroupItemAutomationPeer.GetSizeOfSetCore">
      <summary>Gets the size of the set that contains this <see cref="T:System.Windows.Controls.GroupItem" />.</summary>
      <returns>The size of the set that contains this <see cref="T:System.Windows.Controls.GroupItem" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GroupItemAutomationPeer.HasKeyboardFocusCore">
      <summary>Supplies the method called by the <see cref="M:System.Windows.Automation.Peers.AutomationPeer.HasKeyboardFocus" /> method to indicate whether the element associated with this automation peer currently has keyboard focus.</summary>
      <returns>
        <see langword="true" /> if the element has keyboard focus; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GroupItemAutomationPeer.IsKeyboardFocusableCore">
      <summary>Supplies the method called by the <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsKeyboardFocusable" /> method to indicate whether the element can accept keyboard focus.</summary>
      <returns>
        <see langword="true" /> if the element can accept keyboard focus; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GroupItemAutomationPeer.SetFocusCore">
      <summary>Supplies the method called by the <see cref="M:System.Windows.Automation.Peers.AutomationPeer.SetFocus" /> method to set the keyboard focus on the element that's associated with this automation peer.</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.HyperlinkAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Documents.Hyperlink" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.HyperlinkAutomationPeer.#ctor(System.Windows.Documents.Hyperlink)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.HyperlinkAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Documents.Hyperlink" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.HyperlinkAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.HyperlinkAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Documents.Hyperlink" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.HyperlinkAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Hyperlink" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.HyperlinkAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Documents.Hyperlink" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.HyperlinkAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains "Hyperlink".</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.HyperlinkAutomationPeer.GetNameCore">
      <summary>Gets the text label of the <see cref="T:System.Windows.Documents.Hyperlink" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.HyperlinkAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" />.</summary>
      <returns>The string that contains the label.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.HyperlinkAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the <see cref="T:System.Windows.Documents.Hyperlink" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.HyperlinkAutomationPeer" />.</summary>
      <param name="patternInterface">A value in the enumeration.</param>
      <returns>If <paramref name="patternInterface" /> is <see cref="F:System.Windows.Automation.Peers.PatternInterface.Invoke" />, this method returns a <see langword="this" /> pointer; otherwise, this method returns <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.HyperlinkAutomationPeer.IsControlElementCore">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Documents.Hyperlink" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.HyperlinkAutomationPeer" /> is understood by the end user as interactive the user might understand the <see cref="T:System.Windows.Documents.Hyperlink" /> as contributing to the logical structure of the control in the GUI. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement" />.</summary>
      <returns>
        <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.HyperlinkAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.ImageAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.Image" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ImageAutomationPeer.#ctor(System.Windows.Controls.Image)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.ImageAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.Image" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ImageAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ImageAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.Image" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ImageAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Image" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ImageAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.Image" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ImageAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains "Image".</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.InkCanvasAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.InkCanvas" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.InkCanvasAutomationPeer.#ctor(System.Windows.Controls.InkCanvas)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.InkCanvasAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.InkCanvas" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.InkCanvasAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.InkCanvasAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.InkCanvas" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.InkCanvasAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Custom" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.InkCanvasAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.InkCanvas" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.InkCanvasAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains "InkCanvas".</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.InkPresenterAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.InkPresenter" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.InkPresenterAutomationPeer.#ctor(System.Windows.Controls.InkPresenter)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.InkPresenterAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.InkPresenter" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.InkPresenterAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.InkPresenterAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.InkPresenter" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.InkPresenterAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Custom" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.InkPresenterAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.InkPresenter" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.InkPresenterAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains "InkPresenter".</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ItemAutomationPeer">
      <summary>Exposes a data item in an <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.#ctor(System.Object,System.Windows.Automation.Peers.ItemsControlAutomationPeer)">
      <summary>Provides initialization for base class values when called by the constructor of a derived class.</summary>
      <param name="item">The data item in the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" />.</param>
      <param name="itemsControlAutomationPeer">The <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" /> that is associated with the <see cref="T:System.Windows.Controls.ItemsControl" /> that holds the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetAcceleratorKeyCore">
      <summary>Gets the accelerator key for the <see cref="T:System.Windows.UIElement" /> that corresponds to the data item in the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" />.</summary>
      <returns>The accelerator key.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetAccessKeyCore">
      <summary>Gets the access key for the <see cref="T:System.Windows.UIElement" /> that corresponds to the data item in the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" />.</summary>
      <returns>The access key.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetAutomationIdCore">
      <summary>Gets the string that uniquely identifies the <see cref="T:System.Windows.UIElement" /> that corresponds to the data item in the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" />.</summary>
      <returns>A string that contains the UI Automation identifier.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetBoundingRectangleCore">
      <summary>Gets the <see cref="T:System.Windows.Rect" /> that represents the bounding rectangle of the specified <see cref="T:System.Windows.UIElement" />.</summary>
      <returns>The bounding rectangle.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetChildrenCore">
      <summary>Gets the collection of child elements of the <see cref="T:System.Windows.UIElement" /> that corresponds to the data item in the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" />.</summary>
      <returns>The collection of child elements.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetClickablePointCore">
      <summary>Gets a <see cref="T:System.Windows.Point" /> that represents the clickable space that is on the specified <see cref="T:System.Windows.UIElement" />.</summary>
      <returns>The point that represents the clickable space that is on the specified <see cref="T:System.Windows.UIElement" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetHelpTextCore">
      <summary>Gets the string that describes the functionality of the <see cref="T:System.Windows.UIElement" /> that corresponds to the data item in the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" />.</summary>
      <returns>The help text.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetItemStatusCore">
      <summary>Gets a string that conveys the visual status of the specified <see cref="T:System.Windows.UIElement" />.</summary>
      <returns>The status. Examples include "Busy" or "Online".</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetItemTypeCore">
      <summary>Gets a human-readable string that contains the type of item that the specified <see cref="T:System.Windows.UIElement" /> represents.</summary>
      <returns>The item type. An example includes "Mail Message" or "Contact".</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetLabeledByCore">
      <summary>Gets the <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for the <see cref="T:System.Windows.Controls.Label" /> that is targeted to the specified <see cref="T:System.Windows.UIElement" />.</summary>
      <returns>The <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" /> for the element that is targeted by the <see cref="T:System.Windows.Controls.Label" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetLiveSettingCore">
      <summary>Gets the notification characteristics of the live region for the <see cref="T:System.Windows.UIElement" /> that corresponds to the data item in the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> object.</summary>
      <returns>The notification characteristics of the live region.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetNameCore">
      <summary>Gets the text label of the <see cref="T:System.Windows.UIElement" /> that corresponds to the data item in the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" />.</summary>
      <returns>The text label.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetOrientationCore">
      <summary>Gets a value that indicates whether the specified <see cref="T:System.Windows.UIElement" /> is laid out in a particular direction.</summary>
      <returns>The direction of the specified <see cref="T:System.Windows.UIElement" />. Optionally, the method returns <see cref="F:System.Windows.Automation.Peers.AutomationOrientation.None" /> if the <see cref="T:System.Windows.UIElement" /> is not laid out in a particular direction.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Returns the object that supports the specified control pattern of the element that is associated with this automation peer.</summary>
      <param name="patternInterface">An enumeration value that specifies the control pattern.</param>
      <returns>An object that supports the control pattern if <paramref name="patternInterface" /> is a supported value; otherwise, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetPositionInSetCore">
      <summary>Gets the position of this item within a set.</summary>
      <returns>The value of <see cref="F:System.Windows.Automation.AutomationProperties.PositionInSetProperty" /> if it has been set, or its position relative to the parent <see cref="T:System.Windows.Controls.ItemsControl" /> or <see cref="T:System.Windows.Controls.GroupItem" /> control.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetSizeOfSetCore">
      <summary>Gets the size of a set that contains this item.</summary>
      <returns>The value of <see cref="F:System.Windows.Automation.AutomationProperties.SizeOfSetProperty" /> if it has been set, or the size of the parent <see cref="T:System.Windows.Controls.ItemsControl" /> or <see cref="T:System.Windows.Controls.GroupItem" /> control.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.HasKeyboardFocusCore">
      <summary>Gets a value that indicates whether the specified <see cref="T:System.Windows.UIElement" /> currently has keyboard input focus.</summary>
      <returns>
        <see langword="true" /> if the specified <see cref="T:System.Windows.UIElement" /> has keyboard input focus; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsContentElementCore">
      <summary>Gets a value that indicates whether the specified <see cref="T:System.Windows.UIElement" /> contains data that is presented to the user.</summary>
      <returns>
        <see langword="true" /> if the element is a content element; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsControlElementCore">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.UIElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> is understood by the end user as interactive.</summary>
      <returns>
        <see langword="true" /> if the element is a control; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsEnabledCore">
      <summary>Gets a value that indicates whether the specified <see cref="T:System.Windows.UIElement" /> can receive and send events.</summary>
      <returns>
        <see langword="true" /> if the UI Automation peer can receive and send events; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsKeyboardFocusableCore">
      <summary>Gets a value that indicates whether the specified <see cref="T:System.Windows.UIElement" /> can accept keyboard focus.</summary>
      <returns>
        <see langword="true" /> if the element can accept keyboard focus; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsOffscreenCore">
      <summary>Gets a value that indicates whether the specified <see cref="T:System.Windows.UIElement" /> is off the screen.</summary>
      <returns>
        <see langword="true" /> if the specified <see cref="T:System.Windows.UIElement" /> is not on the screen; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsPasswordCore">
      <summary>Gets a value that indicates whether the specified <see cref="T:System.Windows.UIElement" /> contains protected content.</summary>
      <returns>
        <see langword="true" /> if the specified <see cref="T:System.Windows.UIElement" /> contains protected content; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsRequiredForFormCore">
      <summary>Gets a value that indicates whether the specified <see cref="T:System.Windows.UIElement" /> is required to be completed on a form.</summary>
      <returns>
        <see langword="true" /> if the specified <see cref="T:System.Windows.UIElement" /> is required to be completed; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ItemAutomationPeer.Item">
      <summary>Gets the data item in the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" />.</summary>
      <returns>The data item.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ItemAutomationPeer.ItemsControlAutomationPeer">
      <summary>Gets the <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" /> that is associated with the <see cref="T:System.Windows.Controls.ItemsControl" /> that holds the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection.</summary>
      <returns>The <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" /> that is associated with the <see cref="T:System.Windows.Controls.ItemsControl" /> object.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.SetFocusCore">
      <summary>Sets the keyboard input focus on the specified <see cref="T:System.Windows.UIElement" />. The <see cref="T:System.Windows.UIElement" /> corresponds to the data item in the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" />.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.System#Windows#Automation#Provider#IVirtualizedItemProvider#Realize">
      <summary>Makes the virtual item fully accessible as a UI Automation element.</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.ItemsControl" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemsControlAutomationPeer.#ctor(System.Windows.Controls.ItemsControl)">
      <summary>Provides initialization for base class values when called by the constructor of a derived class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.ItemsControl" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemsControlAutomationPeer.CreateItemAutomationPeer(System.Object)">
      <summary>When overridden in a derived class, creates a new instance of the <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> for a data item in the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection of this <see cref="T:System.Windows.Controls.ItemsControl" />.</summary>
      <param name="item">The data item that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" />.</param>
      <returns>The new <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> created.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemsControlAutomationPeer.FindOrCreateItemAutomationPeer(System.Object)">
      <summary>Returns an <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> for the specified object.</summary>
      <param name="item">The item to get an <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> for.</param>
      <returns>An <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> for the specified object.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemsControlAutomationPeer.GetChildrenCore">
      <summary>Gets the collection of child elements of the <see cref="T:System.Windows.Controls.ItemsControl" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" />.</summary>
      <returns>The collection of child elements.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemsControlAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.ItemsControl" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" />.</summary>
      <param name="patternInterface">One of the enumeration values.</param>
      <returns>The <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ItemsControlAutomationPeer.IsVirtualized">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" /> should return <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> objects for child items that are not virtualized.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" /> should return <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> objects for child items that are not virtualized; <see langword="false" /> if the <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" /> should return <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> objects all child items.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemsControlAutomationPeer.System#Windows#Automation#Provider#IItemContainerProvider#FindItemByProperty(System.Windows.Automation.Provider.IRawElementProviderSimple,System.Int32,System.Object)">
      <summary>Retrieves an element by the specified property value.</summary>
      <param name="startAfter">The item in the container after which to begin the search.</param>
      <param name="propertyId">The property that contains the value to retrieve.</param>
      <param name="value">The value to retrieve.</param>
      <returns>The first item that matches the search criterion; otherwise, <see langword="null" /> if no items match.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.IViewAutomationPeer">
      <summary>Allows a customized view of a <see cref="T:System.Windows.Controls.ListView" /> that derives from <see cref="T:System.Windows.Controls.ViewBase" /> to implement automation peer features that are specific to the custom view.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.IViewAutomationPeer.CreateItemAutomationPeer(System.Object)">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> class.</summary>
      <param name="item">The <see cref="T:System.Windows.Controls.ListViewItem" /> that is associated with the <see cref="T:System.Windows.Controls.ListView" /> that is used by this <see cref="T:System.Windows.Automation.Peers.IViewAutomationPeer" />.</param>
      <returns>The new <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> instance.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.IViewAutomationPeer.GetAutomationControlType">
      <summary>Gets the control type for the element that is associated with this <see cref="T:System.Windows.Automation.Peers.IViewAutomationPeer" />.</summary>
      <returns>A value in the <see cref="T:System.Windows.Automation.Peers.AutomationControlType" /> enumeration.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.IViewAutomationPeer.GetChildren(System.Collections.Generic.List{System.Windows.Automation.Peers.AutomationPeer})">
      <summary>Gets the collection of immediate child elements of the specified UI Automation peer.</summary>
      <param name="children">The automation peers for the list items.</param>
      <returns>The automation peers for all items in the control. If the view contains interactive or informational elements in addition to the list items, automation peers for these elements must be added to the list.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.IViewAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern that is associated with the specified <paramref name="patternInterface" />.</summary>
      <param name="patternInterface">A value in the enumeration.</param>
      <returns>Return the object that implements the control pattern. If this method returns null, the return value from <see cref="M:System.Windows.Automation.Peers.IViewAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)" /> is used.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.IViewAutomationPeer.ItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>Called by <see cref="T:System.Windows.Controls.ListView" /> when the collection of items changes.</summary>
      <param name="e">A <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.IViewAutomationPeer.ViewDetached">
      <summary>Called when the custom view is no longer applied to the <see cref="T:System.Windows.Controls.ListView" />.</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.LabelAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.Label" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.LabelAutomationPeer.#ctor(System.Windows.Controls.Label)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.Label" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.LabelAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.Label" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Text" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.LabelAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.Label" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains "Label".</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.LabelAutomationPeer.GetNameCore">
      <summary>Gets the text label of the <see cref="T:System.Windows.Controls.Label" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" />.</summary>
      <returns>The string that contains the label.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ListBoxAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.ListBox" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxAutomationPeer.#ctor(System.Windows.Controls.ListBox)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.ListBoxAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.ListBox" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ListBoxAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxAutomationPeer.CreateItemAutomationPeer(System.Object)">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> class.</summary>
      <param name="item">The <see cref="T:System.Windows.Controls.ListBoxItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ListBoxAutomationPeer" />.</param>
      <returns>A new instance of the <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> class.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.ListBox" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ListBoxAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains "ListBox".</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer">
      <summary>Exposes the items in the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection of a <see cref="T:System.Windows.Controls.ListBox" /> to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxItemAutomationPeer.#ctor(System.Object,System.Windows.Automation.Peers.SelectorAutomationPeer)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.ListBoxItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer" />.</param>
      <param name="selectorAutomationPeer">The <see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer" /> that is the parent of this <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxItemAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.ListBoxItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.ListItem" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxItemAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.ListBoxItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains "ListBoxItem".</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.ListBoxItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer" />.</summary>
      <param name="patternInterface">One of the enumeration values.</param>
      <returns>If <paramref name="patternInterface" /> is <see cref="F:System.Windows.Automation.Peers.PatternInterface.ScrollItem" />, this method returns the current instance of this <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxItemAutomationPeer.System#Windows#Automation#Provider#IScrollItemProvider#ScrollIntoView">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.ListBoxItemWrapperAutomationPeer">
      <summary>Exposes the <see cref="T:System.Windows.UIElement" /> sub-tree for the data items in a <see cref="T:System.Windows.Controls.ListBox" /> to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxItemWrapperAutomationPeer.#ctor(System.Windows.Controls.ListBoxItem)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.ListBoxItemWrapperAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.ListBoxItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ListBoxItemWrapperAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxItemWrapperAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.ListBoxItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ListBoxItemWrapperAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.ListItem" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxItemWrapperAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.ListBoxItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ListBoxItemWrapperAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains "ListBoxItem".</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ListViewAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.ListView" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListViewAutomationPeer.#ctor(System.Windows.Controls.ListView)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.ListView" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListViewAutomationPeer.CreateItemAutomationPeer(System.Object)">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> class.</summary>
      <param name="item">The <see cref="T:System.Windows.Controls.ListViewItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" />.</param>
      <returns>The <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> instance that is associated with this <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListViewAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.ListView" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.List" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListViewAutomationPeer.GetChildrenCore">
      <summary>Gets the collection of child elements of the <see cref="T:System.Windows.Controls.ListView" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" />.</summary>
      <returns>The collection of child elements.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListViewAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.ListView" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains "ListView".</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListViewAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.ListView" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" />.</summary>
      <param name="patternInterface">A value in the enumeration.</param>
      <returns>An <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for the view that this <see cref="T:System.Windows.Controls.ListView" /> is using. Default <see cref="T:System.Windows.Controls.ListView" /> implementation uses the <see cref="T:System.Windows.Controls.GridView" />, and this method returns <see cref="T:System.Windows.Automation.Peers.GridViewAutomationPeer" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ListViewAutomationPeer.ViewAutomationPeer">
      <summary>Gets the <see cref="T:System.Windows.Automation.Peers.IViewAutomationPeer" /> for this <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" />.</summary>
      <returns>The interface instance that is associated with this <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" />.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.MediaElementAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.MediaElement" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.MediaElementAutomationPeer.#ctor(System.Windows.Controls.MediaElement)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.MediaElementAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.MediaElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.MediaElementAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.MediaElementAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.MediaElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.MediaElementAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Custom" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.MediaElementAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.MediaElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.MediaElementAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains "MediaElement".</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.MenuAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.Menu" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuAutomationPeer.#ctor(System.Windows.Controls.Menu)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.MenuAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.Menu" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.MenuAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.Menu" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.MenuAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Menu" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.Menu" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.MenuAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains "Menu".</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuAutomationPeer.IsContentElementCore">
      <summary>Gets a value that indicates whether the element that is associated with this automation peer contains data that is presented to the user. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement" />.</summary>
      <returns>
        <see langword="false" /> in all cases.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.MenuItemAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.MenuItem" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.#ctor(System.Windows.Controls.MenuItem)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.MenuItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.GetAccessKeyCore">
      <summary>Gets the access key for the <see cref="T:System.Windows.Controls.MenuItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAccessKey" />.</summary>
      <returns>The access key for the <see cref="T:System.Windows.Controls.MenuItem" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.MenuItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.MenuItem" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.GetChildrenCore">
      <summary>Gets the collection of child elements of the <see cref="T:System.Windows.Controls.MenuItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" />.</summary>
      <returns>The collection of child elements.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.MenuItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains "MenuItem".</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.GetNameCore">
      <summary>Gets the text label of the <see cref="T:System.Windows.Controls.MenuItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" />.</summary>
      <returns>The string that contains the label.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.MenuItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" />.</summary>
      <param name="patternInterface">One of the enumeration values.</param>
      <returns>An object that supports the control pattern if <paramref name="patternInterface" /> is a supported value; otherwise, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.GetPositionInSetCore">
      <summary>Gets the position of a <see cref="T:System.Windows.Controls.MenuItem" /> contained in a set.</summary>
      <returns>The value of the <see cref="F:System.Windows.Automation.AutomationProperties.PositionInSetProperty" /> if it has been set, or its position relative to the parent <see cref="T:System.Windows.Controls.ItemsControl" /> or <see cref="T:System.Windows.Controls.GroupItem" /> control.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.GetSizeOfSetCore">
      <summary>Gets the size of a set that contains this <see cref="T:System.Windows.Controls.MenuItem" />.</summary>
      <returns>The value of <see cref="F:System.Windows.Automation.AutomationProperties.PositionInSetProperty" /> if it has been set, or its position relative to the parent <see cref="T:System.Windows.Controls.ItemsControl" /> or <see cref="T:System.Windows.Controls.GroupItem" /> control.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Collapse">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Expand">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.MenuItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#ExpandCollapseState">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>The state (expanded or collapsed) of the control.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.System#Windows#Automation#Provider#IToggleProvider#Toggle">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.MenuItemAutomationPeer.System#Windows#Automation#Provider#IToggleProvider#ToggleState">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>The toggle state of the control.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.NavigationWindowAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Navigation.NavigationWindow" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.NavigationWindowAutomationPeer.#ctor(System.Windows.Navigation.NavigationWindow)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.NavigationWindowAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Navigation.NavigationWindow" /> associated with this <see cref="T:System.Windows.Automation.Peers.NavigationWindowAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.NavigationWindowAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.ContentElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains "NavigationWindow".</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.PasswordBoxAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.PasswordBox" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.#ctor(System.Windows.Controls.PasswordBox)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.PasswordBoxAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.PasswordBox" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.PasswordBoxAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.PasswordBox" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.PasswordBoxAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Edit" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.PasswordBox" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.PasswordBoxAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains "PasswordBox".</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.PasswordBox" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.PasswordBoxAutomationPeer" />.</summary>
      <param name="patternInterface">A value in the enumeration.</param>
      <returns>The <see cref="F:System.Windows.Automation.Peers.PatternInterface.Value" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.IsPasswordCore">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.PasswordBox" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.PasswordBoxAutomationPeer" /> contains protected content. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsPassword" />.</summary>
      <returns>
        <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#IsReadOnly">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>
        <see langword="true" /> if the value is read-only; <see langword="false" /> if it can be modified.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#SetValue(System.String)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="value">The value of a control.</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#Value">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>A string value of the control.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.ProgressBar" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ProgressBarAutomationPeer.#ctor(System.Windows.Controls.ProgressBar)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.ProgressBar" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ProgressBarAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.ProgressBar" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.ProgressBar" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ProgressBarAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.ProgressBar" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains "ProgressBar".</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ProgressBarAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.ProgressBar" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer" />.</summary>
      <param name="patternInterface">A value in the enumeration.</param>
      <returns>If <paramref name="patternInterface" /> is <see cref="F:System.Windows.Automation.Peers.PatternInterface.RangeValue" /> and <see cref="P:System.Windows.Controls.ProgressBar.IsIndeterminate" /> is <see langword="true" />, this method returns the current instance of the <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer" />; otherwise, this method returns <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ProgressBarAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#IsReadOnly">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>
        <see langword="true" /> if the value is read-only; otherwise <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ProgressBarAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#LargeChange">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>The large-change value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ProgressBarAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#SetValue(System.Double)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="val">The value to set.</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.ProgressBarAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#SmallChange">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>The small-change value.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.RadioButton" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.#ctor(System.Windows.Controls.RadioButton)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.RadioButton" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.RadioButton" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The control type for the <see cref="T:System.Windows.Controls.RadioButton" /> object.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.ContentElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains "RadioButton".</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.RadioButton" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer" />.</summary>
      <param name="patternInterface">A value in the enumeration.</param>
      <returns>An object that supports the control pattern if <paramref name="patternInterface" /> is a supported value; otherwise, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.RadioButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>
        <see langword="true" /> if the element is selected; otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.RadioButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>The selection container.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.RangeBaseAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.RangeBaseAutomationPeer.#ctor(System.Windows.Controls.Primitives.RangeBase)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.RangeBaseAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.RangeBaseAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.RangeBaseAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.RangeBaseAutomationPeer" />.</summary>
      <param name="patternInterface">A value in the enumeration.</param>
      <returns>If <paramref name="patternInterface" /> is <see cref="F:System.Windows.Automation.Peers.PatternInterface.RangeValue" />, this method returns a <see langword="this" /> pointer; otherwise, this method returns <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.RangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#IsReadOnly">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>
        <see langword="true" /> if the range value is read-only; otherwise <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.RangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#LargeChange">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>The large-change value.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.RangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#Maximum">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>The maximum range value supported by the control.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.RangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#Minimum">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>The minimum range value supported by the control.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#SetValue(System.Double)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="val">The value to set.</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.RangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#SmallChange">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>The small-change value.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.RangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#Value">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>The value of the control.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.RepeatButtonAutomationPeer.#ctor(System.Windows.Controls.Primitives.RepeatButton)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.RepeatButtonAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Button" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RepeatButtonAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.ContentElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains "RepeatButton".</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RepeatButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the <see cref="T:System.Windows.ContentElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" />.</summary>
      <param name="patternInterface">A value in the enumeration.</param>
      <returns>If <paramref name="patternInterface" /> is <see cref="F:System.Windows.Automation.Peers.PatternInterface.Invoke" />, this method returns a reference to the current instance of the <see cref="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer" />; otherwise, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RepeatButtonAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.RichTextBoxAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.RichTextBox" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.RichTextBoxAutomationPeer.#ctor(System.Windows.Controls.RichTextBox)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.RichTextBoxAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.RichTextBox" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.RichTextBoxAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.RichTextBoxAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.RichTextBox" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.RichTextBoxAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Document" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RichTextBoxAutomationPeer.GetChildrenCore">
      <summary>Gets the collection of child elements for <see cref="T:System.Windows.Controls.RichTextBox" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.RichTextBoxAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" />.</summary>
      <returns>The collection of child elements.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RichTextBoxAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.RichTextBox" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.RichTextBoxAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains "RichTextBox".</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RichTextBoxAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.RichTextBox" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.RichTextBoxAutomationPeer" />.</summary>
      <param name="patternInterface">A value in the enumeration.</param>
      <returns>If <paramref name="patternInterface" /> is <see cref="F:System.Windows.Automation.Peers.PatternInterface.Text" />, this method returns an <see cref="T:System.Windows.Automation.Provider.ITextProvider" /> reference. If <paramref name="patternInterface" /> is <see cref="F:System.Windows.Automation.Peers.PatternInterface.Scroll" />, this method returns a new <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer" />.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ScrollBarAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollBarAutomationPeer.#ctor(System.Windows.Controls.Primitives.ScrollBar)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.ScrollBarAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ScrollBarAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollBarAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ScrollBarAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.ScrollBar" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollBarAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ScrollBarAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains the word "ScrollBar".</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollBarAutomationPeer.GetClickablePointCore">
      <summary>Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint" />.</summary>
      <returns>A <see cref="T:System.Windows.Point" /> that has values of <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" />; the only clickable points in a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> are the child elements.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollBarAutomationPeer.GetOrientationCore">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ScrollBarAutomationPeer" /> is laid out in a specific direction. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetOrientation" />.</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationOrientation.Horizontal" /> or <see cref="F:System.Windows.Automation.Peers.AutomationOrientation.Vertical" />, depending on the orientation of the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollBarAutomationPeer.IsContentElementCore">
      <summary>Gets a value that indicates whether the element that is associated with this automation peer contains data that is presented to the user. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement" />.</summary>
      <returns>
        <see langword="false" /> in all cases.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.ScrollViewer" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.#ctor(System.Windows.Controls.ScrollViewer)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.ScrollViewer" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.ScrollViewer" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Pane" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.ScrollViewer" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains "ScrollViewer".</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.ScrollViewer" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer" />.</summary>
      <param name="patternInterface">A value in the enumeration.</param>
      <returns>If <paramref name="patternInterface" /> is <see cref="F:System.Windows.Automation.Peers.PatternInterface.Scroll" />, this method returns a <see langword="this" /> pointer; otherwise, this method returns <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.IsControlElementCore">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.ScrollViewer" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer" /> is understood by the end user as interactive or as contributing to the logical structure of the control in the GUI. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement" />.</summary>
      <returns>If the <see cref="P:System.Windows.FrameworkElement.TemplatedParent" /> is <see langword="null" />, this method returns <see langword="true" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#HorizontallyScrollable">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>Value indicating whether control is can be scrolled in the horizontal direction.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#HorizontalScrollPercent">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>The horizontal scroll position as a percentage of the total content area within the control.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#HorizontalViewSize">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>Returns <see langword="S_OK" /> if successful, or an error value otherwise.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#Scroll(System.Windows.Automation.ScrollAmount,System.Windows.Automation.ScrollAmount)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="horizontalAmount">The horizontal increment specific to the control.</param>
      <param name="verticalAmount">The vertical increment specific to the control.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#SetScrollPercent(System.Double,System.Double)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="horizontalPercent">Percent scrolled horizontally.</param>
      <param name="verticalPercent">Percent scrolled vertically.</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#VerticallyScrollable">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>
        <see langword="true" /> if the control can scroll vertically; otherwise <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#VerticalScrollPercent">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>The vertical scroll position as a percentage of the total content area within the control.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#VerticalViewSize">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>Returns <see langword="S_OK" /> if successful, or an error value otherwise.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.SelectorAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.Primitives.Selector" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorAutomationPeer.#ctor(System.Windows.Controls.Primitives.Selector)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.Primitives.Selector" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.Primitives.Selector" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.List" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.Primitives.Selector" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer" />.</summary>
      <param name="patternInterface">A value in the enumeration.</param>
      <returns>If <paramref name="patternInterface" /> is <see cref="F:System.Windows.Automation.Peers.PatternInterface.Selection" />, this method returns a pointer to the current instance; otherwise <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.SelectorAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#CanSelectMultiple">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>
        <see langword="true" /> if multiple selection is allowed; otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#GetSelection">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>A collection of UI Automation providers. true if multiple selection is allowed; otherwise false.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.SelectorAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#IsSelectionRequired">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>Returns <see langword="S_OK" /> if successful, or an error value otherwise.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.SelectorItemAutomationPeer">
      <summary>Exposes the items in the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection of a <see cref="T:System.Windows.Controls.Primitives.Selector" /> to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorItemAutomationPeer.#ctor(System.Object,System.Windows.Automation.Peers.SelectorAutomationPeer)">
      <summary>Provides initialization for base class values when they are called by the constructor of a derived class.</summary>
      <param name="owner">The item object that is associated with this <see cref="T:System.Windows.Automation.Peers.SelectorItemAutomationPeer" />.</param>
      <param name="selectorAutomationPeer">The <see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer" /> that is associated with the <see cref="T:System.Windows.Controls.Primitives.Selector" /> that holds the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern that is associated with the specified <see cref="T:System.Windows.Automation.Peers.PatternInterface" />.</summary>
      <param name="patternInterface">A value in the enumeration.</param>
      <returns>If <paramref name="patternInterface" /> is <see cref="F:System.Windows.Automation.Peers.PatternInterface.Selection" />, this method returns the current instance of this <see cref="T:System.Windows.Automation.Peers.SelectorItemAutomationPeer" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.SelectorItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>
        <see langword="true" /> if the element is selected; otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.SelectorItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>The selection container.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.SeparatorAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.Separator" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.SeparatorAutomationPeer.#ctor(System.Windows.Controls.Separator)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.SeparatorAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.Separator" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.SeparatorAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.SeparatorAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.Separator" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.SeparatorAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Separator" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.SeparatorAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.Separator" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.SeparatorAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains "Separator".</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.SeparatorAutomationPeer.IsContentElementCore">
      <summary>Gets a value that indicates whether the element that is associated with this automation peer contains data that is presented to the user. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement" />.</summary>
      <returns>
        <see langword="false" /> in all cases.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.SliderAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.Slider" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.SliderAutomationPeer.#ctor(System.Windows.Controls.Slider)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.SliderAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.Slider" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.SliderAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.SliderAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.Slider" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.SliderAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Slider" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.SliderAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.Slider" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.SliderAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains "Slider".</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.SliderAutomationPeer.GetClickablePointCore">
      <summary>Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint" />.</summary>
      <returns>A <see cref="T:System.Windows.Point" /> containing <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" />; the only clickable points in a <see cref="T:System.Windows.Controls.TabControl" /> are the child <see cref="T:System.Windows.Controls.TabItem" /> elements.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.StatusBarAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.Primitives.StatusBar" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.StatusBarAutomationPeer.#ctor(System.Windows.Controls.Primitives.StatusBar)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.StatusBarAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.Primitives.StatusBar" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.StatusBarAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.StatusBarAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.Primitives.StatusBar" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.StatusBarAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.StatusBar" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.StatusBarAutomationPeer.GetChildrenCore">
      <summary>Gets the collection of child elements of the <see cref="T:System.Windows.Controls.Primitives.StatusBar" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.StatusBarAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" />.</summary>
      <returns>A list of child elements.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.StatusBarAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.Primitives.StatusBar" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.StatusBarAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains "StatusBar".</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.StatusBarItemAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.Primitives.StatusBarItem" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.StatusBarItemAutomationPeer.#ctor(System.Windows.Controls.Primitives.StatusBarItem)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.StatusBarItemAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.Primitives.StatusBarItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.StatusBarItemAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.StatusBarItemAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.Primitives.StatusBarItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.StatusBarItemAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Text" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.StatusBarItemAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.Primitives.StatusBarItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.StatusBarItemAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains "StatusBarItem".</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.TabControlAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.TabControl" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabControlAutomationPeer.#ctor(System.Windows.Controls.TabControl)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.TabControlAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.TabControl" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TabControlAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabControlAutomationPeer.CreateItemAutomationPeer(System.Object)">
      <summary>Creates a new <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" />.</summary>
      <param name="item">The <see cref="T:System.Windows.Controls.TabItem" /> that is associated with the new <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" />.</param>
      <returns>The created <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" /> object.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabControlAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the collection of child elements for the <see cref="T:System.Windows.Controls.TabItem" /> that is associated with the new <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Tab" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabControlAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.TabItem" /> that is associated with the new <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains "TabControl".</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabControlAutomationPeer.GetClickablePointCore">
      <summary>This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint" />.</summary>
      <returns>A <see cref="T:System.Windows.Point" /> containing <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" />; the only clickable points in a <see cref="T:System.Windows.Controls.TabControl" /> are the child <see cref="T:System.Windows.Controls.TabItem" /> elements.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TabControlAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#IsSelectionRequired">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>Returns <see langword="S_OK" /> if successful, or an error value otherwise.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.TabItemAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.TabItem" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.#ctor(System.Object,System.Windows.Automation.Peers.TabControlAutomationPeer)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.TabItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" />.</param>
      <param name="tabControlAutomationPeer">The <see cref="T:System.Windows.Automation.Peers.TabControlAutomationPeer" /> that is the parent of this <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.TabItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.TabItem" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.GetChildrenCore">
      <summary>Gets the collection of child elements of the <see cref="T:System.Windows.Controls.TabItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" />.</summary>
      <returns>The collection of child elements.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.TabItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains "TabItem".</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.GetNameCore">
      <summary>Gets the text label of the <see cref="T:System.Windows.Controls.TabItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" />.</summary>
      <returns>The string that contains the label. If set, this method returns the value of the <see cref="P:System.Windows.Automation.AutomationProperties.Name" /> property; otherwise this method will return the value of the <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" /> property.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.TabItemWrapperAutomationPeer">
      <summary>Exposes the <see cref="T:System.Windows.UIElement" /> subtree for the data items in a <see cref="T:System.Windows.Controls.TabControl" /> to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabItemWrapperAutomationPeer.#ctor(System.Windows.Controls.TabItem)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.TabItemWrapperAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.TabItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TabItemWrapperAutomationPeer" />.</param>
    </member>
    <member name="T:System.Windows.Automation.Peers.TableAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Documents.Table" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TableAutomationPeer.#ctor(System.Windows.Documents.Table)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.TableAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Documents.Table" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TableAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TableAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Documents.Table" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TableAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Table" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TableAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Documents.Table" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TableAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains "Table".</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TableAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the <see cref="T:System.Windows.Documents.Table" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TableAutomationPeer" />.</summary>
      <param name="patternInterface">A value from the enumeration.</param>
      <returns>If <paramref name="patternInterface" /> is <see cref="F:System.Windows.Automation.Peers.PatternInterface.Grid" />, this method returns a <see langword="this" /> pointer; otherwise, this method returns <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TableAutomationPeer.IsControlElementCore">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Documents.Table" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TableAutomationPeer" /> is understood by the end user as interactive or as contributing to the logical structure of the control in the GUI. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement" />.</summary>
      <returns>
        <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TableAutomationPeer.System#Windows#Automation#Provider#IGridProvider#ColumnCount">
      <summary>Gets the total number of columns in a grid.</summary>
      <returns>The total number of columns in a grid.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TableAutomationPeer.System#Windows#Automation#Provider#IGridProvider#GetItem(System.Int32,System.Int32)">
      <summary>Retrieves the UI Automation provider for the specified cell.</summary>
      <param name="row">The ordinal number of the row of interest.</param>
      <param name="column">The ordinal number of the column of interest.</param>
      <returns>The UI Automation provider for the specified cell.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TableAutomationPeer.System#Windows#Automation#Provider#IGridProvider#RowCount">
      <summary>Gets the total number of rows in a grid.</summary>
      <returns>The total number of rows in a grid.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.TableCellAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Documents.TableCell" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TableCellAutomationPeer.#ctor(System.Windows.Documents.TableCell)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.TableCellAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Documents.TableCell" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TableCellAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TableCellAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Documents.TableCell" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TableCellAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Custom" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TableCellAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Documents.TableCell" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TableCellAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains "TableCell".</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TableCellAutomationPeer.GetLocalizedControlTypeCore">
      <summary>Gets the localized version of the control type for the <see cref="T:System.Windows.Documents.TableCell" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TableCellAutomationPeer" />.</summary>
      <returns>A string that contains "cell".</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TableCellAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the <see cref="T:System.Windows.Documents.TableCell" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TableCellAutomationPeer" />.</summary>
      <param name="patternInterface">A value from the enumeration.</param>
      <returns>If <paramref name="patternInterface" /> is <see cref="F:System.Windows.Automation.Peers.PatternInterface.GridItem" />, this method returns the current instance of the <see cref="T:System.Windows.Automation.Peers.TableCellAutomationPeer" />; otherwise, this method returns <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TableCellAutomationPeer.IsControlElementCore">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Documents.TableCell" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TableCellAutomationPeer" /> is understood by the end user as interactive or as contributing to the logical structure of the control in the GUI. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement" />.</summary>
      <returns>
        <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TableCellAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Column">
      <summary>Gets the ordinal number of the column that contains the cell or item.</summary>
      <returns>A zero-based ordinal number that identifies the column containing the cell or item.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TableCellAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ColumnSpan">
      <summary>Gets the number of columns spanned by a cell or item.</summary>
      <returns>The number of columns spanned.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TableCellAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ContainingGrid">
      <summary>Gets a UI Automation provider that implements <see cref="T:System.Windows.Automation.GridPattern" /> and represents the container of the cell or item.</summary>
      <returns>A UI Automation provider that implements the <see cref="T:System.Windows.Automation.GridPattern" /> and represents the cell or item container.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TableCellAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Row">
      <summary>Gets the ordinal number of the row that contains the cell or item.</summary>
      <returns>A zero-based ordinal number that identifies the row containing the cell or item.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TableCellAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#RowSpan">
      <summary>Gets the number of rows spanned by a cell or item.</summary>
      <returns>The number of rows spanned.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.TextAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Automation.TextPattern" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextAutomationPeer.#ctor(System.Windows.FrameworkElement)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.TextAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Automation.TextPattern" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TextAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextAutomationPeer.GetNameCore">
      <summary>Gets the text label of the element that is associated with this <see cref="T:System.Windows.Automation.Peers.TextAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" />.</summary>
      <returns>The value of <see cref="P:System.Windows.Automation.AutomationProperties.Name" /> or <see cref="P:System.Windows.Automation.AutomationProperties.LabeledBy" /> if either is set; otherwise this method returns an empty string.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.TextBlockAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.TextBlock" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBlockAutomationPeer.#ctor(System.Windows.Controls.TextBlock)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.TextBlockAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.TextBlock" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TextBlockAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBlockAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.TextBlock" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TextBlockAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Text" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBlockAutomationPeer.GetChildrenCore">
      <summary>Gets the collection of child elements of the <see cref="T:System.Windows.Controls.TextBlock" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TextBlockAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" />.</summary>
      <returns>A collection of child elements, or <see langword="null" /> if the <see cref="T:System.Windows.Controls.TextBlock" /> is empty.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBlockAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.TextBlock" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TextBlockAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains the word "TextBlock".</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBlockAutomationPeer.IsControlElementCore">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.TextBlock" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TextBlockAutomationPeer" /> is something that the end user would understand as being interactive or as contributing to the logical structure of the control in the GUI. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement" />.</summary>
      <returns>
        <see langword="false" /> if the element is part of a template; otherwise <see langword="true" />.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.TextBoxAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.TextBox" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBoxAutomationPeer.#ctor(System.Windows.Controls.TextBox)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.TextBoxAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.TextBox" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TextBoxAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBoxAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.TextBox" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TextBoxAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Edit" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBoxAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.TextBox" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TextBoxAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains "TextBox".</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBoxAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.TextBox" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TextBoxAutomationPeer" />.</summary>
      <param name="patternInterface">A value from the enumeration.</param>
      <returns>An object that supports the control pattern if <paramref name="patternInterface" /> is a supported value; otherwise, <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TextBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#IsReadOnly">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>
        <see langword="true" /> if the value is read-only; <see langword="false" /> if it can be modified.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#SetValue(System.String)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="value">The value of a control.</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.TextBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#Value">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>A string value of the control.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.TextElementAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Documents.TextElement" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextElementAutomationPeer.#ctor(System.Windows.Documents.TextElement)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.TextElementAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Documents.TextElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TextElementAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextElementAutomationPeer.GetBoundingRectangleCore">
      <summary>Gets the <see cref="T:System.Windows.Rect" /> representing the bounding rectangle of the <see cref="T:System.Windows.Documents.TextElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TextElementAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangle" />.</summary>
      <returns>The <see cref="T:System.Windows.Rect" /> that contains the coordinates of the element, or <see cref="P:System.Windows.Rect.Empty" /> if the element is not a <see cref="T:System.Windows.Interop.HwndSource" /> and a <see cref="T:System.Windows.PresentationSource" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextElementAutomationPeer.GetChildrenCore">
      <summary>Gets the collection of child elements of the <see cref="T:System.Windows.Documents.TextElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TextElementAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" />.</summary>
      <returns>
        <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextElementAutomationPeer.GetClickablePointCore">
      <summary>Gets a <see cref="T:System.Windows.Point" /> that represents the clickable space that is on the <see cref="T:System.Windows.Documents.TextElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TextElementAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint" />.</summary>
      <returns>The <see cref="T:System.Windows.Point" /> on the element that allows a click. The point values are (<see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" />) if the element is not a <see cref="T:System.Windows.Interop.HwndSource" /> and a <see cref="T:System.Windows.PresentationSource" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextElementAutomationPeer.IsOffscreenCore">
      <summary>Gets a value that indicates whether <see cref="T:System.Windows.Documents.TextElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TextElementAutomationPeer" /> is off of the screen. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen" />.</summary>
      <returns>
        <see langword="true" /> if the element is not on the screen; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ThumbAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.Primitives.Thumb" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ThumbAutomationPeer.#ctor(System.Windows.Controls.Primitives.Thumb)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.ThumbAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.Primitives.Thumb" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ThumbAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ThumbAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ThumbAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Thumb" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ThumbAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ThumbAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains "Thumb".</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ThumbAutomationPeer.IsContentElementCore">
      <summary>Gets a value that indicates whether the element that is associated with this automation peer contains data that is presented to the user. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement" />.</summary>
      <returns>
        <see langword="false" /> in all cases.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToggleButtonAutomationPeer.#ctor(System.Windows.Controls.Primitives.ToggleButton)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToggleButtonAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The control type for the <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToggleButtonAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains "Button".</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToggleButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer" />.</summary>
      <param name="patternInterface">One of the enumeration values.</param>
      <returns>If <paramref name="patternInterface" /> is <see cref="F:System.Windows.Automation.Peers.PatternInterface.Toggle" />, this method returns the current instance of the <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer" />, otherwise <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToggleButtonAutomationPeer.System#Windows#Automation#Provider#IToggleProvider#Toggle">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.ToggleButtonAutomationPeer.System#Windows#Automation#Provider#IToggleProvider#ToggleState">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>the toggle state of the control.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ToolBarAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.ToolBar" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToolBarAutomationPeer.#ctor(System.Windows.Controls.ToolBar)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.ToolBarAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.ToolBar" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ToolBarAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToolBarAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.ToolBar" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ToolBarAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.ToolBar" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToolBarAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.ToolBar" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ToolBarAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains the word "ToolBar".</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ToolTipAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.ToolTip" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToolTipAutomationPeer.#ctor(System.Windows.Controls.ToolTip)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.ToolTipAutomationPeer" />.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.ToolTip" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ToolTipAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToolTipAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.ToolTip" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ToolTipAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.ToolTip" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToolTipAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.ToolTip" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ToolTipAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains "ToolTip".</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.TreeViewAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.TreeView" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.#ctor(System.Windows.Controls.TreeView)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.TreeView" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.CreateItemAutomationPeer(System.Object)">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" /> for a data item in the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection of this <see cref="T:System.Windows.Controls.TreeView" />.</summary>
      <param name="item">The data item that is associated with the <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" />.</param>
      <returns>A new instance of the <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" /> for <paramref name="item" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.ContentElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Tree" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.GetChildrenCore">
      <summary>Gets the collection of child elements of the <see cref="T:System.Windows.ContentElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" />.</summary>
      <returns>A collection of <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" /> elements, or <see langword="null" /> if the <see cref="T:System.Windows.Controls.TreeView" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer" /> is empty.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.ContentElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains "TreeView".</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the <see cref="T:System.Windows.ContentElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" />.</summary>
      <param name="patternInterface">One of the enumeration values.</param>
      <returns>The current instance of the <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" />, or <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TreeViewAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#CanSelectMultiple">
      <summary>Gets a value that specifies whether the UI Automation provider allows more than one child element to be selected concurrently.</summary>
      <returns>
        <see langword="true" /> if multiple selection is allowed; otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#GetSelection">
      <summary>Retrieves a UI Automation provider for each child element that is selected.</summary>
      <returns>A collection of UI Automation providers.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TreeViewAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#IsSelectionRequired">
      <summary>Gets a value that specifies whether the UI Automation provider requires at least one child element to be selected.</summary>
      <returns>
        <see langword="true" /> if selection is required; otherwise <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.TreeViewItem" /> types containing data items to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.#ctor(System.Object,System.Windows.Automation.Peers.ItemsControlAutomationPeer,System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" /> class.</summary>
      <param name="item">The data item in the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection that is associated with this <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" />.</param>
      <param name="itemsControlAutomationPeer">The <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" /> that is associated with the <see cref="T:System.Windows.Controls.ItemsControl" /> that holds the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection.</param>
      <param name="parentDataItemAutomationPeer">The <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" /> that is the parent to this <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.TreeViewItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.TreeItem" /> in all cases.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.TreeViewItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string containing the value <see langword="TreeViewItem" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the element that is associated with this <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" />.</summary>
      <param name="patternInterface">The type of pattern implemented by the element to retrieve.</param>
      <returns>The object that implements the pattern interface, or <see langword="null" /> if the specified pattern interface is not implemented by this peer.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.ParentDataItemAutomationPeer">
      <summary>Gets the <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" /> that is the parent to this automation peer.</summary>
      <returns>The parent automation peer.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Collapse">
      <summary>Hides all nodes, controls, or content that are descendants of the control.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Expand">
      <summary>Displays all child nodes, controls, or content of the control.</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#ExpandCollapseState">
      <summary>Gets the state, expanded or collapsed, of the control.</summary>
      <returns>The state, expanded or collapsed, of the control.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.System#Windows#Automation#Provider#IScrollItemProvider#ScrollIntoView">
      <summary>Scrolls the content area of a container object in order to display the control within the visible region (viewport) of the container.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
      <summary>Adds the current element to the collection of selected items.</summary>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">UI Automation element is no longer available.</exception>
    </member>
    <member name="P:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
      <summary>Gets a value that indicates whether an item is selected.</summary>
      <returns>
        <see langword="true" /> if an item is selected; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
      <summary>Removes the current element from the collection of selected items.</summary>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">UI Automation element is no longer available.</exception>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
      <summary>Clears any selection and then selects the current element.</summary>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">UI Automation element is no longer available.</exception>
    </member>
    <member name="P:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
      <summary>Gets the UI automation provider that implements <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" /> and acts as the container for the calling object.</summary>
      <returns>The UI automation provider.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.TreeViewItem" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.#ctor(System.Windows.Controls.TreeViewItem)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.TreeViewItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.CreateItemAutomationPeer(System.Object)">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" /> for a data item in the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection of this <see cref="T:System.Windows.Controls.TreeView" />.</summary>
      <param name="item">The data item that is associated with the <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" />.</param>
      <returns>A new instance of the <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" /> for <paramref name="item" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.FindOrCreateItemAutomationPeer(System.Object)">
      <summary>Returns an <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> for the specified object.</summary>
      <param name="item">The item to get an <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> for.</param>
      <returns>An <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> for the specified object.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.TreeViewItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.TreeItem" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.GetChildrenCore">
      <summary>Gets the collection of child elements of the <see cref="T:System.Windows.Controls.TreeViewItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" />.</summary>
      <returns>The collection of child elements.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.TreeViewItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains "TreeViewItem".</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.TreeViewItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" />.</summary>
      <param name="patternInterface">One of the enumeration values.</param>
      <returns>If <paramref name="patternInterface" /> is <see cref="F:System.Windows.Automation.Peers.PatternInterface.ScrollItem" />, <see cref="F:System.Windows.Automation.Peers.PatternInterface.SelectionItem" />, or <see cref="F:System.Windows.Automation.Peers.PatternInterface.ExpandCollapse" />, this method returns the current instance of the <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" />; otherwise, it returns <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Collapse">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Expand">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#ExpandCollapseState">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>The state (expanded or collapsed) of the control.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#IScrollItemProvider#ScrollIntoView">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>
        <see langword="true" /> if the element is selected; otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>The selection container.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.UserControlAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.UserControl" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.UserControlAutomationPeer.#ctor(System.Windows.Controls.UserControl)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.UserControlAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.UserControl" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.UserControlAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.UserControlAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.UserControl" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.UserControlAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Custom" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.UserControlAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.UserControl" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.UserControlAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>The string that contains the name of the control.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.Viewport3DAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.Viewport3D" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.Viewport3DAutomationPeer.#ctor(System.Windows.Controls.Viewport3D)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.Viewport3DAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.Viewport3D" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.Viewport3DAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.Viewport3DAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.Viewport3D" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.Viewport3DAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Custom" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.Viewport3DAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.Viewport3D" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.Viewport3DAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains "Viewport3D".</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.WindowAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Window" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.WindowAutomationPeer.#ctor(System.Windows.Window)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Window" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.WindowAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Window" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Window" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.WindowAutomationPeer.GetBoundingRectangleCore">
      <summary>Gets the <see cref="T:System.Windows.Rect" /> representing the bounding rectangle of the <see cref="T:System.Windows.Window" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangle" />.</summary>
      <returns>The <see cref="T:System.Windows.Rect" /> that represents the screen coordinates of the <see cref="T:System.Windows.Window" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.WindowAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Window" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains the word "Window".</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.WindowAutomationPeer.GetNameCore">
      <summary>Gets the text label of the <see cref="T:System.Windows.Window" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" />.</summary>
      <returns>A string that contains the <see cref="P:System.Windows.Automation.AutomationProperties.Name" /> or  <see cref="P:System.Windows.FrameworkElement.Name" /> of the <see cref="T:System.Windows.Window" />, or <see cref="F:System.String.Empty" /> if the name is <see langword="null" />.</returns>
    </member>
    <member name="T:System.Windows.Baml2006.Baml2006Reader">
      <summary>Processes XAML in optimized BAML form and produces a XAML node stream.</summary>
    </member>
    <member name="M:System.Windows.Baml2006.Baml2006Reader.#ctor(System.IO.Stream)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Baml2006.Baml2006Reader" /> class based on an input stream.</summary>
      <param name="stream">Input stream of source BAML.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Baml2006.Baml2006Reader.#ctor(System.IO.Stream,System.Xaml.XamlReaderSettings)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Baml2006.Baml2006Reader" /> class based on an input stream and reader settings.</summary>
      <param name="stream">Input stream of source BAML.</param>
      <param name="xamlReaderSettings">Reader settings.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> or <paramref name="xamlReaderSettings" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Baml2006.Baml2006Reader.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Baml2006.Baml2006Reader" /> class, based on the file name of a local file to read.</summary>
      <param name="fileName">String that declares a file path to the file that contains BAML to read.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Baml2006.Baml2006Reader.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Windows.Baml2006.Baml2006Reader" /> and optionally releases the managed resources.</summary>
      <param name="disposing">
        <see langword="true" /> to release the managed resources; otherwise, <see langword="false" />.</param>
    </member>
    <member name="P:System.Windows.Baml2006.Baml2006Reader.IsEof">
      <summary>Gets a value that reports whether the reader position is at the end of file.</summary>
      <returns>
        <see langword="true" /> if the reader position is at the end of the file; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Baml2006.Baml2006Reader.Member">
      <summary>Gets the current member at the reader position, if the reader position is on a <see cref="F:System.Xaml.XamlNodeType.StartMember" />.</summary>
      <returns>The current member, or <see langword="null" /> if the position is not on a member.</returns>
    </member>
    <member name="P:System.Windows.Baml2006.Baml2006Reader.Namespace">
      <summary>Gets the XAML namespace from the current node.</summary>
      <returns>The XAML namespace if available, otherwise <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Baml2006.Baml2006Reader.NodeType">
      <summary>Gets the type of the current node.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="M:System.Windows.Baml2006.Baml2006Reader.Read">
      <summary>Provides the next XAML node from the source BAML, if a node is available.</summary>
      <returns>
        <see langword="true" /> if a node is available; otherwise, <see langword="false" />.</returns>
      <exception cref="T:System.ObjectDisposedException">Reader was disposed during traversal.</exception>
    </member>
    <member name="P:System.Windows.Baml2006.Baml2006Reader.SchemaContext">
      <summary>Gets an object that provides schema context information for the information set.</summary>
      <returns>An object that provides schema context information for the information set.</returns>
    </member>
    <member name="P:System.Windows.Baml2006.Baml2006Reader.System#Xaml#IXamlLineInfo#HasLineInfo">
      <summary>See <see cref="P:System.Xaml.IXamlLineInfo.HasLineInfo" />.</summary>
      <returns>
        <see langword="true" /> if line information is available; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Baml2006.Baml2006Reader.System#Xaml#IXamlLineInfo#LineNumber">
      <summary>See <see cref="P:System.Xaml.IXamlLineInfo.LineNumber" />.</summary>
      <returns>The line number to report.</returns>
    </member>
    <member name="P:System.Windows.Baml2006.Baml2006Reader.System#Xaml#IXamlLineInfo#LinePosition">
      <summary>See <see cref="P:System.Xaml.IXamlLineInfo.LinePosition" />.</summary>
      <returns>The line position to report.</returns>
    </member>
    <member name="P:System.Windows.Baml2006.Baml2006Reader.Type">
      <summary>Gets the <see cref="T:System.Xaml.XamlType" /> of the current node.</summary>
      <returns>The <see cref="T:System.Xaml.XamlType" /> of the current node, or <see langword="null" /> if the position is not on an object.</returns>
    </member>
    <member name="P:System.Windows.Baml2006.Baml2006Reader.Value">
      <summary>Gets the value of the current node.</summary>
      <returns>The value of the current node, or <see langword="null" /> if the position is not on a <see cref="F:System.Xaml.XamlNodeType.Value" /> node type.</returns>
    </member>
    <member name="T:System.Windows.BaseValueSource">
      <summary>Identifies the property system source of a particular dependency property value.</summary>
    </member>
    <member name="F:System.Windows.BaseValueSource.Default">
      <summary>Source is the default value, as defined by property metadata.</summary>
    </member>
    <member name="F:System.Windows.BaseValueSource.DefaultStyle">
      <summary>Source is from a setter in the default style. The default style comes from the current theme.</summary>
    </member>
    <member name="F:System.Windows.BaseValueSource.DefaultStyleTrigger">
      <summary>Source is from a trigger in the default style. The default style comes from the current theme.</summary>
    </member>
    <member name="F:System.Windows.BaseValueSource.ImplicitStyleReference">
      <summary>Source is an implicit style reference (style was based on detected type or based type). This value is only returned for the Style property itself, not for properties that are set through setters or triggers of such a style.</summary>
    </member>
    <member name="F:System.Windows.BaseValueSource.Inherited">
      <summary>Source is a value through property value inheritance.</summary>
    </member>
    <member name="F:System.Windows.BaseValueSource.Local">
      <summary>Source is a locally set value.</summary>
    </member>
    <member name="F:System.Windows.BaseValueSource.ParentTemplate">
      <summary>Source is based on a parent template being used by an element.</summary>
    </member>
    <member name="F:System.Windows.BaseValueSource.ParentTemplateTrigger">
      <summary>Source is a trigger-based value from a parent template that created the element.</summary>
    </member>
    <member name="F:System.Windows.BaseValueSource.Style">
      <summary>Source is from a style setter of a non-theme style.</summary>
    </member>
    <member name="F:System.Windows.BaseValueSource.StyleTrigger">
      <summary>Source is a trigger-based value of a non-theme style.</summary>
    </member>
    <member name="F:System.Windows.BaseValueSource.TemplateTrigger">
      <summary>Source is a trigger-based value in a template that is from a non-theme style.</summary>
    </member>
    <member name="F:System.Windows.BaseValueSource.Unknown">
      <summary>Source is not known. This is the default value.</summary>
    </member>
    <member name="T:System.Windows.ColorConvertedBitmapExtension">
      <summary>Implements a markup extension that enables <see cref="T:System.Windows.Media.Imaging.ColorConvertedBitmap" /> creation. A <see cref="T:System.Windows.Media.Imaging.ColorConvertedBitmap" /> does not have an embedded profile, the profile instead being based on source and destination values.</summary>
    </member>
    <member name="M:System.Windows.ColorConvertedBitmapExtension.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.ColorConvertedBitmapExtension" /> class.</summary>
    </member>
    <member name="M:System.Windows.ColorConvertedBitmapExtension.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.ColorConvertedBitmapExtension" /> class.</summary>
      <param name="image">A string that is parsed to determine three URIs: image source, source color context, and destination color context.</param>
    </member>
    <member name="M:System.Windows.ColorConvertedBitmapExtension.ProvideValue(System.IServiceProvider)">
      <summary>Returns an object that should be set on the property where this extension is applied. For <see cref="T:System.Windows.ColorConvertedBitmapExtension" />, this is the completed <see cref="T:System.Windows.Media.Imaging.ColorConvertedBitmap" />.</summary>
      <param name="serviceProvider">An object that can provide services for the markup extension. This service is expected to provide results for <see cref="T:System.Windows.Markup.IUriContext" />.</param>
      <returns>A <see cref="T:System.Windows.Media.Imaging.ColorConvertedBitmap" /> based on the values passed to the constructor.</returns>
    </member>
    <member name="T:System.Windows.ColumnSpaceDistribution">
      <summary>Describes how to distribute space in columnated flow content.</summary>
    </member>
    <member name="F:System.Windows.ColumnSpaceDistribution.Between">
      <summary>Space is distributed evenly between all columns.</summary>
    </member>
    <member name="F:System.Windows.ColumnSpaceDistribution.Left">
      <summary>Space is distributed before the first column.</summary>
    </member>
    <member name="F:System.Windows.ColumnSpaceDistribution.Right">
      <summary>Space is distributed after the last column.</summary>
    </member>
    <member name="T:System.Windows.ComponentResourceKey">
      <summary>Defines or references resource keys based on class names in external assemblies, as well as an additional identifier.</summary>
    </member>
    <member name="M:System.Windows.ComponentResourceKey.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.ComponentResourceKey" /> class.</summary>
    </member>
    <member name="M:System.Windows.ComponentResourceKey.#ctor(System.Type,System.Object)">
      <summary>Initializes a new instance of a <see cref="T:System.Windows.ComponentResourceKey" /> , specifying the <see cref="T:System.Type" /> that defines the key, and an object to use as an additional resource identifier.</summary>
      <param name="typeInTargetAssembly">The type that defines the resource key.</param>
      <param name="resourceId">A unique identifier to differentiate this <see cref="T:System.Windows.ComponentResourceKey" /> from others associated with the <paramref name="typeInTargetAssembly" /> type.</param>
    </member>
    <member name="P:System.Windows.ComponentResourceKey.Assembly">
      <summary>Gets the assembly object that indicates which assembly's dictionary to look in for the value associated with this key.</summary>
      <returns>The retrieved assembly, as a reflection class.</returns>
    </member>
    <member name="M:System.Windows.ComponentResourceKey.Equals(System.Object)">
      <summary>Determines whether the provided object is equal to the current <see cref="T:System.Windows.ComponentResourceKey" />.</summary>
      <param name="o">Object to compare with the current <see cref="T:System.Windows.ComponentResourceKey" />.</param>
      <returns>
        <see langword="true" /> if the objects are equal; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.ComponentResourceKey.GetHashCode">
      <summary>Returns a hash code for this <see cref="T:System.Windows.ComponentResourceKey" />.</summary>
      <returns>A signed 32-bit integer value.</returns>
    </member>
    <member name="P:System.Windows.ComponentResourceKey.ResourceId">
      <summary>Gets or sets a unique identifier to differentiate this key from others associated with this type.</summary>
      <returns>A unique identifier. Typically this is a string.</returns>
    </member>
    <member name="M:System.Windows.ComponentResourceKey.ToString">
      <summary>Gets the string representation of a <see cref="T:System.Windows.ComponentResourceKey" />.</summary>
      <returns>The string representation.</returns>
    </member>
    <member name="P:System.Windows.ComponentResourceKey.TypeInTargetAssembly">
      <summary>Gets or sets the <see cref="T:System.Type" /> that defines the resource key.</summary>
      <returns>The type that defines the resource key.</returns>
    </member>
    <member name="T:System.Windows.Condition">
      <summary>Represents a condition for the <see cref="T:System.Windows.MultiTrigger" /> and the <see cref="T:System.Windows.MultiDataTrigger" />, which apply changes to property values based on a set of conditions.</summary>
    </member>
    <member name="M:System.Windows.Condition.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Condition" /> class.</summary>
    </member>
    <member name="M:System.Windows.Condition.#ctor(System.Windows.Data.BindingBase,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Condition" /> class.</summary>
      <param name="binding">The binding that specifies the property of the condition.</param>
      <param name="conditionValue">The value of the condition.</param>
    </member>
    <member name="M:System.Windows.Condition.#ctor(System.Windows.DependencyProperty,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Condition" /> class with the specified property and value. This constructor performs parameter validation.</summary>
      <param name="conditionProperty">The property of the condition.</param>
      <param name="conditionValue">The value of the condition.</param>
    </member>
    <member name="M:System.Windows.Condition.#ctor(System.Windows.DependencyProperty,System.Object,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Condition" /> class with the specified property, value, and the name of the source object.</summary>
      <param name="conditionProperty">The property of the condition.</param>
      <param name="conditionValue">The value of the condition.</param>
      <param name="sourceName">
        <c>x:Name</c> of the object with the <paramref name="conditionProperty" />.</param>
    </member>
    <member name="P:System.Windows.Condition.Binding">
      <summary>Gets or sets the binding that specifies the property of the condition. This is only applicable to <see cref="T:System.Windows.MultiDataTrigger" /> objects.</summary>
      <returns>The default value is null.</returns>
    </member>
    <member name="P:System.Windows.Condition.Property">
      <summary>Gets or sets the property of the condition. This is only applicable to <see cref="T:System.Windows.MultiTrigger" /> objects.</summary>
      <returns>A <see cref="T:System.Windows.DependencyProperty" /> that specifies the property of the condition. The default value is null.</returns>
    </member>
    <member name="M:System.Windows.Condition.ReceiveMarkupExtension(System.Object,System.Windows.Markup.XamlSetMarkupExtensionEventArgs)">
      <summary>Handles cases where a markup extension provides a value for a property of a <see cref="T:System.Windows.Condition" /> object</summary>
      <param name="targetObject">The object where the markup extension sets the value.</param>
      <param name="eventArgs">Data that is relevant for markup extension processing.</param>
    </member>
    <member name="M:System.Windows.Condition.ReceiveTypeConverter(System.Object,System.Windows.Markup.XamlSetTypeConverterEventArgs)">
      <summary>Handles cases where a type converter provides a value for a property of on a <see cref="T:System.Windows.Condition" /> object.</summary>
      <param name="targetObject">The object where the type converter sets the value.</param>
      <param name="eventArgs">Data that is relevant for type converter processing.</param>
    </member>
    <member name="P:System.Windows.Condition.SourceName">
      <summary>Gets or sets the name of the object with the property that causes the associated setters to be applied. This is only applicable to <see cref="T:System.Windows.MultiTrigger" /> objects.</summary>
      <returns>The default property is <see langword="null" />. If this property is <see langword="null" />, then the property of the object being styled causes the associated setters to be applied.</returns>
      <exception cref="T:System.InvalidOperationException">After a <see cref="T:System.Windows.Condition" /> is in use, it cannot be modified.</exception>
    </member>
    <member name="M:System.Windows.Condition.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary>Signals the object that initialization is starting.</summary>
    </member>
    <member name="M:System.Windows.Condition.System#ComponentModel#ISupportInitialize#EndInit">
      <summary>Signals the object that initialization is complete.</summary>
    </member>
    <member name="P:System.Windows.Condition.Value">
      <summary>Gets or sets the value of the condition.</summary>
      <returns>The <see cref="P:System.Windows.Condition.Value" /> property cannot be null for a given <see cref="T:System.Windows.Condition" />.  
 See also the Exceptions section. The default value is null.</returns>
      <exception cref="T:System.ArgumentException">Expressions are not supported.</exception>
    </member>
    <member name="T:System.Windows.ConditionCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Condition" /> objects.</summary>
    </member>
    <member name="M:System.Windows.ConditionCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.ConditionCollection" /> class.</summary>
    </member>
    <member name="P:System.Windows.ConditionCollection.IsSealed">
      <summary>Gets a value that indicates whether this trigger is read-only and cannot be changed .</summary>
      <returns>
        <see langword="true" /> if the trigger is read-only; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.AccessText">
      <summary>Specifies with an underscore the character that is used as the access key.</summary>
    </member>
    <member name="M:System.Windows.Controls.AccessText.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.AccessText" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.AccessText.AccessKey">
      <summary>Provides read-only access to the character that follows the first underline character.</summary>
      <returns>The character to return.</returns>
    </member>
    <member name="M:System.Windows.Controls.AccessText.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges and sizes the content of an <see cref="T:System.Windows.Controls.AccessText" /> object.</summary>
      <param name="arrangeSize">The computed size that is used to arrange the content.</param>
      <returns>The size of the content.</returns>
    </member>
    <member name="P:System.Windows.Controls.AccessText.Background">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> that fills the content area.</summary>
      <returns>The <see cref="T:System.Windows.Media.Brush" /> that fills the content area. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.BackgroundProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.AccessText.Background" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.AccessText.BaselineOffset">
      <summary>Gets or sets a value that adjusts the baseline offset position of text in an <see cref="T:System.Windows.Controls.AccessText" /> element.</summary>
      <returns>The amount to adjust the baseline offset position.</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.BaselineOffsetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.AccessText.BaselineOffset" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.AccessText.FontFamily">
      <summary>Gets or sets the font family to use with the <see cref="T:System.Windows.Controls.AccessText" /> element.</summary>
      <returns>The font family to use. The default is the font that is determined by the <see cref="P:System.Windows.SystemFonts.MessageFontFamily" /> metric.</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.FontFamilyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.AccessText.FontFamily" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.AccessText.FontSize">
      <summary>Gets or sets the font size to use with the <see cref="T:System.Windows.Controls.AccessText" /> element.</summary>
      <returns>The font size to use. The default is the font size that is determined by the <see cref="P:System.Windows.SystemFonts.MessageFontSize" /> metric.</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.FontSizeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.AccessText.FontSize" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.AccessText.FontStretch">
      <summary>Gets or sets a <see cref="T:System.Windows.FontStretch" /> property that selects a normal, condensed, or expanded font from a <see cref="T:System.Windows.Media.FontFamily" />.</summary>
      <returns>The relative degree that the font is stretched. The default is <see cref="P:System.Windows.FontStretches.Normal" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.FontStretchProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.AccessText.FontStretch" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.AccessText.FontStyle">
      <summary>Gets or sets the font style to use with the <see cref="T:System.Windows.Controls.AccessText" /> element.</summary>
      <returns>The font style to use; for example, normal, italic, or oblique. The default is determined by the <see cref="P:System.Windows.SystemFonts.MessageFontStyle" /> metric.</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.FontStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.AccessText.FontStyle" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.AccessText.FontWeight">
      <summary>Gets or sets the font weight to use with the <see cref="T:System.Windows.Controls.AccessText" /> element.</summary>
      <returns>The font weight to use. The default is determined by the <see cref="P:System.Windows.SystemFonts.MessageFontWeight" /> metric.</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.FontWeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.AccessText.FontWeight" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.AccessText.Foreground">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> that draws the text content of the element.</summary>
      <returns>The <see cref="T:System.Windows.Media.Brush" /> that draws the text. The default is <see cref="P:System.Windows.Media.Brushes.Black" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.ForegroundProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.AccessText.Foreground" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.AccessText.GetVisualChild(System.Int32)">
      <summary>Gets the index of a visual child element.</summary>
      <param name="index">The index of the visual child element to return.</param>
      <returns>Returns an integer that represents the index of a visual child element.</returns>
    </member>
    <member name="P:System.Windows.Controls.AccessText.LineHeight">
      <summary>Gets or sets the height of each line box.</summary>
      <returns>A double that specifies the height of each line box. This value must be equal to or greater than <c>0.0034</c> and equal to or less then <c>160000</c>. A value of <see cref="F:System.Double.NaN" /> (equivalent to an attribute value of <c>Auto</c>) causes the line height to be determined automatically from the current font characteristics. The default is <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.LineHeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.AccessText.LineHeight" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.AccessText.LineStackingStrategy">
      <summary>Gets or sets how the <see cref="P:System.Windows.Controls.AccessText.LineHeight" /> property is enforced.</summary>
      <returns>A <see cref="T:System.Windows.LineStackingStrategy" /> value that determines the behavior of the <see cref="P:System.Windows.Controls.AccessText.LineHeight" /> property.</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.LineStackingStrategyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.AccessText.LineStackingStrategy" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.AccessText.LogicalChildren">
      <summary>Gets an enumerator that iterates the logical child elements of the <see cref="T:System.Windows.Controls.AccessText" /> element.</summary>
      <returns>An enumerator that iterates the logical child elements of this element.</returns>
    </member>
    <member name="M:System.Windows.Controls.AccessText.MeasureOverride(System.Windows.Size)">
      <summary>Remeasures the control.</summary>
      <param name="constraint">The maximum size limit for the control. The return value cannot exceed this size.</param>
      <returns>The size of the control. Cannot exceed the maximum size limit for the control.</returns>
    </member>
    <member name="M:System.Windows.Controls.AccessText.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Markup.IAddChild.AddChild(System.Object)" />.</summary>
      <param name="value">The object to add to the <see cref="T:System.Windows.Controls.AccessText" />.</param>
    </member>
    <member name="M:System.Windows.Controls.AccessText.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Markup.IAddChild.AddText(System.String)" />.</summary>
      <param name="text">The text to add to the object.</param>
    </member>
    <member name="P:System.Windows.Controls.AccessText.Text">
      <summary>Gets or sets the text that is displayed by the <see cref="T:System.Windows.Controls.AccessText" /> element.</summary>
      <returns>The text without the first underscore character. The default is an empty string.</returns>
    </member>
    <member name="P:System.Windows.Controls.AccessText.TextAlignment">
      <summary>Gets or sets the horizontal alignment of the content.</summary>
      <returns>The horizontal alignment of the text.</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.TextAlignmentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.AccessText.TextAlignment" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.AccessText.TextDecorations">
      <summary>Gets or sets the decorations that are added to the text of an <see cref="T:System.Windows.Controls.AccessText" /> element.</summary>
      <returns>The <see cref="T:System.Windows.TextDecorations" /> applied to the text of an <see cref="T:System.Windows.Controls.AccessText" />. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.TextDecorationsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.AccessText.TextDecorations" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.AccessText.TextEffects">
      <summary>Gets or sets the effects that are added to the text of an <see cref="T:System.Windows.Controls.AccessText" /> element.</summary>
      <returns>The <see cref="T:System.Windows.Media.TextEffectCollection" />. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.TextEffectsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.AccessText.TextEffects" /> dependency property.</summary>
    </member>
    <member name="F:System.Windows.Controls.AccessText.TextProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.AccessText.Text" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.AccessText.TextTrimming">
      <summary>Gets or sets how the textual content of an <see cref="T:System.Windows.Controls.AccessText" /> element is clipped if it overflows the line box.</summary>
      <returns>The trimming behavior to use. The default is <see cref="F:System.Windows.TextTrimming.None" /></returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.TextTrimmingProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.AccessText.TextTrimming" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.AccessText.TextWrapping">
      <summary>Gets or sets whether the textual content of an <see cref="T:System.Windows.Controls.AccessText" /> element is wrapped if it overflows the line box.</summary>
      <returns>The wrapping behavior to use. The default is <see cref="F:System.Windows.TextWrapping.NoWrap" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.TextWrappingProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.AccessText.TextWrapping" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.AccessText.VisualChildrenCount">
      <summary>Gets the number of child elements that are visual.</summary>
      <returns>Returns an integer that represents the number of child elements that are visible.</returns>
    </member>
    <member name="T:System.Windows.Controls.AddingNewItemEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.DataGrid.AddingNewItem" /> event.</summary>
    </member>
    <member name="M:System.Windows.Controls.AddingNewItemEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.AddingNewItemEventArgs" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.AddingNewItemEventArgs.NewItem">
      <summary>Gets or sets the item that will be added.</summary>
      <returns>The item that will be added.</returns>
    </member>
    <member name="T:System.Windows.Controls.AdornedElementPlaceholder">
      <summary>Represents the element used in a <see cref="T:System.Windows.Controls.ControlTemplate" /> to specify where a decorated control is placed relative to other elements in the <see cref="T:System.Windows.Controls.ControlTemplate" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.AdornedElementPlaceholder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.AdornedElementPlaceholder" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.AdornedElementPlaceholder.AdornedElement">
      <summary>Gets the <see cref="T:System.Windows.UIElement" /> that this <see cref="T:System.Windows.Controls.AdornedElementPlaceholder" /> object is reserving space for.</summary>
      <returns>The <see cref="T:System.Windows.UIElement" /> that this <see cref="T:System.Windows.Controls.AdornedElementPlaceholder" /> object is reserving space for. The default is <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.AdornedElementPlaceholder.ArrangeOverride(System.Windows.Size)">
      <summary>Positions the first visual child object and returns the size in layout required by this <see cref="T:System.Windows.Controls.AdornedElementPlaceholder" /> object.</summary>
      <param name="arrangeBounds">The size that this <see cref="T:System.Windows.Controls.AdornedElementPlaceholder" /> object should use to arrange its child element.</param>
      <returns>The actual size needed by the element.</returns>
    </member>
    <member name="P:System.Windows.Controls.AdornedElementPlaceholder.Child">
      <summary>Gets or sets the single child object of this <see cref="T:System.Windows.Controls.AdornedElementPlaceholder" /> object.</summary>
      <returns>The single child object of this <see cref="T:System.Windows.Controls.AdornedElementPlaceholder" /> object. The default is <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.AdornedElementPlaceholder.GetVisualChild(System.Int32)">
      <summary>Retrieves the <see cref="T:System.Windows.Media.Visual" /> child object at the specified index.</summary>
      <param name="index">The index that specifies the child object to retrieve.</param>
      <returns>The visual child object at the specified index.</returns>
    </member>
    <member name="P:System.Windows.Controls.AdornedElementPlaceholder.LogicalChildren">
      <summary>Gets an enumerator for the logical child elements of this <see cref="T:System.Windows.Controls.AdornedElementPlaceholder" /> object.</summary>
      <returns>An enumerator for the logical child elements of this <see cref="T:System.Windows.Controls.AdornedElementPlaceholder" /> object. The default is <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.AdornedElementPlaceholder.MeasureOverride(System.Windows.Size)">
      <summary>Determines the size of the <see cref="T:System.Windows.Controls.AdornedElementPlaceholder" /> object.</summary>
      <param name="constraint">An upper limit value that the return value should not exceed.</param>
      <returns>The desired size of this <see cref="T:System.Windows.Controls.AdornedElementPlaceholder" /> object.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Controls.AdornedElementPlaceholder" /> object is not part of a template.</exception>
    </member>
    <member name="M:System.Windows.Controls.AdornedElementPlaceholder.OnInitialized(System.EventArgs)">
      <summary>Raises the <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> event. This method is called when <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> is set to <see langword="true" /> internally.</summary>
      <param name="e">Arguments of the event.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Controls.AdornedElementPlaceholder" /> object is not part of a template.</exception>
    </member>
    <member name="M:System.Windows.Controls.AdornedElementPlaceholder.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="value">An object to add as a child.</param>
    </member>
    <member name="M:System.Windows.Controls.AdornedElementPlaceholder.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="text">A string to add to the object.</param>
    </member>
    <member name="P:System.Windows.Controls.AdornedElementPlaceholder.VisualChildrenCount">
      <summary>Gets the number of visual child objects.</summary>
      <returns>Either 0 or 1. The default is 0.</returns>
    </member>
    <member name="T:System.Windows.Controls.AlternationConverter">
      <summary>Converts an integer to and from an object by applying the integer as an index to a list of objects.</summary>
    </member>
    <member name="M:System.Windows.Controls.AlternationConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.AlternationConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.AlternationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts an integer to an object in the <see cref="P:System.Windows.Controls.AlternationConverter.Values" /> list.</summary>
      <param name="o">The integer to use to find an object in the <see cref="P:System.Windows.Controls.AlternationConverter.Values" /> property.</param>
      <param name="targetType">The type of the binding target property.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
      <returns>The object that is in the position of <paramref name="o" /> modulo the number of items in <see cref="P:System.Windows.Controls.AlternationConverter.Values" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.AlternationConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts an object in the <see cref="P:System.Windows.Controls.AlternationConverter.Values" /> list to an integer.</summary>
      <param name="o">The object to find in the <see cref="P:System.Windows.Controls.AlternationConverter.Values" /> property.</param>
      <param name="targetType">The type of the binding target property.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
      <returns>The index of <paramref name="o" /> if it is in <see cref="P:System.Windows.Controls.AlternationConverter.Values" />, or -1 if o does not exist in <see cref="P:System.Windows.Controls.AlternationConverter.Values" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.AlternationConverter.Values">
      <summary>Gets a list of objects that the <see cref="T:System.Windows.Controls.AlternationConverter" /> returns when an integer is passed to the <see cref="M:System.Windows.Controls.AlternationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" /> method.</summary>
      <returns>A list of objects that the <see cref="T:System.Windows.Controls.AlternationConverter" /> returns when an integer is passed to the <see cref="M:System.Windows.Controls.AlternationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" /> method.</returns>
    </member>
    <member name="T:System.Windows.Controls.BooleanToVisibilityConverter">
      <summary>Represents the converter that converts Boolean values to and from <see cref="T:System.Windows.Visibility" /> enumeration values.</summary>
    </member>
    <member name="M:System.Windows.Controls.BooleanToVisibilityConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.BooleanToVisibilityConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.BooleanToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a Boolean value to a <see cref="T:System.Windows.Visibility" /> enumeration value.</summary>
      <param name="value">The Boolean value to convert. This value can be a standard Boolean value or a nullable Boolean value.</param>
      <param name="targetType">This parameter is not used.</param>
      <param name="parameter">This parameter is not used.</param>
      <param name="culture">This parameter is not used.</param>
      <returns>
        <see cref="F:System.Windows.Visibility.Visible" /> if <paramref name="value" /> is <see langword="true" />; otherwise, <see cref="F:System.Windows.Visibility.Collapsed" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.BooleanToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a <see cref="T:System.Windows.Visibility" /> enumeration value to a Boolean value.</summary>
      <param name="value">A <see cref="T:System.Windows.Visibility" /> enumeration value.</param>
      <param name="targetType">This parameter is not used.</param>
      <param name="parameter">This parameter is not used.</param>
      <param name="culture">This parameter is not used.</param>
      <returns>
        <see langword="true" /> if <paramref name="value" /> is <see cref="F:System.Windows.Visibility.Visible" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.Border">
      <summary>Draws a border, background, or both around another element.</summary>
    </member>
    <member name="M:System.Windows.Controls.Border.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Border" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.Border.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges the contents of a <see cref="T:System.Windows.Controls.Border" /> element.</summary>
      <param name="finalSize">The <see cref="T:System.Windows.Size" /> this element uses to arrange its child element.</param>
      <returns>The <see cref="T:System.Windows.Size" /> that represents the arranged size of this <see cref="T:System.Windows.Controls.Border" /> element and its child element.</returns>
    </member>
    <member name="P:System.Windows.Controls.Border.Background">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> that fills the area between the bounds of a <see cref="T:System.Windows.Controls.Border" />.</summary>
      <returns>The <see cref="T:System.Windows.Media.Brush" /> that draws the background. This property has no default value.</returns>
    </member>
    <member name="F:System.Windows.Controls.Border.BackgroundProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Border.Background" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Border.BorderBrush">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> that draws the outer border color.</summary>
      <returns>The <see cref="T:System.Windows.Media.Brush" /> that draws the outer border color. This property has no default value.</returns>
    </member>
    <member name="F:System.Windows.Controls.Border.BorderBrushProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Border.BorderBrush" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Border.BorderThickness">
      <summary>Gets or sets the relative <see cref="T:System.Windows.Thickness" /> of a <see cref="T:System.Windows.Controls.Border" />.</summary>
      <returns>The <see cref="T:System.Windows.Thickness" /> that describes the width of the boundaries of the <see cref="T:System.Windows.Controls.Border" />. This property has no default value.</returns>
    </member>
    <member name="F:System.Windows.Controls.Border.BorderThicknessProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Border.BorderThickness" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Border.CornerRadius">
      <summary>Gets or sets a value that represents the degree to which the corners of a <see cref="T:System.Windows.Controls.Border" /> are rounded.</summary>
      <returns>The <see cref="T:System.Windows.CornerRadius" /> that describes the degree to which corners are rounded. This property has no default value.</returns>
    </member>
    <member name="F:System.Windows.Controls.Border.CornerRadiusProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Border.CornerRadius" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.Border.MeasureOverride(System.Windows.Size)">
      <summary>Measures the child elements of a <see cref="T:System.Windows.Controls.Border" /> before they are arranged during the <see cref="M:System.Windows.Controls.Border.ArrangeOverride(System.Windows.Size)" /> pass.</summary>
      <param name="constraint">An upper <see cref="T:System.Windows.Size" /> limit that cannot be exceeded.</param>
      <returns>The <see cref="T:System.Windows.Size" /> that represents the upper size limit of the element.</returns>
    </member>
    <member name="M:System.Windows.Controls.Border.OnRender(System.Windows.Media.DrawingContext)">
      <summary>Draws the contents of a <see cref="T:System.Windows.Media.DrawingContext" /> object during the render pass of a <see cref="T:System.Windows.Controls.Border" />.</summary>
      <param name="dc">The <see cref="T:System.Windows.Media.DrawingContext" /> that defines the object to be drawn.</param>
    </member>
    <member name="P:System.Windows.Controls.Border.Padding">
      <summary>Gets or sets a <see cref="T:System.Windows.Thickness" /> value that describes the amount of space between a <see cref="T:System.Windows.Controls.Border" /> and its child element.</summary>
      <returns>The <see cref="T:System.Windows.Thickness" /> that describes the amount of space between a <see cref="T:System.Windows.Controls.Border" /> and its single child element. This property has no default value.</returns>
    </member>
    <member name="F:System.Windows.Controls.Border.PaddingProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Border.Padding" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Controls.BorderGapMaskConverter">
      <summary>Represents a converter that converts the dimensions of a <see cref="T:System.Windows.Controls.GroupBox" /> control into a <see cref="T:System.Windows.Media.VisualBrush" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.BorderGapMaskConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.BorderGapMaskConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.BorderGapMaskConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Creates a <see cref="T:System.Windows.Media.VisualBrush" /> that draws the border for a <see cref="T:System.Windows.Controls.GroupBox" /> control.</summary>
      <param name="values">An array of three numbers that represent the <see cref="T:System.Windows.Controls.GroupBox" /> control parameters.</param>
      <param name="targetType">This parameter is not used.</param>
      <param name="parameter">The width of the visible line to the left of the <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" /> in the <see cref="T:System.Windows.Controls.GroupBox" />.</param>
      <param name="culture">This parameter is not used.</param>
      <returns>A <see cref="T:System.Windows.Media.VisualBrush" /> that draws the border around a <see cref="T:System.Windows.Controls.GroupBox" /> control that includes a gap for the <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" /> content.</returns>
    </member>
    <member name="M:System.Windows.Controls.BorderGapMaskConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
      <summary>Not implemented.</summary>
      <param name="value">This parameter is not used.</param>
      <param name="targetTypes">This parameter is not used.</param>
      <param name="parameter">This parameter is not used.</param>
      <param name="culture">This parameter is not used.</param>
      <returns>
        <see cref="F:System.Windows.Data.Binding.DoNothing" /> in all cases.</returns>
    </member>
    <member name="T:System.Windows.Controls.Button">
      <summary>Represents a Windows button control, which reacts to the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event.</summary>
    </member>
    <member name="M:System.Windows.Controls.Button.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Button" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.Button.IsCancel">
      <summary>Gets or sets a value that indicates whether a <see cref="T:System.Windows.Controls.Button" /> is a Cancel button. A user can activate the Cancel button by pressing the ESC key.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.Button" /> is a Cancel button; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Button.IsCancelProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Button.IsCancel" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Button.IsDefault">
      <summary>Gets or sets a value that indicates whether a <see cref="T:System.Windows.Controls.Button" /> is the default button. A user invokes the default button by pressing the ENTER key.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.Button" /> is the default button; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.Button.IsDefaulted">
      <summary>Gets a value that indicates whether a <see cref="T:System.Windows.Controls.Button" /> is the button that is activated when a user presses ENTER.</summary>
      <returns>
        <see langword="true" /> if the button is activated when the user presses ENTER; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Button.IsDefaultedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Button.IsDefaulted" /> dependency property.</summary>
    </member>
    <member name="F:System.Windows.Controls.Button.IsDefaultProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Button.IsDefault" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.Button.OnClick">
      <summary>Called when a <see cref="T:System.Windows.Controls.Button" /> is clicked.</summary>
    </member>
    <member name="M:System.Windows.Controls.Button.OnCreateAutomationPeer">
      <summary>Creates an appropriate <see cref="T:System.Windows.Automation.Peers.ButtonAutomationPeer" /> for this control as part of the WPF infrastructure.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.ButtonAutomationPeer" /> for this control.</returns>
    </member>
    <member name="T:System.Windows.Controls.Calendar">
      <summary>Represents a control that enables a user to select a date by using a visual calendar display.</summary>
    </member>
    <member name="M:System.Windows.Controls.Calendar.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Calendar" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.Calendar.BlackoutDates">
      <summary>Gets a collection of dates that are marked as not selectable.</summary>
      <returns>A collection of dates that cannot be selected. The default value is an empty collection.</returns>
    </member>
    <member name="P:System.Windows.Controls.Calendar.CalendarButtonStyle">
      <summary>Gets or sets the <see cref="T:System.Windows.Style" /> associated with the control's internal <see cref="T:System.Windows.Controls.Primitives.CalendarButton" /> object.</summary>
      <returns>The current style of the <see cref="T:System.Windows.Controls.Primitives.CalendarButton" /> object.</returns>
    </member>
    <member name="F:System.Windows.Controls.Calendar.CalendarButtonStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Calendar.CalendarButtonStyle" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Calendar.CalendarDayButtonStyle">
      <summary>Gets or sets the <see cref="T:System.Windows.Style" /> associated with the control's internal <see cref="T:System.Windows.Controls.Primitives.CalendarDayButton" /> object.</summary>
      <returns>The current style of the <see cref="T:System.Windows.Controls.Primitives.CalendarDayButton" /> object.</returns>
    </member>
    <member name="F:System.Windows.Controls.Calendar.CalendarDayButtonStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Calendar.CalendarDayButtonStyle" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Calendar.CalendarItemStyle">
      <summary>Gets or sets the <see cref="T:System.Windows.Style" /> associated with the control's internal <see cref="T:System.Windows.Controls.Primitives.CalendarItem" /> object.</summary>
      <returns>The current style of the <see cref="T:System.Windows.Controls.Primitives.CalendarItem" /> object.</returns>
    </member>
    <member name="F:System.Windows.Controls.Calendar.CalendarItemStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Calendar.CalendarItemStyle" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Calendar.DisplayDate">
      <summary>Gets or sets the date to display.</summary>
      <returns>The date to display. The default is <see cref="P:System.DateTime.Today" />.</returns>
    </member>
    <member name="E:System.Windows.Controls.Calendar.DisplayDateChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.Calendar.DisplayDate" /> property is changed.</summary>
    </member>
    <member name="P:System.Windows.Controls.Calendar.DisplayDateEnd">
      <summary>Gets or sets the last date in the date range that is available in the calendar.</summary>
      <returns>The last date that is available in the calendar.</returns>
    </member>
    <member name="F:System.Windows.Controls.Calendar.DisplayDateEndProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Calendar.DisplayDateEnd" /> dependency property.</summary>
    </member>
    <member name="F:System.Windows.Controls.Calendar.DisplayDateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Calendar.DisplayDate" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Calendar.DisplayDateStart">
      <summary>Gets or sets the first date that is available in the calendar.</summary>
      <returns>The first date that is available in the calendar. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Calendar.DisplayDateStartProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Calendar.DisplayDateStart" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Calendar.DisplayMode">
      <summary>Gets or sets a value that indicates whether the calendar displays a month, year, or decade.</summary>
      <returns>A value that indicates what length of time the <see cref="T:System.Windows.Controls.Calendar" /> should display.</returns>
    </member>
    <member name="E:System.Windows.Controls.Calendar.DisplayModeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.Calendar.DisplayMode" /> property is changed.</summary>
    </member>
    <member name="F:System.Windows.Controls.Calendar.DisplayModeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Calendar.DisplayMode" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Calendar.FirstDayOfWeek">
      <summary>Gets or sets the day that is considered the beginning of the week.</summary>
      <returns>A <see cref="T:System.DayOfWeek" /> that represents the beginning of the week. The default is the <see cref="P:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek" /> that is determined by the current culture.</returns>
    </member>
    <member name="F:System.Windows.Controls.Calendar.FirstDayOfWeekProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Calendar.FirstDayOfWeek" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Calendar.IsTodayHighlighted">
      <summary>Gets or sets a value that indicates whether the current date is highlighted.</summary>
      <returns>
        <see langword="true" /> if the current date is highlighted; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Calendar.IsTodayHighlightedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Calendar.IsTodayHighlighted" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.Calendar.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.Calendar" /> control when a new template is applied.</summary>
    </member>
    <member name="M:System.Windows.Controls.Calendar.OnCreateAutomationPeer">
      <summary>Returns a <see cref="T:System.Windows.Automation.Peers.CalendarAutomationPeer" /> for use by the Silverlight automation infrastructure.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.CalendarAutomationPeer" /> for the <see cref="T:System.Windows.Controls.Calendar" /> object.</returns>
    </member>
    <member name="M:System.Windows.Controls.Calendar.OnDisplayDateChanged(System.Windows.Controls.CalendarDateChangedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.Calendar.DisplayDateChanged" /> event.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.Calendar.OnDisplayModeChanged(System.Windows.Controls.CalendarModeChangedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.Calendar.DisplayModeChanged" /> event.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.Calendar.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.KeyDown" /> routed event that occurs when the user presses a key while this control has focus.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.Calendar.OnKeyUp(System.Windows.Input.KeyEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.KeyUp" /> routed event that occurs when the user releases a key while this control has focus.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.Calendar.OnSelectedDatesChanged(System.Windows.Controls.SelectionChangedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.Calendar.SelectedDatesChanged" /> routed event.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.Calendar.OnSelectionModeChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.Calendar.SelectionModeChanged" /> event.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="P:System.Windows.Controls.Calendar.SelectedDate">
      <summary>Gets or sets the currently selected date.</summary>
      <returns>The date currently selected. The default is <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified date is outside the range specified by <see cref="P:System.Windows.Controls.Calendar.DisplayDateStart" /> and <see cref="P:System.Windows.Controls.Calendar.DisplayDateEnd" />  
 -or-  
 The specified date is in the <see cref="P:System.Windows.Controls.Calendar.BlackoutDates" /> collection.</exception>
      <exception cref="T:System.InvalidOperationException">If set to anything other than <see langword="null" /> when <see cref="P:System.Windows.Controls.Calendar.SelectionMode" /> is set to <see cref="F:System.Windows.Controls.CalendarSelectionMode.None" />.</exception>
    </member>
    <member name="F:System.Windows.Controls.Calendar.SelectedDateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Calendar.SelectedDate" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Calendar.SelectedDates">
      <summary>Gets a collection of selected dates.</summary>
      <returns>A <see cref="T:System.Windows.Controls.SelectedDatesCollection" /> object that contains the currently selected dates. The default is an empty collection.</returns>
    </member>
    <member name="E:System.Windows.Controls.Calendar.SelectedDatesChanged">
      <summary>Occurs when the collection returned by the <see cref="P:System.Windows.Controls.Calendar.SelectedDates" /> property is changed.</summary>
    </member>
    <member name="F:System.Windows.Controls.Calendar.SelectedDatesChangedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.Calendar.SelectedDatesChanged" /> routed event.</summary>
    </member>
    <member name="P:System.Windows.Controls.Calendar.SelectionMode">
      <summary>Gets or sets a value that indicates what kind of selections are allowed.</summary>
      <returns>A value that indicates the current selection mode. The default is <see cref="F:System.Windows.Controls.CalendarSelectionMode.SingleDate" />.</returns>
    </member>
    <member name="E:System.Windows.Controls.Calendar.SelectionModeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.Calendar.SelectionMode" /> changes.</summary>
    </member>
    <member name="F:System.Windows.Controls.Calendar.SelectionModeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Calendar.SelectionMode" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.Calendar.ToString">
      <summary>Provides a text representation of the selected date.</summary>
      <returns>A text representation of the selected date, or an empty string if <see cref="P:System.Windows.Controls.Calendar.SelectedDate" /> is <see langword="null" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.CalendarBlackoutDatesCollection">
      <summary>Represents a collection of non-selectable dates in a <see cref="T:System.Windows.Controls.Calendar" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.CalendarBlackoutDatesCollection.#ctor(System.Windows.Controls.Calendar)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.CalendarBlackoutDatesCollection" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.Calendar" /> whose dates this object represents.</param>
    </member>
    <member name="M:System.Windows.Controls.CalendarBlackoutDatesCollection.AddDatesInPast">
      <summary>Adds all dates before <see cref="P:System.DateTime.Today" /> to the collection.</summary>
    </member>
    <member name="M:System.Windows.Controls.CalendarBlackoutDatesCollection.Contains(System.DateTime)">
      <summary>Returns a value that represents whether this collection contains the specified date.</summary>
      <param name="date">The date to search for.</param>
      <returns>
        <see langword="true" /> if the collection contains the specified date; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.CalendarBlackoutDatesCollection.Contains(System.DateTime,System.DateTime)">
      <summary>Returns a value that represents whether this collection contains the specified range of dates.</summary>
      <param name="start">The start of the date range.</param>
      <param name="end">The end of the date range.</param>
      <returns>
        <see langword="true" /> if all dates in the range are contained in the collection; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.CalendarBlackoutDatesCollection.ContainsAny(System.Windows.Controls.CalendarDateRange)">
      <summary>Returns a value that represents whether this collection contains any dates in the specified range of dates.</summary>
      <param name="range">The range of dates to search for.</param>
      <returns>
        <see langword="true" /> if any dates in the range are contained in the collection; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.CalendarDateChangedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.Calendar.DisplayDateChanged" /> event.</summary>
    </member>
    <member name="P:System.Windows.Controls.CalendarDateChangedEventArgs.AddedDate">
      <summary>Gets or sets the date to be newly displayed.</summary>
      <returns>The date to be newly displayed.</returns>
    </member>
    <member name="P:System.Windows.Controls.CalendarDateChangedEventArgs.RemovedDate">
      <summary>Gets or sets the date that was previously displayed.</summary>
      <returns>The date that was previously displayed.</returns>
    </member>
    <member name="T:System.Windows.Controls.CalendarDateRange">
      <summary>Represents a range of dates in a <see cref="T:System.Windows.Controls.Calendar" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.CalendarDateRange.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.CalendarDateRange" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.CalendarDateRange.#ctor(System.DateTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.CalendarDateRange" /> class with a single date.</summary>
      <param name="day">The date to add.</param>
    </member>
    <member name="M:System.Windows.Controls.CalendarDateRange.#ctor(System.DateTime,System.DateTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.CalendarDateRange" /> class with a range of dates.</summary>
      <param name="start">The start of the range to be represented.</param>
      <param name="end">The end of the range to be represented.</param>
    </member>
    <member name="P:System.Windows.Controls.CalendarDateRange.End">
      <summary>Gets the last date in the represented range.</summary>
      <returns>The last date in the represented range.</returns>
    </member>
    <member name="E:System.Windows.Controls.CalendarDateRange.PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="P:System.Windows.Controls.CalendarDateRange.Start">
      <summary>Gets the first date in the represented range.</summary>
      <returns>The first date in the represented range.</returns>
    </member>
    <member name="T:System.Windows.Controls.CalendarMode">
      <summary>Specifies whether a <see cref="T:System.Windows.Controls.Calendar" /> displays a month, year, or decade.</summary>
    </member>
    <member name="F:System.Windows.Controls.CalendarMode.Decade">
      <summary>The <see cref="T:System.Windows.Controls.Calendar" /> displays a decade at a time.</summary>
    </member>
    <member name="F:System.Windows.Controls.CalendarMode.Month">
      <summary>The <see cref="T:System.Windows.Controls.Calendar" /> displays a month at a time.</summary>
    </member>
    <member name="F:System.Windows.Controls.CalendarMode.Year">
      <summary>The <see cref="T:System.Windows.Controls.Calendar" /> displays a year at a time.</summary>
    </member>
    <member name="T:System.Windows.Controls.CalendarModeChangedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.Calendar.DisplayModeChanged" /> event.</summary>
    </member>
    <member name="M:System.Windows.Controls.CalendarModeChangedEventArgs.#ctor(System.Windows.Controls.CalendarMode,System.Windows.Controls.CalendarMode)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.CalendarModeChangedEventArgs" /> class.</summary>
      <param name="oldMode">The previous mode.</param>
      <param name="newMode">The new mode.</param>
    </member>
    <member name="P:System.Windows.Controls.CalendarModeChangedEventArgs.NewMode">
      <summary>Gets the new mode of the <see cref="T:System.Windows.Controls.Calendar" />.</summary>
      <returns>A <see cref="T:System.Windows.Controls.CalendarMode" /> that represents the new mode.</returns>
    </member>
    <member name="P:System.Windows.Controls.CalendarModeChangedEventArgs.OldMode">
      <summary>Gets the previous mode of the <see cref="T:System.Windows.Controls.Calendar" />.</summary>
      <returns>A <see cref="T:System.Windows.Controls.CalendarMode" /> that represents the old mode.</returns>
    </member>
    <member name="T:System.Windows.Controls.CalendarSelectionMode">
      <summary>Specifies whether a single or multiple dates can be selected in a <see cref="T:System.Windows.Controls.Calendar" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.CalendarSelectionMode.MultipleRange">
      <summary>Multiple non-contiguous ranges of dates can be selected. Use the <see cref="P:System.Windows.Controls.Calendar.SelectedDates" /> property to retrieve the selected dates.</summary>
    </member>
    <member name="F:System.Windows.Controls.CalendarSelectionMode.None">
      <summary>No selections are allowed.</summary>
    </member>
    <member name="F:System.Windows.Controls.CalendarSelectionMode.SingleDate">
      <summary>A single date can be selected. Use the <see cref="P:System.Windows.Controls.Calendar.SelectedDate" /> property to retrieve the selected date.</summary>
    </member>
    <member name="F:System.Windows.Controls.CalendarSelectionMode.SingleRange">
      <summary>A single range of dates can be selected. Use the <see cref="P:System.Windows.Controls.Calendar.SelectedDates" /> property to retrieve the selected dates.</summary>
    </member>
    <member name="T:System.Windows.Controls.Canvas">
      <summary>Defines an area within which you can explicitly position child elements by using coordinates that are relative to the <see cref="T:System.Windows.Controls.Canvas" /> area.</summary>
    </member>
    <member name="M:System.Windows.Controls.Canvas.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Canvas" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.Canvas.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges the content of a <see cref="T:System.Windows.Controls.Canvas" /> element.</summary>
      <param name="arrangeSize">The size that this <see cref="T:System.Windows.Controls.Canvas" /> element should use to arrange its child elements.</param>
      <returns>A <see cref="T:System.Windows.Size" /> that represents the arranged size of this <see cref="T:System.Windows.Controls.Canvas" /> element and its descendants.</returns>
    </member>
    <member name="P:System.Windows.Controls.Canvas.Bottom">
      <summary>Gets or sets a value that represents the distance between the bottom of an element and the bottom of its parent <see cref="T:System.Windows.Controls.Canvas" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Canvas.BottomProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Canvas.Bottom" /> attached property.</summary>
    </member>
    <member name="M:System.Windows.Controls.Canvas.GetBottom(System.Windows.UIElement)">
      <summary>Returns the value of the <see cref="P:System.Windows.Controls.Canvas.Bottom" /> attached property for a given dependency object.</summary>
      <param name="element">The element from which the property value is read.</param>
      <returns>The <see cref="P:System.Windows.Controls.Canvas.Bottom" /> coordinate of the specified element.</returns>
    </member>
    <member name="M:System.Windows.Controls.Canvas.GetLayoutClip(System.Windows.Size)">
      <summary>Returns a clipping geometry that indicates the area that will be clipped if the <see cref="P:System.Windows.UIElement.ClipToBounds" /> property is set to <see langword="true" />.</summary>
      <param name="layoutSlotSize">The available size of the element.</param>
      <returns>A <see cref="T:System.Windows.Media.Geometry" /> that represents the area that is clipped if <see cref="P:System.Windows.UIElement.ClipToBounds" /> is <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.Canvas.GetLeft(System.Windows.UIElement)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.Canvas.Left" /> attached property for a given dependency object.</summary>
      <param name="element">The element from which the property value is read.</param>
      <returns>The <see cref="P:System.Windows.Controls.Canvas.Left" /> coordinate of the specified element.</returns>
    </member>
    <member name="M:System.Windows.Controls.Canvas.GetRight(System.Windows.UIElement)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.Canvas.Right" /> attached property for a given dependency object.</summary>
      <param name="element">The element from which the property value is read.</param>
      <returns>The <see cref="P:System.Windows.Controls.Canvas.Right" /> coordinate of the specified element.</returns>
    </member>
    <member name="M:System.Windows.Controls.Canvas.GetTop(System.Windows.UIElement)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.Canvas.Top" /> attached property for a given dependency object.</summary>
      <param name="element">The element from which the property value is read.</param>
      <returns>The <see cref="P:System.Windows.Controls.Canvas.Top" /> coordinate of the specified element.</returns>
    </member>
    <member name="P:System.Windows.Controls.Canvas.Left">
      <summary>Gets or sets a value that represents the distance between the left side of an element and the left side of its parent <see cref="T:System.Windows.Controls.Canvas" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Canvas.LeftProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Canvas.Left" /> attached property.</summary>
    </member>
    <member name="M:System.Windows.Controls.Canvas.MeasureOverride(System.Windows.Size)">
      <summary>Measures the child elements of a <see cref="T:System.Windows.Controls.Canvas" /> in anticipation of arranging them during the <see cref="M:System.Windows.Controls.Canvas.ArrangeOverride(System.Windows.Size)" /> pass.</summary>
      <param name="constraint">An upper limit <see cref="T:System.Windows.Size" /> that should not be exceeded.</param>
      <returns>A <see cref="T:System.Windows.Size" /> that represents the size that is required to arrange child content.</returns>
    </member>
    <member name="P:System.Windows.Controls.Canvas.Right">
      <summary>Gets or sets a value that represents the distance between the right side of an element and the right side of its parent <see cref="T:System.Windows.Controls.Canvas" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Canvas.RightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Canvas.Right" /> attached property.</summary>
    </member>
    <member name="M:System.Windows.Controls.Canvas.SetBottom(System.Windows.UIElement,System.Double)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.Canvas.Bottom" /> attached property for a given dependency object.</summary>
      <param name="element">The element to which the property value is written.</param>
      <param name="length">Sets the <see cref="P:System.Windows.Controls.Canvas.Bottom" /> coordinate of the specified element.</param>
    </member>
    <member name="M:System.Windows.Controls.Canvas.SetLeft(System.Windows.UIElement,System.Double)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.Canvas.Left" /> attached property for a given dependency object.</summary>
      <param name="element">The element to which the property value is written.</param>
      <param name="length">Sets the <see cref="P:System.Windows.Controls.Canvas.Left" /> coordinate of the specified element.</param>
    </member>
    <member name="M:System.Windows.Controls.Canvas.SetRight(System.Windows.UIElement,System.Double)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.Canvas.Right" /> attached property for a given dependency object.</summary>
      <param name="element">The element to which the property value is written.</param>
      <param name="length">Sets the <see cref="P:System.Windows.Controls.Canvas.Right" /> coordinate of the specified element.</param>
    </member>
    <member name="M:System.Windows.Controls.Canvas.SetTop(System.Windows.UIElement,System.Double)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.Canvas.Top" /> attached property for a given dependency object.</summary>
      <param name="element">The element to which the property value is written.</param>
      <param name="length">Sets the <see cref="P:System.Windows.Controls.Canvas.Top" /> coordinate of the specified element.</param>
    </member>
    <member name="P:System.Windows.Controls.Canvas.Top">
      <summary>Gets or sets a value that represents the distance between the top of an element and the top of its parent <see cref="T:System.Windows.Controls.Canvas" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Canvas.TopProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Canvas.Top" /> attached property.</summary>
    </member>
    <member name="T:System.Windows.Controls.CharacterCasing">
      <summary>Specifies the case of characters typed manually into a <see cref="T:System.Windows.Controls.TextBox" /> control.</summary>
    </member>
    <member name="F:System.Windows.Controls.CharacterCasing.Lower">
      <summary>Characters typed into a <see cref="T:System.Windows.Controls.TextBox" /> are converted to lowercase.</summary>
    </member>
    <member name="F:System.Windows.Controls.CharacterCasing.Normal">
      <summary>Characters typed into a <see cref="T:System.Windows.Controls.TextBox" /> are not converted.</summary>
    </member>
    <member name="F:System.Windows.Controls.CharacterCasing.Upper">
      <summary>Characters typed into a <see cref="T:System.Windows.Controls.TextBox" /> are converted to uppercase.</summary>
    </member>
    <member name="T:System.Windows.Controls.CheckBox">
      <summary>Represents a control that a user can select and clear.</summary>
    </member>
    <member name="M:System.Windows.Controls.CheckBox.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.CheckBox" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.CheckBox.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
      <summary>Called when the access key for a <see cref="T:System.Windows.Controls.CheckBox" /> is invoked.</summary>
      <param name="e">The <see cref="T:System.Windows.Input.AccessKeyEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.CheckBox.OnCreateAutomationPeer">
      <summary>Creates an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for the <see cref="T:System.Windows.Controls.CheckBox" />.</summary>
      <returns>An <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for the <see cref="T:System.Windows.Controls.CheckBox" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.CheckBox.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Responds to a <see cref="T:System.Windows.Controls.CheckBox" /><see cref="E:System.Windows.UIElement.KeyDown" /> event.</summary>
      <param name="e">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.Windows.Controls.CleanUpVirtualizedItemEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem" /> event.</summary>
    </member>
    <member name="M:System.Windows.Controls.CleanUpVirtualizedItemEventArgs.#ctor(System.Object,System.Windows.UIElement)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.CleanUpVirtualizedItemEventArgs" /> class.</summary>
      <param name="value">The <see cref="T:System.Object" /> that represents the original data value.</param>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> that represents the data value.</param>
    </member>
    <member name="P:System.Windows.Controls.CleanUpVirtualizedItemEventArgs.Cancel">
      <summary>Gets or sets a value that indicates whether this item should not be re-virtualized.</summary>
      <returns>
        <see langword="true" /> if you want to prevent revirtualization of this item; otherwise <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.CleanUpVirtualizedItemEventArgs.UIElement">
      <summary>Gets an instance of the visual element that represents the data value.</summary>
      <returns>The <see cref="T:System.Windows.UIElement" /> that represents the data value.</returns>
    </member>
    <member name="P:System.Windows.Controls.CleanUpVirtualizedItemEventArgs.Value">
      <summary>Gets an <see cref="T:System.Object" /> that represents the original data value.</summary>
      <returns>The <see cref="T:System.Object" /> that represents the original data value.</returns>
    </member>
    <member name="T:System.Windows.Controls.CleanUpVirtualizedItemEventHandler">
      <summary>Represents the method that handles the <see cref="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem" /> attached events.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Controls.ClickMode">
      <summary>Specifies when the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event should be raised.</summary>
    </member>
    <member name="F:System.Windows.Controls.ClickMode.Hover">
      <summary>Specifies that the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event should be raised when the mouse hovers over a control.</summary>
    </member>
    <member name="F:System.Windows.Controls.ClickMode.Press">
      <summary>Specifies that the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event should be raised as soon as a button is pressed.</summary>
    </member>
    <member name="F:System.Windows.Controls.ClickMode.Release">
      <summary>Specifies that the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event should be raised when a button is pressed and released.</summary>
    </member>
    <member name="T:System.Windows.Controls.ColumnDefinition">
      <summary>Defines column-specific properties that apply to <see cref="T:System.Windows.Controls.Grid" /> elements.</summary>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinition.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ColumnDefinition" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinition.ActualWidth">
      <summary>Gets a value that represents the actual calculated width of a <see cref="T:System.Windows.Controls.ColumnDefinition" />.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the actual calculated width in device independent pixels. The default value is 0.0.</returns>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinition.MaxWidth">
      <summary>Gets or sets a value that represents the maximum width of a <see cref="T:System.Windows.Controls.ColumnDefinition" />.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the maximum width. The default value is <see cref="F:System.Double.PositiveInfinity" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ColumnDefinition.MaxWidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ColumnDefinition.MaxWidth" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinition.MinWidth">
      <summary>Gets or sets a value that represents the minimum width of a <see cref="T:System.Windows.Controls.ColumnDefinition" />.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the minimum width. The default value is 0.</returns>
    </member>
    <member name="F:System.Windows.Controls.ColumnDefinition.MinWidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ColumnDefinition.MinWidth" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinition.Offset">
      <summary>Gets a value that represents the offset value of this <see cref="T:System.Windows.Controls.ColumnDefinition" />.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the offset of the column. The default value is 0.0.</returns>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinition.Width">
      <summary>Gets the calculated width of a <see cref="T:System.Windows.Controls.ColumnDefinition" /> element, or sets the <see cref="T:System.Windows.GridLength" /> value of a column that is defined by the <see cref="T:System.Windows.Controls.ColumnDefinition" />.</summary>
      <returns>The <see cref="T:System.Windows.GridLength" /> that represents the width of the Column. The default value is 1.0.</returns>
    </member>
    <member name="F:System.Windows.Controls.ColumnDefinition.WidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ColumnDefinition.Width" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Controls.ColumnDefinitionCollection">
      <summary>Provides access to an ordered, strongly typed collection of <see cref="T:System.Windows.Controls.ColumnDefinition" /> objects.</summary>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.Add(System.Windows.Controls.ColumnDefinition)">
      <summary>Adds a <see cref="T:System.Windows.Controls.ColumnDefinition" /> element to a <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" />.</summary>
      <param name="value">Identifies the <see cref="T:System.Windows.Controls.ColumnDefinition" /> to add to the collection.</param>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.Clear">
      <summary>Clears the content of the <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.Contains(System.Windows.Controls.ColumnDefinition)">
      <summary>Determines whether a given <see cref="T:System.Windows.Controls.ColumnDefinition" /> exists within a <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" />.</summary>
      <param name="value">Identifies the <see cref="T:System.Windows.Controls.ColumnDefinition" /> that is being tested.</param>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.ColumnDefinition" /> exists within the collection; otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.CopyTo(System.Windows.Controls.ColumnDefinition[],System.Int32)">
      <summary>Copies an array of <see cref="T:System.Windows.Controls.ColumnDefinition" /> objects to a given index position within a <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" />.</summary>
      <param name="array">An array of <see cref="T:System.Windows.Controls.ColumnDefinition" /> objects.</param>
      <param name="index">Identifies the index position within <paramref name="array" /> to which the <see cref="T:System.Windows.Controls.ColumnDefinition" /> objects are copied.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional.  
-or-  
The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination array.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.</exception>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinitionCollection.Count">
      <summary>Gets the total number of items within this instance of <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" />.</summary>
      <returns>The total number of items in the collection. This property has no default value.</returns>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.IndexOf(System.Windows.Controls.ColumnDefinition)">
      <summary>Returns the index position of a given <see cref="T:System.Windows.Controls.ColumnDefinition" /> within a <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" />.</summary>
      <param name="value">The <see cref="T:System.Windows.Controls.ColumnDefinition" /> whose index position is desired.</param>
      <returns>The index of <paramref name="value" /> if found in the collection; otherwise, -1.</returns>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.Insert(System.Int32,System.Windows.Controls.ColumnDefinition)">
      <summary>Inserts a <see cref="T:System.Windows.Controls.ColumnDefinition" /> at the specified index position within a <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" />.</summary>
      <param name="index">The position within the collection where the item is inserted.</param>
      <param name="value">The <see cref="T:System.Windows.Controls.ColumnDefinition" /> to insert.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</exception>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinitionCollection.IsReadOnly">
      <summary>Gets a value that indicates whether a <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> is read-only.</summary>
      <returns>
        <see langword="true" /> if the collection is read-only; otherwise <see langword="false" />. This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinitionCollection.IsSynchronized">
      <summary>Gets a value that indicates whether access to this <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> is synchronized (thread safe).</summary>
      <returns>
        <see langword="true" /> if access to this collection is synchronized; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinitionCollection.Item(System.Int32)">
      <summary>Gets a value that indicates the current item within a <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" />.</summary>
      <param name="index">The current item in the collection.</param>
      <returns>The element at the specified index.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index position in the collection.</exception>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.Remove(System.Windows.Controls.ColumnDefinition)">
      <summary>Removes a <see cref="T:System.Windows.Controls.ColumnDefinition" /> from a <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" />.</summary>
      <param name="value">The <see cref="T:System.Windows.Controls.ColumnDefinition" /> to remove from the collection.</param>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.ColumnDefinition" /> was found in the collection and removed; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.RemoveAt(System.Int32)">
      <summary>Removes a <see cref="T:System.Windows.Controls.ColumnDefinition" /> from a <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> at the specified index position.</summary>
      <param name="index">The position within the collection at which the <see cref="T:System.Windows.Controls.ColumnDefinition" /> is removed.</param>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.RemoveRange(System.Int32,System.Int32)">
      <summary>Removes a range of <see cref="T:System.Windows.Controls.ColumnDefinition" /> objects from a <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" />.</summary>
      <param name="index">The position within the collection at which the first <see cref="T:System.Windows.Controls.ColumnDefinition" /> is removed.</param>
      <param name="count">The total number of <see cref="T:System.Windows.Controls.ColumnDefinition" /> objects to remove from the collection.</param>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinitionCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.System#Collections#Generic#IEnumerable{System#Windows#Controls#ColumnDefinition}#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="array">A zero-based <see cref="T:System.Array" /> that receives the copied items from the <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" />.</param>
      <param name="index">The first position in the specified <see cref="T:System.Array" /> to receive the copied contents.</param>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.System#Collections#IList#Add(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" />.</param>
      <returns>The position into which the new element was inserted.</returns>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.System#Collections#IList#Contains(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" />.</param>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" />.</param>
      <returns>The index of <paramref name="value" /> if found in the list; otherwise, -1.</returns>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index">The zero-based index at which to insert the <see cref="T:System.Object" />.</param>
      <param name="value">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" />.</param>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinitionCollection.System#Collections#IList#IsFixedSize">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> has a fixed size; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinitionCollection.System#Collections#IList#Item(System.Int32)">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
      <param name="index">The zero-based index of the element to get or set.</param>
      <returns>The element at the specified index.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index position in the list.</exception>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.System#Collections#IList#Remove(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="value">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" />.</param>
    </member>
    <member name="T:System.Windows.Controls.ComboBox">
      <summary>Represents a selection control with a drop-down list that can be shown or hidden by clicking the arrow on the control.</summary>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ComboBox" /> class.</summary>
    </member>
    <member name="E:System.Windows.Controls.ComboBox.DropDownClosed">
      <summary>Occurs when the drop-down list of the combo box closes.</summary>
    </member>
    <member name="E:System.Windows.Controls.ComboBox.DropDownOpened">
      <summary>Occurs when the drop-down list of the combo box opens.</summary>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.GetContainerForItemOverride">
      <summary>Creates or identifies the element used to display the specified item.</summary>
      <returns>The element used to display the specified item.</returns>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.HandlesScrolling">
      <summary>Gets a value that indicates whether a combo box supports scrolling.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.ComboBox" /> supports scrolling; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.HasEffectiveKeyboardFocus">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.ComboBox" /> has focus.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.ComboBox" /> has focus; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.IsDropDownOpen">
      <summary>Gets or sets a value that indicates whether the drop-down for a combo box is currently open.</summary>
      <returns>
        <see langword="true" /> if the drop-down is open; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBox.IsDropDownOpenProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ComboBox.IsDropDownOpen" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.IsEditable">
      <summary>Gets or sets a value that enables or disables editing of the text in text box of the <see cref="T:System.Windows.Controls.ComboBox" />.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.ComboBox" /> can be edited; otherwise <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBox.IsEditableProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ComboBox.IsEditable" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.IsItemItsOwnContainerOverride(System.Object)">
      <summary>Determines if the specified item is (or is eligible to be) its own <c>ItemContainer</c>.</summary>
      <param name="item">Specified item.</param>
      <returns>
        <see langword="true" /> if the item is its own <c>ItemContainer</c>; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.IsReadOnly">
      <summary>Gets or sets a value that enables selection-only mode, in which the contents of the combo box are selectable but not editable.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.ComboBox" /> is read-only; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBox.IsReadOnlyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ComboBox.IsReadOnly" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.IsSelectionBoxHighlighted">
      <summary>Gets whether the <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItem" /> is highlighted.</summary>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItem" /> is highlighted; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.MaxDropDownHeight">
      <summary>Gets or sets the maximum height for a combo box drop-down.</summary>
      <returns>A double that represents the height that is retrieved or the height to set. The default value as defined to the property system is a calculated value based on taking a one-third fraction of the system max screen height parameters, but this default is potentially overridden by various control templates.</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBox.MaxDropDownHeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ComboBox.MaxDropDownHeight" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnApplyTemplate">
      <summary>Called when <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> is called.</summary>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnCreateAutomationPeer">
      <summary>Provides an appropriate <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" /> implementation for this control, as part of the WPF infrastructure.</summary>
      <returns>The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</returns>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnDropDownClosed(System.EventArgs)">
      <summary>Reports when a combo box's popup closes.</summary>
      <param name="e">The event data for the <see cref="E:System.Windows.Controls.ComboBox.DropDownClosed" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnDropDownOpened(System.EventArgs)">
      <summary>Reports when a combo box's popup opens.</summary>
      <param name="e">The event data for the <see cref="E:System.Windows.Controls.ComboBox.DropDownOpened" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Reports that the <see cref="P:System.Windows.ContentElement.IsKeyboardFocusWithin" /> property changed.</summary>
      <param name="e">The event data for the <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Called when the <see cref="P:System.Windows.UIElement.IsMouseCaptured" /> property changes.</summary>
      <param name="e">The event data for the <see cref="E:System.Windows.UIElement.IsMouseCapturedChanged" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Invoked when a <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached routed event occurs.</summary>
      <param name="e">Event data.</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Called to report that the left mouse button was released.</summary>
      <param name="e">The event data for the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Invoked when a <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached routed event occurs.</summary>
      <param name="e">Event data.</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
      <summary>Responds to a <see cref="T:System.Windows.Controls.ComboBox" /> selection change by raising a <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> event.</summary>
      <param name="e">Provides data for <see cref="T:System.Windows.Controls.SelectionChangedEventArgs" />.</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>Prepares the specified element to display the specified item.</summary>
      <param name="element">Element used to display the specified item.</param>
      <param name="item">Specified item.</param>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.SelectionBoxItem">
      <summary>Gets the item that is displayed in the selection box.</summary>
      <returns>The selected item.</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBox.SelectionBoxItemProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItem" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.SelectionBoxItemStringFormat">
      <summary>Gets a composite string that specifies how to format the selected item in the selection box if it is displayed as a string.</summary>
      <returns>A composite string that specifies how to format the selected item in the selection box if it is displayed as a string.</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBox.SelectionBoxItemStringFormatProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItemStringFormat" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.SelectionBoxItemTemplate">
      <summary>Gets the item template of the selection box content.</summary>
      <returns>An item template.</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBox.SelectionBoxItemTemplateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItemTemplate" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.ComboBox" /> keeps the user's input or replaces the input with a matching item.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.ComboBox" /> keeps the user's input; <see langword="false" /> if the <see cref="T:System.Windows.Controls.ComboBox" /> replaces the input with a matching item The registered default is <see langword="false" />. For more information about what can influence the value, see Dependency Property Value Precedence.</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefixProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.StaysOpenOnEdit">
      <summary>Gets or sets whether a <see cref="T:System.Windows.Controls.ComboBox" /> that is open and displays a drop-down control will remain open when a user clicks the <see cref="T:System.Windows.Controls.TextBox" />.</summary>
      <returns>
        <see langword="true" /> to keep the drop-down control open when the user clicks on the text area to start editing; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBox.StaysOpenOnEditProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ComboBox.StaysOpenOnEdit" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.Text">
      <summary>Gets or sets the text of the currently selected item.</summary>
      <returns>The string of the currently selected item. The default is an empty string ("").</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBox.TextProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ComboBox.Text" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Controls.ComboBoxItem">
      <summary>Implements a selectable item inside a <see cref="T:System.Windows.Controls.ComboBox" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.ComboBoxItem.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ComboBoxItem" /> class</summary>
    </member>
    <member name="P:System.Windows.Controls.ComboBoxItem.IsHighlighted">
      <summary>Gets a value that indicates whether the item is highlighted.</summary>
      <returns>
        <see langword="true" /> if a <see cref="T:System.Windows.Controls.ComboBoxItem" /> is highlighted; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBoxItem.IsHighlightedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ComboBoxItem.IsHighlighted" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.ComboBoxItem.OnContentChanged(System.Object,System.Object)">
      <summary>Called when the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property changes.</summary>
      <param name="oldContent">Old content.</param>
      <param name="newContent">New content.</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBoxItem.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>Announces that the keyboard is focused on this element.</summary>
      <param name="e">Keyboard input event arguments.</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBoxItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>Responds to a <see cref="E:System.Windows.UIElement.MouseEnter" /> event.</summary>
      <param name="e">Provides data for <see cref="T:System.Windows.Input.MouseEventArgs" />.</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBoxItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Responds to the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> event.</summary>
      <param name="e">Provides data for <see cref="T:System.Windows.Input.MouseButtonEventArgs" />.</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBoxItem.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Responds to the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> event.</summary>
      <param name="e">Provides data for <see cref="T:System.Windows.Input.MouseButtonEventArgs" />.</param>
    </member>
    <member name="T:System.Windows.Controls.ContentControl">
      <summary>Represents a control with a single piece of content of any type.</summary>
    </member>
    <member name="M:System.Windows.Controls.ContentControl.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ContentControl" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.ContentControl.AddChild(System.Object)">
      <summary>Adds a specified object as the child of a <see cref="T:System.Windows.Controls.ContentControl" />.</summary>
      <param name="value">The object to add.</param>
    </member>
    <member name="M:System.Windows.Controls.ContentControl.AddText(System.String)">
      <summary>Adds a specified text string to a <see cref="T:System.Windows.Controls.ContentControl" />.</summary>
      <param name="text">The string to add.</param>
    </member>
    <member name="P:System.Windows.Controls.ContentControl.Content">
      <summary>Gets or sets the content of a <see cref="T:System.Windows.Controls.ContentControl" />.</summary>
      <returns>An object that contains the control's content. The default value is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentControl.ContentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ContentControl.Content" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ContentControl.ContentStringFormat">
      <summary>Gets or sets a composite string that specifies how to format the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property if it is displayed as a string.</summary>
      <returns>A composite string that specifies how to format the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property if it is displayed as a string.</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentControl.ContentStringFormatProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ContentControl.ContentStringFormat" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ContentControl.ContentTemplate">
      <summary>Gets or sets the data template used to display the content of the <see cref="T:System.Windows.Controls.ContentControl" />.</summary>
      <returns>A data template. The default value is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentControl.ContentTemplateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ContentControl.ContentTemplate" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ContentControl.ContentTemplateSelector">
      <summary>Gets or sets a template selector that enables an application writer to provide custom template-selection logic.</summary>
      <returns>A data template selector. The default value is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentControl.ContentTemplateSelectorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ContentControl.ContentTemplateSelector" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ContentControl.HasContent">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.ContentControl" /> contains content.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.ContentControl" /> has content; otherwise <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentControl.HasContentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ContentControl.HasContent" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ContentControl.LogicalChildren">
      <summary>Gets an enumerator to the content control's logical child elements.</summary>
      <returns>An enumerator. The default value is <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.ContentControl.OnContentChanged(System.Object,System.Object)">
      <summary>Called when the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property changes.</summary>
      <param name="oldContent">The old value of the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property.</param>
      <param name="newContent">The new value of the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.ContentControl.OnContentStringFormatChanged(System.String,System.String)">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.ContentControl.ContentStringFormat" /> property changes.</summary>
      <param name="oldContentStringFormat">The old value of <see cref="P:System.Windows.Controls.ContentControl.ContentStringFormat" />.</param>
      <param name="newContentStringFormat">The new value of <see cref="P:System.Windows.Controls.ContentControl.ContentStringFormat" />.</param>
    </member>
    <member name="M:System.Windows.Controls.ContentControl.OnContentTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>Called when the <see cref="P:System.Windows.Controls.ContentControl.ContentTemplate" /> property changes.</summary>
      <param name="oldContentTemplate">The old value of the <see cref="P:System.Windows.Controls.ContentControl.ContentTemplate" /> property.</param>
      <param name="newContentTemplate">The new value of the <see cref="P:System.Windows.Controls.ContentControl.ContentTemplate" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.ContentControl.OnContentTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)">
      <summary>Called when the <see cref="P:System.Windows.Controls.ContentControl.ContentTemplateSelector" /> property changes.</summary>
      <param name="oldContentTemplateSelector">The old value of the <see cref="P:System.Windows.Controls.ContentControl.ContentTemplateSelector" /> property.</param>
      <param name="newContentTemplateSelector">The new value of the <see cref="P:System.Windows.Controls.ContentControl.ContentTemplateSelector" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.ContentControl.ShouldSerializeContent">
      <summary>Indicates whether the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property should be persisted.</summary>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property should be persisted; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.ContentControl.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="value">An object to add as a child.</param>
    </member>
    <member name="M:System.Windows.Controls.ContentControl.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="text">A string to add to the object.</param>
    </member>
    <member name="T:System.Windows.Controls.ContentPresenter">
      <summary>Displays the content of a <see cref="T:System.Windows.Controls.ContentControl" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.ContentPresenter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ContentPresenter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.ContentPresenter.ArrangeOverride(System.Windows.Size)">
      <summary>Positions the single child element and determines the content of a <see cref="T:System.Windows.Controls.ContentPresenter" /> object.</summary>
      <param name="arrangeSize">The size that this <see cref="T:System.Windows.Controls.ContentPresenter" /> object should use to arrange its child element.</param>
      <returns>The actual size needed by the element.</returns>
    </member>
    <member name="M:System.Windows.Controls.ContentPresenter.ChooseTemplate">
      <summary>Returns the template to use. This may depend on the content or other properties.</summary>
      <returns>The <see cref="T:System.Windows.DataTemplate" /> to use.</returns>
    </member>
    <member name="P:System.Windows.Controls.ContentPresenter.Content">
      <summary>Gets or sets the data used to generate the child elements of a <see cref="T:System.Windows.Controls.ContentPresenter" />.</summary>
      <returns>The data used to generate the child elements. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentPresenter.ContentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ContentPresenter.Content" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ContentPresenter.ContentSource">
      <summary>Gets or sets the base name to use during automatic aliasing.</summary>
      <returns>The base name to use during automatic aliasing. The default is "Content".</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentPresenter.ContentSourceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ContentPresenter.ContentSource" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ContentPresenter.ContentStringFormat">
      <summary>Gets or sets a composite string that specifies how to format the <see cref="P:System.Windows.Controls.ContentPresenter.Content" /> property if it is displayed as a string.</summary>
      <returns>A composite string that specifies how to format the <see cref="P:System.Windows.Controls.ContentPresenter.Content" /> property if it is displayed as a string. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentPresenter.ContentStringFormatProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ContentPresenter.ContentStringFormat" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ContentPresenter.ContentTemplate">
      <summary>Gets or sets the template used to display the content of the control.</summary>
      <returns>A <see cref="T:System.Windows.DataTemplate" /> that defines the visualization of the content. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentPresenter.ContentTemplateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplate" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector">
      <summary>Gets or sets the <see cref="T:System.Windows.Controls.DataTemplateSelector" />, which allows the application writer to provide custom logic for choosing the template that is used to display the content of the control.</summary>
      <returns>A <see cref="T:System.Windows.Controls.DataTemplateSelector" /> object that supplies logic to return a <see cref="T:System.Windows.DataTemplate" /> to apply. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentPresenter.ContentTemplateSelectorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.ContentPresenter.MeasureOverride(System.Windows.Size)">
      <summary>Determines the size of the <see cref="T:System.Windows.Controls.ContentPresenter" /> object based on the sizing properties, margin, and requested size of the child content.</summary>
      <param name="constraint">An upper limit value that the return value should not exceed.</param>
      <returns>The size that is required to arrange child content.</returns>
    </member>
    <member name="M:System.Windows.Controls.ContentPresenter.OnContentStringFormatChanged(System.String,System.String)">
      <summary>Invoked when the <see cref="P:System.Windows.Controls.ContentPresenter.ContentStringFormat" /> property changes.</summary>
      <param name="oldContentStringFormat">The old value of the <see cref="P:System.Windows.Controls.ContentPresenter.ContentStringFormat" /> property.</param>
      <param name="newContentStringFormat">The new value of the <see cref="P:System.Windows.Controls.ContentPresenter.ContentStringFormat" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.ContentPresenter.OnContentTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>Invoked when the <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplate" /> changes.</summary>
      <param name="oldContentTemplate">The old value of the <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplate" /> property.</param>
      <param name="newContentTemplate">The new value of the <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplate" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.ContentPresenter.OnContentTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)">
      <summary>Invoked when the <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector" /> property changes.</summary>
      <param name="oldContentTemplateSelector">The old value of the <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector" /> property.</param>
      <param name="newContentTemplateSelector">The new value of the <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.ContentPresenter.OnTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>Invoked when the <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplate" /> changes</summary>
      <param name="oldTemplate">The old <see cref="T:System.Windows.DataTemplate" /> object value.</param>
      <param name="newTemplate">The new <see cref="T:System.Windows.DataTemplate" /> object value.</param>
    </member>
    <member name="P:System.Windows.Controls.ContentPresenter.RecognizesAccessKey">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.ContentPresenter" /> should use <see cref="T:System.Windows.Controls.AccessText" /> in its style.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.ContentPresenter" /> should use <see cref="T:System.Windows.Controls.AccessText" /> in its style; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentPresenter.RecognizesAccessKeyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ContentPresenter.RecognizesAccessKey" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.ContentPresenter.ShouldSerializeContentTemplateSelector">
      <summary>Returns a value that indicates whether serialization processes should serialize the effective value of the <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector" /> property on instances of this class.</summary>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector" /> property value should be serialized; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.ContextMenu">
      <summary>Represents a pop-up menu that enables a control to expose functionality that is specific to the context of the control.</summary>
    </member>
    <member name="M:System.Windows.Controls.ContextMenu.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ContextMenu" /> class.</summary>
    </member>
    <member name="E:System.Windows.Controls.ContextMenu.Closed">
      <summary>Occurs when a particular instance of a <see cref="T:System.Windows.Controls.ContextMenu" /> closes.</summary>
    </member>
    <member name="F:System.Windows.Controls.ContextMenu.ClosedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.ContextMenu.Closed" /> routed event.</summary>
    </member>
    <member name="P:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback">
      <summary>Gets or sets a callback that indicates where a <see cref="T:System.Windows.Controls.ContextMenu" /> should be placed on the screen.</summary>
      <returns>A callback that specifies the location of the <see cref="T:System.Windows.Controls.ContextMenu" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallbackProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ContextMenu.HandlesScrolling">
      <summary>Gets a value that indicates whether the control supports scrolling.</summary>
      <returns>Always <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.ContextMenu.HasDropShadow">
      <summary>Gets or sets a value that indicates whether the context menu appears with a dropped shadow.</summary>
      <returns>
        <see langword="true" /> if the context menu appears with a dropped shadow; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenu.HasDropShadowProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ContextMenu.HasDropShadow" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ContextMenu.HorizontalOffset">
      <summary>Get or sets the horizontal distance between the target origin and the popup alignment point.</summary>
      <returns>The horizontal distance between the target origin and the popup alignment point. For information about the target origin and popup alignment point, see Popup Placement Behavior. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenu.HorizontalOffsetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ContextMenu.HorizontalOffset" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ContextMenu.IsOpen">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.ContextMenu" /> is visible.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.ContextMenu" /> is visible; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenu.IsOpenProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ContextMenu.IsOpen" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.ContextMenu.OnClosed(System.Windows.RoutedEventArgs)">
      <summary>Called when the <see cref="E:System.Windows.Controls.ContextMenu.Closed" /> event occurs.</summary>
      <param name="e">The event data for the <see cref="E:System.Windows.Controls.ContextMenu.Closed" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenu.OnCreateAutomationPeer">
      <summary>Creates and returns a <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" /> object for this <see cref="T:System.Windows.Controls.ContextMenu" />.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" /> object for this <see cref="T:System.Windows.Controls.ContextMenu" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.ContextMenu.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Reports that the <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" /> property changed.</summary>
      <param name="e">The event data for the <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenu.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Called when a <see cref="E:System.Windows.ContentElement.KeyDown" /> event is raised by an object inside the <see cref="T:System.Windows.Controls.ContextMenu" />.</summary>
      <param name="e">The event data for the <see cref="E:System.Windows.UIElement.KeyDown" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenu.OnKeyUp(System.Windows.Input.KeyEventArgs)">
      <summary>Responds to the <see cref="E:System.Windows.ContentElement.KeyUp" /> event.</summary>
      <param name="e">The event data for the <see cref="E:System.Windows.UIElement.KeyUp" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenu.OnOpened(System.Windows.RoutedEventArgs)">
      <summary>Called when the <see cref="E:System.Windows.Controls.ContextMenu.Opened" /> event occurs.</summary>
      <param name="e">The event data for the <see cref="E:System.Windows.Controls.ContextMenu.Opened" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenu.OnVisualParentChanged(System.Windows.DependencyObject)">
      <summary>Called when a context menu's visual parent changes.</summary>
      <param name="oldParent">The object that the context menu was previously attached to.</param>
    </member>
    <member name="E:System.Windows.Controls.ContextMenu.Opened">
      <summary>Occurs when a particular instance of a context menu opens.</summary>
    </member>
    <member name="F:System.Windows.Controls.ContextMenu.OpenedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.ContextMenu.Opened" /> routed event.</summary>
    </member>
    <member name="P:System.Windows.Controls.ContextMenu.Placement">
      <summary>Gets or sets the <see cref="P:System.Windows.Controls.ContextMenu.Placement" /> property of a <see cref="T:System.Windows.Controls.ContextMenu" />.</summary>
      <returns>One of the <see cref="T:System.Windows.Controls.Primitives.PlacementMode" /> enumeration. The default is <see cref="F:System.Windows.Controls.Primitives.PlacementMode.MousePoint" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenu.PlacementProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ContextMenu.Placement" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ContextMenu.PlacementRectangle">
      <summary>Gets or sets the area relative to which the context menu is positioned when it opens.</summary>
      <returns>The area that defines the rectangle that is used to position the context menu. The default is <see cref="P:System.Windows.Rect.Empty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenu.PlacementRectangleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ContextMenu.PlacementRectangle" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ContextMenu.PlacementTarget">
      <summary>Gets or sets the <see cref="T:System.Windows.UIElement" /> relative to which the <see cref="T:System.Windows.Controls.ContextMenu" /> is positioned when it opens.</summary>
      <returns>The element relative to which the <see cref="T:System.Windows.Controls.ContextMenu" /> is positioned when it opens. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenu.PlacementTargetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ContextMenu.PlacementTarget" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.ContextMenu.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>Prepares the specified element to display the specified item.</summary>
      <param name="element">Element used to display the specified item.</param>
      <param name="item">Specified item.</param>
    </member>
    <member name="P:System.Windows.Controls.ContextMenu.StaysOpen">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.ContextMenu" /> should close automatically.</summary>
      <returns>
        <see langword="true" /> if the menu should stay open until the <see cref="P:System.Windows.Controls.ContextMenu.IsOpen" /> property changes to <see langword="false" />; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenu.StaysOpenProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ContextMenu.StaysOpen" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ContextMenu.VerticalOffset">
      <summary>Get or sets the vertical distance between the target origin and the popup alignment point.</summary>
      <returns>The vertical distance between the target origin and the popup alignment point. For information about the target origin and popup alignment point, see Popup Placement Behavior. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenu.VerticalOffsetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ContextMenu.VerticalOffset" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Controls.ContextMenuEventArgs">
      <summary>Provides data for the context menu event.</summary>
    </member>
    <member name="P:System.Windows.Controls.ContextMenuEventArgs.CursorLeft">
      <summary>Gets the horizontal position of the mouse.</summary>
      <returns>The horizontal position of the mouse.</returns>
    </member>
    <member name="P:System.Windows.Controls.ContextMenuEventArgs.CursorTop">
      <summary>Gets the vertical position of the mouse.</summary>
      <returns>The vertical position of the mouse.</returns>
    </member>
    <member name="T:System.Windows.Controls.ContextMenuEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> and <see cref="E:System.Windows.FrameworkElement.ContextMenuClosing" /> routed events, as well as equivalent <see cref="T:System.Windows.ContentElement" /> events.</summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Controls.ContextMenuService">
      <summary>Provides the system implementation for displaying a <see cref="T:System.Windows.Controls.ContextMenu" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.AddContextMenuClosingHandler(System.Windows.DependencyObject,System.Windows.Controls.ContextMenuEventHandler)">
      <summary>Adds a handler for the <see cref="E:System.Windows.Controls.ContextMenuService.ContextMenuClosing" /> attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</param>
      <param name="handler">The event handler to be added.</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.AddContextMenuOpeningHandler(System.Windows.DependencyObject,System.Windows.Controls.ContextMenuEventHandler)">
      <summary>Adds a handler for the <see cref="E:System.Windows.Controls.ContextMenuService.ContextMenuOpening" /> attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</param>
      <param name="handler">The event handler to be added.</param>
    </member>
    <member name="P:System.Windows.Controls.ContextMenuService.ContextMenu">
      <summary>Gets or sets the content of a <see cref="T:System.Windows.Controls.ContextMenu" />.</summary>
    </member>
    <member name="E:System.Windows.Controls.ContextMenuService.ContextMenuClosing">
      <summary>Occurs when the <see cref="T:System.Windows.Controls.ContextMenu" /> closes.</summary>
    </member>
    <member name="F:System.Windows.Controls.ContextMenuService.ContextMenuClosingEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.ContextMenuService.ContextMenuClosing" /> routed event.</summary>
    </member>
    <member name="E:System.Windows.Controls.ContextMenuService.ContextMenuOpening">
      <summary>Occurs when the <see cref="T:System.Windows.Controls.ContextMenu" /> opens.</summary>
    </member>
    <member name="F:System.Windows.Controls.ContextMenuService.ContextMenuOpeningEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.ContextMenuService.ContextMenuOpening" /> attached event.</summary>
    </member>
    <member name="F:System.Windows.Controls.ContextMenuService.ContextMenuProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ContextMenuService.ContextMenu" /> attached property.</summary>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.GetContextMenu(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.ContextMenuService.ContextMenu" /> property of the specified object.</summary>
      <param name="element">Object to query concerning the <see cref="P:System.Windows.FrameworkElement.ContextMenu" /> property.</param>
      <returns>Value of the <see cref="P:System.Windows.Controls.ContextMenuService.ContextMenu" /> property.</returns>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.GetHasDropShadow(System.Windows.DependencyObject)">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.ContextMenu" /> has a drop shadow.</summary>
      <param name="element">Object to query concerning whether it has a drop shadow.</param>
      <returns>A Boolean value, <see langword="true" /> if the <see cref="T:System.Windows.Controls.ContextMenu" /> has a drop shadow; <see langword="false" /> otherwise.</returns>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.GetHorizontalOffset(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.ContextMenuService.HorizontalOffset" /> property of the specified object.</summary>
      <param name="element">Object to query concerning the <see cref="P:System.Windows.Controls.ContextMenuService.HorizontalOffset" /> property.</param>
      <returns>Value of the <see cref="P:System.Windows.Controls.ContextMenuService.HorizontalOffset" /> property.</returns>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.GetIsEnabled(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.ContextMenuService.IsEnabled" /> property of the specified object.</summary>
      <param name="element">Object to query concerning the <see cref="P:System.Windows.Controls.ContextMenuService.IsEnabled" /> property.</param>
      <returns>Value of the <see cref="P:System.Windows.Controls.ContextMenuService.IsEnabled" /> property.</returns>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.GetPlacement(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.ContextMenuService.Placement" /> property of the specified object.</summary>
      <param name="element">Object to query concerning the <see cref="P:System.Windows.Controls.ContextMenuService.Placement" /> property.</param>
      <returns>Value of the <see cref="P:System.Windows.Controls.ContextMenuService.Placement" /> property.</returns>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.GetPlacementRectangle(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.ContextMenuService.PlacementRectangle" /> property of the specified object.</summary>
      <param name="element">Object to query concerning the <see cref="P:System.Windows.Controls.ContextMenuService.PlacementRectangle" /> property.</param>
      <returns>Value of the <see cref="P:System.Windows.Controls.ContextMenuService.PlacementRectangle" /> property.</returns>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.GetPlacementTarget(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.ContextMenuService.PlacementTarget" /> property of the specified object.</summary>
      <param name="element">Object to query concerning the <see cref="P:System.Windows.Controls.ContextMenuService.PlacementTarget" /> property.</param>
      <returns>Value of the <see cref="P:System.Windows.Controls.ContextMenuService.PlacementTarget" /> property.</returns>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.GetShowOnDisabled(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.ContextMenuService.ShowOnDisabled" /> property of the specified object.</summary>
      <param name="element">Object to query concerning the <see cref="P:System.Windows.Controls.ContextMenuService.ShowOnDisabled" /> property.</param>
      <returns>Value of the <see cref="P:System.Windows.Controls.ContextMenuService.ShowOnDisabled" /> property.</returns>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.GetVerticalOffset(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.ContextMenuService.VerticalOffset" /> property of the specified object.</summary>
      <param name="element">Object to query concerning the <see cref="P:System.Windows.Controls.ContextMenuService.VerticalOffset" /> property.</param>
      <returns>Value of the <see cref="P:System.Windows.Controls.ContextMenuService.VerticalOffset" /> property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ContextMenuService.HasDropShadow">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.ContextMenu" /> has the drop shadow effect enabled.</summary>
    </member>
    <member name="F:System.Windows.Controls.ContextMenuService.HasDropShadowProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ContextMenuService.HasDropShadow" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ContextMenuService.HorizontalOffset">
      <summary>Gets or sets a value that indicates where along the x-direction to place the <see cref="T:System.Windows.Controls.ContextMenu" /> with respect to the parent control.</summary>
    </member>
    <member name="F:System.Windows.Controls.ContextMenuService.HorizontalOffsetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ContextMenuService.HorizontalOffset" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ContextMenuService.IsEnabled">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.ContextMenu" /> can be shown.</summary>
    </member>
    <member name="F:System.Windows.Controls.ContextMenuService.IsEnabledProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ContextMenuService.IsEnabled" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ContextMenuService.Placement">
      <summary>Gets or sets a value that specifies the placement of the <see cref="T:System.Windows.Controls.ContextMenu" /> relative to the <see cref="P:System.Windows.Controls.ContextMenuService.PlacementTarget" /> or <see cref="P:System.Windows.Controls.ContextMenuService.PlacementRectangle" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.ContextMenuService.PlacementProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ContextMenuService.Placement" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ContextMenuService.PlacementRectangle">
      <summary>Gets or sets the area relative to which the context menu is positioned when it opens.</summary>
    </member>
    <member name="F:System.Windows.Controls.ContextMenuService.PlacementRectangleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ContextMenuService.PlacementRectangle" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ContextMenuService.PlacementTarget">
      <summary>Gets or sets the parent control of the <see cref="T:System.Windows.Controls.ContextMenu" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.ContextMenuService.PlacementTargetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ContextMenuService.PlacementTarget" /> attached property.</summary>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.RemoveContextMenuClosingHandler(System.Windows.DependencyObject,System.Windows.Controls.ContextMenuEventHandler)">
      <summary>Removes a handler for the <see cref="E:System.Windows.Controls.ContextMenuService.ContextMenuClosing" /> attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</param>
      <param name="handler">The event handler to be removed.</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.RemoveContextMenuOpeningHandler(System.Windows.DependencyObject,System.Windows.Controls.ContextMenuEventHandler)">
      <summary>Removes a handler for the <see cref="E:System.Windows.Controls.ContextMenuService.ContextMenuOpening" /> attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</param>
      <param name="handler">The event handler to be removed.</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.SetContextMenu(System.Windows.DependencyObject,System.Windows.Controls.ContextMenu)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.ContextMenuService.ContextMenu" /> property of the specified object.</summary>
      <param name="element">Object to set the property on.</param>
      <param name="value">Value to set.</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.SetHasDropShadow(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets a value that indicates whether the <see cref="T:System.Windows.Controls.ContextMenu" /> has a drop shadow.</summary>
      <param name="element">Object to set the property on.</param>
      <param name="value">Boolean value to set, <see langword="true" /> if the <see cref="T:System.Windows.Controls.ContextMenu" /> has a drop shadow; <see langword="false" /> otherwise.</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.SetHorizontalOffset(System.Windows.DependencyObject,System.Double)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.ContextMenuService.HorizontalOffset" /> property of the specified object.</summary>
      <param name="element">Object to set the value on.</param>
      <param name="value">Value to set.</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.SetIsEnabled(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.ContextMenuService.IsEnabled" /> property of the specified object.</summary>
      <param name="element">Object to set value on.</param>
      <param name="value">Value to set.</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.SetPlacement(System.Windows.DependencyObject,System.Windows.Controls.Primitives.PlacementMode)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.ContextMenuService.Placement" /> property of the specified object.</summary>
      <param name="element">Object to set the value on.</param>
      <param name="value">Value to set.</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.SetPlacementRectangle(System.Windows.DependencyObject,System.Windows.Rect)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.ContextMenuService.PlacementRectangle" /> property of the specified object.</summary>
      <param name="element">Object to set the value on.</param>
      <param name="value">Value to set.</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.SetPlacementTarget(System.Windows.DependencyObject,System.Windows.UIElement)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.ContextMenuService.PlacementTarget" /> property of the specified object.</summary>
      <param name="element">Object to set value on.</param>
      <param name="value">Value to set.</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.SetShowOnDisabled(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.ContextMenuService.ShowOnDisabled" /> property of the specified object.</summary>
      <param name="element">Object to set value on.</param>
      <param name="value">Value to set.</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.SetVerticalOffset(System.Windows.DependencyObject,System.Double)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.ContextMenuService.VerticalOffset" /> property of the specified object.</summary>
      <param name="element">Object to set value on.</param>
      <param name="value">Value to set.</param>
    </member>
    <member name="P:System.Windows.Controls.ContextMenuService.ShowOnDisabled">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.ContextMenu" /> should be shown when its parent is grayed out.</summary>
    </member>
    <member name="F:System.Windows.Controls.ContextMenuService.ShowOnDisabledProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ContextMenuService.ShowOnDisabled" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ContextMenuService.VerticalOffset">
      <summary>Gets or sets a value that indicates where along the y-direction to place the <see cref="T:System.Windows.Controls.ContextMenu" /> with respect to the parent control.</summary>
    </member>
    <member name="F:System.Windows.Controls.ContextMenuService.VerticalOffsetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ContextMenuService.VerticalOffset" /> attached property.</summary>
    </member>
    <member name="T:System.Windows.Controls.Control">
      <summary>Represents the base class for user interface (UI) elements that use a <see cref="T:System.Windows.Controls.ControlTemplate" /> to define their appearance.</summary>
    </member>
    <member name="M:System.Windows.Controls.Control.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Control" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.Control.ArrangeOverride(System.Windows.Size)">
      <summary>Called to arrange and size the content of a <see cref="T:System.Windows.Controls.Control" /> object.</summary>
      <param name="arrangeBounds">The computed size that is used to arrange the content.</param>
      <returns>The size of the control.</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.Background">
      <summary>Gets or sets a brush that describes the background of a control.</summary>
      <returns>The brush that is used to fill the background of the control. The default is <see cref="P:System.Windows.Media.Brushes.Transparent" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.BackgroundProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Control.Background" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Control.BorderBrush">
      <summary>Gets or sets a brush that describes the border background of a control.</summary>
      <returns>The brush that is used to fill the control's border; the default is <see cref="P:System.Windows.Media.Brushes.Transparent" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.BorderBrushProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Control.BorderBrush" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Control.BorderThickness">
      <summary>Gets or sets the border thickness of a control.</summary>
      <returns>A thickness value; the default is a thickness of 0 on all four sides.</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.BorderThicknessProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Control.BorderThickness" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Control.FontFamily">
      <summary>Gets or sets the font family of the control.</summary>
      <returns>A font family. The default is the system dialog font.</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.FontFamilyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Control.FontFamily" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Control.FontSize">
      <summary>Gets or sets the font size.</summary>
      <returns>The size of the text in the <see cref="T:System.Windows.Controls.Control" />. The default is <see cref="P:System.Windows.SystemFonts.MessageFontSize" />. The font size must be a positive number.</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.FontSizeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Control.FontSize" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Control.FontStretch">
      <summary>Gets or sets the degree to which a font is condensed or expanded on the screen.</summary>
      <returns>A <see cref="T:System.Windows.FontStretch" /> value. The default is <see cref="P:System.Windows.FontStretches.Normal" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.FontStretchProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Control.FontStretch" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Control.FontStyle">
      <summary>Gets or sets the font style.</summary>
      <returns>A <see cref="T:System.Windows.FontStyle" /> value. The default is <see cref="P:System.Windows.FontStyles.Normal" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.FontStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Control.FontStyle" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Control.FontWeight">
      <summary>Gets or sets the weight or thickness of the specified font.</summary>
      <returns>A <see cref="T:System.Windows.FontWeight" /> value. The default is <see cref="P:System.Windows.FontWeights.Normal" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.FontWeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Control.FontWeight" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Control.Foreground">
      <summary>Gets or sets a brush that describes the foreground color.</summary>
      <returns>The brush that paints the foreground of the control. The default value is the system dialog font color.</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.ForegroundProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Control.Foreground" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Control.HandlesScrolling">
      <summary>Gets a value that indicates whether a control supports scrolling.</summary>
      <returns>
        <see langword="true" /> if the control has a <see cref="T:System.Windows.Controls.ScrollViewer" /> in its style and has a custom keyboard scrolling behavior; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.HorizontalContentAlignment">
      <summary>Gets or sets the horizontal alignment of the control's content.</summary>
      <returns>One of the <see cref="T:System.Windows.HorizontalAlignment" /> values. The default is <see cref="F:System.Windows.HorizontalAlignment.Left" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.HorizontalContentAlignmentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Control.HorizontalContentAlignment" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Control.IsTabStop">
      <summary>Gets or sets a value that indicates whether a control is included in tab navigation.</summary>
      <returns>
        <see langword="true" /> if the control is included in tab navigation; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.IsTabStopProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Control.IsTabStop" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.Control.MeasureOverride(System.Windows.Size)">
      <summary>Called to remeasure a control.</summary>
      <param name="constraint">The maximum size that the method can return.</param>
      <returns>The size of the control, up to the maximum specified by <paramref name="constraint" />.</returns>
    </member>
    <member name="E:System.Windows.Controls.Control.MouseDoubleClick">
      <summary>Occurs when a mouse button is clicked two or more times.</summary>
    </member>
    <member name="F:System.Windows.Controls.Control.MouseDoubleClickEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.Control.MouseDoubleClick" /> routed event.</summary>
    </member>
    <member name="M:System.Windows.Controls.Control.OnMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.Control.MouseDoubleClick" /> routed event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnPreviewMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.Control.PreviewMouseDoubleClick" /> routed event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)">
      <summary>Called whenever the control's template changes.</summary>
      <param name="oldTemplate">The old template.</param>
      <param name="newTemplate">The new template.</param>
    </member>
    <member name="P:System.Windows.Controls.Control.Padding">
      <summary>Gets or sets the padding inside a control.</summary>
      <returns>The amount of space between the content of a <see cref="T:System.Windows.Controls.Control" /> and its <see cref="P:System.Windows.FrameworkElement.Margin" /> or <see cref="T:System.Windows.Controls.Border" />.  The default is a thickness of 0 on all four sides.</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.PaddingProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Control.Padding" /> dependency property.</summary>
    </member>
    <member name="E:System.Windows.Controls.Control.PreviewMouseDoubleClick">
      <summary>Occurs when a user clicks the mouse button two or more times.</summary>
    </member>
    <member name="F:System.Windows.Controls.Control.PreviewMouseDoubleClickEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.Control.PreviewMouseDoubleClick" /> routed event.</summary>
    </member>
    <member name="P:System.Windows.Controls.Control.TabIndex">
      <summary>Gets or sets a value that determines the order in which elements receive focus when the user navigates through controls by using the TAB key.</summary>
      <returns>A value that determines the order of logical navigation for a device. The default value is <see cref="F:System.Int32.MaxValue" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.TabIndexProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Control.TabIndex" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Control.Template">
      <summary>Gets or sets a control template.</summary>
      <returns>The template that defines the appearance of the <see cref="T:System.Windows.Controls.Control" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.TemplateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Control.Template" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.Control.ToString">
      <summary>Returns the string representation of a <see cref="T:System.Windows.Controls.Control" /> object.</summary>
      <returns>A string that represents the control.</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.VerticalContentAlignment">
      <summary>Gets or sets the vertical alignment of the control's content.</summary>
      <returns>One of the <see cref="T:System.Windows.VerticalAlignment" /> values. The default is <see cref="F:System.Windows.VerticalAlignment.Top" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.VerticalContentAlignmentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Control.VerticalContentAlignment" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Controls.ControlTemplate">
      <summary>Specifies the visual structure and behavioral aspects of a <see cref="T:System.Windows.Controls.Control" /> that can be shared across multiple instances of the control.</summary>
    </member>
    <member name="M:System.Windows.Controls.ControlTemplate.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ControlTemplate" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.ControlTemplate.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ControlTemplate" /> class with the specified target type.</summary>
      <param name="targetType">The type this template is intended for.</param>
    </member>
    <member name="P:System.Windows.Controls.ControlTemplate.TargetType">
      <summary>Gets or sets the type for which this <see cref="T:System.Windows.Controls.ControlTemplate" /> is intended.</summary>
      <returns>The default value is <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">The <see cref="P:System.Windows.Controls.ControlTemplate.TargetType" /> property must not be <see langword="null" /> if the definition of the template has a <see cref="T:System.Windows.Controls.ContentPresenter" />.</exception>
      <exception cref="T:System.ArgumentException">The specified types are not valid. The <see cref="P:System.Windows.Controls.ControlTemplate.TargetType" /> of a <see cref="T:System.Windows.Controls.ControlTemplate" /> must be or inherit from a <see cref="T:System.Windows.Controls.Control" />, a <see cref="T:System.Windows.Controls.Page" />, or a <see cref="T:System.Windows.Navigation.PageFunctionBase" />.</exception>
    </member>
    <member name="P:System.Windows.Controls.ControlTemplate.Triggers">
      <summary>Gets a collection of <see cref="T:System.Windows.TriggerBase" /> objects that apply property changes or perform actions based on specified conditions.</summary>
      <returns>A collection of <see cref="T:System.Windows.TriggerBase" /> objects. The default value is <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.ControlTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)">
      <summary>Checks the templated parent against a set of rules.</summary>
      <param name="templatedParent">The element this template is applied to.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="templatedParent" /> must not be <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">You must associate the <see cref="T:System.Windows.Controls.ControlTemplate" /> with a <see cref="T:System.Windows.Controls.Control" /> by setting the <see cref="P:System.Windows.Controls.Control.Template" /> property before using the <see cref="T:System.Windows.Controls.ControlTemplate" /> on the <see cref="T:System.Windows.Controls.Control" />.</exception>
    </member>
    <member name="T:System.Windows.Controls.DataErrorValidationRule">
      <summary>Represents a rule that checks for errors that are raised by the <see cref="T:System.ComponentModel.IDataErrorInfo" /> implementation of the source object.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataErrorValidationRule.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataErrorValidationRule" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataErrorValidationRule.Validate(System.Object,System.Globalization.CultureInfo)">
      <summary>Performs validation checks on a value.</summary>
      <param name="value">The value to check.</param>
      <param name="cultureInfo">The culture to use in this rule.</param>
      <returns>The result of the validation.</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGrid">
      <summary>Represents a control that displays data in a customizable grid.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGrid" /> class.</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.AddingNewItem">
      <summary>Occurs before a new item is added to the <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.AlternatingRowBackground">
      <summary>Gets or sets the background brush for use on alternating rows.</summary>
      <returns>The <see cref="T:System.Windows.Media.Brush" /> that paints the background of every nth row where n is defined by the <see cref="P:System.Windows.Controls.ItemsControl.AlternationCount" /> property. The registered default is <see langword="null" />. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.AlternatingRowBackgroundProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.AlternatingRowBackground" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.AreRowDetailsFrozen">
      <summary>Gets or sets a value that indicates whether the row details can scroll horizontally.</summary>
      <returns>
        <see langword="true" /> if row details cannot scroll; otherwise, <see langword="false" />. The registered default is <see langword="false" />. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.AreRowDetailsFrozenProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.AreRowDetailsFrozen" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.AutoGenerateColumns">
      <summary>Gets or sets a value that indicates whether the columns are created automatically.</summary>
      <returns>
        <see langword="true" /> if columns are created automatically; otherwise, <see langword="false" />. The registered default is <see langword="true" />. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.AutoGenerateColumnsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.AutoGenerateColumns" /> dependency property.</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.AutoGeneratedColumns">
      <summary>Occurs when auto generation of all columns is completed.</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.AutoGeneratingColumn">
      <summary>Occurs when an individual column is auto-generated.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.BeginEdit">
      <summary>Invokes the <see cref="M:System.Windows.Controls.DataGrid.BeginEdit" /> command, which will place the current cell or row into edit mode.</summary>
      <returns>
        <see langword="true" /> if the current cell or row enters edit mode; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.BeginEdit(System.Windows.RoutedEventArgs)">
      <summary>Invokes the <see cref="M:System.Windows.Controls.DataGrid.BeginEdit" /> command, which will place the current cell or row into edit mode.</summary>
      <param name="editingEventArgs">If called from an event handler, the event arguments. May be <see langword="null" />.</param>
      <returns>
        <see langword="true" /> if the current cell or row enters edit mode; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.BeginEditCommand">
      <summary>Represents the command that indicates the intention to begin editing the current cell or row of the <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.BeginningEdit">
      <summary>Occurs before a row or cell enters edit mode.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.CancelEdit">
      <summary>Invokes the <see cref="F:System.Windows.Controls.DataGrid.CancelEditCommand" /> command for the cell or row currently in edit mode.</summary>
      <returns>
        <see langword="true" /> if the current cell or row exits edit mode, or if no cells or rows are in edit mode; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.CancelEdit(System.Windows.Controls.DataGridEditingUnit)">
      <summary>Invokes the <see cref="F:System.Windows.Controls.DataGrid.CancelEditCommand" /> command for the specified cell or row in edit mode.</summary>
      <param name="editingUnit">One of the enumeration values that specifies whether to cancel row or cell edits.</param>
      <returns>
        <see langword="true" /> if the current cell or row exits edit mode; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CancelEditCommand">
      <summary>Represents the command that indicates the intention to cancel any pending changes to the current cell or row and revert to the state before the <see cref="F:System.Windows.Controls.DataGrid.BeginEditCommand" /> command was executed.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.CanUserAddRows">
      <summary>Gets or sets a value that indicates whether the user can add new rows to the <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
      <returns>
        <see langword="true" /> if the user can add new rows; otherwise, <see langword="false" />. The registered default is <see langword="true" />. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CanUserAddRowsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.CanUserAddRows" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.CanUserDeleteRows">
      <summary>Gets or sets a value that indicates whether the user can delete rows from the <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
      <returns>
        <see langword="true" /> if the user can delete rows; otherwise, <see langword="false" />. The registered default is <see langword="true" />. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CanUserDeleteRowsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.CanUserDeleteRows" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.CanUserReorderColumns">
      <summary>Gets or sets a value that indicates whether the user can change the column display order by dragging column headers with the mouse.</summary>
      <returns>
        <see langword="true" /> if the user can reorder columns; otherwise, <see langword="false" />. The registered default is <see langword="true" />. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CanUserReorderColumnsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.CanUserReorderColumns" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.CanUserResizeColumns">
      <summary>Gets or sets a value that indicates whether the user can adjust the width of columns by using the mouse.</summary>
      <returns>
        <see langword="true" /> if the user can adjust the column width; otherwise, <see langword="false" />. The registered default is <see langword="true" />. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CanUserResizeColumnsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.CanUserResizeColumns" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.CanUserResizeRows">
      <summary>Gets or sets a value that indicates whether the user can adjust the height of rows by using the mouse.</summary>
      <returns>
        <see langword="true" /> if the user can change the height of the rows; otherwise, <see langword="false" />. The registered default is <see langword="true" />. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CanUserResizeRowsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.CanUserResizeRows" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.CanUserSortColumns">
      <summary>Gets or sets a value that indicates whether the user can sort columns by clicking the column header.</summary>
      <returns>
        <see langword="true" /> if the user can sort the columns; otherwise, <see langword="false" />. The registered default is <see langword="true" />. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CanUserSortColumnsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.CanUserSortColumns" /> dependency property.</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.CellEditEnding">
      <summary>Occurs before a cell edit is committed or canceled.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.CellsPanelHorizontalOffset">
      <summary>Gets the horizontal offset for the <see cref="T:System.Windows.Controls.DataGridCellsPanel" />.</summary>
      <returns>The horizontal offset for the cells panel. The registered default is 0.0. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CellsPanelHorizontalOffsetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.CellsPanelHorizontalOffset" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.CellStyle">
      <summary>Gets or sets the style applied to all cells in the <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
      <returns>The style applied to the cells in the <see cref="T:System.Windows.Controls.DataGrid" />. The registered default is <see langword="null" />. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CellStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.CellStyle" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>Unloads the row for the specified item.</summary>
      <param name="element">The <see cref="T:System.Windows.Controls.DataGridRow" /> to clear.</param>
      <param name="item">The data item that the row contains.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.ClearDetailsVisibilityForItem(System.Object)">
      <summary>Clears the <see cref="P:System.Windows.Controls.DataGridRow.DetailsVisibility" /> property for the <see cref="T:System.Windows.Controls.DataGridRow" /> that represents the specified data item.</summary>
      <param name="item">The data item in the row for which <see cref="P:System.Windows.Controls.DataGridRow.DetailsVisibility" /> is cleared.</param>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.ClipboardCopyMode">
      <summary>Gets or sets a value that indicates how content is copied to the clipboard.</summary>
      <returns>One of the enumeration values that indicates how content is copied to the clipboard. The registered default is <see cref="F:System.Windows.Controls.DataGridClipboardCopyMode.ExcludeHeader" />. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.ClipboardCopyModeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.ClipboardCopyMode" /> dependency property.</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.ColumnDisplayIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.DataGridColumn.DisplayIndex" /> property on one of the columns changes.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.ColumnFromDisplayIndex(System.Int32)">
      <summary>Gets the <see cref="T:System.Windows.Controls.DataGridColumn" /> at the specified index.</summary>
      <param name="displayIndex">The zero-based index of the column to retrieve.</param>
      <returns>The <see cref="T:System.Windows.Controls.DataGridColumn" /> at the specified <see cref="P:System.Windows.Controls.DataGridColumn.DisplayIndex" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="displayIndex" /> is less than 0, or greater than or equal to the number of columns.</exception>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.ColumnHeaderDragCompleted">
      <summary>Occurs when the user releases a column header after dragging it by using the mouse.</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.ColumnHeaderDragDelta">
      <summary>Occurs every time the mouse position changes while the user drags a column header.</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.ColumnHeaderDragStarted">
      <summary>Occurs when the user begins dragging a column header by using the mouse.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.ColumnHeaderHeight">
      <summary>Gets or sets the height of the column headers row.</summary>
      <returns>The height of the column headers row, in device-independent units (1/96th inch per unit). The registered default is <see cref="F:System.Double.NaN" />. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.ColumnHeaderHeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.ColumnHeaderHeight" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.ColumnHeaderStyle">
      <summary>Gets or sets the style applied to all column headers in the <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
      <returns>The style applied to all column headers in the <see cref="T:System.Windows.Controls.DataGrid" />. The registered default is <see langword="null" />. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.ColumnHeaderStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.ColumnHeaderStyle" /> dependency property.</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.ColumnReordered">
      <summary>Occurs when a column moves to a new position in the display order.</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.ColumnReordering">
      <summary>Occurs before a column moves to a new position in the display order.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.Columns">
      <summary>Gets a collection that contains all the columns in the <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
      <returns>The collection of columns in the <see cref="T:System.Windows.Controls.DataGrid" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.ColumnWidth">
      <summary>Gets or sets the standard width and sizing mode of columns and headers in the <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
      <returns>The width and sizing mode of the columns and headers, in device-independent units (1/96th inch per unit). The registered default is <see cref="P:System.Windows.Controls.DataGridLength.SizeToHeader" />. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.ColumnWidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.ColumnWidth" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.CommitEdit">
      <summary>Invokes the <see cref="F:System.Windows.Controls.DataGrid.CommitEditCommand" /> command for the cell or row currently in edit mode.</summary>
      <returns>
        <see langword="true" /> if the current cell or row exits edit mode, or if no cells or rows are in edit mode; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.CommitEdit(System.Windows.Controls.DataGridEditingUnit,System.Boolean)">
      <summary>Invokes the <see cref="F:System.Windows.Controls.DataGrid.CommitEditCommand" /> command for the specified cell or row currently in edit mode.</summary>
      <param name="editingUnit">One of the enumeration values that specifies whether to commit row or cell edits.</param>
      <param name="exitEditingMode">
        <see langword="true" /> to exit edit mode; otherwise, <see langword="false" />.</param>
      <returns>
        <see langword="true" /> if the current cell or row exits edit mode; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CommitEditCommand">
      <summary>Represents the command that indicates the intention to commit pending changes to the current cell or row and exit edit mode.</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.CopyingRowClipboardContent">
      <summary>Occurs after the default row content is prepared.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.CurrentCell">
      <summary>Gets or sets the cell that has focus.</summary>
      <returns>Information about the cell that has focus.</returns>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.CurrentCellChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Controls.DataGrid.CurrentCell" /> property has changed.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CurrentCellProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.CurrentCell" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.CurrentColumn">
      <summary>Gets or sets the column that contains the current cell.</summary>
      <returns>The column that contains the current cell. The registered default is <see langword="null" />. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CurrentColumnProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.CurrentColumn" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.CurrentItem">
      <summary>Gets the data item bound to the row that contains the current cell.</summary>
      <returns>The data item bound to the row that contains the current cell. The registered default is <see langword="null" />. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CurrentItemProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.CurrentItem" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.DeleteCommand">
      <summary>Represents the command that indicates the intention to delete the current row.</summary>
      <returns>The <see cref="P:System.Windows.Input.ApplicationCommands.Delete" /> command that indicates the intention to delete the current row.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.DragIndicatorStyle">
      <summary>Gets or sets the style that is used when rendering the drag indicator that is displayed while dragging a column header.</summary>
      <returns>The style applied to a column header when dragging. The registered default is <see langword="null" />. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.DragIndicatorStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.DragIndicatorStyle" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.DropLocationIndicatorStyle">
      <summary>Gets or sets the style that is applied to indicate the drop location when dragging a column header.</summary>
      <returns>The style applied to a column header. The registered default is <see langword="null" />. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.DropLocationIndicatorStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.DropLocationIndicatorStyle" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.EnableColumnVirtualization">
      <summary>Gets or sets a value that indicates whether column virtualization is enabled.</summary>
      <returns>
        <see langword="true" /> if column virtualization is enabled; otherwise, <see langword="false" />. The registered default is <see langword="false" />. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.EnableColumnVirtualizationProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.EnableColumnVirtualization" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.EnableRowVirtualization">
      <summary>Gets or sets a value that indicates whether row virtualization is enabled.</summary>
      <returns>
        <see langword="true" /> if row virtualization is enabled; otherwise, <see langword="false" />. The registered default is <see langword="true" />. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.EnableRowVirtualizationProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.EnableRowVirtualization" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.FocusBorderBrushKey">
      <summary>Gets the key that references the default border brush for a focused cell.</summary>
      <returns>The key that references the default brush for a focused cell.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.FrozenColumnCount">
      <summary>Gets or sets the number of non-scrolling columns.</summary>
      <returns>The number of non-scrolling columns. The registered default is 0. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.FrozenColumnCountProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.FrozenColumnCount" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.GenerateColumns(System.ComponentModel.IItemProperties)">
      <summary>Generates columns for the specified properties of an object.</summary>
      <param name="itemProperties">The properties of the object to be in the columns.</param>
      <returns>The collection of columns for the properties of the object.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="itemProperties" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.GetContainerForItemOverride">
      <summary>Instantiates a new <see cref="T:System.Windows.Controls.DataGridRow" />.</summary>
      <returns>The row that is the container.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.GetDetailsVisibilityForItem(System.Object)">
      <summary>Gets the <see cref="P:System.Windows.Controls.DataGridRow.DetailsVisibility" /> property for the <see cref="T:System.Windows.Controls.DataGridRow" /> that represents the specified data item.</summary>
      <param name="item">The data item in the row for which <see cref="P:System.Windows.Controls.DataGridRow.DetailsVisibility" /> is returned.</param>
      <returns>The visibility for the row that contains the <paramref name="item" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.GridLinesVisibility">
      <summary>Gets or sets a value that indicates which grid lines are shown.</summary>
      <returns>One of the enumeration values that specifies which grid lines are shown in the <see cref="T:System.Windows.Controls.DataGrid" />. The registered default is <see cref="F:System.Windows.Controls.DataGridGridLinesVisibility.All" />. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.GridLinesVisibilityProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.GridLinesVisibility" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.HandlesScrolling">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.DataGrid" /> supports custom keyboard scrolling.</summary>
      <returns>
        <see langword="true" /> in all cases.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.HeadersVisibility">
      <summary>Gets or sets the value that specifies the visibility of the row and column headers.</summary>
      <returns>One of the enumeration values that indicates the visibility of row and column headers. The registered default is <see cref="F:System.Windows.Controls.DataGridHeadersVisibility.All" />. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.HeadersVisibilityConverter">
      <summary>Gets the converter that converts a <see cref="T:System.Windows.Controls.DataGridHeadersVisibility" /> to a <see cref="T:System.Windows.Visibility" />.</summary>
      <returns>The converter that converts a <see cref="T:System.Windows.Controls.DataGridHeadersVisibility" /> to a <see cref="T:System.Windows.Visibility" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.HeadersVisibilityProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.HeadersVisibility" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.HorizontalGridLinesBrush">
      <summary>Gets or sets the brush that is used to draw the horizontal grid lines.</summary>
      <returns>The brush that is used to draw the horizontal grid lines in the <see cref="T:System.Windows.Controls.DataGrid" />. The registered default is a black <see cref="T:System.Windows.Media.SolidColorBrush" />. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.HorizontalGridLinesBrushProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.HorizontalGridLinesBrush" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.HorizontalScrollBarVisibility">
      <summary>Gets or sets a value that indicates how horizontal scroll bars are displayed in the <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
      <returns>One of the enumeration values that specifies the visibility of horizontal scroll bars in the <see cref="T:System.Windows.Controls.DataGrid" />. The registered default is <see cref="F:System.Windows.Controls.ScrollBarVisibility.Auto" />. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.HorizontalScrollBarVisibilityProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.HorizontalScrollBarVisibility" /> dependency property.</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.InitializingNewItem">
      <summary>Occurs when a new item is created.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.IsItemItsOwnContainerOverride(System.Object)">
      <summary>Determines if an item is a <see cref="T:System.Windows.Controls.DataGridRow" />.</summary>
      <param name="item">The item to test.</param>
      <returns>
        <see langword="true" /> if the item is a <see cref="T:System.Windows.Controls.DataGridRow" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.IsReadOnly">
      <summary>Gets or sets a value that indicates whether the user can edit values in the <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
      <returns>
        <see langword="true" /> if the rows and cells are read-only; otherwise, <see langword="false" />. The registered default is <see langword="false" />. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.IsReadOnlyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.IsReadOnly" /> dependency property.</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.LoadingRow">
      <summary>Occurs after a <see cref="T:System.Windows.Controls.DataGridRow" /> is instantiated, so that you can customize it before it is used.</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.LoadingRowDetails">
      <summary>Occurs when a new row details template is applied to a row.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.MaxColumnWidth">
      <summary>Gets or sets the maximum width constraint of the columns and headers in the <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
      <returns>The maximum width of the columns and headers in the <see cref="T:System.Windows.Controls.DataGrid" />, in device-independent units (1/96th inch per unit). The registered default is <see cref="F:System.Double.PositiveInfinity" />. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.MaxColumnWidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.MaxColumnWidth" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.MeasureOverride(System.Windows.Size)">
      <summary>Determines the desired size of the <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
      <param name="availableSize">The maximum size that the <see cref="T:System.Windows.Controls.DataGrid" /> can occupy.</param>
      <returns>The desired size of the <see cref="T:System.Windows.Controls.DataGrid" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.MinColumnWidth">
      <summary>Gets or sets the minimum width constraint of the columns and headers in the <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
      <returns>The minimum width of the columns and headers, in device-independent units (1/96th inch per unit). The registered default is 20. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.MinColumnWidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.MinColumnWidth" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.MinRowHeight">
      <summary>Gets or sets the minimum height constraint of the rows and headers in the <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
      <returns>The minimum height constraint of rows, in device-independent units (1/96th inch per unit). The registered default is 0.0. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.MinRowHeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.MinRowHeight" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.NewItemMargin">
      <summary>Gets or sets the margin for the new item row.</summary>
      <returns>The margin for the new item row.  
 The registered default is 0. For more information about what can influence the value, see Dependency Property Value Precedence.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.NewItemMarginProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.NewItemMargin" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.NonFrozenColumnsViewportHorizontalOffset">
      <summary>Gets the horizontal offset of the scrollable columns in the view port.</summary>
      <returns>The horizontal offset of the scrollable columns. The registered default is 0.0. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.NonFrozenColumnsViewportHorizontalOffsetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.NonFrozenColumnsViewportHorizontalOffset" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnAddingNewItem(System.Windows.Controls.AddingNewItemEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DataGrid.AddingNewItem" /> event.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnApplyTemplate">
      <summary>Invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnAutoGeneratedColumns(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DataGrid.AutoGeneratedColumns" /> event.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnAutoGeneratingColumn(System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DataGrid.AutoGeneratingColumn" /> event.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnBeginningEdit(System.Windows.Controls.DataGridBeginningEditEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DataGrid.BeginningEdit" /> event.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnCanExecuteBeginEdit(System.Windows.Input.CanExecuteRoutedEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.Input.CommandBinding.CanExecute" /> event associated with the <see cref="F:System.Windows.Controls.DataGrid.BeginEditCommand" /> command.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnCanExecuteCancelEdit(System.Windows.Input.CanExecuteRoutedEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.Input.CommandBinding.CanExecute" /> event associated with the <see cref="F:System.Windows.Controls.DataGrid.CancelEditCommand" /> command.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnCanExecuteCommitEdit(System.Windows.Input.CanExecuteRoutedEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.Input.CommandBinding.CanExecute" /> event associated with the <see cref="F:System.Windows.Controls.DataGrid.CommitEditCommand" /> command.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnCanExecuteCopy(System.Windows.Input.CanExecuteRoutedEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.Input.CommandBinding.CanExecute" /> event associated with the <see cref="P:System.Windows.Input.ApplicationCommands.Copy" /> command.</summary>
      <param name="args">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnCanExecuteDelete(System.Windows.Input.CanExecuteRoutedEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.Input.CommandBinding.CanExecute" /> event associated with the <see cref="P:System.Windows.Controls.DataGrid.DeleteCommand" /> command.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnCellEditEnding(System.Windows.Controls.DataGridCellEditEndingEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DataGrid.CellEditEnding" /> event.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnColumnDisplayIndexChanged(System.Windows.Controls.DataGridColumnEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DataGrid.ColumnDisplayIndexChanged" /> event.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnColumnHeaderDragCompleted(System.Windows.Controls.Primitives.DragCompletedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DataGrid.ColumnHeaderDragCompleted" /> event.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnColumnHeaderDragDelta(System.Windows.Controls.Primitives.DragDeltaEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DataGrid.ColumnHeaderDragDelta" /> event.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnColumnHeaderDragStarted(System.Windows.Controls.Primitives.DragStartedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DataGrid.ColumnHeaderDragStarted" /> event.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnColumnReordered(System.Windows.Controls.DataGridColumnEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DataGrid.ColumnReordered" /> event.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnColumnReordering(System.Windows.Controls.DataGridColumnReorderingEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DataGrid.ColumnReordering" /> event.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
      <summary>Selects a cell if its context menu is opened.</summary>
      <param name="e">The item whose context menu was opened.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnCopyingRowClipboardContent(System.Windows.Controls.DataGridRowClipboardEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DataGrid.CopyingRowClipboardContent" /> event.</summary>
      <param name="args">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnCreateAutomationPeer">
      <summary>Returns the automation peer for this <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
      <returns>The automation peer for this <see cref="T:System.Windows.Controls.DataGrid" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnCurrentCellChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DataGrid.CurrentCellChanged" /> event.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnExecutedBeginEdit(System.Windows.Input.ExecutedRoutedEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.Input.CommandBinding.Executed" /> event associated with the <see cref="F:System.Windows.Controls.DataGrid.BeginEditCommand" /> command.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnExecutedCancelEdit(System.Windows.Input.ExecutedRoutedEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.Input.CommandBinding.Executed" /> event associated with the <see cref="F:System.Windows.Controls.DataGrid.CancelEditCommand" /> command.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnExecutedCommitEdit(System.Windows.Input.ExecutedRoutedEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.Input.CommandBinding.Executed" /> event associated with the <see cref="F:System.Windows.Controls.DataGrid.CommitEditCommand" /> command.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnExecutedCopy(System.Windows.Input.ExecutedRoutedEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.Input.CommandBinding.Executed" /> event associated with the <see cref="P:System.Windows.Input.ApplicationCommands.Copy" /> command.</summary>
      <param name="args">The data for the event.</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="P:System.Windows.Controls.DataGrid.ClipboardCopyMode" /> is set to <see cref="F:System.Windows.Controls.DataGridClipboardCopyMode.None" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnExecutedDelete(System.Windows.Input.ExecutedRoutedEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.Input.CommandBinding.Executed" /> event associated with the <see cref="P:System.Windows.Controls.DataGrid.DeleteCommand" /> command.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnInitializingNewItem(System.Windows.Controls.InitializingNewItemEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DataGrid.InitializingNewItem" /> event.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Called when the <see cref="P:System.Windows.UIElement.IsMouseCaptured" /> property changes on this element.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>Performs column auto generation and updates validation flags when items change.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnItemsSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>Invoked when the <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> property changes.</summary>
      <param name="oldValue">The old source.</param>
      <param name="newValue">The new source.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Invoked when the <see cref="E:System.Windows.UIElement.KeyDown" /> event is received.</summary>
      <param name="e">The Information about the event.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnLoadingRow(System.Windows.Controls.DataGridRowEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DataGrid.LoadingRow" /> event.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnLoadingRowDetails(System.Windows.Controls.DataGridRowDetailsEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DataGrid.LoadingRowDetails" /> event.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>Updates the collection of items that are selected due to the user dragging the mouse in the <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
      <param name="e">The mouse data.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnPreparingCellForEdit(System.Windows.Controls.DataGridPreparingCellForEditEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DataGrid.PreparingCellForEdit" /> event.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnRowDetailsVisibilityChanged(System.Windows.Controls.DataGridRowDetailsEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DataGrid.RowDetailsVisibilityChanged" /> event.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnRowEditEnding(System.Windows.Controls.DataGridRowEditEndingEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DataGrid.RowEditEnding" /> event.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnSelectedCellsChanged(System.Windows.Controls.SelectedCellsChangedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DataGrid.SelectedCellsChanged" /> event.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
      <summary>Invoked when the selection changes.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnSorting(System.Windows.Controls.DataGridSortingEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DataGrid.Sorting" /> event.</summary>
      <param name="eventArgs">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)">
      <summary>Called whenever the template of the <see cref="T:System.Windows.Controls.DataGrid" /> changes.</summary>
      <param name="oldTemplate">The old template.</param>
      <param name="newTemplate">The new template.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.TextInput" /> routed event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnUnloadingRow(System.Windows.Controls.DataGridRowEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DataGrid.UnloadingRow" /> event.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnUnloadingRowDetails(System.Windows.Controls.DataGridRowDetailsEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DataGrid.UnloadingRowDetails" /> event.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>Prepares a new row for the specified item.</summary>
      <param name="element">The new <see cref="T:System.Windows.Controls.DataGridRow" />.</param>
      <param name="item">The data item that the row contains.</param>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.PreparingCellForEdit">
      <summary>Occurs when a cell enters edit mode.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowBackground">
      <summary>Gets or sets the default brush for the row background.</summary>
      <returns>The brush that paints the background of a row. The registered default is <see langword="null" />. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowBackgroundProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.RowBackground" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowDetailsScrollingConverter">
      <summary>Gets the converter that converts a Boolean value to a <see cref="T:System.Windows.Controls.SelectiveScrollingOrientation" />.</summary>
      <returns>The converter that converts a Boolean value to a <see cref="T:System.Windows.Controls.SelectiveScrollingOrientation" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowDetailsTemplate">
      <summary>Gets or sets the template that is used to display the row details.</summary>
      <returns>The template that is used to display the row details. The registered default is <see langword="null" />. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowDetailsTemplateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.RowDetailsTemplate" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowDetailsTemplateSelector">
      <summary>Gets or sets the template selector that is used for the row details.</summary>
      <returns>The template selector that is used for the row details. The registered default is <see langword="null" />. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowDetailsTemplateSelectorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.RowDetailsTemplateSelector" /> dependency property.</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.RowDetailsVisibilityChanged">
      <summary>Occurs when the visibility of a row details element changes.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowDetailsVisibilityMode">
      <summary>Gets or sets a value that indicates when the details section of a row is displayed.</summary>
      <returns>One of the enumeration values that specifies the visibility of row details. The registered default is <see cref="F:System.Windows.Controls.DataGridRowDetailsVisibilityMode.VisibleWhenSelected" />. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowDetailsVisibilityModeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.RowDetailsVisibilityMode" /> dependency property.</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.RowEditEnding">
      <summary>Occurs before a row edit is committed or canceled.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowHeaderActualWidth">
      <summary>Gets the rendered width of the row headers column.</summary>
      <returns>The rendered width of the row header, in device-independent units (1/96th inch per unit). The registered default is 0.0. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowHeaderActualWidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.RowHeaderActualWidth" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowHeaderStyle">
      <summary>Gets or sets the style applied to all row headers.</summary>
      <returns>The style applied to all row headers in the <see cref="T:System.Windows.Controls.DataGrid" />. The registered default is <see langword="null" />. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowHeaderStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.RowHeaderStyle" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowHeaderTemplate">
      <summary>Gets or set the template for the row headers.</summary>
      <returns>The template for the row headers. The registered default is <see langword="null" />. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowHeaderTemplateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.RowHeaderTemplate" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowHeaderTemplateSelector">
      <summary>Gets or sets the template selector for row headers.</summary>
      <returns>The template selector for row headers. The registered default is <see langword="null" />. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowHeaderTemplateSelectorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.RowHeaderTemplateSelector" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowHeaderWidth">
      <summary>Gets or sets the width of the row header column.</summary>
      <returns>The width of the row header column, in device-independent units (1/96th inch per unit). The registered default is <see cref="F:System.Double.NaN" />. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowHeaderWidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.RowHeaderWidth" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowHeight">
      <summary>Gets or sets the suggested height for all rows.</summary>
      <returns>The height of the rows, in device-independent units (1/96th inch per unit). The registered default is <see cref="F:System.Double.NaN" />. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowHeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.RowHeight" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowStyle">
      <summary>Gets or sets the style applied to all rows.</summary>
      <returns>The style applied to all rows in the <see cref="T:System.Windows.Controls.DataGrid" />. The registered default is <see langword="null" />. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.RowStyle" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowStyleSelector">
      <summary>Gets or sets the style selector for the rows.</summary>
      <returns>The style selector for the rows. The registered default is <see langword="null" />. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowStyleSelectorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.RowStyleSelector" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowValidationErrorTemplate">
      <summary>Gets or sets the template that is used to visually indicate an error in row validation.</summary>
      <returns>The template that is used to visually indicate an error in row validation. The registered default is <see langword="null" />. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowValidationErrorTemplateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.RowValidationErrorTemplate" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowValidationRules">
      <summary>Gets the rules that are used to validate the data in each row.</summary>
      <returns>The rules that are used to validate the data in each row.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.ScrollIntoView(System.Object)">
      <summary>Scrolls the <see cref="T:System.Windows.Controls.DataGrid" /> vertically to display the row for the specified data item.</summary>
      <param name="item">The data item to bring into view.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.ScrollIntoView(System.Object,System.Windows.Controls.DataGridColumn)">
      <summary>Scrolls the <see cref="T:System.Windows.Controls.DataGrid" /> vertically and horizontally to display a cell for the specified data item and column.</summary>
      <param name="item">The data item to bring into view.</param>
      <param name="column">The column to bring into view.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.SelectAllCells">
      <summary>Selects all the cells in the <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.SelectAllCommand">
      <summary>Represents the command that indicates the intention to select all cells in the <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
      <returns>The <see cref="P:System.Windows.Input.ApplicationCommands.SelectAll" /> command that indicates the intention to select all cells in the <see cref="T:System.Windows.Controls.DataGrid" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.SelectedCells">
      <summary>Gets the list of cells that are currently selected.</summary>
      <returns>The list of cells that are currently selected.</returns>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.SelectedCellsChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.DataGrid.SelectedCells" /> collection changes.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.SelectionMode">
      <summary>Gets or sets a value that indicates how rows and cells are selected in the <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
      <returns>One of the enumeration values that specifies how rows and cells are selected in the <see cref="T:System.Windows.Controls.DataGrid" />. The registered default is <see cref="F:System.Windows.Controls.DataGridSelectionMode.Extended" />. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.SelectionModeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.SelectionMode" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.SelectionUnit">
      <summary>Gets or sets a value that indicates whether rows, cells, or both can be selected in the <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
      <returns>One of the enumeration values that specifies whether rows, cells, or both can be selected in the <see cref="T:System.Windows.Controls.DataGrid" />. The registered default is <see cref="F:System.Windows.Controls.DataGridSelectionUnit.FullRow" />. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.SelectionUnitProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.SelectionUnit" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.SetDetailsVisibilityForItem(System.Object,System.Windows.Visibility)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.DataGridRow.DetailsVisibility" /> property for the <see cref="T:System.Windows.Controls.DataGridRow" /> that contains the specified object.</summary>
      <param name="item">The object in the row for which <see cref="P:System.Windows.Controls.DataGridRow.DetailsVisibility" /> is being set.</param>
      <param name="detailsVisibility">The <see cref="T:System.Windows.Visibility" /> to set for the row that contains the item.</param>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.Sorting">
      <summary>Occurs when a column is being sorted.</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.UnloadingRow">
      <summary>Occurs when a <see cref="T:System.Windows.Controls.DataGridRow" /> object becomes available for reuse.</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.UnloadingRowDetails">
      <summary>Occurs when a row details element becomes available for reuse.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.UnselectAllCells">
      <summary>Unselects all the cells in the <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.VerticalGridLinesBrush">
      <summary>Gets or sets the brush that is used to draw the vertical grid lines.</summary>
      <returns>The brush that is used to draw the vertical grid lines in the <see cref="T:System.Windows.Controls.DataGrid" />. The registered default is a black <see cref="T:System.Windows.Media.SolidColorBrush" />. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.VerticalGridLinesBrushProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.VerticalGridLinesBrush" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.VerticalScrollBarVisibility">
      <summary>Gets or sets a value that indicates how vertical scroll bars are displayed in the <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
      <returns>One of the enumeration values that specifies the visibility of vertical scroll bars in the <see cref="T:System.Windows.Controls.DataGrid" />. The registered default is <see cref="F:System.Windows.Controls.ScrollBarVisibility.Auto" />. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.VerticalScrollBarVisibilityProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.VerticalScrollBarVisibility" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.DataGrid.AutoGeneratingColumn" /> event.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs.#ctor(System.String,System.Type,System.Windows.Controls.DataGridColumn)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs" /> class.</summary>
      <param name="propertyName">The name of the property bound to the generated column.</param>
      <param name="propertyType">The type of the property bound to the generated column.</param>
      <param name="column">The generated column.</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs.Cancel">
      <summary>Gets or sets a value that indicates whether the event should be canceled.</summary>
      <returns>
        <see langword="true" /> if the event should be canceled; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs.Column">
      <summary>Gets or sets the generated column.</summary>
      <returns>The generated column.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs.PropertyDescriptor">
      <summary>Gets the descriptor of the property bound to the generated column.</summary>
      <returns>An object that contains metadata for the property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs.PropertyName">
      <summary>Gets the name of the property bound to the generated column.</summary>
      <returns>The name of the property bound to the generated column.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs.PropertyType">
      <summary>Gets the type of the property bound to the generated column.</summary>
      <returns>The type of the property bound to the generated column.</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridBeginningEditEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.DataGrid.BeginningEdit" /> event.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridBeginningEditEventArgs.#ctor(System.Windows.Controls.DataGridColumn,System.Windows.Controls.DataGridRow,System.Windows.RoutedEventArgs)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridBeginningEditEventArgs" /> class.</summary>
      <param name="column">The column that contains the cell to be edited.</param>
      <param name="row">The row that contains the cell to be edited.</param>
      <param name="editingEventArgs">Information about the user gesture that caused the cell to enter edit mode.</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridBeginningEditEventArgs.Cancel">
      <summary>Gets or sets a value that indicates whether the event should be canceled.</summary>
      <returns>
        <see langword="true" /> if the event should be canceled; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridBeginningEditEventArgs.Column">
      <summary>Gets the column that contains the cell to be edited.</summary>
      <returns>The column that contains the cell to be edited.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridBeginningEditEventArgs.EditingEventArgs">
      <summary>Gets information about the user gesture that caused the cell to enter edit mode.</summary>
      <returns>Information about the user gesture that caused the cell to enter edit mode.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridBeginningEditEventArgs.Row">
      <summary>Gets the row that contains the cell to be edited.</summary>
      <returns>The row that contains the cell to be edited.</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridBoundColumn">
      <summary>Serves as the base class for columns that can bind to a property in the data source of a <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridBoundColumn.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridBoundColumn" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridBoundColumn.Binding">
      <summary>Gets or sets the binding that associates the column with a property in the data source.</summary>
      <returns>The object that represents the data binding for the column. The default is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridBoundColumn.ClipboardContentBinding">
      <summary>Gets or sets the binding object to use when getting or setting cell content for the clipboard.</summary>
      <returns>An object that represents the binding.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridBoundColumn.EditingElementStyle">
      <summary>Gets or sets the style that is used when rendering the element that the column displays for a cell in editing mode.</summary>
      <returns>The style that is used when rendering an editing element. The registered default is <see langword="null" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridBoundColumn.EditingElementStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridBoundColumn.EditingElementStyle" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridBoundColumn.ElementStyle">
      <summary>Gets or sets the style that is used when rendering the element that the column displays for a cell that is not in editing mode.</summary>
      <returns>The style that is used when rendering a display-only element. The registered default is <see langword="null" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridBoundColumn.ElementStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridBoundColumn.ElementStyle" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridBoundColumn.OnBindingChanged(System.Windows.Data.BindingBase,System.Windows.Data.BindingBase)">
      <summary>Notifies the <see cref="T:System.Windows.Controls.DataGrid" /> when the value of the <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> property changes.</summary>
      <param name="oldBinding">The previous binding.</param>
      <param name="newBinding">The binding that the column has been changed to.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridBoundColumn.OnCoerceIsReadOnly(System.Boolean)">
      <summary>Determines the value of the <see cref="P:System.Windows.Controls.DataGridColumn.IsReadOnly" /> property based on property rules from the data grid that contains this column.</summary>
      <param name="baseValue">The value that was passed to the delegate.</param>
      <returns>
        <see langword="true" /> if cells in the column cannot be edited based on rules from the data grid; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridBoundColumn.RefreshCellContent(System.Windows.FrameworkElement,System.String)">
      <summary>Rebuilds the contents of a cell in the column in response to a binding change.</summary>
      <param name="element">The cell to update.</param>
      <param name="propertyName">The name of the column property that has changed.</param>
    </member>
    <member name="T:System.Windows.Controls.DataGridCell">
      <summary>Represents a cell of a <see cref="T:System.Windows.Controls.DataGrid" /> control.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridCell.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridCell" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridCell.ArrangeOverride(System.Windows.Size)">
      <summary>Determines the final size and placement of the cell content.</summary>
      <param name="arrangeSize">The maximum size that the cell can occupy.</param>
      <returns>The final size of the control.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCell.Column">
      <summary>Gets or sets the column that the cell is in.</summary>
      <returns>The column that the cell is in.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridCell.ColumnProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridCell.Column" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridCell.IsEditing">
      <summary>Gets or sets a value that indicates whether the cell is in edit mode.</summary>
      <returns>
        <see langword="true" /> if the cell is in edit mode; otherwise, <see langword="false" />. The registered default is <see langword="false" />. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridCell.IsEditingProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridCell.IsEditing" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridCell.IsReadOnly">
      <summary>Gets a value that indicates whether the cell can be put in edit mode.</summary>
      <returns>
        <see langword="true" /> if the cell cannot be put in edit mode; otherwise, <see langword="false" />. The registered default is <see langword="false" />. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridCell.IsReadOnlyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridCell.IsReadOnly" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridCell.IsSelected">
      <summary>Gets or sets a value that indicates whether the cell is selected.</summary>
      <returns>
        <see langword="true" /> if the cell is selected; otherwise, <see langword="false" />. The registered default is <see langword="false" />. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridCell.IsSelectedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridCell.IsSelected" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridCell.MeasureOverride(System.Windows.Size)">
      <summary>Determines the desired size of the <see cref="T:System.Windows.Controls.DataGridCell" />.</summary>
      <param name="constraint">The maximum size that the cell can occupy.</param>
      <returns>The desired size of the <see cref="T:System.Windows.Controls.DataGridCell" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridCell.OnColumnChanged(System.Windows.Controls.DataGridColumn,System.Windows.Controls.DataGridColumn)">
      <summary>Called when the cell's <see cref="P:System.Windows.Controls.DataGridCell.Column" /> property changes.</summary>
      <param name="oldColumn">The old column definition.</param>
      <param name="newColumn">The new column definition.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridCell.OnCreateAutomationPeer">
      <summary>Returns the automation peer for this <see cref="T:System.Windows.Controls.DataGridCell" />.</summary>
      <returns>The automation peer for this <see cref="T:System.Windows.Controls.DataGridCell" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridCell.OnIsEditingChanged(System.Boolean)">
      <summary>Called when the <see cref="P:System.Windows.Controls.DataGridCell.IsEditing" /> property changes.</summary>
      <param name="isEditing">The new value of the <see cref="P:System.Windows.Controls.DataGridCell.IsEditing" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridCell.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Reports that a key was pressed.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridCell.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Reports that a key was pressed.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridCell.OnRender(System.Windows.Media.DrawingContext)">
      <summary>Draws the cell and the right side gridline.</summary>
      <param name="drawingContext">The drawing instructions for the cell.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridCell.OnSelected(System.Windows.RoutedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DataGridCell.Selected" /> event.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridCell.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
      <summary>Reports text composition.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridCell.OnUnselected(System.Windows.RoutedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DataGridCell.Unselected" /> event.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="E:System.Windows.Controls.DataGridCell.Selected">
      <summary>Occurs when the cell is selected.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridCell.SelectedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.DataGridCell.Selected" /> routed event.</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGridCell.Unselected">
      <summary>Occurs when the cell selection is cleared.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridCell.UnselectedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.DataGridCell.Unselected" /> routed event.</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridCellClipboardEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.DataGridColumn.CopyingCellClipboardContent" /> and <see cref="E:System.Windows.Controls.DataGridColumn.PastingCellClipboardContent" /> events.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellClipboardEventArgs.#ctor(System.Object,System.Windows.Controls.DataGridColumn,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridCellClipboardEventArgs" /> class.</summary>
      <param name="item">The data item for the row that contains the cell for which the event occurred.</param>
      <param name="column">The column that contains the cell for which the event occurred.</param>
      <param name="content">The text value of the cell for which the event occurred.</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridCellClipboardEventArgs.Column">
      <summary>Gets the column that contains the cell for which the event occurred.</summary>
      <returns>The column that contains the cell for which the event occurred.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCellClipboardEventArgs.Content">
      <summary>Gets or sets the text value of the cell for which the event occurred.</summary>
      <returns>The text value of the cell for which the event occurred.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCellClipboardEventArgs.Item">
      <summary>Gets the data item for the row that contains the cell for which the event occurred.</summary>
      <returns>The data item for the row that contains the cell for which the event occurred.</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridCellEditEndingEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.DataGrid.CellEditEnding" /> event.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellEditEndingEventArgs.#ctor(System.Windows.Controls.DataGridColumn,System.Windows.Controls.DataGridRow,System.Windows.FrameworkElement,System.Windows.Controls.DataGridEditAction)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridCellEditEndingEventArgs" /> class.</summary>
      <param name="column">The column that contains the cell for which the event occurred.</param>
      <param name="row">The row that contains the cell for which the event occurred.</param>
      <param name="editingElement">The element that the cell displays in editing mode.</param>
      <param name="editAction">A value that indicates whether the edit was canceled or committed.</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridCellEditEndingEventArgs.Cancel">
      <summary>Gets or sets a value that indicates whether the event should be canceled.</summary>
      <returns>
        <see langword="true" /> if the event should be canceled; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCellEditEndingEventArgs.Column">
      <summary>Gets the column that contains the cell for which the event occurred.</summary>
      <returns>The column that contains the cell for which the event occurred.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCellEditEndingEventArgs.EditAction">
      <summary>Gets a value that indicates whether the edit was canceled or committed.</summary>
      <returns>A value that indicates whether the edit was canceled or committed.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCellEditEndingEventArgs.EditingElement">
      <summary>Gets the element that the cell displays in editing mode.</summary>
      <returns>The element that the cell displays in editing mode.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCellEditEndingEventArgs.Row">
      <summary>Gets the row that contains the cell for which the event occurred.</summary>
      <returns>The row that contains the cell for which the event occurred.</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridCellInfo">
      <summary>Represents information about a specific cell in a <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellInfo.#ctor(System.Object,System.Windows.Controls.DataGridColumn)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridCellInfo" /> structure using the specified data item and column.</summary>
      <param name="item">The data item for the row that contains the cell.</param>
      <param name="column">The column that contains the cell.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellInfo.#ctor(System.Windows.Controls.DataGridCell)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridCellInfo" /> structure for the specified cell.</summary>
      <param name="cell">The cell for which information is to be generated.</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridCellInfo.Column">
      <summary>Gets the column that contains the cell.</summary>
      <returns>The column that contains the cell.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellInfo.Equals(System.Object)">
      <summary>Indicates whether the specified object is equal to the current instance.</summary>
      <param name="obj">The object to compare to the current instance.</param>
      <returns>
        <see langword="true" /> if the comparison object represents the same cell; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellInfo.GetHashCode">
      <summary>Returns a hash code for the current <see cref="T:System.Windows.Controls.DataGridCellInfo" /> structure.</summary>
      <returns>A hash code for the structure.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCellInfo.IsValid">
      <summary>Gets a value that indicates whether the structure holds valid information.</summary>
      <returns>
        <see langword="true" /> if the structure has valid information; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCellInfo.Item">
      <summary>Gets the data item for the row that contains the cell.</summary>
      <returns>The data item for the row that contains the cell.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellInfo.op_Equality(System.Windows.Controls.DataGridCellInfo,System.Windows.Controls.DataGridCellInfo)">
      <summary>Indicates whether two <see cref="T:System.Windows.Controls.DataGridCellInfo" /> instances are equal.</summary>
      <param name="cell1">The first structure to compare.</param>
      <param name="cell2">The second structure to compare.</param>
      <returns>
        <see langword="true" /> if the two structures represent the same cell; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellInfo.op_Inequality(System.Windows.Controls.DataGridCellInfo,System.Windows.Controls.DataGridCellInfo)">
      <summary>Indicates whether two <see cref="T:System.Windows.Controls.DataGridCellInfo" /> instances are not equal.</summary>
      <param name="cell1">The first structure to compare.</param>
      <param name="cell2">The second structure to compare.</param>
      <returns>
        <see langword="true" /> if the two structures do not represent the same cell; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridCellsPanel">
      <summary>Represents a panel that lays out cells and column headers in a data grid.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellsPanel.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridCellsPanel" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellsPanel.ArrangeOverride(System.Windows.Size)">
      <summary>Determines the final size and placement of the panel.</summary>
      <param name="arrangeSize">The maximum size that the panel can occupy.</param>
      <returns>The final size and placement of the panel.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellsPanel.BringIndexIntoView(System.Int32)">
      <summary>Scrolls the viewport to the item at the specified index.</summary>
      <param name="index">The index of the item that should become visible.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The index is out of range.</exception>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellsPanel.MeasureOverride(System.Windows.Size)">
      <summary>Determines the desired size of the panel.</summary>
      <param name="constraint">The maximum size that the panel can occupy.</param>
      <returns>The desired size of the panel.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellsPanel.OnClearChildren">
      <summary>Called when the collection of children in the <see cref="T:System.Windows.Controls.DataGrid" /> is cleared.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellsPanel.OnIsItemsHostChanged(System.Boolean,System.Boolean)">
      <summary>Indicates that the <see cref="P:System.Windows.Controls.Panel.IsItemsHost" /> property value has changed.</summary>
      <param name="oldIsItemsHost">The old value of the <see cref="P:System.Windows.Controls.Panel.IsItemsHost" /> property.</param>
      <param name="newIsItemsHost">The new value of the <see cref="P:System.Windows.Controls.Panel.IsItemsHost" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellsPanel.OnItemsChanged(System.Object,System.Windows.Controls.Primitives.ItemsChangedEventArgs)">
      <summary>Updates the visible cells when an item in the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection has changed.</summary>
      <param name="sender">The object that raised the <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> event.</param>
      <param name="args">The data for the event.</param>
    </member>
    <member name="T:System.Windows.Controls.DataGridCheckBoxColumn">
      <summary>Represents a <see cref="T:System.Windows.Controls.DataGrid" /> column that hosts <see cref="T:System.Windows.Controls.CheckBox" /> controls in its cells.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridCheckBoxColumn.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridCheckBoxColumn" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridCheckBoxColumn.DefaultEditingElementStyle">
      <summary>Gets the default value of the <see cref="P:System.Windows.Controls.DataGridBoundColumn.EditingElementStyle" /> property.</summary>
      <returns>An object that represents the style.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCheckBoxColumn.DefaultElementStyle">
      <summary>Gets the default value of the <see cref="P:System.Windows.Controls.DataGridBoundColumn.ElementStyle" /> property.</summary>
      <returns>An object that represents the style.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridCheckBoxColumn.GenerateEditingElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>Gets a <see cref="T:System.Windows.Controls.CheckBox" /> control that is bound to the column's <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> property value.</summary>
      <param name="cell">The cell that will contain the generated element.</param>
      <param name="dataItem">The data item represented by the row that contains the intended cell.</param>
      <returns>A new check box control that is bound to the column's <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> property value.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridCheckBoxColumn.GenerateElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>Gets a read-only <see cref="T:System.Windows.Controls.CheckBox" /> control that is bound to the column's <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> property value.</summary>
      <param name="cell">The cell that will contain the generated element.</param>
      <param name="dataItem">The data item represented by the row that contains the intended cell.</param>
      <returns>A new, read-only check box control that is bound to the column's <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> property value.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCheckBoxColumn.IsThreeState">
      <summary>Gets or sets a value that indicates whether the hosted <see cref="T:System.Windows.Controls.CheckBox" /> controls enable three states or two.</summary>
      <returns>
        <see langword="true" /> if the hosted controls support three states; <see langword="false" /> if they support two states. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridCheckBoxColumn.IsThreeStateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridCheckBoxColumn.IsThreeState" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridCheckBoxColumn.PrepareCellForEdit(System.Windows.FrameworkElement,System.Windows.RoutedEventArgs)">
      <summary>Called when a cell in the column enters editing mode.</summary>
      <param name="editingElement">The element that the column displays for a cell in editing mode.</param>
      <param name="editingEventArgs">Information about the user gesture that is causing a cell to enter editing mode.</param>
      <returns>The unedited value.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridCheckBoxColumn.RefreshCellContent(System.Windows.FrameworkElement,System.String)">
      <summary>Refreshes the contents of a cell in the column in response to a column property value change.</summary>
      <param name="element">The cell to update.</param>
      <param name="propertyName">The name of the column property that has changed.</param>
    </member>
    <member name="T:System.Windows.Controls.DataGridClipboardCellContent">
      <summary>Encapsulates the value and location of a <see cref="T:System.Windows.Controls.DataGrid" /> cell for use when copying content to the Clipboard.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridClipboardCellContent.#ctor(System.Object,System.Windows.Controls.DataGridColumn,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> structure.</summary>
      <param name="item">The data item for the row that contains the cell being copied.</param>
      <param name="column">The column that contains the cell being copied.</param>
      <param name="content">The text value of the cell being copied.</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridClipboardCellContent.Column">
      <summary>Gets the column that contains the cell being copied.</summary>
      <returns>The column that contains the cell being copied.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridClipboardCellContent.Content">
      <summary>Gets the text value of the cell being copied.</summary>
      <returns>The text value of the cell being copied.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridClipboardCellContent.Equals(System.Object)">
      <summary>Indicates whether the current and specified <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> instances are equivalent.</summary>
      <param name="data">The <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> instance to compare with the current <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> instance.</param>
      <returns>
        <see langword="true" /> if the current and specified <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> instances have the same <see cref="P:System.Windows.Controls.DataGridClipboardCellContent.Item" />, <see cref="P:System.Windows.Controls.DataGridClipboardCellContent.Column" />, and <see cref="P:System.Windows.Controls.DataGridClipboardCellContent.Content" /> property values; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridClipboardCellContent.GetHashCode">
      <summary>Returns the hash code for this <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> instance.</summary>
      <returns>The hash code for this <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> instance.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridClipboardCellContent.Item">
      <summary>Gets the data item for the row that contains the cell being copied.</summary>
      <returns>The data item for the row that contains the cell being copied.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridClipboardCellContent.op_Equality(System.Windows.Controls.DataGridClipboardCellContent,System.Windows.Controls.DataGridClipboardCellContent)">
      <summary>Indicates whether the specified <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> instances are equivalent.</summary>
      <param name="clipboardCellContent1">The first <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> instance to be compared.</param>
      <param name="clipboardCellContent2">The second <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> instance to be compared.</param>
      <returns>
        <see langword="true" /> if the specified <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> instances have the same <see cref="P:System.Windows.Controls.DataGridClipboardCellContent.Item" />, <see cref="P:System.Windows.Controls.DataGridClipboardCellContent.Column" />, and <see cref="P:System.Windows.Controls.DataGridClipboardCellContent.Content" /> property values; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridClipboardCellContent.op_Inequality(System.Windows.Controls.DataGridClipboardCellContent,System.Windows.Controls.DataGridClipboardCellContent)">
      <summary>Indicates whether the specified <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> instances are not equivalent.</summary>
      <param name="clipboardCellContent1">The first <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> instance to be compared.</param>
      <param name="clipboardCellContent2">The second <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> instance to be compared.</param>
      <returns>
        <see langword="true" /> if the current and specified <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> instances do not have the same <see cref="P:System.Windows.Controls.DataGridClipboardCellContent.Item" />, <see cref="P:System.Windows.Controls.DataGridClipboardCellContent.Column" />, and <see cref="P:System.Windows.Controls.DataGridClipboardCellContent.Content" /> property values; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridClipboardCopyMode">
      <summary>Defines constants that specify whether users can copy data from a <see cref="T:System.Windows.Controls.DataGrid" /> control to the Clipboard and whether column header values are included.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridClipboardCopyMode.ExcludeHeader">
      <summary>Users can copy the text values of selected cells to the Clipboard, and column header values are not included.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridClipboardCopyMode.IncludeHeader">
      <summary>Users can copy the text values of selected cells to the Clipboard, and column header values are included.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridClipboardCopyMode.None">
      <summary>Clipboard support is disabled.</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridColumn">
      <summary>Represents a <see cref="T:System.Windows.Controls.DataGrid" /> column.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridColumn" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.ActualWidth">
      <summary>Gets the current width of the column, in device-independent units (1/96th inch per unit).</summary>
      <returns>The width of the column in device-independent units (1/96th inch per unit). The registered default is 0. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.ActualWidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridColumn.ActualWidth" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.CancelCellEdit(System.Windows.FrameworkElement,System.Object)">
      <summary>Causes the cell being edited to revert to the original, unedited value.</summary>
      <param name="editingElement">The element that the column displays for a cell in editing mode.</param>
      <param name="uneditedValue">The original, unedited value in the cell being edited.</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.CanUserReorder">
      <summary>Gets or sets a value that indicates whether the user can change the column display position by dragging the column header.</summary>
      <returns>
        <see langword="true" /> if the user can drag the column header to a new position; otherwise, <see langword="false" />. The registered default is <see langword="true" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.CanUserReorderProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridColumn.CanUserReorder" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.CanUserResize">
      <summary>Gets or sets a value that indicates whether the user can adjust the column width by using the mouse.</summary>
      <returns>
        <see langword="true" /> if the user can resize the column; otherwise, <see langword="false" />. The registered default is <see langword="true" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.CanUserResizeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridColumn.CanUserResize" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.CanUserSort">
      <summary>Gets or sets a value that indicates whether the user can sort the column by clicking the column header.</summary>
      <returns>
        <see langword="true" /> if the user can sort the column; otherwise, <see langword="false" />. The registered default is <see langword="true" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.CanUserSortProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridColumn.CanUserSort" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.CellStyle">
      <summary>Gets or sets the style that is used to render cells in the column.</summary>
      <returns>The style that is used to render cells in the column. The registered default is <see langword="null" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.CellStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridColumn.CellStyle" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.ClipboardContentBinding">
      <summary>Gets or sets the binding object to use when getting or setting cell content for the clipboard.</summary>
      <returns>An object that represents the binding.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.CommitCellEdit(System.Windows.FrameworkElement)">
      <summary>Performs any required validation before exiting cell editing mode.</summary>
      <param name="editingElement">The element that the column displays for a cell in editing mode.</param>
      <returns>
        <see langword="true" /> if no validation errors are found; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="E:System.Windows.Controls.DataGridColumn.CopyingCellClipboardContent">
      <summary>Occurs after the cell clipboard content is prepared.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.DataGridOwner">
      <summary>Gets the <see cref="T:System.Windows.Controls.DataGrid" /> control that contains this column.</summary>
      <returns>The <see cref="T:System.Windows.Controls.DataGrid" /> control that contains this column.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.DisplayIndex">
      <summary>Gets or sets the display position of the column relative to the other columns in the <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
      <returns>The zero-based position of the column, as it is displayed in the associated <see cref="T:System.Windows.Controls.DataGrid" />. The registered default is -1. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.DisplayIndexProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridColumn.DisplayIndex" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.DragIndicatorStyle">
      <summary>Gets or sets the style object to apply to the column header during a drag operation.</summary>
      <returns>The style object to apply to the column header during a drag operation. The registered default is <see langword="null" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.DragIndicatorStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridColumn.DragIndicatorStyle" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.GenerateEditingElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>When overridden in a derived class, gets an editing element that is bound to the <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> property value of the column.</summary>
      <param name="cell">The cell that will contain the generated element.</param>
      <param name="dataItem">The data item that is represented by the row that contains the intended cell.</param>
      <returns>A new editing element that is bound to the <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> property value of the column.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.GenerateElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>When overridden in a derived class, gets a read-only element that is bound to the <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> property value of the column.</summary>
      <param name="cell">The cell that will contain the generated element.</param>
      <param name="dataItem">The data item that is represented by the row that contains the intended cell.</param>
      <returns>A new read-only element that is bound to the <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> property value of the column.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.GetCellContent(System.Object)">
      <summary>Gets the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property value for the cell at the intersection of this column and the row that represents the specified data item.</summary>
      <param name="dataItem">The data item that is represented by the row that contains the intended cell.</param>
      <returns>The cell content; or <see langword="null" />, if the cell is not found.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dataItem" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.GetCellContent(System.Windows.Controls.DataGridRow)">
      <summary>Retrieves the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property value for the cell at the intersection of this column and the specified row.</summary>
      <param name="dataGridRow">The row that contains the intended cell.</param>
      <returns>The cell content; or <see langword="null" />, if the cell is not found.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dataGridRow" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.Header">
      <summary>Gets or sets the content of the column header.</summary>
      <returns>The column header content. The registered default is <see langword="null" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.HeaderProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridColumn.Header" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.HeaderStringFormat">
      <summary>Gets or sets the format pattern to apply to the content of the column header.</summary>
      <returns>A string value that represents the formatting pattern. The registered default is <see langword="null" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.HeaderStringFormatProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridColumn.HeaderStringFormat" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.HeaderStyle">
      <summary>Gets or sets the style that is used when rendering the column header.</summary>
      <returns>The style that is used to render the column header; or <see langword="null" />, to use the <see cref="P:System.Windows.Controls.DataGrid.ColumnHeaderStyle" /> setting. The registered default is <see langword="null" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.HeaderStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridColumn.HeaderStyle" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.HeaderTemplate">
      <summary>Gets or sets the template that defines the visual representation of the column header.</summary>
      <returns>The object that defines the visual representation of the column header. The registered default is <see langword="null" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.HeaderTemplateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridColumn.HeaderTemplate" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.HeaderTemplateSelector">
      <summary>Gets or sets the object that selects which template to use for the column header.</summary>
      <returns>The object that selects the template. The registered default is <see langword="null" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.HeaderTemplateSelectorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridColumn.HeaderTemplateSelector" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.IsAutoGenerated">
      <summary>Gets a value that indicates whether the column is auto-generated.</summary>
      <returns>
        <see langword="true" /> if the column is auto-generated; otherwise, <see langword="false" />. The registered default is <see langword="false" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.IsAutoGeneratedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridColumn.IsAutoGenerated" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.IsFrozen">
      <summary>Gets a value that indicates whether the column is prevented from scrolling horizontally.</summary>
      <returns>
        <see langword="true" /> if the column cannot be scrolled horizontally; otherwise, <see langword="false" />. The registered default is <see langword="false" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.IsFrozenProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridColumn.IsFrozen" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.IsReadOnly">
      <summary>Gets or sets a value that indicates whether cells in the column can be edited.</summary>
      <returns>
        <see langword="true" /> if cells in the column cannot be edited; otherwise, <see langword="false" />. The registered default is <see langword="false" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.IsReadOnlyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridColumn.IsReadOnly" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.MaxWidth">
      <summary>Gets or sets the maximum width constraint of the column.</summary>
      <returns>The maximum column width, in device-independent units (1/96th inch per unit). The registered default is <see cref="F:System.Double.PositiveInfinity" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.MaxWidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridColumn.MaxWidth" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.MinWidth">
      <summary>Gets or sets the minimum width constraint of the column.</summary>
      <returns>The minimum column width, in device-independent units (1/96th inch per unit). The registered default is 20. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.MinWidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridColumn.MinWidth" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.NotifyPropertyChanged(System.String)">
      <summary>Notifies the <see cref="T:System.Windows.Controls.DataGrid" /> that contains this column that a column property has changed.</summary>
      <param name="propertyName">The name of the column property that changed.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.OnCoerceIsReadOnly(System.Boolean)">
      <summary>Determines the value of the <see cref="P:System.Windows.Controls.DataGridColumn.IsReadOnly" /> property based on the property rules of the <see cref="T:System.Windows.Controls.DataGrid" /> that contains this column.</summary>
      <param name="baseValue">The value that was passed to the delegate.</param>
      <returns>
        <see langword="true" /> if cells in the column cannot be edited based on rules from the <see cref="T:System.Windows.Controls.DataGrid" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.OnCopyingCellClipboardContent(System.Object)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DataGridColumn.CopyingCellClipboardContent" /> event.</summary>
      <param name="item">The data context for the selected element.</param>
      <returns>An object that represents the content of the cell.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.OnPastingCellClipboardContent(System.Object,System.Object)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DataGridColumn.PastingCellClipboardContent" /> event.</summary>
      <param name="item">The data context for the selected element.</param>
      <param name="cellContent">The content to paste into the cell.</param>
    </member>
    <member name="E:System.Windows.Controls.DataGridColumn.PastingCellClipboardContent">
      <summary>Occurs before the clipboard content is moved to the cell.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.PrepareCellForEdit(System.Windows.FrameworkElement,System.Windows.RoutedEventArgs)">
      <summary>When overridden in a derived class, sets cell content as needed for editing.</summary>
      <param name="editingElement">The element that the column displays for a cell in editing mode.</param>
      <param name="editingEventArgs">Information about the user gesture that is causing a cell to enter editing mode.</param>
      <returns>When returned by a derived class, the unedited cell value. This implementation returns <see langword="null" /> in all cases.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.RefreshCellContent(System.Windows.FrameworkElement,System.String)">
      <summary>When overridden in a derived class, updates the contents of a cell in the column in response to a column property value that changed.</summary>
      <param name="element">The cell to update.</param>
      <param name="propertyName">The name of the column property that changed.</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.SortDirection">
      <summary>Gets or sets the sort direction (ascending or descending) of the column.</summary>
      <returns>A value that represents the direction for sorting. The registered default is <see langword="null" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.SortDirectionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridColumn.SortDirection" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.SortMemberPath">
      <summary>Gets or sets a property name, or a period-delimited hierarchy of property names, that indicates the member to sort by.</summary>
      <returns>The path of the data-item member to sort by. The registered default is an empty string (""). For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.SortMemberPathProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridColumn.SortMemberPath" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.Visibility">
      <summary>Gets or sets the visibility of the column.</summary>
      <returns>An enumeration value that specifies the column visibility. The registered default is <see cref="F:System.Windows.Visibility.Visible" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.VisibilityProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridColumn.Visibility" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.Width">
      <summary>Gets or sets the column width or automatic sizing mode.</summary>
      <returns>A structure that represents the column width or automatic sizing mode. The registered default is <see cref="P:System.Windows.Controls.DataGridLength.Auto" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.WidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridColumn.Width" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridColumnEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.DataGrid.ColumnDisplayIndexChanged" /> and <see cref="E:System.Windows.Controls.DataGrid.ColumnReordered" /> events.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumnEventArgs.#ctor(System.Windows.Controls.DataGridColumn)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridColumnEventArgs" /> class.</summary>
      <param name="column">The column related to the event.</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumnEventArgs.Column">
      <summary>Gets the column related to the event.</summary>
      <returns>An object that represents the column related to the event.</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridColumnReorderingEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.DataGrid.ColumnReordering" /> event.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumnReorderingEventArgs.#ctor(System.Windows.Controls.DataGridColumn)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridColumnReorderingEventArgs" /> class.</summary>
      <param name="dataGridColumn">The column that is being moved.</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumnReorderingEventArgs.Cancel">
      <summary>Gets or sets a value that indicates whether the reordering operation is stopped before completion.</summary>
      <returns>
        <see langword="true" /> if the reordering operation is stopped before completion; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumnReorderingEventArgs.DragIndicator">
      <summary>Gets or sets the control that is used to display the visual indicator of the header for the column that is being dragged.</summary>
      <returns>The control that is used to display a dragged column header.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumnReorderingEventArgs.DropLocationIndicator">
      <summary>Gets or sets the control that is used to display the visual indicator of the current drop location during a column drag operation.</summary>
      <returns>The control that is used to display the drop location indicator during a column drag operation.</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridComboBoxColumn">
      <summary>Represents a <see cref="T:System.Windows.Controls.DataGrid" /> column that hosts <see cref="T:System.Windows.Controls.ComboBox" /> controls in its cells.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridComboBoxColumn.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridComboBoxColumn" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridComboBoxColumn.CancelCellEdit(System.Windows.FrameworkElement,System.Object)">
      <summary>Causes the column cell being edited to revert to the specified value.</summary>
      <param name="editingElement">The element that the column displays for a cell in editing mode.</param>
      <param name="uneditedValue">The previous, unedited value in the cell being edited.</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridComboBoxColumn.ClipboardContentBinding">
      <summary>Gets or sets the binding object to use when getting or setting cell content for the clipboard.</summary>
      <returns>An object that represents the binding.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridComboBoxColumn.CommitCellEdit(System.Windows.FrameworkElement)">
      <summary>Performs any required validation before exiting the editing mode.</summary>
      <param name="editingElement">The element that the column displays for a cell in editing mode.</param>
      <returns>
        <see langword="false" /> if validation fails; otherwise, <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridComboBoxColumn.DefaultEditingElementStyle">
      <summary>Gets the default value of the <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.EditingElementStyle" /> property.</summary>
      <returns>The default value of <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.EditingElementStyle" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridComboBoxColumn.DefaultElementStyle">
      <summary>Gets the default value of the <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.ElementStyle" />.</summary>
      <returns>The default value of the <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.ElementStyle" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridComboBoxColumn.DisplayMemberPath">
      <summary>Gets or sets a path to a value on the source object to provide the visual representation of the object.</summary>
      <returns>The path to a value on the source object. The registered default is an empty string (""). For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridComboBoxColumn.DisplayMemberPathProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.DisplayMemberPath" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridComboBoxColumn.EditingElementStyle">
      <summary>Gets or sets the style that is used when rendering the element that the column displays for a cell in editing mode.</summary>
      <returns>The style that is used when rendering an editing element. The registered default is <see langword="null" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridComboBoxColumn.EditingElementStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.EditingElementStyle" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridComboBoxColumn.ElementStyle">
      <summary>Gets or sets the style that is used when rendering the element that the column displays for a cell that is not in editing mode.</summary>
      <returns>The style that is used when rendering a display-only element. The registered default is <see langword="null" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridComboBoxColumn.ElementStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.ElementStyle" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridComboBoxColumn.GenerateEditingElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>Gets a combo box control that is bound to the column's <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedItemBinding" />, <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedValueBinding" />, and <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.TextBinding" /> values.</summary>
      <param name="cell">The cell that will contain the generated element.</param>
      <param name="dataItem">The data item represented by the row that contains the intended cell.</param>
      <returns>A new combo box control that is bound to the column's <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedItemBinding" />, <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedValueBinding" />, and <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.TextBinding" /> values.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridComboBoxColumn.GenerateElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>Gets a read-only combo box control that is bound to the column's <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedItemBinding" />, <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedValueBinding" />, and <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.TextBinding" /> values.</summary>
      <param name="cell">The cell that will contain the generated element.</param>
      <param name="dataItem">The data item represented by the row that contains the intended cell.</param>
      <returns>A new, read-only combo box control that is bound to the column's <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedItemBinding" />, <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedValueBinding" />, and <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.TextBinding" /> values.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridComboBoxColumn.ItemsSource">
      <summary>Gets or sets a collection that is used to generate the content of the combo box control.</summary>
      <returns>A collection that is used to generate the content of the combo box control. The registered default is <see langword="null" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridComboBoxColumn.ItemsSourceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.ItemsSource" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridComboBoxColumn.OnCoerceIsReadOnly(System.Boolean)">
      <summary>Determines the value of the <see cref="P:System.Windows.Controls.DataGridColumn.IsReadOnly" /> property based on property rules from the <see cref="T:System.Windows.Controls.DataGrid" /> that contains this column.</summary>
      <param name="baseValue">The value that was passed to the delegate.</param>
      <returns>
        <see langword="true" /> if the combo boxes in the column cannot be edited; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridComboBoxColumn.OnSelectedItemBindingChanged(System.Windows.Data.BindingBase,System.Windows.Data.BindingBase)">
      <summary>Notifies the <see cref="T:System.Windows.Controls.DataGrid" /> when the <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedItemBinding" /> property changes.</summary>
      <param name="oldBinding">The previous binding.</param>
      <param name="newBinding">The binding that the column has been changed to.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridComboBoxColumn.OnSelectedValueBindingChanged(System.Windows.Data.BindingBase,System.Windows.Data.BindingBase)">
      <summary>Notifies the <see cref="T:System.Windows.Controls.DataGrid" /> when the <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedValueBinding" /> property changes.</summary>
      <param name="oldBinding">The previous binding.</param>
      <param name="newBinding">The binding that the column has been changed to.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridComboBoxColumn.OnTextBindingChanged(System.Windows.Data.BindingBase,System.Windows.Data.BindingBase)">
      <summary>Notifies the <see cref="T:System.Windows.Controls.DataGrid" /> when the <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.TextBinding" /> property changes.</summary>
      <param name="oldBinding">The previous binding.</param>
      <param name="newBinding">The binding that the column has been changed to.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridComboBoxColumn.PrepareCellForEdit(System.Windows.FrameworkElement,System.Windows.RoutedEventArgs)">
      <summary>Called when a cell in the column enters editing mode.</summary>
      <param name="editingElement">The element that the column displays for a cell in editing mode.</param>
      <param name="editingEventArgs">Information about the user gesture that is causing a cell to enter editing mode.</param>
      <returns>The unedited value.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridComboBoxColumn.RefreshCellContent(System.Windows.FrameworkElement,System.String)">
      <summary>Refreshes the contents of a cell in the column in response to a binding change.</summary>
      <param name="element">The cell to update.</param>
      <param name="propertyName">The name of the column property that has changed.</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedItemBinding">
      <summary>Gets or sets the binding for the currently selected item.</summary>
      <returns>The binding for the selected item.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedValueBinding">
      <summary>Gets or sets the value of the selected item, obtained by using <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedValuePath" />.</summary>
      <returns>The binding for the selected value.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedValuePath">
      <summary>Gets or sets the path that is used to get the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValue" /> from the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" />.</summary>
      <returns>The path to get the selected value. The registered default is an empty string (""). For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridComboBoxColumn.SelectedValuePathProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedValuePath" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridComboBoxColumn.TextBinding">
      <summary>Gets or sets the binding for the text in the text box portion of the <see cref="T:System.Windows.Controls.ComboBox" /> control.</summary>
      <returns>The binding for the text of the currently selected item.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridComboBoxColumn.TextBlockComboBoxStyleKey">
      <summary>Gets the resource key for the style to apply to a read-only combo box.</summary>
      <returns>The key for the style.</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridEditAction">
      <summary>Defines constants that specify whether an edit is being canceled or committed.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridEditAction.Cancel">
      <summary>The edit is being canceled.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridEditAction.Commit">
      <summary>The edit is being committed.</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridEditingUnit">
      <summary>Defines constants that specify whether editing is enabled on a cell level or on a row level.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridEditingUnit.Cell">
      <summary>Cell editing is enabled.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridEditingUnit.Row">
      <summary>Row editing is enabled.</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridGridLinesVisibility">
      <summary>Defines constants that specify the visibility of the grid lines in a <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridGridLinesVisibility.All">
      <summary>Both horizontal and vertical grid lines are visible.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridGridLinesVisibility.Horizontal">
      <summary>Only horizontal grid lines are visible.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridGridLinesVisibility.None">
      <summary>No grid lines are visible.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridGridLinesVisibility.Vertical">
      <summary>Only vertical grid lines are visible.</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridHeadersVisibility">
      <summary>Defines constants that specify the visibility of row and column headers in a <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridHeadersVisibility.All">
      <summary>Both row and column headers are visible.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridHeadersVisibility.Column">
      <summary>Only column headers are visible.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridHeadersVisibility.None">
      <summary>No headers are visible.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridHeadersVisibility.Row">
      <summary>Only row headers are visible.</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridHyperlinkColumn">
      <summary>Represents a <see cref="T:System.Windows.Controls.DataGrid" /> column that hosts <see cref="T:System.Uri" /> elements in its cells.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridHyperlinkColumn.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridHyperlinkColumn" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridHyperlinkColumn.CancelCellEdit(System.Windows.FrameworkElement,System.Object)">
      <summary>Causes the column cell being edited to revert to the specified value.</summary>
      <param name="editingElement">The element that the column displays for a cell in editing mode.</param>
      <param name="uneditedValue">The previous, unedited value in the cell being edited.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridHyperlinkColumn.CommitCellEdit(System.Windows.FrameworkElement)">
      <summary>Performs any required validation before exiting edit mode.</summary>
      <param name="editingElement">The element that the column displays for a cell in editing mode.</param>
      <returns>
        <see langword="false" /> if validation fails; otherwise, <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridHyperlinkColumn.ContentBinding">
      <summary>Gets or sets the binding to the text of the hyperlink.</summary>
      <returns>The binding to the text of the hyperlink.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridHyperlinkColumn.DefaultEditingElementStyle">
      <summary>The default value of the <see cref="P:System.Windows.Controls.DataGridBoundColumn.EditingElementStyle" /> property.</summary>
      <returns>An object that represents the style.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridHyperlinkColumn.DefaultElementStyle">
      <summary>The default value of the <see cref="P:System.Windows.Controls.DataGridBoundColumn.ElementStyle" /> property.</summary>
      <returns>An object that represents the style.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridHyperlinkColumn.GenerateEditingElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>Gets an editable <see cref="T:System.Windows.Controls.TextBox" /> element that is bound to the column's <see cref="P:System.Windows.Controls.DataGridHyperlinkColumn.ContentBinding" /> property value.</summary>
      <param name="cell">The cell that will contain the generated element.</param>
      <param name="dataItem">The data item represented by the row that contains the intended cell.</param>
      <returns>A new text box control that is bound to the column's <see cref="P:System.Windows.Controls.DataGridHyperlinkColumn.ContentBinding" /> property value.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridHyperlinkColumn.GenerateElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>Gets a read-only <see cref="T:System.Windows.Documents.Hyperlink" /> element that is bound to the column's <see cref="P:System.Windows.Controls.DataGridHyperlinkColumn.ContentBinding" /> property value.</summary>
      <param name="cell">The cell that will contain the generated element.</param>
      <param name="dataItem">The data item represented by the row that contains the intended cell.</param>
      <returns>A new, read-only hyperlink element that is bound to the column's <see cref="P:System.Windows.Controls.DataGridHyperlinkColumn.ContentBinding" /> property value.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridHyperlinkColumn.OnContentBindingChanged(System.Windows.Data.BindingBase,System.Windows.Data.BindingBase)">
      <summary>Notifies the <see cref="T:System.Windows.Controls.DataGrid" /> when the <see cref="P:System.Windows.Controls.DataGridHyperlinkColumn.ContentBinding" /> property changes.</summary>
      <param name="oldBinding">The previous binding.</param>
      <param name="newBinding">The binding that the column has been changed to.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridHyperlinkColumn.PrepareCellForEdit(System.Windows.FrameworkElement,System.Windows.RoutedEventArgs)">
      <summary>Called when a cell in the column enters editing mode.</summary>
      <param name="editingElement">The element that the column displays for a cell in editing mode.</param>
      <param name="editingEventArgs">Information about the user gesture that is causing a cell to enter editing mode.</param>
      <returns>The unedited value of the cell.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridHyperlinkColumn.RefreshCellContent(System.Windows.FrameworkElement,System.String)">
      <summary>Refreshes the contents of a cell in the column in response to a column property value change.</summary>
      <param name="element">The cell to update.</param>
      <param name="propertyName">The name of the column property that has changed.</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridHyperlinkColumn.TargetName">
      <summary>Gets or sets the name of a target window or frame for the hyperlink.</summary>
      <returns>The name of the target window or frame. The registered default is <see langword="null" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridHyperlinkColumn.TargetNameProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridHyperlinkColumn.TargetName" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridLength">
      <summary>Represents the lengths of elements within the <see cref="T:System.Windows.Controls.DataGrid" /> control.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridLength.#ctor(System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridLength" /> class with an absolute value in pixels.</summary>
      <param name="pixels">The absolute pixel value (96 pixels-per-inch) to initialize the length to.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="pixels" /> is <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.DataGridLength.#ctor(System.Double,System.Windows.Controls.DataGridLengthUnitType)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridLength" /> class with a specified value and unit.</summary>
      <param name="value">The requested size of the element.</param>
      <param name="type">The type that is used to determine how the size of the element is calculated.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />.  
-or-  
<paramref name="type" /> is not <see cref="F:System.Windows.Controls.DataGridLengthUnitType.Auto" />, <see cref="F:System.Windows.Controls.DataGridLengthUnitType.Pixel" />, <see cref="F:System.Windows.Controls.DataGridLengthUnitType.Star" />, <see cref="F:System.Windows.Controls.DataGridLengthUnitType.SizeToCells" />, or <see cref="F:System.Windows.Controls.DataGridLengthUnitType.SizeToHeader" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.DataGridLength.#ctor(System.Double,System.Windows.Controls.DataGridLengthUnitType,System.Double,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridLength" /> class with the specified value, unit, desired value, and display value.</summary>
      <param name="value">The requested size of the element.</param>
      <param name="type">The type that is used to determine how the size of the element is calculated.</param>
      <param name="desiredValue">The calculated size needed for the element.</param>
      <param name="displayValue">The allocated size for the element.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />.  
-or-  
<paramref name="type" /> is not <see cref="F:System.Windows.Controls.DataGridLengthUnitType.Auto" />, <see cref="F:System.Windows.Controls.DataGridLengthUnitType.Pixel" />, <see cref="F:System.Windows.Controls.DataGridLengthUnitType.Star" />, <see cref="F:System.Windows.Controls.DataGridLengthUnitType.SizeToCells" />, or <see cref="F:System.Windows.Controls.DataGridLengthUnitType.SizeToHeader" />.  
-or-  
<paramref name="desiredValue" /> is <see cref="F:System.Double.NegativeInfinity" /> or <see cref="F:System.Double.PositiveInfinity" />.  
-or-  
<paramref name="displayValue" /> is <see cref="F:System.Double.NegativeInfinity" /> or <see cref="F:System.Double.PositiveInfinity" />.</exception>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.Auto">
      <summary>Gets a <see cref="T:System.Windows.Controls.DataGridLength" /> structure that represents the standard automatic sizing mode.</summary>
      <returns>A <see cref="T:System.Windows.Controls.DataGridLength" /> structure that represents the standard automatic sizing mode.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.DesiredValue">
      <summary>Gets the calculated pixel value needed for the element.</summary>
      <returns>The number of pixels calculated for the size of the element.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.DisplayValue">
      <summary>Gets the pixel value allocated for the size of the element.</summary>
      <returns>The number of pixels allocated for the element.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridLength.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current <see cref="T:System.Windows.Controls.DataGridLength" />.</summary>
      <param name="obj">The object to compare to the current instance.</param>
      <returns>
        <see langword="true" /> if the specified object is a <see cref="T:System.Windows.Controls.DataGridLength" /> with the same value or sizing mode as the current <see cref="T:System.Windows.Controls.DataGridLength" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridLength.Equals(System.Windows.Controls.DataGridLength)">
      <summary>Determines whether the specified <see cref="T:System.Windows.Controls.DataGridLength" /> is equal to the current <see cref="T:System.Windows.Controls.DataGridLength" />.</summary>
      <param name="other">The <see cref="T:System.Windows.Controls.DataGridLength" /> to compare to the current instance.</param>
      <returns>
        <see langword="true" /> if the specified object is a <see cref="T:System.Windows.Controls.DataGridLength" /> with the same value or sizing mode as the current <see cref="T:System.Windows.Controls.DataGridLength" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridLength.GetHashCode">
      <summary>Gets a hash code for the <see cref="T:System.Windows.Controls.DataGridLength" />.</summary>
      <returns>A hash code for the current <see cref="T:System.Windows.Controls.DataGridLength" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.IsAbsolute">
      <summary>Gets a value that indicates whether this instance sizes elements based on a fixed pixel value.</summary>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.Controls.DataGridLength.UnitType" /> property is set to <see cref="F:System.Windows.Controls.DataGridLengthUnitType.Pixel" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.IsAuto">
      <summary>Gets a value that indicates whether this instance automatically sizes elements based on both the content of cells and the column headers.</summary>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.Controls.DataGridLength.UnitType" /> property is set to <see cref="F:System.Windows.Controls.DataGridLengthUnitType.Auto" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.IsSizeToCells">
      <summary>Gets a value that indicates whether this instance automatically sizes elements based on the content of the cells.</summary>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.Controls.DataGridLength.UnitType" /> property is set to <see cref="F:System.Windows.Controls.DataGridLengthUnitType.SizeToCells" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.IsSizeToHeader">
      <summary>Gets a value that indicates whether this instance automatically sizes elements based on the header.</summary>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.Controls.DataGridLength.UnitType" /> property is set to <see cref="F:System.Windows.Controls.DataGridLengthUnitType.SizeToHeader" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.IsStar">
      <summary>Gets a value that indicates whether this instance automatically sizes elements based on a weighted proportion of available space.</summary>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.Controls.DataGridLength.UnitType" /> property is set to <see cref="F:System.Windows.Controls.DataGridLengthUnitType.Star" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridLength.op_Equality(System.Windows.Controls.DataGridLength,System.Windows.Controls.DataGridLength)">
      <summary>Compares two <see cref="T:System.Windows.Controls.DataGridLength" /> structures for equality.</summary>
      <param name="gl1">The first <see cref="T:System.Windows.Controls.DataGridLength" /> instance to compare.</param>
      <param name="gl2">The second <see cref="T:System.Windows.Controls.DataGridLength" /> instance to compare.</param>
      <returns>
        <see langword="true" /> if the two <see cref="T:System.Windows.Controls.DataGridLength" /> instances have the same value or sizing mode; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridLength.op_Implicit(System.Double)~System.Windows.Controls.DataGridLength">
      <summary>Converts a <see cref="T:System.Double" /> to an instance of the <see cref="T:System.Windows.Controls.DataGridLength" /> class.</summary>
      <param name="value">The absolute pixel value (96 pixels-per-inch) to initialize the length to.</param>
      <returns>An object that represents the specified length.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridLength.op_Inequality(System.Windows.Controls.DataGridLength,System.Windows.Controls.DataGridLength)">
      <summary>Compares two <see cref="T:System.Windows.Controls.DataGridLength" /> structures to determine whether they are not equal.</summary>
      <param name="gl1">The first <see cref="T:System.Windows.Controls.DataGridLength" /> instance to compare.</param>
      <param name="gl2">The second <see cref="T:System.Windows.Controls.DataGridLength" /> instance to compare.</param>
      <returns>
        <see langword="true" /> if the two <see cref="T:System.Windows.Controls.DataGridLength" /> instances do not have the same value or sizing mode; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.SizeToCells">
      <summary>Gets a <see cref="T:System.Windows.Controls.DataGridLength" /> structure that represents the cell-based automatic sizing mode.</summary>
      <returns>A <see cref="T:System.Windows.Controls.DataGridLength" /> structure that represents the cell-based automatic sizing mode.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.SizeToHeader">
      <summary>Gets a <see cref="T:System.Windows.Controls.DataGridLength" /> structure that represents the header-based automatic sizing mode.</summary>
      <returns>A <see cref="T:System.Windows.Controls.DataGridLength" /> structure that represents the header-based automatic sizing mode.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridLength.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A string that represent the current object.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.UnitType">
      <summary>Gets the type that is used to determine how the size of the element is calculated.</summary>
      <returns>A type that represents how size is determined.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.Value">
      <summary>Gets the absolute value of the <see cref="T:System.Windows.Controls.DataGridLength" /> in pixels.</summary>
      <returns>The absolute value of the <see cref="T:System.Windows.Controls.DataGridLength" /> in pixels, or 1.0 if the <see cref="P:System.Windows.Controls.DataGridLength.UnitType" /> property is set to <see cref="F:System.Windows.Controls.DataGridLengthUnitType.Auto" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridLengthConverter">
      <summary>Converts instances of various types to and from instances of the <see cref="T:System.Windows.Controls.DataGridLength" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridLengthConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridLengthConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridLengthConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether an instance of the specified type can be converted to an instance of the <see cref="T:System.Windows.Controls.DataGridLength" /> class.</summary>
      <param name="context">An object that provides a format context.</param>
      <param name="sourceType">The type to convert from.</param>
      <returns>
        <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridLengthConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether an instance of the <see cref="T:System.Windows.Controls.DataGridLength" /> class can be converted to an instance of the specified type.</summary>
      <param name="context">An object that provides a format context.</param>
      <param name="destinationType">The type to convert to.</param>
      <returns>
        <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridLengthConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the specified object to an instance of the <see cref="T:System.Windows.Controls.DataGridLength" /> class.</summary>
      <param name="context">An object that provides a format context.</param>
      <param name="culture">The object to use as the current culture.</param>
      <param name="value">The value to convert.</param>
      <returns>The converted value.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a valid type that can be converted to type <see cref="T:System.Windows.Controls.DataGridLength" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.DataGridLengthConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts an instance of the <see cref="T:System.Windows.Controls.DataGridLength" /> class to an instance of the specified type.</summary>
      <param name="context">An object that provides a format context.</param>
      <param name="culture">The object to use as the current culture.</param>
      <param name="value">The <see cref="T:System.Windows.Controls.DataGridLength" /> to convert.</param>
      <param name="destinationType">The type to convert the value to.</param>
      <returns>The converted value.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.Windows.Controls.DataGridLength" /> or <paramref name="destinationType" /> is not a valid conversion type.</exception>
    </member>
    <member name="T:System.Windows.Controls.DataGridLengthUnitType">
      <summary>Defines constants that specify how elements in a <see cref="T:System.Windows.Controls.DataGrid" /> are sized.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridLengthUnitType.Auto">
      <summary>The size is based on the contents of both the cells and the column header.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridLengthUnitType.Pixel">
      <summary>The size is a fixed value expressed in pixels.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridLengthUnitType.SizeToCells">
      <summary>The size is based on the contents of the cells.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridLengthUnitType.SizeToHeader">
      <summary>The size is based on the contents of the column header.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridLengthUnitType.Star">
      <summary>The size is a weighted proportion of available space.</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridPreparingCellForEditEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.DataGrid.PreparingCellForEdit" /> event.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridPreparingCellForEditEventArgs.#ctor(System.Windows.Controls.DataGridColumn,System.Windows.Controls.DataGridRow,System.Windows.RoutedEventArgs,System.Windows.FrameworkElement)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridPreparingCellForEditEventArgs" /> class.</summary>
      <param name="column">The column that contains the cell to be edited.</param>
      <param name="row">The row that contains the cell to be edited.</param>
      <param name="editingEventArgs">Information about the user gesture that caused the cell to enter edit mode.</param>
      <param name="editingElement">The element that the column displays for a cell in editing mode.</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridPreparingCellForEditEventArgs.Column">
      <summary>Gets the column that contains the cell to be edited.</summary>
      <returns>The column that contains the cell to be edited.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridPreparingCellForEditEventArgs.EditingElement">
      <summary>Gets the element that the column displays for a cell in editing mode.</summary>
      <returns>The element that the column displays for a cell in editing mode.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridPreparingCellForEditEventArgs.EditingEventArgs">
      <summary>Gets information about the user gesture that caused the cell to enter edit mode.</summary>
      <returns>Information about the user gesture that caused the cell to enter edit mode.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridPreparingCellForEditEventArgs.Row">
      <summary>Gets the row that contains the cell to be edited.</summary>
      <returns>The row that contains the cell to be edited.</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridRow">
      <summary>Represents a <see cref="T:System.Windows.Controls.DataGrid" /> row.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridRow" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.AlternationIndex">
      <summary>Gets the index of the row within a set of alternating rows.</summary>
      <returns>The index of the row within a set of alternating rows. The registered default is 0. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.AlternationIndexProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridRow.AlternationIndex" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges the content of the row.</summary>
      <param name="arrangeBounds">The area that is available for the row.</param>
      <returns>The actual area used by the row.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.DetailsTemplate">
      <summary>Gets or sets the template that is used to display the details section of the row.</summary>
      <returns>The template that is used to display the row details section or <see langword="null" /> to use the <see cref="P:System.Windows.Controls.DataGrid.RowDetailsTemplate" /> setting. The registered default is <see langword="null" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.DetailsTemplateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridRow.DetailsTemplate" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.DetailsTemplateSelector">
      <summary>Gets or sets a template selector that provides custom logic for choosing a row details template.</summary>
      <returns>A template selector for choosing the row details template. The registered default is <see langword="null" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.DetailsTemplateSelectorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridRow.DetailsTemplateSelector" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.DetailsVisibility">
      <summary>Gets or sets a value that indicates when the details section of the row is displayed.</summary>
      <returns>A value that specifies the visibility of the row details. The registered default is <see cref="F:System.Windows.Visibility.Collapsed" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.DetailsVisibilityProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridRow.DetailsVisibility" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.GetIndex">
      <summary>Returns the index of the row's data item within the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection of the <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
      <returns>The index of the row's data item, or -1 if the item was not found.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.GetRowContainingElement(System.Windows.FrameworkElement)">
      <summary>Returns the <see cref="T:System.Windows.Controls.DataGridRow" /> that contains the specified element.</summary>
      <param name="element">An element contained in a row to be found.</param>
      <returns>The <see cref="T:System.Windows.Controls.DataGridRow" /> that contains the specified element.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.Header">
      <summary>Gets or sets an object that represents the row header contents.</summary>
      <returns>The row header contents. The registered default is <see langword="null" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.HeaderProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridRow.Header" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.HeaderStyle">
      <summary>Gets or sets the style that is used when rendering the row header.</summary>
      <returns>The style that is used when rendering the row header. The registered default is <see langword="null" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.HeaderStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridRow.HeaderStyle" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.HeaderTemplate">
      <summary>Gets or sets the template that is used to display the row header.</summary>
      <returns>The template that is used to display the row header or <see langword="null" /> to use the <see cref="P:System.Windows.Controls.DataGrid.RowHeaderTemplate" /> setting. The registered default is <see langword="null" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.HeaderTemplateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridRow.HeaderTemplate" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.HeaderTemplateSelector">
      <summary>Gets or sets a template selector that provides custom logic for choosing a row header template.</summary>
      <returns>A template selector for choosing the row header template. The registered default is <see langword="null" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.HeaderTemplateSelectorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridRow.HeaderTemplateSelector" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.IsEditing">
      <summary>Gets a value that indicates whether the row is in editing mode.</summary>
      <returns>
        <see langword="true" /> if the row is in editing mode; otherwise, <see langword="false" />. The registered default is <see langword="false" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.IsEditingProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridRow.IsEditing" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.IsNewItem">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.DataGridRow" /> is a placeholder for a new item or for an item that has not been committed.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.DataGridRow" /> is a placeholder for a new item or for an item that has not been committed; otherwise, <see langword="false" />.  
The registered default is <see langword="false" />. For more information about what can influence the value, see Dependency Property Value Precedence.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.IsNewItemProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridRow.IsNewItem" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.IsSelected">
      <summary>Gets or sets a value that indicates whether the row is selected.</summary>
      <returns>
        <see langword="true" /> if the row is selected; otherwise, <see langword="false" />. The registered default is <see langword="false" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.IsSelectedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridRow.IsSelected" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.Item">
      <summary>Gets or sets the data item that the row represents.</summary>
      <returns>The data item that the row represents. The registered default is <see langword="null" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.ItemProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridRow.Item" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.ItemsPanel">
      <summary>Gets or sets the template that defines the panel that controls the layout of cells in the row.</summary>
      <returns>The template that defines the panel to use for the layout of cells in the row. The registered default is <see langword="null" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.ItemsPanelProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridRow.ItemsPanel" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.OnColumnsChanged(System.Collections.ObjectModel.ObservableCollection{System.Windows.Controls.DataGridColumn},System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>Called to update the displayed cells when the <see cref="P:System.Windows.Controls.DataGrid.Columns" /> collection has changed.</summary>
      <param name="columns">The <see cref="P:System.Windows.Controls.DataGrid.Columns" /> collection.</param>
      <param name="e">The event data from the <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" /> event of the <see cref="P:System.Windows.Controls.DataGrid.Columns" /> collection.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.OnCreateAutomationPeer">
      <summary>Returns a new <see cref="T:System.Windows.Automation.Peers.DataGridRowAutomationPeer" /> for this row.</summary>
      <returns>A new automation peer for this row.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.OnHeaderChanged(System.Object,System.Object)">
      <summary>Called when the value of the <see cref="P:System.Windows.Controls.DataGridRow.Header" /> property has changed.</summary>
      <param name="oldHeader">The previous value of the <see cref="P:System.Windows.Controls.DataGridRow.Header" /> property.</param>
      <param name="newHeader">The new value of the <see cref="P:System.Windows.Controls.DataGridRow.Header" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.OnItemChanged(System.Object,System.Object)">
      <summary>Updates the displayed cells when the <see cref="P:System.Windows.Controls.DataGridRow.Item" /> property value has changed.</summary>
      <param name="oldItem">The previous value of the <see cref="P:System.Windows.Controls.DataGridRow.Item" /> property.</param>
      <param name="newItem">The new value of the <see cref="P:System.Windows.Controls.DataGridRow.Item" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Invoked whenever the effective value of any dependency property on this <see cref="T:System.Windows.Controls.DataGridRow" /> has been updated.</summary>
      <param name="e">The event data that describes the property that changed, as well as old and new values.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.OnSelected(System.Windows.RoutedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DataGridRow.Selected" /> event when the <see cref="P:System.Windows.Controls.DataGridRow.IsSelected" /> property value changes to <see langword="true" />.</summary>
      <param name="e">The event data, which is empty when this method is called by the <see cref="T:System.Windows.Controls.DataGridRow" />.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)">
      <summary>Called whenever the control's template changes.</summary>
      <param name="oldTemplate">The old template.</param>
      <param name="newTemplate">The new template.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.OnUnselected(System.Windows.RoutedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DataGridRow.Unselected" /> event when the <see cref="P:System.Windows.Controls.DataGridRow.IsSelected" /> property value changes to <see langword="false" />.</summary>
      <param name="e">The event data, which is empty when this method is called by the <see cref="T:System.Windows.Controls.DataGridRow" />.</param>
    </member>
    <member name="E:System.Windows.Controls.DataGridRow.Selected">
      <summary>Occurs when the row is selected.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.SelectedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.DataGridRow.Selected" /> routed event.</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGridRow.Unselected">
      <summary>Occurs when the row selection is cleared.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.UnselectedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.DataGridRow.Unselected" /> routed event.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.ValidationErrorTemplate">
      <summary>Gets or sets the template that is used to visually indicate an error in row validation.</summary>
      <returns>The template that is used to visually indicate an error in row validation, or <see langword="null" /> to use the <see cref="P:System.Windows.Controls.DataGrid.RowValidationErrorTemplate" /> setting. The registered default is <see langword="null" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.ValidationErrorTemplateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridRow.ValidationErrorTemplate" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridRowClipboardEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.DataGrid.CopyingRowClipboardContent" /> event.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridRowClipboardEventArgs.#ctor(System.Object,System.Int32,System.Int32,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridRowClipboardEventArgs" /> class.</summary>
      <param name="item">The data item for the row for which the event occurred.</param>
      <param name="startColumnDisplayIndex">The <see cref="P:System.Windows.Controls.DataGridColumn.DisplayIndex" /> value of the column that contains the first selected cell in the row.</param>
      <param name="endColumnDisplayIndex">The <see cref="P:System.Windows.Controls.DataGridColumn.DisplayIndex" /> value of the column that contains the last selected cell in the row.</param>
      <param name="isColumnHeadersRow">A value that indicates whether the row for which the event occurred represents the column headers.</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowClipboardEventArgs.ClipboardRowContent">
      <summary>Gets a list of <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> values that represent the text values of the cells being copied.</summary>
      <returns>A list of <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> values that represent the text values of the cells being copied.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowClipboardEventArgs.EndColumnDisplayIndex">
      <summary>Gets the <see cref="P:System.Windows.Controls.DataGridColumn.DisplayIndex" /> value of the column that contains the last selected cell in the row.</summary>
      <returns>The <see cref="P:System.Windows.Controls.DataGridColumn.DisplayIndex" /> value of the column that contains the last selected cell in the row.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridRowClipboardEventArgs.FormatClipboardCellValues(System.String)">
      <summary>Returns the <see cref="P:System.Windows.Controls.DataGridRowClipboardEventArgs.ClipboardRowContent" /> values as a string in the specified format.</summary>
      <param name="format">The data format in which to serialize the cell values.</param>
      <returns>The formatted string.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowClipboardEventArgs.IsColumnHeadersRow">
      <summary>Gets a value that indicates whether the row for which the event occurred represents the column headers.</summary>
      <returns>
        <see langword="true" /> if the row represents the column headers; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowClipboardEventArgs.Item">
      <summary>Gets the data item for the row for which the event occurred.</summary>
      <returns>The data item for the row for which the event occurred.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowClipboardEventArgs.StartColumnDisplayIndex">
      <summary>Gets the <see cref="P:System.Windows.Controls.DataGridColumn.DisplayIndex" /> value of the column that contains the first selected cell in the row.</summary>
      <returns>The <see cref="P:System.Windows.Controls.DataGridColumn.DisplayIndex" /> value of the column that contains the first selected cell in the row.</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridRowDetailsEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.DataGrid.LoadingRowDetails" />, <see cref="E:System.Windows.Controls.DataGrid.UnloadingRowDetails" />, and <see cref="E:System.Windows.Controls.DataGrid.RowDetailsVisibilityChanged" /> events.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridRowDetailsEventArgs.#ctor(System.Windows.Controls.DataGridRow,System.Windows.FrameworkElement)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridRowDetailsEventArgs" /> class.</summary>
      <param name="row">The row for which the event occurred.</param>
      <param name="detailsElement">The row details section as a framework element.</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowDetailsEventArgs.DetailsElement">
      <summary>Gets the row details section as a framework element.</summary>
      <returns>The row details section as a framework element.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowDetailsEventArgs.Row">
      <summary>Gets the row for which the event occurred.</summary>
      <returns>The row for which the event occurred.</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridRowDetailsVisibilityMode">
      <summary>Defines constants that specify when <see cref="T:System.Windows.Controls.DataGrid" /> row details are displayed.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridRowDetailsVisibilityMode.Collapsed">
      <summary>The row details section is not displayed for any rows.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridRowDetailsVisibilityMode.Visible">
      <summary>The row details section is displayed for all rows.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridRowDetailsVisibilityMode.VisibleWhenSelected">
      <summary>The row details section is displayed only for selected rows.</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridRowEditEndingEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.DataGrid.RowEditEnding" /> event.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridRowEditEndingEventArgs.#ctor(System.Windows.Controls.DataGridRow,System.Windows.Controls.DataGridEditAction)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridRowEditEndingEventArgs" /> class.</summary>
      <param name="row">The row for which the event occurred.</param>
      <param name="editAction">A value that indicates whether the edit was canceled or committed.</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowEditEndingEventArgs.Cancel">
      <summary>Gets or sets a value that indicates whether the event should be canceled.</summary>
      <returns>
        <see langword="true" /> if the event should be canceled; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowEditEndingEventArgs.EditAction">
      <summary>Gets a value that indicates whether the edit was canceled or committed.</summary>
      <returns>A value that indicates whether the edit was canceled or committed.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowEditEndingEventArgs.Row">
      <summary>Gets the row for which the event occurred.</summary>
      <returns>The row for which the event occurred.</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridRowEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.DataGrid.LoadingRow" /> and <see cref="E:System.Windows.Controls.DataGrid.UnloadingRow" /> events.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridRowEventArgs.#ctor(System.Windows.Controls.DataGridRow)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridRowEventArgs" /> class.</summary>
      <param name="row">The row for which the event occurred.</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowEventArgs.Row">
      <summary>Gets the row for which the event occurred.</summary>
      <returns>The row for which the event occurred.</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridSelectionMode">
      <summary>Defines constants that specify whether single or multiple item selections are supported by a <see cref="T:System.Windows.Controls.DataGrid" /> control.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridSelectionMode.Extended">
      <summary>Multiple items in the <see cref="T:System.Windows.Controls.DataGrid" /> can be selected at the same time.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridSelectionMode.Single">
      <summary>Only one item in the <see cref="T:System.Windows.Controls.DataGrid" /> can be selected at a time.</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridSelectionUnit">
      <summary>Defines constants that specify whether cells, rows, or both, are used for selection in a <see cref="T:System.Windows.Controls.DataGrid" /> control.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridSelectionUnit.Cell">
      <summary>Only cells are selectable. Clicking a cell selects the cell. Clicking a row or column header does nothing.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridSelectionUnit.CellOrRowHeader">
      <summary>Cells and rows are selectable. Clicking a cell selects only the cell. Clicking a row header selects the full row.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridSelectionUnit.FullRow">
      <summary>Only full rows are selectable. Clicking a cell or a row header selects the full row.</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridSortingEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.DataGrid.Sorting" /> event.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridSortingEventArgs.#ctor(System.Windows.Controls.DataGridColumn)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridSortingEventArgs" /> class.</summary>
      <param name="column">The column that is being sorted.</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridSortingEventArgs.Handled">
      <summary>Gets or sets a value that specifies whether the routed event is handled.</summary>
      <returns>
        <see langword="true" /> if the event has been handled; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridSortingEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Controls.DataGrid.Sorting" /> event of a <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The data for the event.</param>
    </member>
    <member name="T:System.Windows.Controls.DataGridTemplateColumn">
      <summary>Represents a <see cref="T:System.Windows.Controls.DataGrid" /> column that hosts template-specified content in its cells.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridTemplateColumn.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridTemplateColumn" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplate">
      <summary>Gets or sets the template to use to display the contents of a cell that is in editing mode.</summary>
      <returns>The template that is used to display the contents of a cell that is in editing mode. The registered default is <see langword="null" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplate" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplateSelector">
      <summary>Gets or sets the object that determines which template to use to display the contents of a cell that is in editing mode.</summary>
      <returns>The object that determines which template to use to display the contents of a cell that is in editing mode. The registered default is <see langword="null" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplateSelectorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplateSelector" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridTemplateColumn.CellTemplate">
      <summary>Gets or sets the template to use to display the contents of a cell that is not in editing mode.</summary>
      <returns>The template to use to display the contents of a cell that is not in editing mode. The registered default is <see langword="null" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridTemplateColumn.CellTemplateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridTemplateColumn.CellTemplate" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridTemplateColumn.CellTemplateSelector">
      <summary>Gets or sets the object that determines which template to use to display the contents of a cell that is not in editing mode.</summary>
      <returns>The object that determines which template to use. The registered default is <see langword="null" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridTemplateColumn.CellTemplateSelectorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplateSelector" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridTemplateColumn.GenerateEditingElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>Gets an element defined by the <see cref="P:System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplate" /> that is bound to the column's <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> property value.</summary>
      <param name="cell">The cell that will contain the generated element.</param>
      <param name="dataItem">The data item represented by the row that contains the intended cell.</param>
      <returns>A new editing element that is bound to the column's <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> property value.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridTemplateColumn.GenerateElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>Gets an element defined by the <see cref="P:System.Windows.Controls.DataGridTemplateColumn.CellTemplate" /> that is bound to the column's <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> property value.</summary>
      <param name="cell">The cell that will contain the generated element.</param>
      <param name="dataItem">The data item represented by the row that contains the intended cell.</param>
      <returns>A new, read-only element that is bound to the column's <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> property value.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridTemplateColumn.RefreshCellContent(System.Windows.FrameworkElement,System.String)">
      <summary>Refreshes the contents of a cell in the column in response to a template property value change.</summary>
      <param name="element">The cell to update.</param>
      <param name="propertyName">The name of the column property that has changed.</param>
    </member>
    <member name="T:System.Windows.Controls.DataGridTextColumn">
      <summary>Represents a <see cref="T:System.Windows.Controls.DataGrid" /> column that hosts textual content in its cells.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridTextColumn.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridTextColumn" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridTextColumn.CancelCellEdit(System.Windows.FrameworkElement,System.Object)">
      <summary>Causes the column cell being edited to revert to the specified value.</summary>
      <param name="editingElement">The element that the column displays for a cell in editing mode.</param>
      <param name="uneditedValue">The previous, unedited value in the cell being edited.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridTextColumn.CommitCellEdit(System.Windows.FrameworkElement)">
      <summary>Performs any required validation before exiting the edit mode.</summary>
      <param name="editingElement">The element that the column displays for a cell in editing mode.</param>
      <returns>
        <see langword="false" /> if validation fails; otherwise, <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridTextColumn.DefaultEditingElementStyle">
      <summary>The default value of the <see cref="P:System.Windows.Controls.DataGridBoundColumn.EditingElementStyle" /> property.</summary>
      <returns>An object that represents the style.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridTextColumn.DefaultElementStyle">
      <summary>The default value of the <see cref="P:System.Windows.Controls.DataGridBoundColumn.ElementStyle" /> property.</summary>
      <returns>An object that represents the style.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridTextColumn.FontFamily">
      <summary>Gets or sets the font family for the content of cells in the column.</summary>
      <returns>The font family of the content for cells in the column. The registered default is <see cref="P:System.Windows.SystemFonts.MessageFontFamily" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridTextColumn.FontFamilyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridTextColumn.FontFamily" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridTextColumn.FontSize">
      <summary>Gets or sets the font size for the content of cells in the column.</summary>
      <returns>The font size of the content of cells in the column. The registered default is <see cref="P:System.Windows.SystemFonts.MessageFontSize" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridTextColumn.FontSizeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridTextColumn.FontSize" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridTextColumn.FontStyle">
      <summary>Gets or sets the font style for the content of cells in the column.</summary>
      <returns>The font style of the content of cells in the column. The registered default is <see cref="P:System.Windows.SystemFonts.MessageFontStyle" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridTextColumn.FontStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridTextColumn.FontStyle" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridTextColumn.FontWeight">
      <summary>Gets or sets the font weight for the content of cells in the column.</summary>
      <returns>The font weight of the contents of cells in the column. The registered default is <see cref="P:System.Windows.SystemFonts.MessageFontWeight" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridTextColumn.FontWeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridTextColumn.FontWeight" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridTextColumn.Foreground">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> that is used to paint the text contents of cells in the column.</summary>
      <returns>The brush that is used to paint the contents of cells in the column. The registered default is <see cref="P:System.Windows.SystemColors.ControlTextBrush" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridTextColumn.ForegroundProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridTextColumn.Foreground" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridTextColumn.GenerateEditingElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>Gets a <see cref="T:System.Windows.Controls.TextBox" /> control that is bound to the column's <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> property value.</summary>
      <param name="cell">The cell that will contain the generated element.</param>
      <param name="dataItem">The data item represented by the row that contains the intended cell.</param>
      <returns>A new text box control that is bound to the column's <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> property value.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridTextColumn.GenerateElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>Gets a read-only <see cref="T:System.Windows.Controls.TextBlock" /> control that is bound to the column's <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> property value.</summary>
      <param name="cell">The cell that will contain the generated element.</param>
      <param name="dataItem">The data item represented by the row that contains the intended cell.</param>
      <returns>A new, read-only text block control that is bound to the column's <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> property value.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridTextColumn.PrepareCellForEdit(System.Windows.FrameworkElement,System.Windows.RoutedEventArgs)">
      <summary>Called when a cell in the column enters editing mode.</summary>
      <param name="editingElement">The element that the column displays for a cell in editing mode.</param>
      <param name="editingEventArgs">Information about the user gesture that is causing a cell to enter editing mode.</param>
      <returns>The unedited value of the cell.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridTextColumn.RefreshCellContent(System.Windows.FrameworkElement,System.String)">
      <summary>Refreshes the contents of a cell in the column in response to a column property value change.</summary>
      <param name="element">The cell to update.</param>
      <param name="propertyName">The name of the column property that has changed.</param>
    </member>
    <member name="T:System.Windows.Controls.DataTemplateSelector">
      <summary>Provides a way to choose a <see cref="T:System.Windows.DataTemplate" /> based on the data object and the data-bound element.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataTemplateSelector.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataTemplateSelector" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
      <summary>When overridden in a derived class, returns a <see cref="T:System.Windows.DataTemplate" /> based on custom logic.</summary>
      <param name="item">The data object for which to select the template.</param>
      <param name="container">The data-bound object.</param>
      <returns>Returns a <see cref="T:System.Windows.DataTemplate" /> or <see langword="null" />. The default value is <see langword="null" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.DatePicker">
      <summary>Represents a control that allows the user to select a date.</summary>
    </member>
    <member name="M:System.Windows.Controls.DatePicker.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DatePicker" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.BlackoutDates">
      <summary>Gets or sets a collection of dates that are marked as not selectable.</summary>
      <returns>A collection of dates that cannot be selected. The default value is an empty collection.</returns>
    </member>
    <member name="E:System.Windows.Controls.DatePicker.CalendarClosed">
      <summary>Occurs when the drop-down <see cref="T:System.Windows.Controls.Calendar" /> is closed.</summary>
    </member>
    <member name="E:System.Windows.Controls.DatePicker.CalendarOpened">
      <summary>Occurs when the drop-down <see cref="T:System.Windows.Controls.Calendar" /> is opened.</summary>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.CalendarStyle">
      <summary>Gets or sets the style that is used when rendering the calendar.</summary>
      <returns>The style that is used when rendering the calendar.</returns>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.CalendarStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DatePicker.CalendarStyle" /> dependency property.</summary>
    </member>
    <member name="E:System.Windows.Controls.DatePicker.DateValidationError">
      <summary>Occurs when <see cref="P:System.Windows.Controls.DatePicker.Text" /> is set to a value that cannot be interpreted as a date or when the date cannot be selected.</summary>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.DisplayDate">
      <summary>Gets or sets the date to display.</summary>
      <returns>The date to display. The default is <see cref="P:System.DateTime.Today" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified date is not in the range defined by <see cref="P:System.Windows.Controls.DatePicker.DisplayDateStart" />. and <see cref="P:System.Windows.Controls.DatePicker.DisplayDateEnd" />.</exception>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.DisplayDateEnd">
      <summary>Gets or sets the last date to be displayed.</summary>
      <returns>The last date to display.</returns>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.DisplayDateEndProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DatePicker.DisplayDateEnd" /> dependency property.</summary>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.DisplayDateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DatePicker.DisplayDate" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.DisplayDateStart">
      <summary>Gets or sets the first date to be displayed.</summary>
      <returns>The first date to display.</returns>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.DisplayDateStartProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DatePicker.DisplayDateStart" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.FirstDayOfWeek">
      <summary>Gets or sets the day that is considered the beginning of the week.</summary>
      <returns>A <see cref="T:System.DayOfWeek" /> that represents the beginning of the week. The default is the <see cref="P:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek" /> that is determined by the current culture.</returns>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.FirstDayOfWeekProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DatePicker.FirstDayOfWeek" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.HasEffectiveKeyboardFocus">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.DatePicker" /> has focus.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.DatePicker" /> has focus; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.IsDropDownOpen">
      <summary>Gets or sets a value that indicates whether the drop-down <see cref="T:System.Windows.Controls.Calendar" /> is open or closed.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.Calendar" /> is open; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.IsDropDownOpenProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DatePicker.IsDropDownOpen" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.IsTodayHighlighted">
      <summary>Gets or sets a value that indicates whether the current date will be highlighted.</summary>
      <returns>
        <see langword="true" /> if the current date is highlighted; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.IsTodayHighlightedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DatePicker.IsTodayHighlighted" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.DatePicker.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.DatePicker" /> control when a new template is applied.</summary>
    </member>
    <member name="M:System.Windows.Controls.DatePicker.OnCalendarClosed(System.Windows.RoutedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DatePicker.CalendarClosed" /> routed event.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.DatePicker.OnCalendarOpened(System.Windows.RoutedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DatePicker.CalendarOpened" /> routed event.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.DatePicker.OnCreateAutomationPeer">
      <summary>Returns a <see cref="T:System.Windows.Automation.Peers.DatePickerAutomationPeer" /> for use by the automation infrastructure.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.DatePickerAutomationPeer" /> for the <see cref="T:System.Windows.Controls.DatePicker" /> object.</returns>
    </member>
    <member name="M:System.Windows.Controls.DatePicker.OnDateValidationError(System.Windows.Controls.DatePickerDateValidationErrorEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Controls.DatePickerDateValidationErrorEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.DatePicker.OnSelectedDateChanged(System.Windows.Controls.SelectionChangedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DatePicker.SelectedDateChanged" /> routed event.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.SelectedDate">
      <summary>Gets or sets the currently selected date.</summary>
      <returns>The date currently selected. The default is <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified date is not in the range defined by <see cref="P:System.Windows.Controls.DatePicker.DisplayDateStart" /> and <see cref="P:System.Windows.Controls.DatePicker.DisplayDateEnd" />, or the specified date is in the <see cref="P:System.Windows.Controls.DatePicker.BlackoutDates" /> collection.</exception>
    </member>
    <member name="E:System.Windows.Controls.DatePicker.SelectedDateChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.DatePicker.SelectedDate" /> property is changed.</summary>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.SelectedDateChangedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.DatePicker.SelectedDateChanged" /> routed event.</summary>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.SelectedDateFormat">
      <summary>Gets or sets the format that is used to display the selected date.</summary>
      <returns>The format that is used to display the selected date. The default is <see cref="F:System.Windows.Controls.DatePickerFormat.Long" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified format is not valid.</exception>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.SelectedDateFormatProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DatePicker.SelectedDateFormat" /> dependency property.</summary>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.SelectedDateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DatePicker.SelectedDate" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.Text">
      <summary>Gets the text that is displayed by the <see cref="T:System.Windows.Controls.DatePicker" />, or sets the selected date.</summary>
      <returns>The text displayed by the <see cref="T:System.Windows.Controls.DatePicker" />. The default is an empty string.</returns>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.TextProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DatePicker.Text" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.DatePicker.ToString">
      <summary>Provides a text representation of the selected date.</summary>
      <returns>A text representation of the selected date, or an empty string if <see cref="P:System.Windows.Controls.DatePicker.SelectedDate" /> is <see langword="null" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.DatePickerDateValidationErrorEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" /> event.</summary>
    </member>
    <member name="M:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.#ctor(System.Exception,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DatePickerDateValidationErrorEventArgs" /> class.</summary>
      <param name="exception">The initial exception from the <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" /> event.</param>
      <param name="text">The text that caused the <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" /> event.</param>
    </member>
    <member name="P:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.Exception">
      <summary>Gets the initial exception associated with the <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" /> event.</summary>
      <returns>The exception associated with the validation failure.</returns>
    </member>
    <member name="P:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.Text">
      <summary>Gets or sets the text that caused the <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" /> event.</summary>
      <returns>The text that caused the validation failure.</returns>
    </member>
    <member name="P:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.ThrowException">
      <summary>Gets or sets a value that indicates whether <see cref="P:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.Exception" /> should be thrown.</summary>
      <returns>
        <see langword="true" /> if the exception should be thrown; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.DatePickerFormat">
      <summary>Specifies date formats for a <see cref="T:System.Windows.Controls.DatePicker" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.DatePickerFormat.Long">
      <summary>Specifies that the date should be displayed by using unabbreviated days of the week and month names. This value displays a string that is equal to the string that is returned by the <see cref="M:System.DateTime.ToLongDateString" /> method.</summary>
    </member>
    <member name="F:System.Windows.Controls.DatePickerFormat.Short">
      <summary>Specifies that the date should be displayed by using abbreviated days of the week and month names. This value displays a string that is equal to the string that is returned by the <see cref="M:System.DateTime.ToShortDateString" /> method.</summary>
    </member>
    <member name="T:System.Windows.Controls.Decorator">
      <summary>Provides a base class for elements that apply effects onto or around a single child element, such as <see cref="T:System.Windows.Controls.Border" /> or <see cref="T:System.Windows.Controls.Viewbox" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.Decorator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Decorator" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.Decorator.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges the content of a <see cref="T:System.Windows.Controls.Decorator" /> element.</summary>
      <param name="arrangeSize">The <see cref="T:System.Windows.Size" /> this element uses to arrange its child content.</param>
      <returns>The <see cref="T:System.Windows.Size" /> that represents the arranged size of this <see cref="T:System.Windows.Controls.Decorator" /> element and its child.</returns>
    </member>
    <member name="P:System.Windows.Controls.Decorator.Child">
      <summary>Gets or sets the single child element of a <see cref="T:System.Windows.Controls.Decorator" />.</summary>
      <returns>The single child element of a <see cref="T:System.Windows.Controls.Decorator" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.Decorator.GetVisualChild(System.Int32)">
      <summary>Gets the child <see cref="T:System.Windows.Media.Visual" /> element at the specified <paramref name="index" /> position.</summary>
      <param name="index">Index position of the child element.</param>
      <returns>The child element at the specified <paramref name="index" /> position.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is greater than the number of visual child elements.</exception>
    </member>
    <member name="P:System.Windows.Controls.Decorator.LogicalChildren">
      <summary>Gets an enumerator that can be used to iterate the logical child elements of a <see cref="T:System.Windows.Controls.Decorator" />.</summary>
      <returns>An enumerator that can be used to iterate the logical child elements of a <see cref="T:System.Windows.Controls.Decorator" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.Decorator.MeasureOverride(System.Windows.Size)">
      <summary>Measures the child element of a <see cref="T:System.Windows.Controls.Decorator" /> to prepare for arranging it during the <see cref="M:System.Windows.Controls.Decorator.ArrangeOverride(System.Windows.Size)" /> pass.</summary>
      <param name="constraint">An upper limit <see cref="T:System.Windows.Size" /> that should not be exceeded.</param>
      <returns>The target <see cref="T:System.Windows.Size" /> of the element.</returns>
    </member>
    <member name="M:System.Windows.Controls.Decorator.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="value">An object to add as a child.</param>
    </member>
    <member name="M:System.Windows.Controls.Decorator.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="text">A string to add to the object.</param>
    </member>
    <member name="P:System.Windows.Controls.Decorator.VisualChildrenCount">
      <summary>Gets a value that is equal to the number of visual child elements of this instance of <see cref="T:System.Windows.Controls.Decorator" />.</summary>
      <returns>The number of visual child elements.</returns>
    </member>
    <member name="T:System.Windows.Controls.DefinitionBase">
      <summary>Defines the functionality required to support a shared-size group that is used by the <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> and <see cref="T:System.Windows.Controls.RowDefinitionCollection" /> classes. This is an abstract class.</summary>
    </member>
    <member name="P:System.Windows.Controls.DefinitionBase.SharedSizeGroup">
      <summary>Gets or sets a value that identifies a <see cref="T:System.Windows.Controls.ColumnDefinition" /> or <see cref="T:System.Windows.Controls.RowDefinition" /> as a member of a defined group that shares sizing properties.</summary>
      <returns>A <see cref="T:System.String" /> that identifies a shared-size group.</returns>
    </member>
    <member name="F:System.Windows.Controls.DefinitionBase.SharedSizeGroupProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DefinitionBase.SharedSizeGroup" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Controls.Dock">
      <summary>Specifies the <see cref="T:System.Windows.Controls.Dock" /> position of a child element that is inside a <see cref="T:System.Windows.Controls.DockPanel" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Dock.Bottom">
      <summary>A child element that is positioned at the bottom of the <see cref="T:System.Windows.Controls.DockPanel" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Dock.Left">
      <summary>A child element that is positioned on the left side of the <see cref="T:System.Windows.Controls.DockPanel" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Dock.Right">
      <summary>A child element that is positioned on the right side of the <see cref="T:System.Windows.Controls.DockPanel" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Dock.Top">
      <summary>A child element that is positioned at the top of the <see cref="T:System.Windows.Controls.DockPanel" />.</summary>
    </member>
    <member name="T:System.Windows.Controls.DockPanel">
      <summary>Defines an area where you can arrange child elements either horizontally or vertically, relative to each other.</summary>
    </member>
    <member name="M:System.Windows.Controls.DockPanel.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DockPanel" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.DockPanel.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges the content (child elements) of a <see cref="T:System.Windows.Controls.DockPanel" /> element.</summary>
      <param name="arrangeSize">The <see cref="T:System.Windows.Size" /> this element uses to arrange its child elements.</param>
      <returns>The <see cref="T:System.Windows.Size" /> that represents the arranged size of this <see cref="T:System.Windows.Controls.DockPanel" /> element.</returns>
    </member>
    <member name="P:System.Windows.Controls.DockPanel.Dock">
      <summary>Gets or sets a value that indicates the position of a child element within a parent <see cref="T:System.Windows.Controls.DockPanel" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.DockPanel.DockProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DockPanel.Dock" /> attached property.</summary>
    </member>
    <member name="M:System.Windows.Controls.DockPanel.GetDock(System.Windows.UIElement)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.DockPanel.Dock" /> attached property for a specified <see cref="T:System.Windows.UIElement" />.</summary>
      <param name="element">The element from which the property value is read.</param>
      <returns>The <see cref="P:System.Windows.Controls.DockPanel.Dock" /> property value for the element.</returns>
    </member>
    <member name="P:System.Windows.Controls.DockPanel.LastChildFill">
      <summary>Gets or sets a value that indicates whether the last child element within a <see cref="T:System.Windows.Controls.DockPanel" /> stretches to fill the remaining available space.</summary>
      <returns>
        <see langword="true" /> if the last child element stretches to fill the remaining space; otherwise <see langword="false" />. The default value is <see langword="true" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DockPanel.LastChildFillProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DockPanel.LastChildFill" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.DockPanel.MeasureOverride(System.Windows.Size)">
      <summary>Measures the child elements of a <see cref="T:System.Windows.Controls.DockPanel" /> prior to arranging them during the <see cref="M:System.Windows.Controls.DockPanel.ArrangeOverride(System.Windows.Size)" /> pass.</summary>
      <param name="constraint">A maximum <see cref="T:System.Windows.Size" /> to not exceed.</param>
      <returns>A <see cref="T:System.Windows.Size" /> that represents the element size you want.</returns>
    </member>
    <member name="M:System.Windows.Controls.DockPanel.SetDock(System.Windows.UIElement,System.Windows.Controls.Dock)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.DockPanel.Dock" /> attached property to a specified element.</summary>
      <param name="element">The element to which the attached property is written.</param>
      <param name="dock">The needed <see cref="T:System.Windows.Controls.Dock" /> value.</param>
    </member>
    <member name="T:System.Windows.Controls.DocumentViewer">
      <summary>Represents a document viewing control that can host paginated <see cref="T:System.Windows.Documents.FixedDocument" /> content such as an <see cref="T:System.Windows.Xps.Packaging.XpsDocument" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DocumentViewer" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.CanDecreaseZoom">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.DocumentViewer" /> can zoom out more.</summary>
      <returns>
        <see langword="true" /> if the control can zoom out more; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.CanDecreaseZoomProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DocumentViewer.CanDecreaseZoom" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.CanIncreaseZoom">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.DocumentViewer" /> can zoom in more.</summary>
      <returns>
        <see langword="true" /> if the control can zoom in more; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.CanIncreaseZoomProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DocumentViewer.CanIncreaseZoom" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.CanMoveDown">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.DocumentViewer" /> can move down more in the document.</summary>
      <returns>
        <see langword="true" /> if the control can move down more in the document; otherwise, <see langword="false" /> if the document is at the bottom.</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.CanMoveDownProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DocumentViewer.CanMoveDown" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.CanMoveLeft">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.DocumentViewer" /> can move more to the left in the document.</summary>
      <returns>
        <see langword="true" /> if the control can move more left in the document; otherwise, <see langword="false" /> if the document is at the leftmost edge.</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.CanMoveLeftProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DocumentViewer.CanMoveLeft" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.CanMoveRight">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.DocumentViewer" /> can move more to the right in the document.</summary>
      <returns>
        <see langword="true" /> if the control can move more to the right in the document; otherwise, <see langword="false" /> if the document is at the rightmost edge.</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.CanMoveRightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DocumentViewer.CanMoveRight" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.CanMoveUp">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.DocumentViewer" /> can move up more in the document.</summary>
      <returns>
        <see langword="true" /> if the control can move up more in the document; otherwise, <see langword="false" /> if the document is at the topmost edge.</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.CanMoveUpProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DocumentViewer.CanMoveUp" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.DecreaseZoom">
      <summary>Zooms out of the document content by one zoom step.</summary>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.ExtentHeight">
      <summary>Gets the overall vertical height of the paginated document.</summary>
      <returns>The overall vertical height of the paginated content specified in device independent pixels.  The default is 0.0.</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.ExtentHeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DocumentViewer.ExtentHeight" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.ExtentWidth">
      <summary>Gets the overall horizontal width of the paginated document.</summary>
      <returns>The current horizontal width of the content layout area specified in device independent pixels.  The default is 0.0.</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.ExtentWidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DocumentViewer.ExtentWidth" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.Find">
      <summary>Moves focus to the find toolbar to search the document content.</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.FitToHeight">
      <summary>Fits a single page to the height of the current viewport.</summary>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.FitToHeightCommand">
      <summary>Gets the <see cref="T:System.Windows.Input.RoutedUICommand" /> that performs the <see cref="M:System.Windows.Controls.DocumentViewer.FitToHeight" /> operation.</summary>
      <returns>The routed command that performs the <see cref="M:System.Windows.Controls.DocumentViewer.FitToHeight" /> operation.</returns>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.FitToMaxPagesAcross">
      <summary>Fits the document to the current <see cref="P:System.Windows.Controls.DocumentViewer.MaxPagesAcross" /> property setting.</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.FitToMaxPagesAcross(System.Int32)">
      <summary>Fits the document to a specified maximum number of page widths.</summary>
      <param name="pagesAcross">The maximum number of pages to fit in the current <see cref="P:System.Windows.Controls.DocumentViewer.ExtentWidth" />.</param>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.FitToMaxPagesAcrossCommand">
      <summary>Gets the <see cref="T:System.Windows.Input.RoutedUICommand" /> that performs the <see cref="P:System.Windows.Controls.DocumentViewer.MaxPagesAcross" /> operation.</summary>
      <returns>The routed command that performs the <see cref="P:System.Windows.Controls.DocumentViewer.MaxPagesAcross" /> operation.</returns>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.FitToWidth">
      <summary>Fits a single page to the width of the current viewport.</summary>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.FitToWidthCommand">
      <summary>Gets the <see cref="T:System.Windows.Input.RoutedUICommand" /> that performs the <see cref="M:System.Windows.Controls.DocumentViewer.FitToWidth" /> operation.</summary>
      <returns>The routed command that performs the <see cref="M:System.Windows.Controls.DocumentViewer.FitToWidth" /> operation.</returns>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.GetPageViewsCollection(System.Boolean@)">
      <summary>Returns a collection of <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> elements that are currently displayed.</summary>
      <param name="changed">When this method returns, contains <see langword="true" /> if the collection of <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> elements changed after the last call to <see cref="M:System.Windows.Controls.DocumentViewer.GetPageViewsCollection(System.Boolean@)" />; otherwise, <see langword="false" />.</param>
      <returns>The collection of <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> elements that are currently displayed in the <see cref="T:System.Windows.Controls.DocumentViewer" /> control.</returns>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.HorizontalOffset">
      <summary>Gets or sets the horizontal scroll position.</summary>
      <returns>The current horizontal scroll position specified in device independent pixels.  The initial default is 0.0.</returns>
      <exception cref="T:System.ArgumentException">The value specified to set is negative.</exception>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.HorizontalOffsetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DocumentViewer.HorizontalOffset" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.HorizontalPageSpacing">
      <summary>Gets or sets the horizontal space between pages.</summary>
      <returns>The horizontal space between displayed pages specified in device independent pixels.  The default is 10.0.</returns>
      <exception cref="T:System.ArgumentException">The value specified to set is negative.</exception>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.HorizontalPageSpacingProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DocumentViewer.HorizontalPageSpacing" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.IncreaseZoom">
      <summary>Zooms in on the document content by one zoom step.</summary>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.MaxPagesAcross">
      <summary>Gets or sets a value defining the maximum number of page columns to display.</summary>
      <returns>The maximum number of page columns to be displayed.  The default is 1.</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.MaxPagesAcrossProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DocumentViewer.MaxPagesAcross" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.MoveDown">
      <summary>Scrolls the document content down 16 device independent pixels.</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.MoveLeft">
      <summary>Scrolls the document content left 16 device independent pixels.</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.MoveRight">
      <summary>Scrolls the document content right 16 device independent pixels.</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.MoveUp">
      <summary>Scrolls the document content up 16 device independent pixels.</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnApplyTemplate">
      <summary>Responds to calls to the <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> method.</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnBringIntoView(System.Windows.DependencyObject,System.Windows.Rect,System.Int32)">
      <summary>Responds to the <see cref="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnBringIntoView(System.Windows.DependencyObject,System.Windows.Rect,System.Int32)" /> method from the <see cref="T:System.Windows.Controls.Primitives.DocumentViewerBase" /> implementation.</summary>
      <param name="element">The object to make visible.</param>
      <param name="rect">The rectangular region of the <paramref name="element" /> to make visible.</param>
      <param name="pageNumber">The number of the page to be viewed.</param>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnCreateAutomationPeer">
      <summary>Creates and returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for this <see cref="T:System.Windows.Controls.DocumentViewer" /> control.</summary>
      <returns>The new <see cref="T:System.Windows.Automation.Peers.DocumentViewerAutomationPeer" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnDecreaseZoomCommand">
      <summary>Responds to calls to the <see cref="M:System.Windows.Controls.DocumentViewer.DecreaseZoom" /> method.</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnDocumentChanged">
      <summary>Responds to calls when the document to display is changed.</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnFindCommand">
      <summary>Responds to calls to the <see cref="M:System.Windows.Controls.DocumentViewer.Find" /> method.</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnFirstPageCommand">
      <summary>Responds to calls to the <see cref="M:System.Windows.Controls.Primitives.DocumentViewerBase.FirstPage" /> method.</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnFitToHeightCommand">
      <summary>Responds to calls to the <see cref="M:System.Windows.Controls.DocumentViewer.FitToHeight" /> method.</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnFitToMaxPagesAcrossCommand">
      <summary>Responds to calls to the <see cref="M:System.Windows.Controls.DocumentViewer.FitToMaxPagesAcross" /> method.</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnFitToMaxPagesAcrossCommand(System.Int32)">
      <summary>Responds to calls to the <see cref="M:System.Windows.Controls.DocumentViewer.FitToMaxPagesAcross(System.Int32)" /> method.</summary>
      <param name="pagesAcross">The number of pages to fit across the content area.</param>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnFitToWidthCommand">
      <summary>Responds to calls to the <see cref="M:System.Windows.Controls.DocumentViewer.FitToWidth" /> method.</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnGoToPageCommand(System.Int32)">
      <summary>Responds to calls to the <see cref="M:System.Windows.Controls.Primitives.DocumentViewerBase.GoToPage(System.Int32)" /> method.</summary>
      <param name="pageNumber">The page number to position to.</param>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnIncreaseZoomCommand">
      <summary>Responds to calls to the <see cref="M:System.Windows.Controls.DocumentViewer.IncreaseZoom" /> method.</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Responds to <see cref="E:System.Windows.UIElement.KeyDown" /> events.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnLastPageCommand">
      <summary>Responds to calls to the <see cref="M:System.Windows.Controls.Primitives.DocumentViewerBase.LastPage" /> method.</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Responds to <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> events.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnMoveDownCommand">
      <summary>Responds to calls to the <see cref="M:System.Windows.Controls.DocumentViewer.MoveDown" /> method.</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnMoveLeftCommand">
      <summary>Responds to calls to the <see cref="M:System.Windows.Controls.DocumentViewer.MoveLeft" /> method.</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnMoveRightCommand">
      <summary>Responds to calls to the <see cref="M:System.Windows.Controls.DocumentViewer.MoveRight" /> method.</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnMoveUpCommand">
      <summary>Responds to calls to the <see cref="M:System.Windows.Controls.DocumentViewer.MoveUp" /> method.</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnNextPageCommand">
      <summary>Responds to calls to the <see cref="M:System.Windows.Controls.Primitives.DocumentViewerBase.NextPage" /> method.</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
      <summary>Responds to <see cref="E:System.Windows.UIElement.PreviewMouseWheel" /> events.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnPreviousPageCommand">
      <summary>Responds to calls to the <see cref="M:System.Windows.Controls.Primitives.DocumentViewerBase.PreviousPage" /> method.</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnScrollPageDownCommand">
      <summary>Responds to calls to the <see cref="M:System.Windows.Controls.DocumentViewer.ScrollPageDown" /> method.</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnScrollPageLeftCommand">
      <summary>Responds to calls to the <see cref="M:System.Windows.Controls.DocumentViewer.ScrollPageLeft" /> method.</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnScrollPageRightCommand">
      <summary>Responds to calls to the <see cref="M:System.Windows.Controls.DocumentViewer.ScrollPageRight" /> method.</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnScrollPageUpCommand">
      <summary>Responds to calls to the <see cref="M:System.Windows.Controls.DocumentViewer.ScrollPageUp" /> method.</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnViewThumbnailsCommand">
      <summary>Responds to calls to the <see cref="M:System.Windows.Controls.DocumentViewer.ViewThumbnails" /> method.</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.ScrollPageDown">
      <summary>Scrolls down one viewport.</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.ScrollPageLeft">
      <summary>Scrolls left one viewport.</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.ScrollPageRight">
      <summary>Scrolls right one viewport.</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.ScrollPageUp">
      <summary>Scrolls up one viewport.</summary>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.ShowPageBorders">
      <summary>Gets or sets a value that indicates whether drop-shadow page borders are displayed.</summary>
      <returns>
        <see langword="true" /> if drop-shadow borders are displayed; otherwise, <see langword="false" />.  The default is <see langword="true" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.ShowPageBordersProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DocumentViewer.ShowPageBorders" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.VerticalOffset">
      <summary>Gets or sets the vertical scroll position.</summary>
      <returns>The current vertical scroll position offset in device independent pixels.  The default is 0.0.</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.VerticalOffsetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DocumentViewer.VerticalOffset" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.VerticalPageSpacing">
      <summary>Gets or sets the vertical spacing between displayed pages.</summary>
      <returns>The vertical space between displayed pages in device independent pixels.  The default is 10.0.</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.VerticalPageSpacingProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DocumentViewer.VerticalPageSpacing" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.ViewportHeight">
      <summary>Gets the vertical size of the scrollable content area.</summary>
      <returns>The vertical size of the scrollable content area  in device independent pixels.  The default is 0.0.</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.ViewportHeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DocumentViewer.ViewportHeight" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.ViewportWidth">
      <summary>Gets the horizontal size of the scrollable content area.</summary>
      <returns>The horizontal size of the scrollable content area in device independent pixels.  The default is 0.0.</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.ViewportWidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DocumentViewer.ViewportWidth" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.ViewThumbnails">
      <summary>Displays a thumbnail representation of the pages.</summary>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.ViewThumbnailsCommand">
      <summary>Gets the <see cref="T:System.Windows.Input.RoutedUICommand" /> that performs the <see cref="M:System.Windows.Controls.DocumentViewer.ViewThumbnails" /> operation.</summary>
      <returns>The routed command that performs the <see cref="M:System.Windows.Controls.DocumentViewer.ViewThumbnails" /> operation.</returns>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.Zoom">
      <summary>Gets or sets the document zoom percentage.</summary>
      <returns>The zoom percentage expressed as a value, 5.0 to 5000.0.  The default is 100.0, which corresponds to 100.0%.</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.ZoomProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DocumentViewer.Zoom" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Controls.ExceptionValidationRule">
      <summary>Represents a rule that checks for exceptions that are thrown during the update of the binding source property.</summary>
    </member>
    <member name="M:System.Windows.Controls.ExceptionValidationRule.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ExceptionValidationRule" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.ExceptionValidationRule.Validate(System.Object,System.Globalization.CultureInfo)">
      <summary>Performs validation checks on a value.</summary>
      <param name="value">The value (from the binding target) to check.</param>
      <param name="cultureInfo">The culture to use in this rule.</param>
      <returns>A <see cref="T:System.Windows.Controls.ValidationResult" /> object.</returns>
    </member>
    <member name="T:System.Windows.Controls.ExpandDirection">
      <summary>Specifies the direction in which an <see cref="T:System.Windows.Controls.Expander" /> control opens.</summary>
    </member>
    <member name="F:System.Windows.Controls.ExpandDirection.Down">
      <summary>The <see cref="T:System.Windows.Controls.Expander" /> control opens down.</summary>
    </member>
    <member name="F:System.Windows.Controls.ExpandDirection.Left">
      <summary>The <see cref="T:System.Windows.Controls.Expander" /> control opens left.</summary>
    </member>
    <member name="F:System.Windows.Controls.ExpandDirection.Right">
      <summary>The <see cref="T:System.Windows.Controls.Expander" /> control opens right.</summary>
    </member>
    <member name="F:System.Windows.Controls.ExpandDirection.Up">
      <summary>The <see cref="T:System.Windows.Controls.Expander" /> control opens up.</summary>
    </member>
    <member name="T:System.Windows.Controls.Expander">
      <summary>Represents the control that displays a header that has a collapsible window that displays content.</summary>
    </member>
    <member name="M:System.Windows.Controls.Expander.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Expander" /> class.</summary>
    </member>
    <member name="E:System.Windows.Controls.Expander.Collapsed">
      <summary>Occurs when the content window of an <see cref="T:System.Windows.Controls.Expander" /> control closes and only the <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" /> is visible.</summary>
    </member>
    <member name="F:System.Windows.Controls.Expander.CollapsedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.Expander.Collapsed" /> routed event.</summary>
    </member>
    <member name="P:System.Windows.Controls.Expander.ExpandDirection">
      <summary>Gets or sets the direction in which the <see cref="T:System.Windows.Controls.Expander" /> content window opens.</summary>
      <returns>One of the <see cref="T:System.Windows.Controls.ExpandDirection" /> values that defines which direction the content window opens. The default is <see cref="F:System.Windows.Controls.ExpandDirection.Down" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Expander.ExpandDirectionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Expander.ExpandDirection" /> dependency property.</summary>
    </member>
    <member name="E:System.Windows.Controls.Expander.Expanded">
      <summary>Occurs when the content window of an <see cref="T:System.Windows.Controls.Expander" /> control opens to display both its header and content.</summary>
    </member>
    <member name="F:System.Windows.Controls.Expander.ExpandedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.Expander.Expanded" /> routed event.</summary>
    </member>
    <member name="P:System.Windows.Controls.Expander.IsExpanded">
      <summary>Gets or sets whether the <see cref="T:System.Windows.Controls.Expander" /> content window is visible.</summary>
      <returns>
        <see langword="true" /> if the content window is expanded; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Expander.IsExpandedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Expander.IsExpanded" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.Expander.OnApplyTemplate">
      <summary>Invoked whenever application code or internal processes call the <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> method.</summary>
    </member>
    <member name="M:System.Windows.Controls.Expander.OnCollapsed">
      <summary>Raises the <see cref="E:System.Windows.Controls.Expander.Collapsed" /> event when the <see cref="P:System.Windows.Controls.Expander.IsExpanded" /> property changes from <see langword="true" /> to <see langword="false" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.Expander.OnCreateAutomationPeer">
      <summary>Creates the implementation of <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for the <see cref="T:System.Windows.Controls.Expander" /> control.</summary>
      <returns>A new <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer" /> for this <see cref="T:System.Windows.Controls.Expander" /> control.</returns>
    </member>
    <member name="M:System.Windows.Controls.Expander.OnExpanded">
      <summary>Raises the <see cref="E:System.Windows.Controls.Expander.Expanded" /> event when the <see cref="P:System.Windows.Controls.Expander.IsExpanded" /> property changes from <see langword="false" /> to <see langword="true" />.</summary>
    </member>
    <member name="T:System.Windows.Controls.FlowDocumentPageViewer">
      <summary>Represents a control for viewing flow content in a fixed viewing mode that shows content one page at a time.</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentPageViewer.CanDecreaseZoom">
      <summary>Gets a value that indicates whether the <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.Zoom" /> level can be decreased.</summary>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.Zoom" /> level can be decreased; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentPageViewer.CanDecreaseZoomProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.CanDecreaseZoom" /> dependency property.</summary>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentPageViewer.CanDecreaseZoomPropertyKey">
      <summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.CanDecreaseZoom" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentPageViewer.CanIncreaseZoom">
      <summary>Gets a value that indicates whether the <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.Zoom" /> level can be increased.</summary>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.Zoom" /> level can be increased; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentPageViewer.CanIncreaseZoomProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.CanIncreaseZoom" /> dependency property.</summary>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentPageViewer.CanIncreaseZoomPropertyKey">
      <summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.CanIncreaseZoom" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.DecreaseZoom">
      <summary>Executes the <see cref="P:System.Windows.Input.NavigationCommands.DecreaseZoom" /> routed command.</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.Find">
      <summary>Toggles the Find dialog.</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.IncreaseZoom">
      <summary>Executes the <see cref="P:System.Windows.Input.NavigationCommands.IncreaseZoom" /> routed command.</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentPageViewer.IsInactiveSelectionHighlightEnabled">
      <summary>Gets or sets a value that indicates whether <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" /> displays selected text when the control does not have focus.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" /> displays selected text when the <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" /> does not have focus; otherwise, <see langword="false" />.  
The registered default is <see langword="false" />. For more information about what can influence the value, see Dependency Property Value Precedence.</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentPageViewer.IsInactiveSelectionHighlightEnabledProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.IsInactiveSelectionHighlightEnabled" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentPageViewer.IsSelectionActive">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" /> has focus and selected text.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" /> displays selected text when the text box does not have focus; otherwise, <see langword="false" />.  
The registered default is <see langword="false" />. For more information about what can influence the value, see Dependency Property Value Precedence.</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentPageViewer.IsSelectionActiveProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.IsSelectionActive" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentPageViewer.MaxZoom">
      <summary>Gets or sets the maximum allowable <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.Zoom" /> level for the <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" />.</summary>
      <returns>The maximum allowable zoom level for the <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" />, interpreted as a percentage. The default is 200.0 (a maximum zoom of 200%).</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentPageViewer.MaxZoomProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.MaxZoom" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentPageViewer.MinZoom">
      <summary>Gets or sets the minimum allowable <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.Zoom" /> level for the <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" />.</summary>
      <returns>The minimum allowable zoom level for the <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" />, interpreted as a percentage. The default is 80.0 (a minimum zoom of 80%).</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentPageViewer.MinZoomProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.MinZoom" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnCancelPrintCommand">
      <summary>Handles the <see cref="P:System.Windows.Input.ApplicationCommands.CancelPrint" /> routed command.</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
      <summary>Called whenever an unhandled <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> routed event reaches this class in its route. Implement this method to add class handling for this event.</summary>
      <param name="e">Arguments of the event.</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnCreateAutomationPeer">
      <summary>Provides an appropriate <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation for this control, as part of the WPF automation infrastructure.</summary>
      <returns>The appropriate <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation for this control.</returns>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnDecreaseZoomCommand">
      <summary>Handles the <see cref="P:System.Windows.Input.NavigationCommands.DecreaseZoom" /> routed command.</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnDocumentChanged">
      <summary>Called when the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" /> property is changed.</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnFindCommand">
      <summary>Handles the <see cref="P:System.Windows.Input.ApplicationCommands.Find" /> routed command.</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnFirstPageCommand">
      <summary>Handles the <see cref="P:System.Windows.Input.NavigationCommands.FirstPage" /> routed command.</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnGoToPageCommand(System.Int32)">
      <summary>Handles the <see cref="P:System.Windows.Input.NavigationCommands.GoToPage" /> routed command.</summary>
      <param name="pageNumber">The page number to go to.</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnIncreaseZoomCommand">
      <summary>Handles the <see cref="P:System.Windows.Input.NavigationCommands.IncreaseZoom" /> routed command.</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Handles the <see cref="E:System.Windows.UIElement.KeyDown" /> routed event.</summary>
      <param name="e">A <see cref="T:System.Windows.Input.KeyEventArgs" /> object that contains the arguments associated with the <see cref="E:System.Windows.UIElement.KeyDown" /> routed event.</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnLastPageCommand">
      <summary>Handles the <see cref="P:System.Windows.Input.NavigationCommands.LastPage" /> routed command.</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
      <summary>Handles the <see cref="E:System.Windows.UIElement.MouseWheel" /> routed event.</summary>
      <param name="e">A <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> object containing arguments associated with the <see cref="E:System.Windows.UIElement.MouseWheel" /> routed event.</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnNextPageCommand">
      <summary>Handles the <see cref="P:System.Windows.Input.NavigationCommands.NextPage" /> routed command.</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnPageViewsChanged">
      <summary>Handles the <see cref="E:System.Windows.Controls.Primitives.DocumentViewerBase.PageViewsChanged" /> routed event.</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnPreviousPageCommand">
      <summary>Handles the <see cref="P:System.Windows.Input.NavigationCommands.PreviousPage" /> routed command.</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnPrintCommand">
      <summary>Handles the <see cref="P:System.Windows.Input.ApplicationCommands.Print" /> routed command.</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnPrintCompleted">
      <summary>Called when a printing job has completed.</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentPageViewer.Selection">
      <summary>Gets the selected content of the <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" />.</summary>
      <returns>The selected content of the <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentPageViewer.SelectionBrush">
      <summary>Gets or sets the brush that highlights the selected text.</summary>
      <returns>A brush that highlights the selected text.</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentPageViewer.SelectionBrushProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.SelectionBrush" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentPageViewer.SelectionOpacity">
      <summary>Gets or sets the opacity of the <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.SelectionBrush" />.</summary>
      <returns>The opacity of the <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.SelectionBrush" />. The default is 0.4.</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentPageViewer.SelectionOpacityProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.SelectionOpacity" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentPageViewer.Zoom">
      <summary>Gets or sets the current zoom level for the <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" />.</summary>
      <returns>The current zoom level, interpreted as a percentage. The default is 100.0 (a zoom level of 100%).</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentPageViewer.ZoomIncrement">
      <summary>Gets or sets the zoom increment.</summary>
      <returns>The current zoom increment, interpreted as a percentage. The default is 10.0 (zoom increments by 10%).</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentPageViewer.ZoomIncrementProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.ZoomIncrement" /> dependency property.</summary>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentPageViewer.ZoomProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.Zoom" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Controls.FlowDocumentReader">
      <summary>Provides a control for viewing flow content, with built-in support for multiple viewing modes.</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.FlowDocumentReader" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.CancelPrint">
      <summary>Cancels any current printing job.</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.CanDecreaseZoom">
      <summary>Gets a value that indicates whether the <see cref="P:System.Windows.Controls.FlowDocumentReader.Zoom" /> level can be decreased.</summary>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.Controls.FlowDocumentReader.Zoom" /> level can be decreased; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.CanDecreaseZoomProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentReader.CanDecreaseZoom" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.CanGoToNextPage">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.FlowDocumentReader" /> can execute the <see cref="P:System.Windows.Input.NavigationCommands.NextPage" /> routed command to jump to the next page of content.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.FlowDocumentReader" /> can jump to the next page of content; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.CanGoToNextPageProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentReader.CanGoToNextPage" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.CanGoToPage(System.Int32)">
      <summary>Returns a value that indicates whether or the <see cref="T:System.Windows.Controls.FlowDocumentReader" /> is able to jump to the specified page number.</summary>
      <param name="pageNumber">A page number to check for as a valid jump target.</param>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.FlowDocumentReader" /> is able to jump to the specified page number; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.CanGoToPreviousPage">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.FlowDocumentReader" /> can execute the <see cref="P:System.Windows.Input.NavigationCommands.PreviousPage" /> routed command to jump to the previous page of content.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.FlowDocumentReader" /> can jump to the previous page of content; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.CanGoToPreviousPageProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentReader.CanGoToPreviousPage" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.CanIncreaseZoom">
      <summary>Gets a value that indicates whether the <see cref="P:System.Windows.Controls.FlowDocumentReader.Zoom" /> level can be increased.</summary>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.Controls.FlowDocumentReader.Zoom" /> level can be increased; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.CanIncreaseZoomProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentReader.CanIncreaseZoom" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.DecreaseZoom">
      <summary>Executes the <see cref="P:System.Windows.Input.NavigationCommands.DecreaseZoom" /> routed command.</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.Document">
      <summary>Gets or sets a <see cref="T:System.Windows.Documents.FlowDocument" /> that hosts the content to be displayed by the <see cref="T:System.Windows.Controls.FlowDocumentReader" />.</summary>
      <returns>A <see cref="T:System.Windows.Documents.FlowDocument" /> that hosts the content to be displayed by the <see cref="T:System.Windows.Controls.FlowDocumentReader" />. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.DocumentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentReader.Document" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.Find">
      <summary>Toggles the Find dialog.</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.IncreaseZoom">
      <summary>Executes the <see cref="P:System.Windows.Input.NavigationCommands.IncreaseZoom" /> routed command.</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.IsFindEnabled">
      <summary>Gets or sets a value that indicates whether the <see cref="P:System.Windows.Input.ApplicationCommands.Find" /> routed command is enabled.</summary>
      <returns>
        <see langword="true" /> to enable the <see cref="P:System.Windows.Input.ApplicationCommands.Find" /> routed command; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.IsFindEnabledProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentReader.IsFindEnabled" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.IsInactiveSelectionHighlightEnabled">
      <summary>Gets or sets a value that indicates whether <see cref="T:System.Windows.Controls.FlowDocumentReader" /> displays selected text when the control does not have focus.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.FlowDocumentReader" /> displays selected text when the <see cref="T:System.Windows.Controls.FlowDocumentReader" /> does not have focus; otherwise, <see langword="false" />.  
The registered default is <see langword="false" />. For more information about what can influence the value, see Dependency Property Value Precedence.</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.IsInactiveSelectionHighlightEnabledProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentReader.IsInactiveSelectionHighlightEnabled" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.IsPageViewEnabled">
      <summary>Gets or sets a value that indicates whether <see cref="F:System.Windows.Controls.FlowDocumentReaderViewingMode.Page" /> is available as a viewing mode.</summary>
      <returns>
        <see langword="true" /> to indicate that single-page viewing mode is available; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
      <exception cref="T:System.ArgumentException">Setting this property to <see langword="false" /> while <see cref="P:System.Windows.Controls.FlowDocumentReader.IsScrollViewEnabled" /> and <see cref="P:System.Windows.Controls.FlowDocumentReader.IsTwoPageViewEnabled" /> are also <see langword="false" />.</exception>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.IsPageViewEnabledProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentReader.IsPageViewEnabled" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.IsPrintEnabled">
      <summary>Gets or sets a value that indicates whether the <see cref="P:System.Windows.Input.ApplicationCommands.Print" /> routed command is enabled.</summary>
      <returns>
        <see langword="true" /> to enable the <see cref="P:System.Windows.Input.ApplicationCommands.Print" /> routed command; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.IsPrintEnabledProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentReader.IsPrintEnabled" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.IsScrollViewEnabled">
      <summary>Gets or sets a value that indicates whether <see cref="F:System.Windows.Controls.FlowDocumentReaderViewingMode.Scroll" /> is available as a viewing mode.</summary>
      <returns>
        <see langword="true" /> to indicate that <see cref="F:System.Windows.Controls.FlowDocumentReaderViewingMode.Scroll" /> is available as a viewing mode; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Setting this property to <see langword="false" /> while <see cref="P:System.Windows.Controls.FlowDocumentReader.IsPageViewEnabled" /> and <see cref="P:System.Windows.Controls.FlowDocumentReader.IsTwoPageViewEnabled" /> are also <see langword="false" />.</exception>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.IsScrollViewEnabledProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentReader.IsScrollViewEnabled" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.IsSelectionActive">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.FlowDocumentReader" /> has focus and selected text.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.FlowDocumentReader" /> displays selected text when the text box does not have focus; otherwise, <see langword="false" />.  
The registered default is <see langword="false" />. For more information about what can influence the value, see Dependency Property Value Precedence.</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.IsSelectionActiveProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentReader.IsSelectionActive" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.IsTwoPageViewEnabled">
      <summary>Gets or sets a value that indicates whether <see cref="F:System.Windows.Controls.FlowDocumentReaderViewingMode.TwoPage" /> is available as a viewing mode.</summary>
      <returns>
        <see langword="true" /> to indicate that <see cref="F:System.Windows.Controls.FlowDocumentReaderViewingMode.TwoPage" /> is available as a viewing mode; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
      <exception cref="T:System.ArgumentException">Setting this property to <see langword="false" /> while <see cref="P:System.Windows.Controls.FlowDocumentReader.IsPageViewEnabled" /> and <see cref="P:System.Windows.Controls.FlowDocumentReader.IsScrollViewEnabled" /> are also <see langword="false" />.</exception>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.IsTwoPageViewEnabledProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentReader.IsTwoPageViewEnabled" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.LogicalChildren">
      <summary>Gets an enumerator that can iterate the logical children of the <see cref="T:System.Windows.Controls.FlowDocumentReader" />.</summary>
      <returns>An enumerator for the logical children.</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.MaxZoom">
      <summary>Gets or sets the maximum allowable <see cref="P:System.Windows.Controls.FlowDocumentReader.Zoom" /> level for the <see cref="T:System.Windows.Controls.FlowDocumentReader" />.</summary>
      <returns>The maximum allowable <see cref="P:System.Windows.Controls.FlowDocumentReader.Zoom" /> level for the <see cref="T:System.Windows.Controls.FlowDocumentReader" />, interpreted as a percentage. The default is 200.0 (maximum zoom of 200%).</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.MaxZoomProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentReader.MaxZoom" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.MinZoom">
      <summary>Gets or sets the minimum allowable <see cref="P:System.Windows.Controls.FlowDocumentReader.Zoom" /> level for the <see cref="T:System.Windows.Controls.FlowDocumentReader" />.</summary>
      <returns>The minimum allowable <see cref="P:System.Windows.Controls.FlowDocumentReader.Zoom" /> level for the <see cref="T:System.Windows.Controls.FlowDocumentReader" />, interpreted as a percentage. The default is 80.0 (minimum zoom of 80%).</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.MinZoomProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentReader.MinZoom" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.FlowDocumentReader" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.OnCancelPrintCommand">
      <summary>Handles the <see cref="P:System.Windows.Input.ApplicationCommands.CancelPrint" /> routed command.</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.OnCreateAutomationPeer">
      <summary>Creates and returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> object for this <see cref="T:System.Windows.Controls.FlowDocumentReader" />.</summary>
      <returns>An <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> object for this <see cref="T:System.Windows.Controls.FlowDocumentReader" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.OnDecreaseZoomCommand">
      <summary>Handles the <see cref="P:System.Windows.Input.NavigationCommands.DecreaseZoom" /> routed command.</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)">
      <summary>Called when the DPI at which this Flow Document Reader is rendered changes.</summary>
      <param name="oldDpiScaleInfo">The previous DPI scale setting.</param>
      <param name="newDpiScaleInfo">The new DPI scale setting.</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.OnFindCommand">
      <summary>Handles the <see cref="P:System.Windows.Input.ApplicationCommands.Find" /> routed command.</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.OnIncreaseZoomCommand">
      <summary>Handles the <see cref="P:System.Windows.Input.NavigationCommands.IncreaseZoom" /> routed command.</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.OnInitialized(System.EventArgs)">
      <summary>Handles the <see cref="E:System.Windows.FrameworkElement.Initialized" /> routed event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> object containing the arguments associated with the <see cref="E:System.Windows.FrameworkElement.Initialized" /> routed event.</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Handles the <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> routed event.</summary>
      <param name="e">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> object containing the arguments associated with the <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> routed event.</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Invoked whenever an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached routed event reaches an element derived from this class in its route. Implement this method to add class handling for this event.</summary>
      <param name="e">Provides data about the event.</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.OnPrintCommand">
      <summary>Handles the <see cref="P:System.Windows.Input.ApplicationCommands.Print" /> routed command.</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.OnPrintCompleted">
      <summary>Called when a printing job has completed.</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.OnSwitchViewingModeCommand(System.Windows.Controls.FlowDocumentReaderViewingMode)">
      <summary>Handles the <see cref="M:System.Windows.Controls.FlowDocumentReader.SwitchViewingMode(System.Windows.Controls.FlowDocumentReaderViewingMode)" /> routed command.</summary>
      <param name="viewingMode">One of the <see cref="T:System.Windows.Controls.FlowDocumentReaderViewingMode" /> values that specifies the viewing mode to switch to.</param>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.PageCount">
      <summary>Gets the current number of display pages for the content hosted by the <see cref="T:System.Windows.Controls.FlowDocumentReader" />.</summary>
      <returns>The current number of display pages for the content hosted by the <see cref="T:System.Windows.Controls.FlowDocumentReader" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.PageCountProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentReader.PageCount" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.PageNumber">
      <summary>Gets the page number for the currently displayed page.</summary>
      <returns>The page number for the currently displayed page.</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.PageNumberProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentReader.PageNumber" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.Print">
      <summary>Invokes a standard Print dialog which can be used to print the contents of the <see cref="T:System.Windows.Controls.FlowDocumentReader" /> and configure printing preferences.</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.Selection">
      <summary>Gets the selected content of the <see cref="T:System.Windows.Controls.FlowDocumentReader" />.</summary>
      <returns>The selected content of the <see cref="T:System.Windows.Controls.FlowDocumentReader" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.SelectionBrush">
      <summary>Gets or sets the brush that highlights the selected text.</summary>
      <returns>A brush that highlights the selected text.</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.SelectionBrushProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentReader.SelectionBrush" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.SelectionOpacity">
      <summary>Gets or sets the opacity of the <see cref="P:System.Windows.Controls.FlowDocumentReader.SelectionBrush" />.</summary>
      <returns>The opacity of the <see cref="P:System.Windows.Controls.FlowDocumentReader.SelectionBrush" />. The default is 0.4.</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.SelectionOpacityProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentReader.SelectionOpacity" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.SwitchViewingMode(System.Windows.Controls.FlowDocumentReaderViewingMode)">
      <summary>Executes the <see cref="F:System.Windows.Controls.FlowDocumentReader.SwitchViewingModeCommand" /> command.</summary>
      <param name="viewingMode">One of the <see cref="T:System.Windows.Controls.FlowDocumentReaderViewingMode" /> values that specifies the desired viewing mode.</param>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.SwitchViewingModeCommand">
      <summary>Gets the value that represents the Switch Viewing Mode command.</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.SwitchViewingModeCore(System.Windows.Controls.FlowDocumentReaderViewingMode)">
      <summary>Handles the <see cref="M:System.Windows.Controls.FlowDocumentReader.SwitchViewingMode(System.Windows.Controls.FlowDocumentReaderViewingMode)" /> command.</summary>
      <param name="viewingMode">One of the <see cref="T:System.Windows.Controls.FlowDocumentReaderViewingMode" /> values that specifies the desired viewing mode.</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. Use the <see cref="P:System.Windows.Controls.FlowDocumentReader.Document" /> property to add a <see cref="T:System.Windows.Documents.FlowDocument" /> as the content child for the <see cref="T:System.Windows.Controls.FlowDocumentReader" />.</summary>
      <param name="value">An object to add as a child.</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="text">A string to add to the object.</param>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.ViewingMode">
      <summary>Gets or sets the viewing mode for the <see cref="T:System.Windows.Controls.FlowDocumentReader" />.</summary>
      <returns>One of the <see cref="T:System.Windows.Controls.FlowDocumentReaderViewingMode" /> values that specifies the viewing mode. The default is <see cref="F:System.Windows.Controls.FlowDocumentReaderViewingMode.Page" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.ViewingModeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentReader.ViewingMode" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.Zoom">
      <summary>Gets or sets the current zoom level.</summary>
      <returns>The current zoom level, interpreted as a percentage. The default value 100.0 (zoom level of 100%).</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.ZoomIncrement">
      <summary>Gets or sets the zoom increment.</summary>
      <returns>The current zoom increment, interpreted as a percentage. The default is 10.0 (zoom increment of 10%).</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.ZoomIncrementProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentReader.ZoomIncrement" /> dependency property.</summary>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.ZoomProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentReader.Zoom" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Controls.FlowDocumentReaderViewingMode">
      <summary>Names viewing modes for the <see cref="T:System.Windows.Controls.FlowDocumentReader" /> control.</summary>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReaderViewingMode.Page">
      <summary>Indicates that the <see cref="T:System.Windows.Controls.FlowDocumentReader" /> should show content one page at a time.</summary>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReaderViewingMode.Scroll">
      <summary>Indicates that the <see cref="T:System.Windows.Controls.FlowDocumentReader" /> should show content in continuous scrolling mode.</summary>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReaderViewingMode.TwoPage">
      <summary>Indicates that the <see cref="T:System.Windows.Controls.FlowDocumentReader" /> should show content two pages at a time, similar to an open book.</summary>
    </member>
    <member name="T:System.Windows.Controls.FlowDocumentScrollViewer">
      <summary>Provides a control for viewing flow content in a continuous scrolling mode.</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.CancelPrint">
      <summary>Cancels any current printing job.</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.CanDecreaseZoom">
      <summary>Gets a value that indicates whether the <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom" /> level can be decreased.</summary>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom" /> level can be decreased; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.CanDecreaseZoomProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.CanDecreaseZoom" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.CanIncreaseZoom">
      <summary>Gets a value that indicates whether the <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom" /> level can be increased.</summary>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom" /> level can be increased; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.CanIncreaseZoomProperty">
      <summary>Identifies the <see cref="F:System.Windows.Controls.FlowDocumentScrollViewer.CanDecreaseZoomProperty" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.DecreaseZoom">
      <summary>Executes the <see cref="P:System.Windows.Input.NavigationCommands.DecreaseZoom" /> routed command.</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.Document">
      <summary>Gets or sets a <see cref="T:System.Windows.Documents.FlowDocument" /> that hosts the content to be displayed by the <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" />.</summary>
      <returns>A <see cref="T:System.Windows.Documents.FlowDocument" /> that hosts the content to be displayed by the <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" />. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.DocumentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Document" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.Find">
      <summary>Toggles the Find dialog.</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.HorizontalScrollBarVisibility">
      <summary>Gets or sets a value that indicates whether a horizontal scroll bar is shown.</summary>
      <returns>One of the <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> values. The default is <see cref="F:System.Windows.Controls.ScrollBarVisibility.Auto" /> .</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.HorizontalScrollBarVisibilityProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.HorizontalScrollBarVisibility" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.IncreaseZoom">
      <summary>Executes the <see cref="P:System.Windows.Input.NavigationCommands.IncreaseZoom" /> routed command.</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.IsInactiveSelectionHighlightEnabled">
      <summary>Gets or sets a value that indicates whether <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> displays selected text when the control does not have focus.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> displays selected text when the <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> does not have focus; otherwise, <see langword="false" />.  
The registered default is <see langword="false" />. For more information about what can influence the value, see Dependency Property Value Precedence.</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.IsInactiveSelectionHighlightEnabledProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.IsInactiveSelectionHighlightEnabled" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.IsSelectionActive">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> has focus and selected text.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> displays selected text when the text box does not have focus; otherwise, <see langword="false" />.  
The registered default is <see langword="false" />. For more information about what can influence the value, see Dependency Property Value Precedence.</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.IsSelectionActiveProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.IsSelectionActive" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.IsSelectionEnabled">
      <summary>Gets or sets a value that indicates whether selection of content within the <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> is enabled.</summary>
      <returns>
        <see langword="true" /> to indicate that selection is enabled; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.IsSelectionEnabledProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.IsSelectionEnabled" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.IsToolBarVisible">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> toolbar is visible.</summary>
      <returns>
        <see langword="true" /> to indicate that the toolbar is visible; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.IsToolBarVisibleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.IsToolBarVisible" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.LogicalChildren">
      <summary>Gets an enumerator that can iterate the logical children of the <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" />.</summary>
      <returns>An enumerator for the logical children.</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.MaxZoom">
      <summary>Gets or sets the maximum allowable <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom" /> level for the <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" />.</summary>
      <returns>The maximum allowable <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom" /> level for the <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" />, interpreted as a percentage. The default is 200.0 (a maximum zoom of 200%).</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.MaxZoomProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.MaxZoom" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.MinZoom">
      <summary>Gets or sets the minimum allowable <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom" /> level for the <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" />.</summary>
      <returns>The minimum allowable <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom" /> level for the <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" />, interpreted as a percentage. The default is 80.0 (a minimum zoom of 80%).</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.MinZoomProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.MinZoom" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnCancelPrintCommand">
      <summary>Handles the <see cref="P:System.Windows.Input.ApplicationCommands.CancelPrint" /> routed command.</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
      <summary>Invoked whenever an unhandled <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> routed event reaches this class in its route. Implement this method to add class handling for this event.</summary>
      <param name="e">Arguments of the event.</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnCreateAutomationPeer">
      <summary>Creates and returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> object for this <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" />.</summary>
      <returns>An <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> object for this <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnDecreaseZoomCommand">
      <summary>Handles the <see cref="P:System.Windows.Input.NavigationCommands.DecreaseZoom" /> routed command.</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnFindCommand">
      <summary>Handles the <see cref="P:System.Windows.Input.ApplicationCommands.Find" /> routed command.</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnIncreaseZoomCommand">
      <summary>Handles the <see cref="P:System.Windows.Input.NavigationCommands.IncreaseZoom" /> routed command.</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Handles the <see cref="E:System.Windows.UIElement.KeyDown" /> routed event.</summary>
      <param name="e">A <see cref="T:System.Windows.Input.KeyEventArgs" /> object containing the arguments associated with the <see cref="E:System.Windows.UIElement.KeyDown" /> routed event.</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
      <summary>Handles the <see cref="E:System.Windows.UIElement.MouseWheel" /> routed event.</summary>
      <param name="e">A <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> object containing arguments associated with the <see cref="E:System.Windows.UIElement.MouseWheel" /> routed event.</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnPrintCommand">
      <summary>Handles the <see cref="P:System.Windows.Input.ApplicationCommands.Print" /> routed command.</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnPrintCompleted">
      <summary>Called when a printing job has completed.</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.Print">
      <summary>Invokes a standard Print dialog which can be used to print the contents of the <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> and configure printing preferences.</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.Selection">
      <summary>Gets the selected content of the <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" />.</summary>
      <returns>The selected content of the <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.SelectionBrush">
      <summary>Gets or sets the brush that highlights the selected text.</summary>
      <returns>A brush that highlights the selected text.</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.SelectionBrushProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.SelectionBrush" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.SelectionOpacity">
      <summary>Gets or sets the opacity of the <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.SelectionBrush" />.</summary>
      <returns>The opacity of the <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.SelectionBrush" />. The default is 0.4.</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.SelectionOpacityProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.SelectionOpacity" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.System#IServiceProvider#GetService(System.Type)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="serviceType">An object that specifies the type of service object to get.</param>
      <returns>A service object of type <paramref name="serviceType" />, or <see langword="null" /> if there is no service object of type <paramref name="serviceType" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. Use the <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Document" /> property to add a <see cref="T:System.Windows.Documents.FlowDocument" /> as the content child for the <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" />.</summary>
      <param name="value">An object to add as a child.</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="text">A string to add to the object.</param>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.VerticalScrollBarVisibility">
      <summary>Gets or sets a value that indicates whether a vertical scroll bar is shown.</summary>
      <returns>One of the <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> values. The default is <see cref="F:System.Windows.Controls.ScrollBarVisibility.Visible" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.VerticalScrollBarVisibilityProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.VerticalScrollBarVisibility" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom">
      <summary>Gets or sets the current zoom level.</summary>
      <returns>The current zoom level, interpreted as a percentage. The default is 100.0 (a zoom level of 100%).</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.ZoomIncrement">
      <summary>Gets or sets the zoom increment.</summary>
      <returns>The current zoom increment, interpreted as a percentage. The default is 10.0 (zoom increments by 10%).</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.ZoomIncrementProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.ZoomIncrement" /> dependency property.</summary>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.ZoomProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Controls.Frame">
      <summary>Frame is a content control that supports navigation.</summary>
    </member>
    <member name="M:System.Windows.Controls.Frame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Frame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.Frame.AddBackEntry(System.Windows.Navigation.CustomContentState)">
      <summary>Adds an entry to back navigation history that contains a <see cref="T:System.Windows.Navigation.CustomContentState" /> object.</summary>
      <param name="state">A <see cref="T:System.Windows.Navigation.CustomContentState" /> object that represents application-defined state that is associated with a specific piece of content.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="state" /> is <see langword="null" />, and a <see cref="T:System.Windows.Navigation.CustomContentState" /> object is not returned from <see cref="M:System.Windows.Navigation.IProvideCustomContentState.GetContentState" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.Frame.AddChild(System.Object)">
      <summary>Adds a child object.</summary>
      <param name="value">The child object to add.</param>
    </member>
    <member name="M:System.Windows.Controls.Frame.AddText(System.String)">
      <summary>Adds the text content of a node to the object.</summary>
      <param name="text">The text to add to the object.</param>
    </member>
    <member name="P:System.Windows.Controls.Frame.BackStack">
      <summary>Returns an <see cref="T:System.Collections.IEnumerable" /> that you use to enumerate the entries in back navigation history for a <see cref="T:System.Windows.Controls.Frame" />.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerable" /> if at least one entry has been added to back navigation history. If there are not entries, or the <see cref="T:System.Windows.Controls.Frame" /> does not own its own navigation history, <see cref="P:System.Windows.Controls.Frame.BackStack" /> is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Frame.BackStackProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Frame.BackStack" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Frame.BaseUri">
      <summary>Gets or sets the base uniform resource identifier (URI) for a <see cref="T:System.Windows.Controls.Frame" />.</summary>
      <returns>The base uniform resource identifier (URI) of the <see cref="T:System.Windows.Controls.Frame" /> control.</returns>
    </member>
    <member name="P:System.Windows.Controls.Frame.CanGoBack">
      <summary>Gets a value that indicates whether there is at least one entry in back navigation history.</summary>
      <returns>
        <see langword="true" /> if there is at least one entry in back navigation history; <see langword="false" /> if there are no entries in back navigation history or the <see cref="T:System.Windows.Controls.Frame" /> does not own its own navigation history.</returns>
    </member>
    <member name="F:System.Windows.Controls.Frame.CanGoBackProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Frame.CanGoBack" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Frame.CanGoForward">
      <summary>Gets a value that indicates whether there is at least one entry in forward navigation history.</summary>
      <returns>
        <see langword="true" /> if there is at least one entry in forward navigation history; <see langword="false" /> if there are no entries in forward navigation history or the <see cref="T:System.Windows.Controls.Frame" /> does not own its own navigation history.</returns>
    </member>
    <member name="F:System.Windows.Controls.Frame.CanGoForwardProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Frame.CanGoForward" /> dependency property.</summary>
    </member>
    <member name="E:System.Windows.Controls.Frame.ContentRendered">
      <summary>Occurs after <see cref="T:System.Windows.Controls.Frame" /> content has been rendered.</summary>
    </member>
    <member name="P:System.Windows.Controls.Frame.CurrentSource">
      <summary>Gets the uniform resource identifier (URI) of the content that was last navigated to.</summary>
      <returns>A <see cref="T:System.Uri" /> for the content that was last navigated to, if navigated to by using a URI; otherwise, <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.Frame.ForwardStack">
      <summary>Gets an <see cref="T:System.Collections.IEnumerable" /> that you use to enumerate the entries in forward navigation history for a <see cref="T:System.Windows.Controls.Frame" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> object if at least one entry has been added to forward navigation history, or <see langword="null" /> if there are no entries or the <see cref="T:System.Windows.Controls.Frame" /> does not own its own navigation history.</returns>
    </member>
    <member name="F:System.Windows.Controls.Frame.ForwardStackProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Frame.ForwardStack" /> dependency property.</summary>
    </member>
    <member name="E:System.Windows.Controls.Frame.FragmentNavigation">
      <summary>Occurs when navigation to a content fragment begins, which occurs immediately, if the desired fragment is in the current content, or after the source XAML content has been loaded, if the desired fragment is in different content.</summary>
    </member>
    <member name="M:System.Windows.Controls.Frame.GoBack">
      <summary>Navigates to the most recent item in back navigation history, if a <see cref="T:System.Windows.Controls.Frame" /> manages its own navigation history.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Windows.Controls.Frame.GoBack" /> is called when there are no entries in back navigation history.</exception>
    </member>
    <member name="M:System.Windows.Controls.Frame.GoForward">
      <summary>Navigates to the most recent item in forward navigation history, if a <see cref="T:System.Windows.Controls.Frame" /> manages its own navigation history.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Windows.Controls.Frame.GoForward" /> is called when there are no entries in back navigation history.</exception>
    </member>
    <member name="P:System.Windows.Controls.Frame.JournalOwnership">
      <summary>Gets or sets whether a <see cref="T:System.Windows.Controls.Frame" /> is responsible for managing its own navigation history, or yields navigation history management to a parent navigator (<see cref="T:System.Windows.Navigation.NavigationWindow" />, <see cref="T:System.Windows.Controls.Frame" />).</summary>
      <returns>A <see cref="T:System.Windows.Navigation.JournalOwnership" /> value that specifies whether <see cref="T:System.Windows.Controls.Frame" /> manages its own journal. The default value is <see cref="F:System.Windows.Navigation.JournalOwnership.Automatic" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Frame.JournalOwnershipProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Frame.JournalOwnership" /> dependency property.</summary>
    </member>
    <member name="E:System.Windows.Controls.Frame.LoadCompleted">
      <summary>Occurs when content that was navigated to has been loaded, parsed, and has begun rendering.</summary>
    </member>
    <member name="M:System.Windows.Controls.Frame.Navigate(System.Object)">
      <summary>Navigates asynchronously to content that is contained by an object.</summary>
      <param name="content">An <see cref="T:System.Object" /> that contains the content to navigate to.</param>
      <returns>
        <see langword="true" /> if navigation is not canceled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.Frame.Navigate(System.Object,System.Object)">
      <summary>Navigates asynchronously to content that is contained by an object, and passes an object that contains data to be used for processing during navigation.</summary>
      <param name="content">An <see cref="T:System.Object" /> that contains the content to navigate to.</param>
      <param name="extraData">A <see cref="T:System.Object" /> that contains data to be used for processing during navigation.</param>
      <returns>
        <see langword="true" /> if navigation is not canceled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.Frame.Navigate(System.Uri)">
      <summary>Navigates asynchronously to content that is specified by a uniform resource identifier (URI).</summary>
      <param name="source">A <see cref="T:System.Uri" /> object initialized with the URI for the desired content.</param>
      <returns>
        <see langword="true" /> if navigation is not canceled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.Frame.Navigate(System.Uri,System.Object)">
      <summary>Navigates asynchronously to source content located at a uniform resource identifier (URI), and passes an object that contains data to be used for processing during navigation.</summary>
      <param name="source">A <see cref="T:System.Uri" /> object initialized with the URI for the desired content.</param>
      <param name="extraData">A <see cref="T:System.Object" /> that contains data to be used for processing during navigation.</param>
      <returns>
        <see langword="true" /> if navigation is not canceled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="E:System.Windows.Controls.Frame.Navigated">
      <summary>Occurs when the content that is being navigated to has been found, and is available from the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property, although it may not have completed loading.</summary>
    </member>
    <member name="E:System.Windows.Controls.Frame.Navigating">
      <summary>Occurs when a new navigation is requested.</summary>
    </member>
    <member name="E:System.Windows.Controls.Frame.NavigationFailed">
      <summary>Occurs when an error is raised while navigating to the requested content.</summary>
    </member>
    <member name="E:System.Windows.Controls.Frame.NavigationProgress">
      <summary>Occurs periodically during a download to provide navigation progress information.</summary>
    </member>
    <member name="P:System.Windows.Controls.Frame.NavigationService">
      <summary>Gets the <see cref="T:System.Windows.Navigation.NavigationService" /> that is used by this <see cref="T:System.Windows.Controls.Frame" /> to provide navigation services.</summary>
      <returns>A <see cref="T:System.Windows.Controls.Frame" /> object that represents the <see cref="T:System.Windows.Navigation.NavigationService" /> used by this <see cref="T:System.Windows.Controls.Frame" />, if one is available. Otherwise, <see langword="null" /> is returned.</returns>
    </member>
    <member name="E:System.Windows.Controls.Frame.NavigationStopped">
      <summary>Occurs when the <see cref="M:System.Windows.Controls.Frame.StopLoading" /> method is called, or when a new navigation is requested while a current navigation is in progress.</summary>
    </member>
    <member name="P:System.Windows.Controls.Frame.NavigationUIVisibility">
      <summary>Gets or sets when the <see cref="T:System.Windows.Controls.Frame" /> can show its navigation UI.</summary>
      <returns>A <see cref="T:System.Windows.Navigation.NavigationUIVisibility" /> value that specifies when the <see cref="T:System.Windows.Controls.Frame" /> can show its navigation UI. The default value is <see cref="F:System.Windows.Navigation.NavigationUIVisibility.Automatic" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Frame.NavigationUIVisibilityProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Frame.NavigationUIVisibility" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.Frame.OnApplyTemplate">
      <summary>Called when the template generation for the visual tree is created.</summary>
    </member>
    <member name="M:System.Windows.Controls.Frame.OnContentRendered(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.Frame.ContentRendered" /> event.</summary>
      <param name="args">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Frame.OnCreateAutomationPeer">
      <summary>Creates and returns a <see cref="T:System.Windows.Automation.Peers.NavigationWindowAutomationPeer" /> object for this <see cref="T:System.Windows.Controls.Frame" />.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.NavigationWindowAutomationPeer" /> object for this <see cref="T:System.Windows.Controls.Frame" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.Frame.Refresh">
      <summary>Reloads the current content.</summary>
    </member>
    <member name="M:System.Windows.Controls.Frame.RemoveBackEntry">
      <summary>Removes the most recent journal entry from back history.</summary>
      <returns>The most recent <see cref="T:System.Windows.Navigation.JournalEntry" /> in back navigation history, if there is one.</returns>
    </member>
    <member name="P:System.Windows.Controls.Frame.SandboxExternalContent">
      <summary>Gets or sets whether a <see cref="T:System.Windows.Controls.Frame" /> isolates external Extensible Application Markup Language (XAML) content within a partial trust security sandbox (with the default <see langword="Internet" /> permission set).</summary>
      <returns>
        <see langword="true" /> if content is isolated within a partial trust security sandbox; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
      <exception cref="T:System.Security.SecurityException">
        <see cref="P:System.Windows.Controls.Frame.SandboxExternalContent" /> is set when an application is executing in partial trust.</exception>
    </member>
    <member name="F:System.Windows.Controls.Frame.SandboxExternalContentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Frame.SandboxExternalContent" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.Frame.ShouldSerializeContent">
      <summary>Allows derived classes to determine the serialization behavior of the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property.</summary>
      <returns>
        <see langword="true" /> if the content should be serialized; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.Frame.Source">
      <summary>Gets or sets the uniform resource identifier (URI) of the current content, or the URI of new content that is currently being navigated to.</summary>
      <returns>A <see cref="T:System.Uri" /> that contains the URI for the current content, or the content that is currently being navigated to.</returns>
    </member>
    <member name="F:System.Windows.Controls.Frame.SourceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Frame.Source" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.Frame.StopLoading">
      <summary>Stops further downloading of content for the current navigation request.</summary>
    </member>
    <member name="P:System.Windows.Controls.Frame.System#Windows#Markup#IUriContext#BaseUri">
      <summary>For a description of this member, see <see cref="P:System.Windows.Markup.IUriContext.BaseUri" />.</summary>
      <returns>The base URI of the current context.</returns>
    </member>
    <member name="T:System.Windows.Controls.Grid">
      <summary>Defines a flexible grid area that consists of columns and rows.</summary>
    </member>
    <member name="M:System.Windows.Controls.Grid.#ctor">
      <summary>Initializes a new instance of <see cref="T:System.Windows.Controls.Grid" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.Grid.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges the content of a <see cref="T:System.Windows.Controls.Grid" /> element.</summary>
      <param name="arrangeSize">Specifies the size this <see cref="T:System.Windows.Controls.Grid" /> element should use to arrange its child elements.</param>
      <returns>
        <see cref="T:System.Windows.Size" /> that represents the arranged size of this Grid element and its children.</returns>
    </member>
    <member name="P:System.Windows.Controls.Grid.Column">
      <summary>Gets or sets a value that indicates which column child content within a <see cref="T:System.Windows.Controls.Grid" /> should appear in.</summary>
    </member>
    <member name="P:System.Windows.Controls.Grid.ColumnDefinitions">
      <summary>Gets a <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> defined on this instance of <see cref="T:System.Windows.Controls.Grid" />.</summary>
      <returns>A <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> defined on this instance of <see cref="T:System.Windows.Controls.Grid" /></returns>
    </member>
    <member name="F:System.Windows.Controls.Grid.ColumnProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Grid.Column" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Grid.ColumnSpan">
      <summary>Gets or sets a value that indicates the total number of columns that child content spans within a <see cref="T:System.Windows.Controls.Grid" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Grid.ColumnSpanProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Grid.ColumnSpan" /> attached property.</summary>
    </member>
    <member name="M:System.Windows.Controls.Grid.GetColumn(System.Windows.UIElement)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.Grid.Column" /> attached property from a given <see cref="T:System.Windows.UIElement" />.</summary>
      <param name="element">The element from which to read the property value.</param>
      <returns>The value of the <see cref="P:System.Windows.Controls.Grid.Column" /> attached property.</returns>
    </member>
    <member name="M:System.Windows.Controls.Grid.GetColumnSpan(System.Windows.UIElement)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.Grid.ColumnSpan" /> attached property from a given <see cref="T:System.Windows.UIElement" />.</summary>
      <param name="element">The element from which to read the property value.</param>
      <returns>The value of the <see cref="P:System.Windows.Controls.Grid.ColumnSpan" /> attached property.</returns>
    </member>
    <member name="M:System.Windows.Controls.Grid.GetIsSharedSizeScope(System.Windows.UIElement)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.Grid.IsSharedSizeScope" /> attached property from a given <see cref="T:System.Windows.UIElement" />.</summary>
      <param name="element">The element from which to read the property value.</param>
      <returns>The value of the <see cref="P:System.Windows.Controls.Grid.IsSharedSizeScope" /> attached property.</returns>
    </member>
    <member name="M:System.Windows.Controls.Grid.GetRow(System.Windows.UIElement)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.Grid.Row" /> attached property from a given <see cref="T:System.Windows.UIElement" />.</summary>
      <param name="element">The element from which to read the property value.</param>
      <returns>The value of the <see cref="P:System.Windows.Controls.Grid.Row" /> attached property.</returns>
    </member>
    <member name="M:System.Windows.Controls.Grid.GetRowSpan(System.Windows.UIElement)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.Grid.RowSpan" /> attached property from a given <see cref="T:System.Windows.UIElement" />.</summary>
      <param name="element">The element from which to read the property value.</param>
      <returns>The value of the <see cref="P:System.Windows.Controls.Grid.RowSpan" /> attached property.</returns>
    </member>
    <member name="M:System.Windows.Controls.Grid.GetVisualChild(System.Int32)">
      <summary>Gets the child <see cref="T:System.Windows.Media.Visual" /> at the specified <paramref name="index" /> position.</summary>
      <param name="index">The zero-based index position of the desired <see cref="T:System.Windows.Media.Visual" />.</param>
      <returns>The child <see cref="T:System.Windows.Media.Visual" /> at the specified <paramref name="index" /> position.</returns>
    </member>
    <member name="P:System.Windows.Controls.Grid.IsSharedSizeScope">
      <summary>Gets or sets a value that indicates that multiple <see cref="T:System.Windows.Controls.Grid" /> elements are sharing size information.</summary>
    </member>
    <member name="F:System.Windows.Controls.Grid.IsSharedSizeScopeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Grid.IsSharedSizeScope" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Grid.LogicalChildren">
      <summary>Gets an enumerator that can iterate the logical children of this <see cref="T:System.Windows.Controls.Grid" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" />. This property has no default value.</returns>
    </member>
    <member name="M:System.Windows.Controls.Grid.MeasureOverride(System.Windows.Size)">
      <summary>Measures the children of a <see cref="T:System.Windows.Controls.Grid" /> in anticipation of arranging them during the <see cref="M:System.Windows.Controls.Grid.ArrangeOverride(System.Windows.Size)" /> pass.</summary>
      <param name="constraint">Indicates an upper limit size that should not be exceeded.</param>
      <returns>
        <see cref="T:System.Windows.Size" /> that represents the required size to arrange child content.</returns>
    </member>
    <member name="M:System.Windows.Controls.Grid.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary>Called when the visual children of a <see cref="T:System.Windows.Controls.Grid" /> element change.</summary>
      <param name="visualAdded">Identifies the visual child that's added.</param>
      <param name="visualRemoved">Identifies the visual child that's removed.</param>
    </member>
    <member name="P:System.Windows.Controls.Grid.Row">
      <summary>Gets or sets a value that indicates which row child content within a <see cref="T:System.Windows.Controls.Grid" /> should appear in.</summary>
    </member>
    <member name="P:System.Windows.Controls.Grid.RowDefinitions">
      <summary>Gets a <see cref="T:System.Windows.Controls.RowDefinitionCollection" /> defined on this instance of <see cref="T:System.Windows.Controls.Grid" />.</summary>
      <returns>A <see cref="T:System.Windows.Controls.RowDefinitionCollection" /> defined on this instance of <see cref="T:System.Windows.Controls.Grid" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Grid.RowProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Grid.Row" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Grid.RowSpan">
      <summary>Gets or sets a value that indicates the total number of rows that child content spans within a <see cref="T:System.Windows.Controls.Grid" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Grid.RowSpanProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Grid.RowSpan" /> attached property.</summary>
    </member>
    <member name="M:System.Windows.Controls.Grid.SetColumn(System.Windows.UIElement,System.Int32)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.Grid.Column" /> attached property to a given <see cref="T:System.Windows.UIElement" />.</summary>
      <param name="element">The element on which to set the <see cref="P:System.Windows.Controls.Grid.Column" /> attached property.</param>
      <param name="value">The property value to set.</param>
    </member>
    <member name="M:System.Windows.Controls.Grid.SetColumnSpan(System.Windows.UIElement,System.Int32)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.Grid.ColumnSpan" /> attached property to a given <see cref="T:System.Windows.UIElement" />.</summary>
      <param name="element">The element on which to set the <see cref="P:System.Windows.Controls.Grid.ColumnSpan" /> attached property.</param>
      <param name="value">The property value to set.</param>
    </member>
    <member name="M:System.Windows.Controls.Grid.SetIsSharedSizeScope(System.Windows.UIElement,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.Grid.IsSharedSizeScope" /> attached property to a given <see cref="T:System.Windows.UIElement" />.</summary>
      <param name="element">The element on which to set the <see cref="P:System.Windows.Controls.Grid.IsSharedSizeScope" /> attached property.</param>
      <param name="value">The property value to set.</param>
    </member>
    <member name="M:System.Windows.Controls.Grid.SetRow(System.Windows.UIElement,System.Int32)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.Grid.Row" /> attached property to a given <see cref="T:System.Windows.UIElement" />.</summary>
      <param name="element">The element on which to set the attached property.</param>
      <param name="value">The property value to set.</param>
    </member>
    <member name="M:System.Windows.Controls.Grid.SetRowSpan(System.Windows.UIElement,System.Int32)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.Grid.RowSpan" /> attached property to a given <see cref="T:System.Windows.UIElement" />.</summary>
      <param name="element">The element on which to set the <see cref="P:System.Windows.Controls.Grid.RowSpan" /> attached property.</param>
      <param name="value">The property value to set.</param>
    </member>
    <member name="M:System.Windows.Controls.Grid.ShouldSerializeColumnDefinitions">
      <summary>Returns true if <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> associated with this instance of <see cref="T:System.Windows.Controls.Grid" /> is not empty.</summary>
      <returns>true if <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> associated with this instance of <see cref="T:System.Windows.Controls.Grid" /> is not empty; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Controls.Grid.ShouldSerializeRowDefinitions">
      <summary>Returns true if <see cref="T:System.Windows.Controls.RowDefinitionCollection" /> associated with this instance of <see cref="T:System.Windows.Controls.Grid" /> is not empty.</summary>
      <returns>true if <see cref="T:System.Windows.Controls.RowDefinitionCollection" /> associated with this instance of <see cref="T:System.Windows.Controls.Grid" /> is not empty; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Controls.Grid.ShowGridLines">
      <summary>Gets or sets a value that indicates whether grid lines are visible within this <see cref="T:System.Windows.Controls.Grid" />.</summary>
      <returns>
        <see langword="true" /> if grid lines are visible; otherwise, <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Grid.ShowGridLinesProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Grid.ShowGridLines" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.Grid.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="value">An object to add as a child.</param>
    </member>
    <member name="M:System.Windows.Controls.Grid.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="text">A string to add to the object.</param>
    </member>
    <member name="P:System.Windows.Controls.Grid.VisualChildrenCount">
      <summary>Gets a value that represents the total number of <see cref="T:System.Windows.Media.Visual" /> children within this instance of <see cref="T:System.Windows.Controls.Grid" />.</summary>
      <returns>
        <see cref="T:System.Int32" /> that represents the total number of child <see cref="T:System.Windows.Media.Visual" /> objects. The default value is zero.</returns>
    </member>
    <member name="T:System.Windows.Controls.GridResizeBehavior">
      <summary>Specifies the rows or columns that are resized by a <see cref="T:System.Windows.Controls.GridSplitter" /> control.</summary>
    </member>
    <member name="F:System.Windows.Controls.GridResizeBehavior.BasedOnAlignment">
      <summary>Space is redistributed based on the value of the <see cref="P:System.Windows.FrameworkElement.HorizontalAlignment" /> and <see cref="P:System.Windows.FrameworkElement.VerticalAlignment" /> properties.</summary>
    </member>
    <member name="F:System.Windows.Controls.GridResizeBehavior.CurrentAndNext">
      <summary>For a horizontal <see cref="T:System.Windows.Controls.GridSplitter" />, space is redistributed between the row that is specified for the <see cref="T:System.Windows.Controls.GridSplitter" /> and the next row that is below it. For a vertical <see cref="T:System.Windows.Controls.GridSplitter" />, space is redistributed between the column that is specified for the <see cref="T:System.Windows.Controls.GridSplitter" /> and the next column that is to the right.</summary>
    </member>
    <member name="F:System.Windows.Controls.GridResizeBehavior.PreviousAndCurrent">
      <summary>For a horizontal <see cref="T:System.Windows.Controls.GridSplitter" />, space is redistributed between the row that is specified for the <see cref="T:System.Windows.Controls.GridSplitter" /> and the next row that is above it. For a vertical <see cref="T:System.Windows.Controls.GridSplitter" />, space is redistributed between the column that is specified for the <see cref="T:System.Windows.Controls.GridSplitter" /> and the next column that is to the left.</summary>
    </member>
    <member name="F:System.Windows.Controls.GridResizeBehavior.PreviousAndNext">
      <summary>For a horizontal <see cref="T:System.Windows.Controls.GridSplitter" />, space is redistributed between the rows that are above and below the row that is specified for the <see cref="T:System.Windows.Controls.GridSplitter" />. For a vertical <see cref="T:System.Windows.Controls.GridSplitter" />, space is redistributed between the columns that are to the left and right of the column that is specified for the <see cref="T:System.Windows.Controls.GridSplitter" />.</summary>
    </member>
    <member name="T:System.Windows.Controls.GridResizeDirection">
      <summary>Specifies whether a <see cref="T:System.Windows.Controls.GridSplitter" /> control redistributes space between rows or between columns.</summary>
    </member>
    <member name="F:System.Windows.Controls.GridResizeDirection.Auto">
      <summary>Space is redistributed based on the values of the <see cref="P:System.Windows.FrameworkElement.HorizontalAlignment" />, <see cref="P:System.Windows.FrameworkElement.VerticalAlignment" />, <see cref="P:System.Windows.FrameworkElement.ActualWidth" />, and <see cref="P:System.Windows.FrameworkElement.ActualHeight" /> properties of the <see cref="T:System.Windows.Controls.GridSplitter" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.GridResizeDirection.Columns">
      <summary>Space is redistributed between columns.</summary>
    </member>
    <member name="F:System.Windows.Controls.GridResizeDirection.Rows">
      <summary>Space is redistributed between rows.</summary>
    </member>
    <member name="T:System.Windows.Controls.GridSplitter">
      <summary>Represents the control that redistributes space between columns or rows of a <see cref="T:System.Windows.Controls.Grid" /> control.</summary>
    </member>
    <member name="M:System.Windows.Controls.GridSplitter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.GridSplitter" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.GridSplitter.DragIncrement">
      <summary>Gets or sets the minimum distance that a user must drag a mouse to resize rows or columns with a <see cref="T:System.Windows.Controls.GridSplitter" /> control.</summary>
      <returns>A value that represents the minimum distance that a user must use the mouse to drag a <see cref="T:System.Windows.Controls.GridSplitter" /> to resize rows or columns. The default is 1.</returns>
    </member>
    <member name="F:System.Windows.Controls.GridSplitter.DragIncrementProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.GridSplitter.DragIncrement" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.GridSplitter.KeyboardIncrement">
      <summary>Gets or sets the distance that each press of an arrow key moves a <see cref="T:System.Windows.Controls.GridSplitter" /> control.</summary>
      <returns>The distance that the <see cref="T:System.Windows.Controls.GridSplitter" /> moves for each press of an arrow key. The default is 10.</returns>
    </member>
    <member name="F:System.Windows.Controls.GridSplitter.KeyboardIncrementProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.GridSplitter.KeyboardIncrement" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.GridSplitter.OnCreateAutomationPeer">
      <summary>Creates the implementation of <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for the <see cref="T:System.Windows.Controls.GridSplitter" /> control.</summary>
      <returns>A new <see cref="T:System.Windows.Automation.Peers.GridSplitterAutomationPeer" /> for this <see cref="T:System.Windows.Controls.ToolTip" /> control.</returns>
    </member>
    <member name="M:System.Windows.Controls.GridSplitter.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Called when a key is pressed.</summary>
      <param name="e">A <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.GridSplitter.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>Called when the <see cref="T:System.Windows.Controls.GridSplitter" /> control loses keyboard focus.</summary>
      <param name="e">A <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.GridSplitter.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
      <summary>Responds to a change in the dimensions of the <see cref="T:System.Windows.Controls.GridSplitter" /> control.</summary>
      <param name="sizeInfo">Information about the change in size of the <see cref="T:System.Windows.Controls.GridSplitter" />.</param>
    </member>
    <member name="P:System.Windows.Controls.GridSplitter.PreviewStyle">
      <summary>Gets or sets the style that customizes the appearance, effects, or other style characteristics for the <see cref="T:System.Windows.Controls.GridSplitter" /> control preview indicator that is displayed when the <see cref="P:System.Windows.Controls.GridSplitter.ShowsPreview" /> property is set to <see langword="true" />.</summary>
      <returns>Returns the <see cref="T:System.Windows.Style" /> for the preview indicator that shows the potential change in <see cref="T:System.Windows.Controls.Grid" /> dimensions as you move the <see cref="T:System.Windows.Controls.GridSplitter" /> control. The default is the style that the current theme supplies.</returns>
    </member>
    <member name="F:System.Windows.Controls.GridSplitter.PreviewStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.GridSplitter.PreviewStyle" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.GridSplitter.ResizeBehavior">
      <summary>Gets or sets which columns or rows are resized relative to the column or row for which the <see cref="T:System.Windows.Controls.GridSplitter" /> control is defined.</summary>
      <returns>One of the enumeration values that indicates which columns or rows are resized by this <see cref="T:System.Windows.Controls.GridSplitter" /> control. The default is <see cref="F:System.Windows.Controls.GridResizeBehavior.BasedOnAlignment" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.GridSplitter.ResizeBehaviorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.GridSplitter.ResizeBehavior" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.GridSplitter.ResizeDirection">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.GridSplitter" /> control resizes rows or columns.</summary>
      <returns>One of the enumeration values that specifies whether to resize rows or columns. The default is <see cref="F:System.Windows.Controls.GridResizeDirection.Auto" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.GridSplitter.ResizeDirectionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.GridSplitter.ResizeDirection" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.GridSplitter.ShowsPreview">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.GridSplitter" /> control updates the column or row size as the user drags the control.</summary>
      <returns>
        <see langword="true" /> if a <see cref="T:System.Windows.Controls.GridSplitter" /> preview is displayed; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.GridSplitter.ShowsPreviewProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.GridSplitter.ShowsPreview" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Controls.GridView">
      <summary>Represents a view mode that displays data items in columns for a <see cref="T:System.Windows.Controls.ListView" /> control.</summary>
    </member>
    <member name="M:System.Windows.Controls.GridView.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.GridView" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.GridView.AddChild(System.Object)">
      <summary>Adds a <see cref="T:System.Windows.Controls.GridViewColumn" /> object to a <see cref="T:System.Windows.Controls.GridView" />.</summary>
      <param name="column">The column to add</param>
    </member>
    <member name="M:System.Windows.Controls.GridView.AddText(System.String)">
      <summary>Not supported.</summary>
      <param name="text">Text string</param>
    </member>
    <member name="P:System.Windows.Controls.GridView.AllowsColumnReorder">
      <summary>Gets or sets whether columns in a <see cref="T:System.Windows.Controls.GridView" /> can be reordered by a drag-and-drop operation.</summary>
      <returns>
        <see langword="true" /> if columns can be reordered; otherwise, <see langword="false" />. The default value is <see langword="true" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.GridView.AllowsColumnReorderProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.GridView.AllowsColumnReorder" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.GridView.ClearItem(System.Windows.Controls.ListViewItem)">
      <summary>Removes all settings, bindings, and styling from a <see cref="T:System.Windows.Controls.ListViewItem" />.</summary>
      <param name="item">The <see cref="T:System.Windows.Controls.ListViewItem" /> to clear.</param>
    </member>
    <member name="P:System.Windows.Controls.GridView.ColumnCollection">
      <summary>Gets or sets the attached property that contains the <see cref="T:System.Windows.Controls.GridViewColumnCollection" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.GridView.ColumnCollectionProperty">
      <summary>Identifies the <see cref="F:System.Windows.Controls.GridView.ColumnCollectionProperty" /> attachedproperty.</summary>
    </member>
    <member name="P:System.Windows.Controls.GridView.ColumnHeaderContainerStyle">
      <summary>Gets or sets the style to apply to column headers.</summary>
      <returns>The <see cref="T:System.Windows.Style" /> that is used to define the display properties for column headers. The default value is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.GridView.ColumnHeaderContainerStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.GridView.ColumnHeaderContainerStyle" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.GridView.ColumnHeaderContextMenu">
      <summary>Gets or sets a <see cref="T:System.Windows.Controls.ContextMenu" /> for the <see cref="T:System.Windows.Controls.GridView" />.</summary>
      <returns>The <see cref="T:System.Windows.Controls.ContextMenu" /> for the column headers in a <see cref="T:System.Windows.Controls.GridView" />. The default value is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.GridView.ColumnHeaderContextMenuProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.GridView.ColumnHeaderContextMenu" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.GridView.ColumnHeaderStringFormat">
      <summary>Gets or sets a composite string that specifies how to format the column headers of the <see cref="T:System.Windows.Controls.GridView" /> if they are displayed as strings.</summary>
      <returns>A composite string that specifies how to format the column headers of the <see cref="T:System.Windows.Controls.GridView" /> if they are displayed as strings. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.GridView.ColumnHeaderStringFormatProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.GridView.ColumnHeaderStringFormat" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.GridView.ColumnHeaderTemplate">
      <summary>Gets or sets a template to use to display the column headers.</summary>
      <returns>The <see cref="T:System.Windows.DataTemplate" /> to use to display the column headers as part of the <see cref="T:System.Windows.Controls.GridView" />. The default value is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.GridView.ColumnHeaderTemplateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.GridView.ColumnHeaderTemplate" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.GridView.ColumnHeaderTemplateSelector">
      <summary>Gets or sets the selector object that provides logic for selecting a template to use for each column header.</summary>
      <returns>The <see cref="T:System.Windows.Controls.DataTemplateSelector" /> object that determines the data template to use for each column header. The default value is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.GridView.ColumnHeaderTemplateSelectorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.GridView.ColumnHeaderTemplateSelector" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.GridView.ColumnHeaderToolTip">
      <summary>Gets or sets the content of a tooltip that appears when the mouse pointer pauses over one of the column headers.</summary>
      <returns>An object that represents the content that appears as a tooltip when the mouse pointer is paused over one of the column headers. The default value is not defined.</returns>
    </member>
    <member name="F:System.Windows.Controls.GridView.ColumnHeaderToolTipProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.GridView.ColumnHeaderToolTip" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.GridView.Columns">
      <summary>Gets the collection of <see cref="T:System.Windows.Controls.GridViewColumn" /> objects that is defined for this <see cref="T:System.Windows.Controls.GridView" />.</summary>
      <returns>The collection of columns in the <see cref="T:System.Windows.Controls.GridView" />. The default value is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.GridView.DefaultStyleKey">
      <summary>Gets the reference for the default style for the <see cref="T:System.Windows.Controls.GridView" />.</summary>
      <returns>The <see cref="P:System.Windows.Controls.GridView.GridViewStyleKey" />. The default value is the <see cref="P:System.Windows.Controls.GridView.GridViewStyleKey" /> in the current theme.</returns>
    </member>
    <member name="M:System.Windows.Controls.GridView.GetAutomationPeer(System.Windows.Controls.ListView)">
      <summary>Gets the <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation for this <see cref="T:System.Windows.Controls.GridView" /> object.</summary>
      <param name="parent">The <see cref="T:System.Windows.Controls.ListView" /> control that implements this <see cref="T:System.Windows.Controls.GridView" /> view.</param>
      <returns>A <see cref="T:System.Windows.Automation.Peers.GridViewAutomationPeer" /> for this <see cref="T:System.Windows.Controls.GridView" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.GridView.GetColumnCollection(System.Windows.DependencyObject)">
      <summary>Gets the contents of the <see cref="P:System.Windows.Controls.GridView.ColumnCollection" /> attached property.</summary>
      <param name="element">The <see cref="T:System.Windows.DependencyObject" /> that is associated with the collection.</param>
      <returns>The <see cref="P:System.Windows.Controls.GridView.ColumnCollection" /> of the specified <see cref="T:System.Windows.DependencyObject" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.GridView.GridViewItemContainerStyleKey">
      <summary>Gets the key that references the style that is defined for each <see cref="T:System.Windows.Controls.ListViewItem" /> in a <see cref="T:System.Windows.Controls.GridView" />.</summary>
      <returns>A <see cref="T:System.Windows.ResourceKey" /> that references the style for each <see cref="T:System.Windows.Controls.ListViewItem" />. The default value references the default style for a <see cref="T:System.Windows.Controls.ListViewItem" /> control in the current theme.</returns>
    </member>
    <member name="P:System.Windows.Controls.GridView.GridViewScrollViewerStyleKey">
      <summary>Gets the key that references the style that is defined for the <see cref="T:System.Windows.Controls.ScrollViewer" /> control that encloses the content that is displayed by a <see cref="T:System.Windows.Controls.GridView" />.</summary>
      <returns>A <see cref="T:System.Windows.ResourceKey" /> that references the <see cref="T:System.Windows.Style" /> that is applied to the <see cref="T:System.Windows.Controls.ScrollViewer" /> control for a <see cref="T:System.Windows.Controls.GridView" />. The default value is the style for the <see cref="T:System.Windows.Controls.ScrollViewer" /> object of a <see cref="T:System.Windows.Controls.ListView" /> in the current theme.</returns>
    </member>
    <member name="P:System.Windows.Controls.GridView.GridViewStyleKey">
      <summary>Gets the key that references the style that is defined for the <see cref="T:System.Windows.Controls.GridView" />.</summary>
      <returns>A <see cref="T:System.Windows.ResourceKey" /> that references the <see cref="T:System.Windows.Style" /> that is applied to the <see cref="T:System.Windows.Controls.GridView" />. The default value is the style for the <see cref="T:System.Windows.Controls.ListView" /> in the current theme.</returns>
    </member>
    <member name="P:System.Windows.Controls.GridView.ItemContainerDefaultStyleKey">
      <summary>Gets the reference to the default style for the container of the data items in the <see cref="T:System.Windows.Controls.GridView" />.</summary>
      <returns>The <see cref="P:System.Windows.Controls.GridView.GridViewItemContainerStyleKey" />. The default value is the <see cref="P:System.Windows.Controls.GridView.GridViewItemContainerStyleKey" /> in the current theme.</returns>
    </member>
    <member name="M:System.Windows.Controls.GridView.PrepareItem(System.Windows.Controls.ListViewItem)">
      <summary>Prepares a <see cref="T:System.Windows.Controls.ListViewItem" /> for display according to the definition of this <see cref="T:System.Windows.Controls.GridView" /> object.</summary>
      <param name="item">The <see cref="T:System.Windows.Controls.ListViewItem" /> to display.</param>
    </member>
    <member name="M:System.Windows.Controls.GridView.SetColumnCollection(System.Windows.DependencyObject,System.Windows.Controls.GridViewColumnCollection)">
      <summary>Sets the contents of the <see cref="P:System.Windows.Controls.GridView.ColumnCollection" /> attached property.</summary>
      <param name="element">The <see cref="T:System.Windows.Controls.GridView" /> object.</param>
      <param name="collection">The <see cref="T:System.Windows.Controls.GridViewColumnCollection" /> object to assign.</param>
    </member>
    <member name="M:System.Windows.Controls.GridView.ShouldSerializeColumnCollection(System.Windows.DependencyObject)">
      <summary>Determines whether to serialize the <see cref="P:System.Windows.Controls.GridView.ColumnCollection" /> attached property.</summary>
      <param name="obj">The object on which the <see cref="P:System.Windows.Controls.GridView.ColumnCollection" /> is set.</param>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.Controls.GridView.ColumnCollection" /> must be serialized; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.GridView.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>Adds a child object.</summary>
      <param name="column">The child object to add.</param>
    </member>
    <member name="M:System.Windows.Controls.GridView.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>Adds the text content of a node to the object.</summary>
      <param name="text">The text to add to the object.</param>
    </member>
    <member name="M:System.Windows.Controls.GridView.ToString">
      <summary>Returns the string representation of the <see cref="T:System.Windows.Controls.GridView" /> object.</summary>
      <returns>A string that indicates the number of columns in the <see cref="T:System.Windows.Controls.GridView" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.GridViewColumn">
      <summary>Represents a column that displays data.</summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumn.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.GridViewColumn" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.GridViewColumn.ActualWidth">
      <summary>Gets the actual width of a <see cref="T:System.Windows.Controls.GridViewColumn" />.</summary>
      <returns>The current width of the column. The default is zero (0.0).</returns>
    </member>
    <member name="P:System.Windows.Controls.GridViewColumn.CellTemplate">
      <summary>Gets or sets the template to use to display the contents of a column cell.</summary>
      <returns>A <see cref="T:System.Windows.DataTemplate" /> that is used to format a column cell. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewColumn.CellTemplateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.GridViewColumn.CellTemplate" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.GridViewColumn.CellTemplateSelector">
      <summary>Gets or sets a <see cref="T:System.Windows.Controls.DataTemplateSelector" /> that determines the template to use to display cells in a column.</summary>
      <returns>A <see cref="T:System.Windows.Controls.DataTemplateSelector" /> that provides <see cref="T:System.Windows.DataTemplate" /> selection for column cells. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewColumn.CellTemplateSelectorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.GridViewColumn.CellTemplateSelector" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.GridViewColumn.DisplayMemberBinding">
      <summary>Gets or sets the data item to bind to for this column.</summary>
      <returns>The specified data item type that displays in the column. The default is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.GridViewColumn.Header">
      <summary>Gets or sets the content of the header of a <see cref="T:System.Windows.Controls.GridViewColumn" />.</summary>
      <returns>The object to use for the column header. The default is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.GridViewColumn.HeaderContainerStyle">
      <summary>Gets or sets the style to use for the header of the <see cref="T:System.Windows.Controls.GridViewColumn" />.</summary>
      <returns>The <see cref="T:System.Windows.Style" /> that defines the display properties for the column header. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewColumn.HeaderContainerStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.GridViewColumn.HeaderContainerStyle" /> dependency property.</summary>
    </member>
    <member name="F:System.Windows.Controls.GridViewColumn.HeaderProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.GridViewColumn.Header" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.GridViewColumn.HeaderStringFormat">
      <summary>Gets or sets a composite string that specifies how to format the <see cref="P:System.Windows.Controls.GridViewColumn.Header" /> property if it is displayed as a string.</summary>
      <returns>A composite string that specifies how to format the <see cref="P:System.Windows.Controls.GridViewColumn.Header" /> property if it is displayed as a string. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewColumn.HeaderStringFormatProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.GridViewColumn.HeaderStringFormat" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.GridViewColumn.HeaderTemplate">
      <summary>Gets or sets the template to use to display the content of the column header.</summary>
      <returns>A <see cref="T:System.Windows.DataTemplate" /> to use to display the column header. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewColumn.HeaderTemplateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.GridViewColumn.HeaderTemplate" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.GridViewColumn.HeaderTemplateSelector">
      <summary>Gets or sets the <see cref="T:System.Windows.Controls.DataTemplateSelector" /> that provides logic to select the template to use to display the column header.</summary>
      <returns>The <see cref="T:System.Windows.Controls.DataTemplateSelector" /> object that provides data template selection for each <see cref="T:System.Windows.Controls.GridViewColumn" />. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewColumn.HeaderTemplateSelectorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.GridViewColumn.HeaderTemplateSelector" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumn.OnHeaderStringFormatChanged(System.String,System.String)">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.GridViewColumn.HeaderStringFormat" /> property changes.</summary>
      <param name="oldHeaderStringFormat">The old value of the <see cref="P:System.Windows.Controls.GridViewColumn.HeaderStringFormat" /> property.</param>
      <param name="newHeaderStringFormat">The new value of the <see cref="P:System.Windows.Controls.GridViewColumn.HeaderStringFormat" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumn.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.GridViewColumn.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="E:System.Windows.Controls.GridViewColumn.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>Occurs when the value of any <see cref="T:System.Windows.Controls.GridViewColumn" /> property changes.</summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumn.ToString">
      <summary>Creates a string representation of the <see cref="T:System.Windows.Controls.GridViewColumn" />.</summary>
      <returns>A string that identifies the object as a <see cref="T:System.Windows.Controls.GridViewColumn" /> object and displays the value of the <see cref="P:System.Windows.Controls.GridViewColumn.Header" /> property.</returns>
    </member>
    <member name="P:System.Windows.Controls.GridViewColumn.Width">
      <summary>Gets or sets the width of the column.</summary>
      <returns>The width of the column. The default is <see cref="F:System.Double.NaN" />, which automatically sizes to the largest column item that is not the column header.</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewColumn.WidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.GridViewColumn.Width" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Controls.GridViewColumnCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Controls.GridViewColumn" /> objects.</summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnCollection.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Windows.Controls.GridViewColumnCollection" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnCollection.ClearItems">
      <summary>Removes all of the <see cref="T:System.Windows.Controls.GridViewColumn" /> objects from the <see cref="T:System.Windows.Controls.GridViewColumnCollection" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnCollection.InsertItem(System.Int32,System.Windows.Controls.GridViewColumn)">
      <summary>Adds a <see cref="T:System.Windows.Controls.GridViewColumn" /> to the collection at the specified index.</summary>
      <param name="index">The position to place the new <see cref="T:System.Windows.Controls.GridViewColumn" />.</param>
      <param name="column">The <see cref="T:System.Windows.Controls.GridViewColumn" /> to insert.</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnCollection.MoveItem(System.Int32,System.Int32)">
      <summary>Changes the position of a <see cref="T:System.Windows.Controls.GridViewColumn" /> in the collection.</summary>
      <param name="oldIndex">The original position of the <see cref="T:System.Windows.Controls.GridViewColumn" />.</param>
      <param name="newIndex">The new position of the <see cref="T:System.Windows.Controls.GridViewColumn" />.</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnCollection.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>Raises the <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" /> event when the <see cref="T:System.Windows.Controls.GridViewColumnCollection" /> changes.</summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnCollection.RemoveItem(System.Int32)">
      <summary>Removes a <see cref="T:System.Windows.Controls.GridViewColumn" /> from the <see cref="T:System.Windows.Controls.GridViewColumnCollection" /> at the specified index.</summary>
      <param name="index">The position of the <see cref="T:System.Windows.Controls.GridViewColumn" /> to remove.</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnCollection.SetItem(System.Int32,System.Windows.Controls.GridViewColumn)">
      <summary>Replaces the <see cref="T:System.Windows.Controls.GridViewColumn" /> that is at the specified index with another <see cref="T:System.Windows.Controls.GridViewColumn" />.</summary>
      <param name="index">The position at which the new <see cref="T:System.Windows.Controls.GridViewColumn" /> replaces the old <see cref="T:System.Windows.Controls.GridViewColumn" />.</param>
      <param name="column">The <see cref="T:System.Windows.Controls.GridViewColumn" /> to place at the specified position.</param>
    </member>
    <member name="T:System.Windows.Controls.GridViewColumnHeader">
      <summary>Represents a column header for a <see cref="T:System.Windows.Controls.GridViewColumn" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnHeader.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.GridViewColumnHeader" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.GridViewColumnHeader.Column">
      <summary>Gets the <see cref="T:System.Windows.Controls.GridViewColumn" /> that is associated with the <see cref="T:System.Windows.Controls.GridViewColumnHeader" />.</summary>
      <returns>The <see cref="T:System.Windows.Controls.GridViewColumn" /> that is associated with this <see cref="T:System.Windows.Controls.GridViewColumnHeader" />. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewColumnHeader.ColumnProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.GridViewColumnHeader.Column" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnHeader.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
      <summary>Responds when the <see cref="P:System.Windows.Controls.AccessText.AccessKey" /> for the <see cref="T:System.Windows.Controls.GridViewColumnHeader" /> is pressed.</summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnHeader.OnApplyTemplate">
      <summary>Responds to the creation of the visual tree for the <see cref="T:System.Windows.Controls.GridViewColumnHeader" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnHeader.OnClick">
      <summary>Provides class handling for the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event for a <see cref="T:System.Windows.Controls.GridViewColumnHeader" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnHeader.OnCreateAutomationPeer">
      <summary>Provides an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation for a <see cref="T:System.Windows.Controls.GridViewColumnHeader" />.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer" /> for this <see cref="T:System.Windows.Controls.GridViewColumnHeader" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnHeader.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.LostKeyboardFocus" /> event for a <see cref="T:System.Windows.Controls.GridViewColumnHeader" />.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnHeader.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.MouseEnter" /> event when the user pauses the mouse pointer on the <see cref="T:System.Windows.Controls.GridViewColumnHeader" />.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnHeader.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeave" /> event when the mouse moves off the <see cref="T:System.Windows.Controls.GridViewColumnHeader" />.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnHeader.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> event when the user presses the left mouse button while pausing the mouse pointer on the <see cref="T:System.Windows.Controls.GridViewColumnHeader" />.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnHeader.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> event when the user releases the left mouse button while pausing the mouse pointer on the <see cref="T:System.Windows.Controls.GridViewColumnHeader" />.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnHeader.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.MouseMove" /> event that occurs when the user moves the mouse within a <see cref="T:System.Windows.Controls.GridViewColumnHeader" />.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnHeader.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
      <summary>Responds to a change in <see cref="T:System.Windows.Controls.GridViewColumnHeader" /> dimensions.</summary>
      <param name="sizeInfo">Information about the change in the size of the <see cref="T:System.Windows.Controls.GridViewColumnHeader" />.</param>
    </member>
    <member name="P:System.Windows.Controls.GridViewColumnHeader.Role">
      <summary>Gets the role of a <see cref="T:System.Windows.Controls.GridViewColumnHeader" />.</summary>
      <returns>A <see cref="T:System.Windows.Controls.GridViewColumnHeaderRole" /> enumeration value that specifies the current role of the column.</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewColumnHeader.RoleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.GridViewColumnHeader.Role" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnHeader.ShouldSerializeProperty(System.Windows.DependencyProperty)">
      <summary>Determines whether to serialize a <see cref="T:System.Windows.DependencyProperty" />.</summary>
      <param name="dp">The dependency property.</param>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.DependencyProperty" /> must be serialized; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.GridViewColumnHeaderRole">
      <summary>Defines the state or role of a <see cref="T:System.Windows.Controls.GridViewColumnHeader" /> control.</summary>
    </member>
    <member name="F:System.Windows.Controls.GridViewColumnHeaderRole.Floating">
      <summary>The column header is the object of a drag-and-drop operation to move a column.</summary>
    </member>
    <member name="F:System.Windows.Controls.GridViewColumnHeaderRole.Normal">
      <summary>The column header displays above its associated column.</summary>
    </member>
    <member name="F:System.Windows.Controls.GridViewColumnHeaderRole.Padding">
      <summary>The column header is the last header in the row of column headers and is used for padding.</summary>
    </member>
    <member name="T:System.Windows.Controls.GridViewHeaderRowPresenter">
      <summary>Represents an object that is used to define the layout of a row of column headers.</summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewHeaderRowPresenter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.GridViewHeaderRowPresenter" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.GridViewHeaderRowPresenter.AllowsColumnReorder">
      <summary>Gets or sets a value that indicates whether columns can change positions.</summary>
      <returns>
        <see langword="true" /> if columns can be moved by the drag-and-drop operation of a column header; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewHeaderRowPresenter.AllowsColumnReorderProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.GridViewHeaderRowPresenter.AllowsColumnReorder" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewHeaderRowPresenter.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges the content of the header row elements, and computes the actual size of the header row.</summary>
      <param name="arrangeSize">The area that is available for the column header row.</param>
      <returns>The actual <see cref="T:System.Windows.Size" /> for the column header row.</returns>
    </member>
    <member name="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderContainerStyle">
      <summary>Gets or sets the <see cref="T:System.Windows.Style" /> to use for the column headers.</summary>
      <returns>The <see cref="T:System.Windows.Style" /> to use for the column header container. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderContainerStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderContainerStyle" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderContextMenu">
      <summary>Gets or sets a <see cref="T:System.Windows.Controls.ContextMenu" /> for the column headers.</summary>
      <returns>The <see cref="T:System.Windows.Controls.ContextMenu" /> for the column header row. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderContextMenuProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderContextMenu" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderStringFormat">
      <summary>Gets or sets a composite string that specifies how to format the column headers if they are displayed as strings.</summary>
      <returns>A composite string that specifies how to format the column headers if they are displayed as strings. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderStringFormatProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderStringFormat" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderTemplate">
      <summary>Gets or sets the template to use to display the column headers.</summary>
      <returns>The <see cref="T:System.Windows.DataTemplate" /> that is used to display the column header content. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderTemplateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderTemplate" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderTemplateSelector">
      <summary>Gets or sets a <see cref="T:System.Windows.Controls.DataTemplateSelector" /> that provides logic that selects the data template to use to display a column header.</summary>
      <returns>The <see cref="T:System.Windows.Controls.DataTemplateSelector" /> that chooses the <see cref="T:System.Windows.DataTemplate" /> to use to display each column header. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderTemplateSelectorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderTemplateSelector" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderToolTip">
      <summary>Gets or sets the content for a tooltip for the column header row.</summary>
      <returns>An object that represents the content of a tooltip for the column headers.</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderToolTipProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderToolTip" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewHeaderRowPresenter.MeasureOverride(System.Windows.Size)">
      <summary>Determines the area that is required to display the column header row.</summary>
      <param name="constraint">The amount of area that is available to display the column header row.</param>
      <returns>The required <see cref="T:System.Windows.Size" /> for the column header row.</returns>
    </member>
    <member name="M:System.Windows.Controls.GridViewHeaderRowPresenter.OnCreateAutomationPeer">
      <summary>Creates an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> object for the column header row.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer" /> object for this column header row.</returns>
    </member>
    <member name="M:System.Windows.Controls.GridViewHeaderRowPresenter.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.LostMouseCapture" /> event for the <see cref="T:System.Windows.Controls.GridViewColumnHeader" />.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewHeaderRowPresenter.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> event that occurs when the user presses the left mouse button inside a <see cref="T:System.Windows.Controls.GridViewColumnHeader" />.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewHeaderRowPresenter.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> event that occurs when the user releases the left mouse button.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewHeaderRowPresenter.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.MouseMove" /> event that occurs when the user moves the mouse.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Controls.GridViewRowPresenter">
      <summary>Represents an object that specifies the layout of a row of data.</summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewRowPresenter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.GridViewRowPresenter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewRowPresenter.ArrangeOverride(System.Windows.Size)">
      <summary>Positions the content of a row according to the size of the corresponding <see cref="T:System.Windows.Controls.GridViewColumn" /> objects.</summary>
      <param name="arrangeSize">The area to use to display the <see cref="P:System.Windows.Controls.GridViewRowPresenter.Content" />.</param>
      <returns>The actual <see cref="T:System.Windows.Size" /> that is used to display the <see cref="P:System.Windows.Controls.GridViewRowPresenter.Content" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.GridViewRowPresenter.Content">
      <summary>Gets or sets the data content to display in a row.</summary>
      <returns>The object that represents the content of a row.</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewRowPresenter.ContentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.GridViewRowPresenter.Content" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewRowPresenter.MeasureOverride(System.Windows.Size)">
      <summary>Determines the area that is required to display the row.</summary>
      <param name="constraint">The maximum area to use to display the <see cref="P:System.Windows.Controls.GridViewRowPresenter.Content" />.</param>
      <returns>The actual <see cref="T:System.Windows.Size" /> of the area that displays the <see cref="P:System.Windows.Controls.GridViewRowPresenter.Content" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.GridViewRowPresenter.ToString">
      <summary>Returns a string representation of the <see cref="P:System.Windows.Controls.GridViewRowPresenter.Content" />.</summary>
      <returns>A string that shows the <see cref="P:System.Windows.Controls.GridViewRowPresenter.Content" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.GroupBox">
      <summary>Represents a control that creates a container that has a border and a header for user interface (UI) content.</summary>
    </member>
    <member name="M:System.Windows.Controls.GroupBox.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.GroupBox" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.GroupBox.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
      <summary>Responds when the <see cref="P:System.Windows.Controls.AccessText.AccessKey" /> for the <see cref="T:System.Windows.Controls.GroupBox" /> is pressed.</summary>
      <param name="e">The event information.</param>
    </member>
    <member name="M:System.Windows.Controls.GroupBox.OnCreateAutomationPeer">
      <summary>Creates an implementation of <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for the <see cref="T:System.Windows.Controls.GroupBox" /> control.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.GroupBoxAutomationPeer" /> for the <see cref="T:System.Windows.Controls.GroupBox" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.GroupItem">
      <summary>Appears as the root of the visual subtree generated for a group.</summary>
    </member>
    <member name="M:System.Windows.Controls.GroupItem.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.GroupItem" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.GroupItem.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges the content of the <see cref="T:System.Windows.Controls.GroupItem" />.</summary>
      <param name="arrangeSize">The final area within the parent that the <see cref="T:System.Windows.Controls.GroupItem" /> should use to arrange itself and its children.</param>
      <returns>The actual sized used by the <see cref="T:System.Windows.Controls.GroupItem" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.GroupItem.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.GroupItem" /> when a new template is applied.</summary>
    </member>
    <member name="M:System.Windows.Controls.GroupItem.OnCreateAutomationPeer">
      <summary>Creates and returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> object for this <see cref="T:System.Windows.Controls.GroupItem" />.</summary>
      <returns>An <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> object for this <see cref="T:System.Windows.Controls.GroupItem" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.GroupItem.System#Windows#Controls#Primitives#IContainItemStorage#Clear">
      <summary>Clears all property associations.</summary>
    </member>
    <member name="M:System.Windows.Controls.GroupItem.System#Windows#Controls#Primitives#IContainItemStorage#ClearItemValue(System.Object,System.Windows.DependencyProperty)">
      <summary>Removes the association between the specified item and property.</summary>
      <param name="item">The associated item.</param>
      <param name="dp">The associated property.</param>
    </member>
    <member name="M:System.Windows.Controls.GroupItem.System#Windows#Controls#Primitives#IContainItemStorage#ClearValue(System.Windows.DependencyProperty)">
      <summary>Removes the specified property from all property lists.</summary>
      <param name="dp">The property to remove.</param>
    </member>
    <member name="M:System.Windows.Controls.GroupItem.System#Windows#Controls#Primitives#IContainItemStorage#ReadItemValue(System.Object,System.Windows.DependencyProperty)">
      <summary>Returns the value of the specified property that is associated with the specified item.</summary>
      <param name="item">The item that has the specified property associated with it.</param>
      <param name="dp">The property whose value to return.</param>
      <returns>The value of the specified property that is associated with the specified item.</returns>
    </member>
    <member name="M:System.Windows.Controls.GroupItem.System#Windows#Controls#Primitives#IContainItemStorage#StoreItemValue(System.Object,System.Windows.DependencyProperty,System.Object)">
      <summary>Stores the specified property and value and associates them with the specified item.</summary>
      <param name="item">The item to associate the value and property with.</param>
      <param name="dp">The property that is associated with the specified item.</param>
      <param name="value">The value of the associated property.</param>
    </member>
    <member name="P:System.Windows.Controls.GroupItem.System#Windows#Controls#Primitives#IHierarchicalVirtualizationAndScrollInfo#Constraints">
      <summary>Gets or sets an object that represents the sizes of the control's viewport and cache.</summary>
      <returns>An object that represents the sizes of the control's viewport and cache.</returns>
    </member>
    <member name="P:System.Windows.Controls.GroupItem.System#Windows#Controls#Primitives#IHierarchicalVirtualizationAndScrollInfo#HeaderDesiredSizes">
      <summary>Gets an object that represents the desired size of the control's header.</summary>
      <returns>An object that represents the desired size of the control's header.</returns>
    </member>
    <member name="P:System.Windows.Controls.GroupItem.System#Windows#Controls#Primitives#IHierarchicalVirtualizationAndScrollInfo#InBackgroundLayout">
      <summary>Gets a value that indicates whether the control's layout pass occurs at a lower priority.</summary>
      <returns>
        <see langword="true" /> if the control's layout pass occurs at a lower priority; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.GroupItem.System#Windows#Controls#Primitives#IHierarchicalVirtualizationAndScrollInfo#ItemDesiredSizes">
      <summary>Gets or sets an object that represents the desired size of the control's items.</summary>
      <returns>An object that represents the desired size of the control's items.</returns>
    </member>
    <member name="P:System.Windows.Controls.GroupItem.System#Windows#Controls#Primitives#IHierarchicalVirtualizationAndScrollInfo#ItemsHost">
      <summary>Gets the <see cref="T:System.Windows.Controls.Panel" /> that displays the items of the control.</summary>
      <returns>The <see cref="T:System.Windows.Controls.Panel" /> that displays the items of the control.</returns>
    </member>
    <member name="P:System.Windows.Controls.GroupItem.System#Windows#Controls#Primitives#IHierarchicalVirtualizationAndScrollInfo#MustDisableVirtualization">
      <summary>Gets or sets a value that indicates whether the owning <see cref="T:System.Windows.Controls.ItemsControl" /> should virtualize its items.</summary>
      <returns>
        <see langword="true" /> if the owning <see cref="T:System.Windows.Controls.ItemsControl" /> should virtualize its items; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.GroupStyle">
      <summary>Defines how you want the group to look at each level.</summary>
    </member>
    <member name="M:System.Windows.Controls.GroupStyle.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.GroupStyle" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.GroupStyle.AlternationCount">
      <summary>Gets or sets the number of alternating <see cref="T:System.Windows.Controls.GroupItem" /> objects.</summary>
      <returns>The number of alternating <see cref="T:System.Windows.Controls.GroupItem" /> objects.</returns>
    </member>
    <member name="P:System.Windows.Controls.GroupStyle.ContainerStyle">
      <summary>Gets or sets the style that is applied to the <see cref="T:System.Windows.Controls.GroupItem" /> generated for each item.</summary>
      <returns>The style that is applied to the <see cref="T:System.Windows.Controls.GroupItem" /> generated for each item. The default is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.GroupStyle.ContainerStyleSelector">
      <summary>Enables the application writer to provide custom selection logic for a style to apply to each generated <see cref="T:System.Windows.Controls.GroupItem" />.</summary>
      <returns>An object that derives from <see cref="T:System.Windows.Controls.StyleSelector" />. The default is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.GroupStyle.Default">
      <summary>Gets the default style of the group.</summary>
      <returns>The default style of the group.</returns>
    </member>
    <member name="F:System.Windows.Controls.GroupStyle.DefaultGroupPanel">
      <summary>Identifies the default <see cref="T:System.Windows.Controls.ItemsPanelTemplate" /> that creates the panel used to layout the items.</summary>
    </member>
    <member name="P:System.Windows.Controls.GroupStyle.HeaderStringFormat">
      <summary>Gets or sets a composite string that specifies how to format the header if it is displayed as a string.</summary>
      <returns>A composite string that specifies how to format the header if it is displayed as a string.</returns>
    </member>
    <member name="P:System.Windows.Controls.GroupStyle.HeaderTemplate">
      <summary>Gets or sets the template that is used to display the group header.</summary>
      <returns>A <see cref="T:System.Windows.DataTemplate" /> object that is used to display the group header. The default is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.GroupStyle.HeaderTemplateSelector">
      <summary>Enables the application writer to provide custom selection logic for a template that is used to display the group header.</summary>
      <returns>An object that derives from <see cref="T:System.Windows.Controls.DataTemplateSelector" />. The default is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.GroupStyle.HidesIfEmpty">
      <summary>Gets or sets a value that indicates whether items corresponding to empty groups should be displayed.</summary>
      <returns>
        <see langword="true" /> to not display empty groups; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.GroupStyle.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.GroupStyle.PropertyChanged" /> event using the provided arguments.</summary>
      <param name="e">Arguments of the event being raised.</param>
    </member>
    <member name="P:System.Windows.Controls.GroupStyle.Panel">
      <summary>Gets or sets a template that creates the panel used to layout the items.</summary>
      <returns>An <see cref="T:System.Windows.Controls.ItemsPanelTemplate" /> object that creates the panel used to layout the items.</returns>
    </member>
    <member name="E:System.Windows.Controls.GroupStyle.PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="E:System.Windows.Controls.GroupStyle.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="T:System.Windows.Controls.GroupStyleSelector">
      <summary>Delegate used to select the group style as a function of the parent group and its level.</summary>
      <param name="group">Group whose style is to be selected.</param>
      <param name="level">Level of the group.</param>
      <returns>The appropriate group style.</returns>
    </member>
    <member name="T:System.Windows.Controls.HeaderedContentControl">
      <summary>Provides the base implementation for all controls that contain single content and have a header.</summary>
    </member>
    <member name="M:System.Windows.Controls.HeaderedContentControl.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.HeaderedContentControl" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.HeaderedContentControl.HasHeader">
      <summary>Gets a value that indicates whether the header is <see langword="null" />.</summary>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" /> property is not <see langword="null" />; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.HeaderedContentControl.HasHeaderProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.HeaderedContentControl.HasHeader" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.HeaderedContentControl.Header">
      <summary>Gets or sets the data used for the header of each control.</summary>
      <returns>A header object. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.HeaderedContentControl.HeaderProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.HeaderedContentControl.HeaderStringFormat">
      <summary>Gets or sets a composite string that specifies how to format the <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" /> property if it is displayed as a string.</summary>
      <returns>A composite string that specifies how to format the <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" /> property if it is displayed as a string. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.HeaderedContentControl.HeaderStringFormatProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderStringFormat" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate">
      <summary>Gets or sets the template used to display the content of the control's header.</summary>
      <returns>A data template. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.HeaderedContentControl.HeaderTemplateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplateSelector">
      <summary>Gets or sets a data template selector that provides custom logic for choosing the template used to display the header.</summary>
      <returns>A data template selector object. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.HeaderedContentControl.HeaderTemplateSelectorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplateSelector" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.HeaderedContentControl.LogicalChildren">
      <summary>Gets an enumerator to the logical child elements of the <see cref="T:System.Windows.Controls.ControlTemplate" />.</summary>
      <returns>An enumerator.</returns>
    </member>
    <member name="M:System.Windows.Controls.HeaderedContentControl.OnHeaderChanged(System.Object,System.Object)">
      <summary>Called when the <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" /> property of a <see cref="T:System.Windows.Controls.HeaderedContentControl" /> changes.</summary>
      <param name="oldHeader">Old value of the <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" /> property.</param>
      <param name="newHeader">New value of the <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.HeaderedContentControl.OnHeaderStringFormatChanged(System.String,System.String)">
      <summary>Called when the <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderStringFormat" /> property changes.</summary>
      <param name="oldHeaderStringFormat">The old value of the <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderStringFormat" /> property.</param>
      <param name="newHeaderStringFormat">The new value of the <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderStringFormat" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.HeaderedContentControl.OnHeaderTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>Called when the <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate" /> property changes.</summary>
      <param name="oldHeaderTemplate">Old value of the <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate" /> property.</param>
      <param name="newHeaderTemplate">New value of the <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.HeaderedContentControl.OnHeaderTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)">
      <summary>Called when the <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplateSelector" /> property changes.</summary>
      <param name="oldHeaderTemplateSelector">Old value of the <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplateSelector" /> property.</param>
      <param name="newHeaderTemplateSelector">New value of the <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplateSelector" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.HeaderedContentControl.ToString">
      <summary>Provides a string representation of a <see cref="T:System.Windows.Controls.HeaderedContentControl" />.</summary>
      <returns>A string representation of the object.</returns>
    </member>
    <member name="T:System.Windows.Controls.HeaderedItemsControl">
      <summary>Represents a control that contains multiple items and has a header.</summary>
    </member>
    <member name="M:System.Windows.Controls.HeaderedItemsControl.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.HeaderedItemsControl.HasHeader">
      <summary>Gets a value that indicates whether this <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> has a header.</summary>
      <returns>
        <see langword="true" /> if the control has a header; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.HeaderedItemsControl.HasHeaderProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.HeaderedItemsControl.HasHeader" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.HeaderedItemsControl.Header">
      <summary>Gets or sets the item that labels the control.</summary>
      <returns>An object that labels the <see cref="T:System.Windows.Controls.HeaderedItemsControl" />. The default is <see langword="null" />. A header can be a string or a <see cref="T:System.Windows.UIElement" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.HeaderedItemsControl.HeaderProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.HeaderedItemsControl.HeaderStringFormat">
      <summary>Gets or sets a composite string that specifies how to format the <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> property if it is displayed as a string.</summary>
      <returns>A composite string that specifies how to format the <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> property if it is displayed as a string.</returns>
    </member>
    <member name="F:System.Windows.Controls.HeaderedItemsControl.HeaderStringFormatProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderStringFormat" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate">
      <summary>Gets or sets the template used to display the contents of the control's header.</summary>
      <returns>A data template used to display a control's header. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelector">
      <summary>Gets or sets the object that provides custom selection logic for a template used to display the header of each item.</summary>
      <returns>A data template selector. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelectorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelector" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.HeaderedItemsControl.LogicalChildren">
      <summary>Gets an enumerator to the logical child elements of the <see cref="T:System.Windows.Controls.HeaderedItemsControl" />.</summary>
      <returns>An enumerator. The default is <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.HeaderedItemsControl.OnHeaderChanged(System.Object,System.Object)">
      <summary>Called when the <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> property of a <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> changes.</summary>
      <param name="oldHeader">The old value of the <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> property.</param>
      <param name="newHeader">The new value of the <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.HeaderedItemsControl.OnHeaderStringFormatChanged(System.String,System.String)">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderStringFormat" /> property changes.</summary>
      <param name="oldHeaderStringFormat">The old value of the <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderStringFormat" /> property.</param>
      <param name="newHeaderStringFormat">The new value of the <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderStringFormat" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.HeaderedItemsControl.OnHeaderTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>Called when the <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate" /> property changes.</summary>
      <param name="oldHeaderTemplate">The old value of the <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate" /> property.</param>
      <param name="newHeaderTemplate">The new value of the <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.HeaderedItemsControl.OnHeaderTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)">
      <summary>Called when the <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelector" /> property changes.</summary>
      <param name="oldHeaderTemplateSelector">The old value of the <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelector" /> property.</param>
      <param name="newHeaderTemplateSelector">The new value of the <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelector" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.HeaderedItemsControl.ToString">
      <summary>Returns the string representation of a <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> object.</summary>
      <returns>A string that represents this object.</returns>
    </member>
    <member name="T:System.Windows.Controls.HierarchicalVirtualizationConstraints">
      <summary>Specifies the sizes of a control's viewport and cache. This structure is used by the <see cref="T:System.Windows.Controls.Primitives.IHierarchicalVirtualizationAndScrollInfo" /> interface.</summary>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationConstraints.#ctor(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLengthUnit,System.Windows.Rect)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" /> class.</summary>
      <param name="cacheLength">The size of the cache before and after the viewport.</param>
      <param name="cacheLengthUnit">The type of unit that is used by the <see cref="P:System.Windows.Controls.HierarchicalVirtualizationConstraints.CacheLength" /> property.</param>
      <param name="viewport">The size of the cache before and after the viewport.</param>
    </member>
    <member name="P:System.Windows.Controls.HierarchicalVirtualizationConstraints.CacheLength">
      <summary>Gets the size of the cache before and after the viewport.</summary>
      <returns>The size of the cache before and after the viewport.</returns>
    </member>
    <member name="P:System.Windows.Controls.HierarchicalVirtualizationConstraints.CacheLengthUnit">
      <summary>Gets the type of unit that is used by the <see cref="P:System.Windows.Controls.HierarchicalVirtualizationConstraints.CacheLength" /> property.</summary>
      <returns>The type of unit that is used by the <see cref="P:System.Windows.Controls.HierarchicalVirtualizationConstraints.CacheLength" /> property.</returns>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationConstraints.Equals(System.Object)">
      <summary>Returns a value that indicates whether the specified object is equal to this <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" />.</summary>
      <param name="oCompare">The object to compare.</param>
      <returns>
        <see langword="true" /> if the specified object is equal to this <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationConstraints.Equals(System.Windows.Controls.HierarchicalVirtualizationConstraints)">
      <summary>Returns a value that indicates whether the specified <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" /> is equal to this <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" />.</summary>
      <param name="comparisonConstraints">The <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" /> to compare.</param>
      <returns>
        <see langword="true" /> if the specified <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" /> is equal to this <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationConstraints.GetHashCode">
      <summary>Gets a hash code for this <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" />.</summary>
      <returns>A hash code for this <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationConstraints.op_Equality(System.Windows.Controls.HierarchicalVirtualizationConstraints,System.Windows.Controls.HierarchicalVirtualizationConstraints)">
      <summary>Returns a value that indicates whether the specified <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" /> objects are equal.</summary>
      <param name="constraints1">The first <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" /> to compare.</param>
      <param name="constraints2">The second <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" /> to compare.</param>
      <returns>
        <see langword="true" /> if the specified <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" /> objects are equal; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationConstraints.op_Inequality(System.Windows.Controls.HierarchicalVirtualizationConstraints,System.Windows.Controls.HierarchicalVirtualizationConstraints)">
      <summary>Returns a value that indicates whether the specified <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" /> objects are unequal.</summary>
      <param name="constraints1">The first <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" /> to compare.</param>
      <param name="constraints2">The second <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" /> to compare.</param>
      <returns>
        <see langword="true" /> if the specified <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" /> objects are unequal; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.HierarchicalVirtualizationConstraints.Viewport">
      <summary>Gets the area that displays the items of the control.</summary>
      <returns>The area that displays the items of the control.</returns>
    </member>
    <member name="T:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes">
      <summary>Represents the desired size of the control's header, in pixels and in logical units. This structure is used by the <see cref="T:System.Windows.Controls.Primitives.IHierarchicalVirtualizationAndScrollInfo" /> interface.</summary>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes.#ctor(System.Windows.Size,System.Windows.Size)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes" /> class.</summary>
      <param name="logicalSize">The size of the header, in logical units.</param>
      <param name="pixelSize">The size of the header, in device-independent units (1/96th inch per unit).</param>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes.Equals(System.Object)">
      <summary>Returns a value that indicates whether the specified object is equal to this <see cref="T:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes" /> object.</summary>
      <param name="oCompare">The object to compare.</param>
      <returns>
        <see langword="true" /> if the specified object is equal to this object; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes.Equals(System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes)">
      <summary>Returns a value that indicates whether the specified <see cref="T:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes" /> object is equal to this <see cref="T:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes" /> object.</summary>
      <param name="comparisonHeaderSizes">The object to compare.</param>
      <returns>
        <see langword="true" /> if the specified object is equal to this object; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes.GetHashCode">
      <summary>Gets a hash code for the <see cref="T:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes" />.</summary>
      <returns>A hash code for the <see cref="T:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes.LogicalSize">
      <summary>Gets the size of the header, in logical units.</summary>
      <returns>The size of the header, in logical units.</returns>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes.op_Equality(System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes,System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes)">
      <summary>Returns a value that indicates whether the specified <see cref="T:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes" /> objects are equal.</summary>
      <param name="headerDesiredSizes1">The first object to compare.</param>
      <param name="headerDesiredSizes2">The second object to compare.</param>
      <returns>
        <see langword="true" /> if the specified objects are equal; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes.op_Inequality(System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes,System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes)">
      <summary>Returns a value that indicates whether the specified <see cref="T:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes" /> objects are unequal.</summary>
      <param name="headerDesiredSizes1">The first object to compare.</param>
      <param name="headerDesiredSizes2">The second object to compare.</param>
      <returns>
        <see langword="true" /> if the specified objects are unequal; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes.PixelSize">
      <summary>Gets the size of the header, in device-independent units (1/96th inch per unit).</summary>
      <returns>The size of the header, in device-independent units (1/96th inch per unit).</returns>
    </member>
    <member name="T:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes">
      <summary>Represents the desired size of the control's items, in device-independent units (1/96th inch per unit) and in logical units.</summary>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.#ctor(System.Windows.Size,System.Windows.Size,System.Windows.Size,System.Windows.Size,System.Windows.Size,System.Windows.Size,System.Windows.Size,System.Windows.Size)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes" /> class.</summary>
      <param name="logicalSize">The size of the control's child items, in logical units.</param>
      <param name="logicalSizeInViewport">The size of the control's child items that are in the viewport, in logical units.</param>
      <param name="logicalSizeBeforeViewport">The size of the control's child items that are in the cache before the viewport, in logical units.</param>
      <param name="logicalSizeAfterViewport">The size of the control's child items that are in the cache after the viewport, in logical units.</param>
      <param name="pixelSize">The size of the control's child items, in device-independent units (1/96th inch per unit).</param>
      <param name="pixelSizeInViewport">The size of the control's child items that are in viewport, in device-independent units (1/96th inch per unit).</param>
      <param name="pixelSizeBeforeViewport">The size of the control's child items that are in the cache before the viewport, in device-independent units (1/96th inch per unit).</param>
      <param name="pixelSizeAfterViewport">The size of the control's child items that are in the cache after the viewport, in device-independent units (1/96th inch per unit).</param>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.Equals(System.Object)">
      <summary>Returns a value that indicates whether the specified object is equal to this <see cref="T:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes" /> object.</summary>
      <param name="oCompare">The object to compare to this object.</param>
      <returns>
        <see langword="true" /> if the specified object is equal to this <see cref="T:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes" /> object; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.Equals(System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes)">
      <summary>Returns a value that indicates whether the specified <see cref="T:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes" /> object is equal to this <see cref="T:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes" /> object.</summary>
      <param name="comparisonItemSizes">The object to compare to this object.</param>
      <returns>
        <see langword="true" /> if the specified object is equal to this <see cref="T:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes" /> object; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.GetHashCode">
      <summary>Gets a hash code for this <see cref="T:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes" /> object.</summary>
      <returns>A hash code for this <see cref="T:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes" /> object.</returns>
    </member>
    <member name="P:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.LogicalSize">
      <summary>Gets the size of the control's child items, in logical units.</summary>
      <returns>The size of the control's child items, in logical units.</returns>
    </member>
    <member name="P:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.LogicalSizeAfterViewport">
      <summary>Gets the size of the control's child items that are in the cache after the viewport, in logical units.</summary>
      <returns>The control's child items that are in the cache after the viewport, in logical units.</returns>
    </member>
    <member name="P:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.LogicalSizeBeforeViewport">
      <summary>Gets the control's child items that are in the cache before the viewport, in logical units.</summary>
      <returns>The control's child items that are in the cache before the viewport, in logical units.</returns>
    </member>
    <member name="P:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.LogicalSizeInViewport">
      <summary>Gets the control's child items that are in the viewport, in logical units.</summary>
      <returns>The control's child items that are in the viewport, in logical units.</returns>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.op_Equality(System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes,System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes)">
      <summary>Returns a value that indicates whether the specified object <see cref="T:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes" /> are equal.</summary>
      <param name="itemDesiredSizes1">The first object to compare.</param>
      <param name="itemDesiredSizes2">The second object to compare.</param>
      <returns>
        <see langword="true" /> if the specified object <see cref="T:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes" /> are equal; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.op_Inequality(System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes,System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes)">
      <summary>Returns a value that indicates whether the specified object <see cref="T:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes" /> are unequal.</summary>
      <param name="itemDesiredSizes1">The first object to compare.</param>
      <param name="itemDesiredSizes2">The second object to compare.</param>
      <returns>
        <see langword="true" /> if the specified object <see cref="T:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes" /> are unequal; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.PixelSize">
      <summary>Gets the size of the control's child items, in device-independent units (1/96th inch per unit).</summary>
      <returns>The size of the control's child items, in device-independent units (1/96th inch per unit).</returns>
    </member>
    <member name="P:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.PixelSizeAfterViewport">
      <summary>Gets the size of the control's child items that are in the cache after the viewport, in device-independent units (1/96th inch per unit).</summary>
      <returns>The size of the control's child items that are in the cache after the viewport, in device-independent units (1/96th inch per unit).</returns>
    </member>
    <member name="P:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.PixelSizeBeforeViewport">
      <summary>Gets the size of the control's child items that are in the cache before the viewport, in device-independent units (1/96th inch per unit).</summary>
      <returns>The size of the control's child items that are in the cache before the viewport, in device-independent units (1/96th inch per unit).</returns>
    </member>
    <member name="P:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.PixelSizeInViewport">
      <summary>Gets the size of the control's child items that are in the viewport, in device-independent units (1/96th inch per unit).</summary>
      <returns>The size of the control's child items that are in the viewport, in device-independent units (1/96th inch per unit).</returns>
    </member>
    <member name="T:System.Windows.Controls.Image">
      <summary>Represents a control that displays an image.</summary>
    </member>
    <member name="M:System.Windows.Controls.Image.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Image" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.Image.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges and sizes an image control.</summary>
      <param name="arrangeSize">The size used to arrange the control.</param>
      <returns>The size of the control.</returns>
    </member>
    <member name="P:System.Windows.Controls.Image.BaseUri">
      <summary>Gets or sets the base uniform resource identifier (URI) for the <see cref="T:System.Windows.Controls.Image" />.</summary>
      <returns>A base URI for the <see cref="T:System.Windows.Controls.Image" />.</returns>
    </member>
    <member name="E:System.Windows.Controls.Image.DpiChanged">
      <summary>Occurs after the DPI of the screen on which the Image is displayed changes.</summary>
    </member>
    <member name="F:System.Windows.Controls.Image.DpiChangedEvent">
      <summary>A <see cref="T:System.Windows.RoutedEvent" /> for when the DPI of the screen the Image is on changes.</summary>
    </member>
    <member name="E:System.Windows.Controls.Image.ImageFailed">
      <summary>Occurs when there is a failure in the image.</summary>
    </member>
    <member name="F:System.Windows.Controls.Image.ImageFailedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.Image.ImageFailed" /> routed event.</summary>
    </member>
    <member name="M:System.Windows.Controls.Image.MeasureOverride(System.Windows.Size)">
      <summary>Updates the <see cref="P:System.Windows.UIElement.DesiredSize" /> of the image. This method is called by the parent <see cref="T:System.Windows.UIElement" /> and is the first pass of layout.</summary>
      <param name="constraint">The size that the image should not exceed.</param>
      <returns>The image's desired size.</returns>
    </member>
    <member name="M:System.Windows.Controls.Image.OnCreateAutomationPeer">
      <summary>Creates and returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> object for this <see cref="T:System.Windows.Controls.Image" />.</summary>
      <returns>An <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> object for this <see cref="T:System.Windows.Controls.Image" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.Image.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)">
      <summary>Called when the DPI at which this Image is rendered changes.</summary>
      <param name="oldDpi">The previous DPI scale setting</param>
      <param name="newDpi">The new DPI scale setting</param>
    </member>
    <member name="M:System.Windows.Controls.Image.OnRender(System.Windows.Media.DrawingContext)">
      <summary>Renders the contents of an <see cref="T:System.Windows.Controls.Image" />.</summary>
      <param name="dc">An instance of <see cref="T:System.Windows.Media.DrawingContext" /> used to render the control.</param>
    </member>
    <member name="P:System.Windows.Controls.Image.Source">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.ImageSource" /> for the image.</summary>
      <returns>The source of the drawn image. The default value is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Image.SourceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Image.Source" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Image.Stretch">
      <summary>Gets or sets a value that describes how an <see cref="T:System.Windows.Controls.Image" /> should be stretched to fill the destination rectangle.</summary>
      <returns>One of the <see cref="T:System.Windows.Media.Stretch" /> values. The default is <see cref="F:System.Windows.Media.Stretch.Uniform" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.Image.StretchDirection">
      <summary>Gets or sets a value that indicates how the image is scaled.</summary>
      <returns>One of the <see cref="T:System.Windows.Controls.StretchDirection" /> values. The default is <see cref="F:System.Windows.Controls.StretchDirection.Both" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Image.StretchDirectionProperty">
      <summary>Identifies the <see cref="T:System.Windows.Controls.StretchDirection" /> dependency property.</summary>
    </member>
    <member name="F:System.Windows.Controls.Image.StretchProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Image.Stretch" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Image.System#Windows#Markup#IUriContext#BaseUri">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>The base URI of the current context.</returns>
    </member>
    <member name="T:System.Windows.Controls.InitializingNewItemEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.DataGrid.InitializingNewItem" /> event.</summary>
    </member>
    <member name="M:System.Windows.Controls.InitializingNewItemEventArgs.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.InitializingNewItemEventArgs" /> class.</summary>
      <param name="newItem">The new item added to the <see cref="T:System.Windows.Controls.DataGrid" />.</param>
    </member>
    <member name="P:System.Windows.Controls.InitializingNewItemEventArgs.NewItem">
      <summary>Gets the new item added to the <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
      <returns>The new item added to the grid.</returns>
    </member>
    <member name="T:System.Windows.Controls.InitializingNewItemEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Controls.DataGrid.InitializingNewItem" /> event of a <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
      <param name="sender">The source for the event.</param>
      <param name="e">The data for the event.</param>
    </member>
    <member name="T:System.Windows.Controls.InkCanvas">
      <summary>Defines an area that receives and displays ink strokes.</summary>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.#ctor">
      <summary>Initializes a new instance of the InkCanvas class.</summary>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.ActiveEditingMode">
      <summary>Gets the current editing mode of the <see cref="T:System.Windows.Controls.InkCanvas" />.</summary>
      <returns>The current editing mode of the <see cref="T:System.Windows.Controls.InkCanvas" />.</returns>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged">
      <summary>Occurs when the current editing mode changes.</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.ActiveEditingModeChangedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged" /> routed event.</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.ActiveEditingModeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.InkCanvas.ActiveEditingMode" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.ArrangeOverride(System.Windows.Size)">
      <summary>Positions child elements and determines a size for the <see cref="T:System.Windows.Controls.InkCanvas" /> object.</summary>
      <param name="arrangeSize">The final area within the parent that this element should use to arrange itself and its children.</param>
      <returns>The actual size used.</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.Background">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.Brush" />. The brush is used to fill the border area surrounding a <see cref="T:System.Windows.Controls.InkCanvas" />.</summary>
      <returns>A <see cref="T:System.Windows.Media.Brush" /> used to fill the border area surrounding a <see cref="T:System.Windows.Controls.InkCanvas" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.BackgroundProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.InkCanvas.Background" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.Bottom">
      <summary>Gets or sets the distance between the bottom of an element and the bottom of its parent <see cref="T:System.Windows.Controls.InkCanvas" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.BottomProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.InkCanvas.Bottom" /> attached property.</summary>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.CanPaste">
      <summary>Indicates whether the contents of the Clipboard can be pasted into the <see cref="T:System.Windows.Controls.InkCanvas" />.</summary>
      <returns>
        <see langword="true" /> if the contents of the Clipboard can be pasted in; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.Children">
      <summary>Retrieves child elements of the <see cref="T:System.Windows.Controls.InkCanvas" />.</summary>
      <returns>A collection of child elements located on the <see cref="T:System.Windows.Controls.InkCanvas" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.CopySelection">
      <summary>Copies selected strokes and/or elements to the Clipboard.</summary>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.CutSelection">
      <summary>Deletes the selected strokes and elements, and copies them to the Clipboard.</summary>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes">
      <summary>Gets or sets the drawing attributes that are applied to new ink strokes made on the <see cref="T:System.Windows.Controls.InkCanvas" />.</summary>
      <returns>The default drawing attributes for the <see cref="T:System.Windows.Controls.InkCanvas" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes" /> dependency property.</summary>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesReplaced">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes" /> property is replaced.</summary>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.DefaultStylusPointDescription">
      <summary>Gets or sets the stylus point description for an <see cref="T:System.Windows.Controls.InkCanvas" />.</summary>
      <returns>The stylus point description for an <see cref="T:System.Windows.Controls.InkCanvas" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.DynamicRenderer">
      <summary>Gets or sets the renderer that dynamically draws ink on the <see cref="T:System.Windows.Controls.InkCanvas" />.</summary>
      <returns>The renderer that dynamically draws ink on the <see cref="T:System.Windows.Controls.InkCanvas" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.EditingMode">
      <summary>Gets or sets the user editing mode used by an active pointing device.</summary>
      <returns>The editing mode used when a pointing device (such as a tablet pen or mouse) is active.</returns>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.EditingModeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.InkCanvas.EditingMode" /> property of an <see cref="T:System.Windows.Controls.InkCanvas" /> object has been changed.</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.EditingModeChangedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.InkCanvas.EditingModeChanged" /> routed event.</summary>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.EditingModeInverted">
      <summary>Gets or sets the user editing mode if the stylus is inverted when it interacts with the <see cref="T:System.Windows.Controls.InkCanvas" />.</summary>
      <returns>The inverted editing mode of the <see cref="T:System.Windows.Controls.InkCanvas" />.</returns>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.InkCanvas.EditingModeInverted" /> property of an <see cref="T:System.Windows.Controls.InkCanvas" /> object has been changed.</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.EditingModeInvertedChangedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged" /> routed event.</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.EditingModeInvertedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.InkCanvas.EditingModeInverted" /> dependency property.</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.EditingModeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.InkCanvas.EditingMode" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.EraserShape">
      <summary>Gets or sets the <see cref="T:System.Windows.Ink.StylusShape" /> used to point-erase ink from an <see cref="T:System.Windows.Controls.InkCanvas" />.</summary>
      <returns>The eraser shape associated with the <see cref="T:System.Windows.Controls.InkCanvas" />.</returns>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.Gesture">
      <summary>Occurs when the <see cref="T:System.Windows.Controls.InkCanvas" /> detects a gesture.</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.GestureEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.InkCanvas.Gesture" /> routed event.</summary>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.GetBottom(System.Windows.UIElement)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Bottom" /> attached property for a given dependency object.</summary>
      <param name="element">The element of which to get the bottom property.</param>
      <returns>The bottom coordinate of the dependency object.</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.GetEnabledGestures">
      <summary>Returns a collection of application gestures that are recognized by <see cref="T:System.Windows.Controls.InkCanvas" />.</summary>
      <returns>A collection of gestures that the <see cref="T:System.Windows.Controls.InkCanvas" /> recognizes.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable" /> property is <see langword="false" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.GetLeft(System.Windows.UIElement)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Left" /> attached property for a given dependency object.</summary>
      <param name="element">The element of which to get the left property.</param>
      <returns>The left coordinate of the dependency object.</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.GetRight(System.Windows.UIElement)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Right" /> attached property for a given dependency object.</summary>
      <param name="element">The element of which to get the right property.</param>
      <returns>The right coordinate of the dependency object.</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.GetSelectedElements">
      <summary>Retrieves the <see cref="T:System.Windows.FrameworkElement" /> objects that are selected in the <see cref="T:System.Windows.Controls.InkCanvas" />.</summary>
      <returns>Array of <see cref="T:System.Windows.FrameworkElement" /> objects.</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes">
      <summary>Retrieves a <see cref="T:System.Windows.Ink.StrokeCollection" /> that represents selected <see cref="T:System.Windows.Ink.Stroke" /> objects on the <see cref="T:System.Windows.Controls.InkCanvas" />.</summary>
      <returns>The collection of selected strokes.</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.GetSelectionBounds">
      <summary>Gets the bounds of the selected strokes and elements on the <see cref="T:System.Windows.Controls.InkCanvas" />.</summary>
      <returns>The smallest rectangle that encompasses all selected strokes and elements.</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.GetTop(System.Windows.UIElement)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Top" /> attached property for a given dependency object.</summary>
      <param name="element">The element of which to get the top property.</param>
      <returns>The top coordinate of the dependency object.</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.GetVisualChild(System.Int32)">
      <summary>Overrides <see cref="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)" />, and returns a child at the specified index from a collection of child elements.</summary>
      <param name="index">The zero-based index of the requested child element in the collection.</param>
      <returns>The requested child element. This should not return <see langword="null" />; if the provided index is out of range, an exception is thrown.</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.HitTestCore(System.Windows.Media.PointHitTestParameters)">
      <summary>Determines whether a given point falls within the rendering bounds of an <see cref="T:System.Windows.Controls.InkCanvas" />.</summary>
      <param name="hitTestParams">An object that specifies the <see cref="T:System.Windows.Point" /> to hit test against.</param>
      <returns>An object that represents the <see cref="T:System.Windows.Media.Visual" /> that is returned from a hit test.</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.HitTestSelection(System.Windows.Point)">
      <summary>Returns a value that indicates which part of the selection adorner intersects or surrounds the specified point.</summary>
      <param name="point">The point to hit test.</param>
      <returns>A value that indicates which part of the selection adorner intersects or surrounds a specified point.</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.InkPresenter">
      <summary>Gets the ink presenter that displays ink on the <see cref="T:System.Windows.Controls.InkCanvas" />.</summary>
      <returns>The ink presenter that displays ink on the <see cref="T:System.Windows.Controls.InkCanvas" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable">
      <summary>Gets (determines) whether the gesture recognition component is available on the user's system.</summary>
      <returns>
        <see langword="true" /> if the recognition component is available; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.Left">
      <summary>Gets or sets the distance between the left side of an element and the left side of its parent <see cref="T:System.Windows.Controls.InkCanvas" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.LeftProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.InkCanvas.Left" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.LogicalChildren">
      <summary>Returns enumerator to logical children.</summary>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.MeasureOverride(System.Windows.Size)">
      <summary>Measures the size in layout required for child elements and determines a size for the <see cref="T:System.Windows.Controls.InkCanvas" /> object.</summary>
      <param name="availableSize">The available size that this element can give to child elements. Infinity can be specified as a value to indicate that the element will size to whatever content is available.</param>
      <returns>The size that this element determines it needs during layout, based on its calculations of child element sizes.</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.MoveEnabled">
      <summary>Gets or sets a Boolean value which indicates whether the user is enabled to move selected ink strokes and/or elements on the <see cref="T:System.Windows.Controls.InkCanvas" />.</summary>
      <returns>
        <see langword="true" /> if a user can move strokes and/or elements on the <see cref="T:System.Windows.Controls.InkCanvas" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnActiveEditingModeChanged(System.Windows.RoutedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnCreateAutomationPeer">
      <summary>Provides an appropriate <see cref="T:System.Windows.Automation.Peers.InkCanvasAutomationPeer" /> implementation for this control, as part of the WPF infrastructure.</summary>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnDefaultDrawingAttributesReplaced(System.Windows.Ink.DrawingAttributesReplacedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesReplaced" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnEditingModeChanged(System.Windows.RoutedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.InkCanvas.EditingModeChanged" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnEditingModeInvertedChanged(System.Windows.RoutedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnGesture(System.Windows.Controls.InkCanvasGestureEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.InkCanvas.Gesture" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Invoked whenever the effective value of any dependency property on this <see cref="T:System.Windows.FrameworkElement" /> has been updated. The specific dependency property that changed is reported in the arguments parameter. Overrides <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />.</summary>
      <param name="e">The event data that describes the property that changed, as well as old and new values.</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnSelectionChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.InkCanvas.SelectionChanged" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnSelectionChanging(System.Windows.Controls.InkCanvasSelectionChangingEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.InkCanvas.SelectionChanging" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnSelectionMoved(System.EventArgs)">
      <summary>An event announcing that the user selected and moved a selection of strokes and/or elements.</summary>
      <param name="e">Not used.</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnSelectionMoving(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.InkCanvas.SelectionMoving" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnSelectionResized(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.InkCanvas.SelectionResized" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnSelectionResizing(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.InkCanvas.SelectionResizing" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnStrokeCollected(System.Windows.Controls.InkCanvasStrokeCollectedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.InkCanvas.StrokeCollected" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnStrokeErased(System.Windows.RoutedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.InkCanvas.StrokeErased" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnStrokeErasing(System.Windows.Controls.InkCanvasStrokeErasingEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.InkCanvas.StrokeErasing" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnStrokesReplaced(System.Windows.Controls.InkCanvasStrokesReplacedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.InkCanvas.StrokesReplaced" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.Paste">
      <summary>Pastes the contents of the Clipboard to the top-left corner of the <see cref="T:System.Windows.Controls.InkCanvas" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.Paste(System.Windows.Point)">
      <summary>Pastes the contents of the Clipboard to the <see cref="T:System.Windows.Controls.InkCanvas" /> at a given point.</summary>
      <param name="point">The point at which to paste the strokes.</param>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.PreferredPasteFormats">
      <summary>Gets or sets formats that can be pasted onto the <see cref="T:System.Windows.Controls.InkCanvas" />.</summary>
      <returns>A collection of enumeration values. The default is <see cref="F:System.Windows.Controls.InkCanvasClipboardFormat.InkSerializedFormat" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.ResizeEnabled">
      <summary>Gets or sets a Boolean value that indicates whether the user can resize selected ink strokes and/or elements on the <see cref="T:System.Windows.Controls.InkCanvas" />.</summary>
      <returns>
        <see langword="true" /> if a user can resize strokes and/or elements on the <see cref="T:System.Windows.Controls.InkCanvas" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.Right">
      <summary>Gets or sets the distance between the right side of an element and the right side of its parent <see cref="T:System.Windows.Controls.InkCanvas" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.RightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.InkCanvas.Right" /> attached property.</summary>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.Select(System.Collections.Generic.IEnumerable{System.Windows.UIElement})">
      <summary>Selects a set of <see cref="T:System.Windows.UIElement" /> objects.</summary>
      <param name="selectedElements">A collection of <see cref="T:System.Windows.UIElement" /> objects to select.</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.Select(System.Windows.Ink.StrokeCollection)">
      <summary>Selects a set of ink <see cref="T:System.Windows.Ink.Stroke" /> objects.</summary>
      <param name="selectedStrokes">A collection of <see cref="T:System.Windows.Ink.Stroke" /> objects to select.</param>
      <exception cref="T:System.ArgumentException">One or more strokes in <paramref name="selectedStrokes" /> is not in the <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> property.</exception>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.Select(System.Windows.Ink.StrokeCollection,System.Collections.Generic.IEnumerable{System.Windows.UIElement})">
      <summary>Selects a combination of <see cref="T:System.Windows.Ink.Stroke" /> and <see cref="T:System.Windows.UIElement" /> objects.</summary>
      <param name="selectedStrokes">A collection of <see cref="T:System.Windows.Ink.Stroke" /> objects to select.</param>
      <param name="selectedElements">A collection of <see cref="T:System.Windows.UIElement" /> objects to select.</param>
      <exception cref="T:System.ArgumentException">One or more strokes in <paramref name="selectedStrokes" /> is not included in the <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> property.</exception>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.SelectionChanged">
      <summary>Occurs when the selection on the <see cref="T:System.Windows.Controls.InkCanvas" /> changes.</summary>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.SelectionChanging">
      <summary>Occurs when a new set of ink strokes and/or elements is being selected.</summary>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.SelectionMoved">
      <summary>Occurs after the user moves a selection of strokes and/or elements.</summary>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.SelectionMoving">
      <summary>Occurs before selected strokes and elements are moved.</summary>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.SelectionResized">
      <summary>Occurs when a selection of strokes and/or elements has been resized by the user.</summary>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.SelectionResizing">
      <summary>Occurs before selected strokes and elements are resized.</summary>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.SetBottom(System.Windows.UIElement,System.Double)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Bottom" /> attached property for a given dependency object.</summary>
      <param name="element">The element on which to set the bottom property.</param>
      <param name="length">The bottom coordinate of <paramref name="element" />.</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.SetEnabledGestures(System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture})">
      <summary>Sets the application gestures that the <see cref="T:System.Windows.Controls.InkCanvas" /> will recognize.</summary>
      <param name="applicationGestures">A collection of application gestures that the <see cref="T:System.Windows.Controls.InkCanvas" /> will recognize.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable" /> property is <see langword="false" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.SetLeft(System.Windows.UIElement,System.Double)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Left" /> attached property for a given dependency object.</summary>
      <param name="element">The element on which to set the left property.</param>
      <param name="length">The left coordinate of <paramref name="element" />.</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.SetRight(System.Windows.UIElement,System.Double)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Right" /> attached property for a given dependency object.</summary>
      <param name="element">The element on which to set the right property.</param>
      <param name="length">The right coordinate of <paramref name="element" />.</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.SetTop(System.Windows.UIElement,System.Double)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Top" /> attached property for a given dependency object.</summary>
      <param name="element">The element on which to set the top property.</param>
      <param name="length">The top coordinate of <paramref name="element" />.</param>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.StrokeCollected">
      <summary>Occurs when a stroke drawn by the user is added to the <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> property.</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.StrokeCollectedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.InkCanvas.StrokeCollected" /> routed event.</summary>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.StrokeErased">
      <summary>Occurs when user erases a stroke.</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.StrokeErasedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.InkCanvas.StrokeErased" /> routed event.</summary>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.StrokeErasing">
      <summary>Occurs just before a user erases a stroke.</summary>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.Strokes">
      <summary>Gets or sets the collection of ink <see cref="T:System.Windows.Ink.Stroke" /> objects collected by the <see cref="T:System.Windows.Controls.InkCanvas" />.</summary>
      <returns>The collection of <see cref="T:System.Windows.Ink.Stroke" /> objects contained within the <see cref="T:System.Windows.Controls.InkCanvas" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.StrokesProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> dependency property.</summary>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.StrokesReplaced">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> property is replaced.</summary>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>Adds the specified object to the <see cref="T:System.Windows.Controls.InkCanvas" />.</summary>
      <param name="value">The child object to add.</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>Adds the text that within the tags in markup. Always throws an <see cref="T:System.ArgumentException" />.</summary>
      <param name="textData">Not used.</param>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.Top">
      <summary>Gets or sets the distance between the top of an element and the top of its parent <see cref="T:System.Windows.Controls.InkCanvas" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.TopProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.InkCanvas.Top" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.UseCustomCursor">
      <summary>Gets or sets a Boolean value that indicates whether to override standard <see cref="T:System.Windows.Controls.InkCanvas" /> cursor functionality to support a custom cursor.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.InkCanvas" /> is using a custom cursor; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.VisualChildrenCount">
      <summary>Gets the number of visual child elements within this element.</summary>
      <returns>The number of visual child elements for this element.</returns>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasClipboardFormat">
      <summary>Specifies the formats that an <see cref="T:System.Windows.Controls.InkCanvas" /> will accept from the Clipboard.</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasClipboardFormat.InkSerializedFormat">
      <summary>Indicates that the <see cref="T:System.Windows.Controls.InkCanvas" /> accepts Ink Serialized Format (ISF).</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasClipboardFormat.Text">
      <summary>Indicates that the <see cref="T:System.Windows.Controls.InkCanvas" /> accepts text.</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasClipboardFormat.Xaml">
      <summary>Indicates that the <see cref="T:System.Windows.Controls.InkCanvas" /> accepts "Extensible Application Markup Language" (XAML) format.</summary>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasEditingMode">
      <summary>Specifies the editing mode for the <see cref="T:System.Windows.Controls.InkCanvas" /></summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint">
      <summary>Indicates that the pen erases part of a stroke when the pen intersects the stroke.</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke">
      <summary>Indicates that the pen erases an entire stroke when the pen intersects the stroke.</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasEditingMode.GestureOnly">
      <summary>Indicates that the <see cref="T:System.Windows.Controls.InkCanvas" /> responds to gestures, and does not receive ink.</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasEditingMode.Ink">
      <summary>Indicates that ink appears on the <see cref="T:System.Windows.Controls.InkCanvas" /> when the pen sends data to it.</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasEditingMode.InkAndGesture">
      <summary>Indicates that the <see cref="T:System.Windows.Controls.InkCanvas" /> responds to gestures, and receives ink.</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasEditingMode.None">
      <summary>Indicates that no action is taken when the pen sends data to the <see cref="T:System.Windows.Controls.InkCanvas" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasEditingMode.Select">
      <summary>Indicates that the pen selects strokes and elements on the <see cref="T:System.Windows.Controls.InkCanvas" />.</summary>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasGestureEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.InkCanvas.Gesture" /> event.</summary>
    </member>
    <member name="M:System.Windows.Controls.InkCanvasGestureEventArgs.#ctor(System.Windows.Ink.StrokeCollection,System.Collections.Generic.IEnumerable{System.Windows.Ink.GestureRecognitionResult})">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.InkCanvasGestureEventArgs" /> class.</summary>
      <param name="strokes">The strokes that represent the possible gesture.</param>
      <param name="gestureRecognitionResults">The results from the gesture recognizer.</param>
    </member>
    <member name="P:System.Windows.Controls.InkCanvasGestureEventArgs.Cancel">
      <summary>Gets or sets a Boolean value that indicates whether strokes should be considered a gesture.</summary>
      <returns>
        <see langword="true" /> if the strokes are ink; <see langword="false" /> if the strokes are a gesture.</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvasGestureEventArgs.GetGestureRecognitionResults">
      <summary>Returns results from the gesture recognizer.</summary>
      <returns>A collection of possible application gestures that the <see cref="P:System.Windows.Controls.InkCanvasGestureEventArgs.Strokes" /> might be.</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvasGestureEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>When overridden in a derived class, provides a way to invoke event handlers in a type-specific way, which can increase efficiency over the base implementation.</summary>
      <param name="genericHandler">The generic handler / delegate implementation to be invoked.</param>
      <param name="genericTarget">The target on which the provided handler should be invoked.</param>
    </member>
    <member name="P:System.Windows.Controls.InkCanvasGestureEventArgs.Strokes">
      <summary>Gets the strokes that represent the possible gesture.</summary>
      <returns>The strokes that represent the possible gesture.</returns>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasGestureEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Controls.InkCanvas.Gesture" /> event of a <see cref="T:System.Windows.Controls.InkCanvas" />.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasSelectionChangingEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.InkCanvas.SelectionChanging" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.InkCanvasSelectionChangingEventArgs.GetSelectedElements">
      <summary>Returns the selected elements.</summary>
      <returns>The selected elements.</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvasSelectionChangingEventArgs.GetSelectedStrokes">
      <summary>Returns the selected strokes.</summary>
      <returns>The selected strokes.</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvasSelectionChangingEventArgs.SetSelectedElements(System.Collections.Generic.IEnumerable{System.Windows.UIElement})">
      <summary>Sets the selected elements.</summary>
      <param name="selectedElements">The elements to select.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="selectedElements" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.InkCanvasSelectionChangingEventArgs.SetSelectedStrokes(System.Windows.Ink.StrokeCollection)">
      <summary>Sets the selected strokes.</summary>
      <param name="selectedStrokes">The strokes to select.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="selectedStrokes" /> is <see langword="null" />.</exception>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasSelectionChangingEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Controls.InkCanvas.SelectionChanging" /> event of a <see cref="T:System.Windows.Controls.InkCanvas" />.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasSelectionEditingEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.InkCanvas.SelectionMoving" /> and <see cref="E:System.Windows.Controls.InkCanvas.SelectionResizing" /> events.</summary>
    </member>
    <member name="P:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle">
      <summary>Gets or sets the bounds of the selection after it is moved or resized.</summary>
      <returns>The bounds of the selection after it is moved or resized.</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle">
      <summary>Gets the bounds of the selection before the user moved or resized it.</summary>
      <returns>The bounds of the selection before the user moved or resized it.</returns>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasSelectionEditingEventHandler">
      <summary>Represents the method that handles two events raised when changes occur on an <see cref="T:System.Windows.Controls.InkCanvas" />: the <see cref="E:System.Windows.Controls.InkCanvas.SelectionMoving" /> event, or the <see cref="E:System.Windows.Controls.InkCanvas.SelectionResizing" /> event.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasSelectionHitResult">
      <summary>Identifies the various parts of a selection adorner on an <see cref="T:System.Windows.Controls.InkCanvas" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasSelectionHitResult.Bottom">
      <summary>The lower middle handle of the selection adorner.</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasSelectionHitResult.BottomLeft">
      <summary>The lower left handle of the selection adorner.</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasSelectionHitResult.BottomRight">
      <summary>The lower right handle of the selection adorner.</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasSelectionHitResult.Left">
      <summary>The middle handle on the left edge of the selection adorner.</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasSelectionHitResult.None">
      <summary>No part of the selection adorner.</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasSelectionHitResult.Right">
      <summary>The middle handle on the right edge of the selection adorner.</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasSelectionHitResult.Selection">
      <summary>The area within the bounds of the selection adorner.</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasSelectionHitResult.Top">
      <summary>The upper middle handle of the selection adorner.</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasSelectionHitResult.TopLeft">
      <summary>The upper left handle of the selection adorner.</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasSelectionHitResult.TopRight">
      <summary>The upper right handle of the selection adorner.</summary>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasStrokeCollectedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.InkCanvas.StrokeCollected" /> event.</summary>
    </member>
    <member name="M:System.Windows.Controls.InkCanvasStrokeCollectedEventArgs.#ctor(System.Windows.Ink.Stroke)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.InkCanvasStrokeCollectedEventArgs" /> class.</summary>
      <param name="stroke">The collected <see cref="T:System.Windows.Ink.Stroke" /> object.</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvasStrokeCollectedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>Provides a way to invoke event handlers in a type-specific way.</summary>
      <param name="genericHandler">The event handler.</param>
      <param name="genericTarget">The event target.</param>
    </member>
    <member name="P:System.Windows.Controls.InkCanvasStrokeCollectedEventArgs.Stroke">
      <summary>Gets the stroke that was added to the <see cref="T:System.Windows.Controls.InkCanvas" />.</summary>
      <returns>The stroke that was added to the <see cref="T:System.Windows.Controls.InkCanvas" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasStrokeCollectedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Controls.InkCanvas.StrokeCollected" /> event of an <see cref="T:System.Windows.Controls.InkCanvas" />.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasStrokeErasingEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.InkCanvas.StrokeErasing" /> event.</summary>
    </member>
    <member name="P:System.Windows.Controls.InkCanvasStrokeErasingEventArgs.Stroke">
      <summary>Gets the stroke that is about to be erased.</summary>
      <returns>The stroke that is about to be erased.</returns>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasStrokeErasingEventHandler">
      <summary>Represents the method that handles the <see cref="E:System.Windows.Controls.InkCanvas.StrokeErasing" /> event for an <see cref="T:System.Windows.Controls.InkCanvas" />.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasStrokesReplacedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.InkCanvas.StrokesReplaced" /> event.</summary>
    </member>
    <member name="P:System.Windows.Controls.InkCanvasStrokesReplacedEventArgs.NewStrokes">
      <summary>Gets the new strokes of the <see cref="T:System.Windows.Controls.InkCanvas" />.</summary>
      <returns>The new strokes of the <see cref="T:System.Windows.Controls.InkCanvas" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvasStrokesReplacedEventArgs.PreviousStrokes">
      <summary>Gets the previous strokes of the <see cref="T:System.Windows.Controls.InkCanvas" />.</summary>
      <returns>The previous strokes of the <see cref="T:System.Windows.Controls.InkCanvas" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasStrokesReplacedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Controls.InkCanvas.StrokesReplaced" /> event of a <see cref="T:System.Windows.Controls.InkCanvas" />.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Controls.InkPresenter">
      <summary>Renders ink on a surface.</summary>
    </member>
    <member name="M:System.Windows.Controls.InkPresenter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.InkPresenter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.InkPresenter.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges the content of a <see cref="T:System.Windows.Controls.Decorator" /> element.</summary>
      <param name="arrangeSize">The <see cref="T:System.Windows.Size" /> this element uses to arrange its child content.</param>
      <returns>The <see cref="T:System.Windows.Size" /> that represents the arranged size of this <see cref="T:System.Windows.Controls.Decorator" /> element and its child.</returns>
    </member>
    <member name="M:System.Windows.Controls.InkPresenter.AttachVisuals(System.Windows.Media.Visual,System.Windows.Ink.DrawingAttributes)">
      <summary>Attaches the visual of a <see cref="T:System.Windows.Input.StylusPlugIns.DynamicRenderer" /> to an <see cref="T:System.Windows.Controls.InkPresenter" />.</summary>
      <param name="visual">The visual of a <see cref="T:System.Windows.Input.StylusPlugIns.DynamicRenderer" />.</param>
      <param name="drawingAttributes">The <see cref="T:System.Windows.Ink.DrawingAttributes" /> that specifies the appearance of the dynamically rendered ink.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="visual" /> is already attached to a visual tree.</exception>
    </member>
    <member name="M:System.Windows.Controls.InkPresenter.DetachVisuals(System.Windows.Media.Visual)">
      <summary>Detaches the visual of the <see cref="T:System.Windows.Input.StylusPlugIns.DynamicRenderer" /> from the <see cref="T:System.Windows.Controls.InkPresenter" />.</summary>
      <param name="visual">The visual of the <see cref="T:System.Windows.Input.StylusPlugIns.DynamicRenderer" /> to detach.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="visual" /> is not attached to the <see cref="T:System.Windows.Controls.InkPresenter" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.InkPresenter.GetLayoutClip(System.Windows.Size)">
      <summary>Returns a clipping geometry that indicates the area that will be clipped if the <see cref="P:System.Windows.UIElement.ClipToBounds" /> property is set to <see langword="true" />.</summary>
      <param name="layoutSlotSize">The available size of the element.</param>
      <returns>A <see cref="T:System.Windows.Media.Geometry" /> that represents the area that is clipped when <see cref="P:System.Windows.UIElement.ClipToBounds" /> is <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.InkPresenter.GetVisualChild(System.Int32)">
      <summary>Gets the child <see cref="T:System.Windows.Media.Visual" /> element at the specified <paramref name="index" /> position.</summary>
      <param name="index">Index position of the child element.</param>
      <returns>The child element at the specified <paramref name="index" /> position.</returns>
    </member>
    <member name="M:System.Windows.Controls.InkPresenter.MeasureOverride(System.Windows.Size)">
      <summary>Measures the child element of a <see cref="T:System.Windows.Controls.Decorator" /> to prepare for arranging it during the <see cref="M:System.Windows.Controls.Decorator.ArrangeOverride(System.Windows.Size)" /> pass.</summary>
      <param name="constraint">An upper limit <see cref="T:System.Windows.Size" /> that should not be exceeded.</param>
      <returns>The target <see cref="T:System.Windows.Size" /> of the element.</returns>
    </member>
    <member name="M:System.Windows.Controls.InkPresenter.OnCreateAutomationPeer">
      <summary>Provides an appropriate <see cref="T:System.Windows.Automation.Peers.InkPresenterAutomationPeer" /> implementation for this control, as part of the WPF infrastructure.</summary>
    </member>
    <member name="P:System.Windows.Controls.InkPresenter.Strokes">
      <summary>Gets or sets the strokes that the <see cref="T:System.Windows.Controls.InkPresenter" /> displays.</summary>
      <returns>The strokes that the <see cref="T:System.Windows.Controls.InkPresenter" /> displays.</returns>
    </member>
    <member name="F:System.Windows.Controls.InkPresenter.StrokesProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.InkPresenter.Strokes" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.InkPresenter.VisualChildrenCount">
      <summary>Gets a value that is equal to the number of visual child elements of this instance of <see cref="T:System.Windows.Controls.Decorator" />.</summary>
      <returns>The number of visual child elements.</returns>
    </member>
    <member name="T:System.Windows.Controls.ItemCollection">
      <summary>Holds the list of items that constitute the content of an <see cref="T:System.Windows.Controls.ItemsControl" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.Add(System.Object)">
      <summary>Adds an item to the <see cref="T:System.Windows.Controls.ItemCollection" />.</summary>
      <param name="newItem">The item to add to the collection.</param>
      <returns>The zero-based index at which the object is added or -1 if the item cannot be added.</returns>
      <exception cref="T:System.InvalidOperationException">The collection is in ItemsSource mode.</exception>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.CanChangeLiveFiltering">
      <summary>Gets a value that indicates whether the collection view supports turning filtering data in real time on or off.</summary>
      <returns>
        <see langword="true" /> if the collection view supports turning live filtering on or off; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.CanChangeLiveGrouping">
      <summary>Gets a value that indicates whether the collection view supports turning grouping data in real time on or off.</summary>
      <returns>
        <see langword="true" /> if the collection view supports turning live grouping on or off; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.CanChangeLiveSorting">
      <summary>Gets a value that indicates whether the collection view supports turning sorting data in real time on or off.</summary>
      <returns>
        <see langword="true" /> if the collection view supports turning live sorting on or off; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.CanFilter">
      <summary>Gets a value that indicates whether this collection view supports filtering.</summary>
      <returns>
        <see langword="true" /> if this view supports filtering; otherwise, <see langword="false" />. The default value is <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.CanGroup">
      <summary>Gets a value that indicates whether this collection view supports grouping.</summary>
      <returns>
        <see langword="true" /> if the collection supports grouping; otherwise, <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.CanSort">
      <summary>Gets a value that indicates whether this collection view supports sorting.</summary>
      <returns>
        <see langword="true" /> if this view support sorting; otherwise, <see langword="false" />. The default value is <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.Clear">
      <summary>Clears the collection and releases the references on all items currently in the collection.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Controls.ItemCollection" /> is in <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> mode. (When the <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> property is set, the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection will be made read-only and fixed-size.)</exception>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.Contains(System.Object)">
      <summary>Returns a value that indicates whether the specified item is in this view.</summary>
      <param name="containItem">The object to check.</param>
      <returns>
        <see langword="true" /> to indicate that the item belongs to this collection and passes the active filter; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of the collection to an array, starting at a particular array index.</summary>
      <param name="array">The destination array to copy to.</param>
      <param name="index">The zero-based index in the destination array.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="array" /> parameter is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">The destination <paramref name="array" /> is multidimensional.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> parameter is less than 0.</exception>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.Count">
      <summary>Gets the number of records in the collection.</summary>
      <returns>The number of items in the collection or 0 if the collection is uninitialized or if there is no collection in the <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> mode.</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.CurrentItem">
      <summary>Gets the current item in the view.</summary>
      <returns>The current object in the view or <see langword="null" /> if the collection is uninitialized or if there is no collection in the <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> mode.  
 By default, the first item of the collection starts as the current item.</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.CurrentPosition">
      <summary>Gets the ordinal position of the current item within the view.</summary>
      <returns>The ordinal position of the current item within the view or -1 if the collection is uninitialized or if there is no collection in the <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> mode.</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.DeferRefresh">
      <summary>Enters a defer cycle that you can use to merge changes to the view and delay automatic refresh.</summary>
      <returns>An <see cref="T:System.IDisposable" /> object that you can use to dispose of the calling object.</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.Filter">
      <summary>Gets or sets a callback used to determine if an item is suitable for inclusion in the view.</summary>
      <returns>A method used to determine if an item is suitable for inclusion in the view.</returns>
      <exception cref="T:System.NotSupportedException">Filtering is not supported.</exception>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.GetItemAt(System.Int32)">
      <summary>Returns the item at the specified zero-based index in this view.</summary>
      <param name="index">The zero-based index at which the item is located.</param>
      <returns>The item at the specified zero-based index in this view.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is out of range.</exception>
      <exception cref="T:System.InvalidOperationException">The collection is uninitialized or the binding on <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> supplied a <see langword="null" /> value.</exception>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.GroupDescriptions">
      <summary>Gets a collection of <see cref="T:System.ComponentModel.GroupDescription" /> objects that defines how to group the items.</summary>
      <returns>An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> of <see cref="T:System.ComponentModel.GroupDescription" /> objects. The collection is indexed by the group levels.</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.Groups">
      <summary>Gets the top-level groups that are constructed according to the <see cref="P:System.Windows.Controls.ItemCollection.GroupDescriptions" />.</summary>
      <returns>The top-level groups that are constructed according to the <see cref="P:System.Windows.Controls.ItemCollection.GroupDescriptions" />. The default value is <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.IndexOf(System.Object)">
      <summary>Returns the index in this collection where the specified item is located.</summary>
      <param name="item">The object to look for in the collection.</param>
      <returns>The index of the item in the collection, or -1 if the item does not exist in the collection.</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.Insert(System.Int32,System.Object)">
      <summary>Inserts an element into the collection at the specified index.</summary>
      <param name="insertIndex">The zero-based index at which to insert the item.</param>
      <param name="insertItem">The item to insert.</param>
      <exception cref="T:System.InvalidOperationException">The collection is in ItemsSource mode.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The index is out of range.</exception>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.IsCurrentAfterLast">
      <summary>Gets a value that indicates whether the current item of the view is beyond the end of the collection.</summary>
      <returns>
        <see langword="true" /> if the current item of the view is beyond the end of the collection; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.IsCurrentBeforeFirst">
      <summary>Gets a value that indicates whether the current item of the view is beyond the beginning of the collection.</summary>
      <returns>
        <see langword="true" /> if the current item of the view is beyond the beginning of the collection; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.IsEmpty">
      <summary>Gets a value that indicates whether the resulting (filtered) view is empty.</summary>
      <returns>
        <see langword="true" /> if the resulting view is empty; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.IsLiveFiltering">
      <summary>Gets or sets a value that indicates whether filtering data in real time is enabled.</summary>
      <returns>
        <see langword="true" /> if filtering data in real time is enabled; <see langword="false" /> if live filtering is not enabled; <see langword="null" /> if it cannot be determined whether the collection view implements live filtering.</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.IsLiveGrouping">
      <summary>Gets or sets a value that indicates whether grouping data in real time is enabled.</summary>
      <returns>
        <see langword="true" /> if grouping data in real time is enabled; <see langword="false" /> if live grouping is not enabled; <see langword="null" /> if it cannot be determined whether the collection view implements live grouping.</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.IsLiveSorting">
      <summary>Gets or sets a value that indicates whether sorting in real time is enabled.</summary>
      <returns>
        <see langword="true" /> if sorting data in real time is enabled; <see langword="false" /> if live sorting is not enabled; <see langword="null" /> if it cannot be determined whether the collection view implements live sorting.</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.Item(System.Int32)">
      <summary>Gets or sets the item at the given zero-based index.</summary>
      <param name="index">The zero-based index of the item.</param>
      <returns>The object retrieved or the object that is being set to the specified index.</returns>
      <exception cref="T:System.InvalidOperationException">The collection is uninitialized, or the item to set already has a different logical parent, or the collection is in <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> mode.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The index is out of range.</exception>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.LiveFilteringProperties">
      <summary>Gets a collection of strings that specify the properties that participate in filtering data in real time.</summary>
      <returns>A collection of strings that specify the properties that participate in filtering data in real time.</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.LiveGroupingProperties">
      <summary>Gets a collection of strings that specify the properties that participate in grouping data in real time.</summary>
      <returns>A collection of strings that specify the properties that participate in grouping data in real time.</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.LiveSortingProperties">
      <summary>Gets a collection of strings that specify the properties that participate in sorting data in real time.</summary>
      <returns>A collection of strings that specify the properties that participate in sorting data in real time.</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.MoveCurrentTo(System.Object)">
      <summary>Sets the specified item in the collection as the <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" />.</summary>
      <param name="item">The item to set as the <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" />.</param>
      <returns>
        <see langword="true" /> to indicate that the resulting <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> is an item within the view; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.MoveCurrentToFirst">
      <summary>Sets the first item in the view as the <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" />.</summary>
      <returns>
        <see langword="true" /> to indicate that the resulting <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> is an item within the view; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.MoveCurrentToLast">
      <summary>Sets the last item in the view as the <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" />.</summary>
      <returns>
        <see langword="true" /> to indicate that the resulting <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> is an item within the view; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.MoveCurrentToNext">
      <summary>Sets the item after the <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> in the view as the <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" />.</summary>
      <returns>
        <see langword="true" /> to indicate that the resulting <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> is an item within the view; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.MoveCurrentToPosition(System.Int32)">
      <summary>Sets the item at the specified index to be the <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> in the view.</summary>
      <param name="position">The zero-based index of the item to set as the <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" />.</param>
      <returns>
        <see langword="true" /> to indicate that the resulting <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> is an item within the view; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.MoveCurrentToPrevious">
      <summary>Sets the item before the <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> in the view as the <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" />.</summary>
      <returns>
        <see langword="true" /> to indicate that the resulting <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> is an item within the view; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.NeedsRefresh">
      <summary>Gets a value that indicates whether the collection needs to be refreshed.</summary>
      <returns>
        <see langword="true" /> if the collection needs to be refreshed; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.PassesFilter(System.Object)">
      <summary>Returns a value that indicates whether the specified item belongs to this view.</summary>
      <param name="item">The object to test.</param>
      <returns>
        <see langword="true" /> to indicate that the specified item belongs to this view or there is no filter set on this collection view; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.Remove(System.Object)">
      <summary>Removes the specified item reference from the collection or view.</summary>
      <param name="removeItem">The object to remove.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Controls.ItemCollection" /> is read-only because it is in <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> mode or if DeferRefresh is in effect.</exception>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.RemoveAt(System.Int32)">
      <summary>Removes the item at the specified index of the collection or view.</summary>
      <param name="removeIndex">The zero-based index of the item to remove.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Controls.ItemCollection" /> is read-only because it is in <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> mode or if DeferRefresh is in effect.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The index is out of range.</exception>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.SortDescriptions">
      <summary>Gets a collection of <see cref="T:System.ComponentModel.SortDescription" /> objects that describe how the items in the collection are sorted in the view.</summary>
      <returns>A collection of <see cref="T:System.ComponentModel.SortDescription" /> objects that describe how the items in the collection are sorted in the view.</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.SourceCollection">
      <summary>Gets the unsorted and unfiltered collection that underlies this collection view.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> object that is the underlying collection or the user-provided <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> collection.</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#Collections#ICollection#IsSynchronized">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>
        <see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#Collections#ICollection#SyncRoot">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#Collections#IList#IsFixedSize">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Collections.IList" /> has a fixed size; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#Collections#IList#IsReadOnly">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Collections.IList" /> is read only; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#AddNew">
      <summary>Adds a new item to the collection.</summary>
      <returns>The new item that is added to the collection.</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#CanAddNew">
      <summary>Gets a value that indicates whether a new item can be added to the collection.</summary>
      <returns>
        <see langword="true" /> if a new item can be added to the collection; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#CanCancelEdit">
      <summary>Gets a value that indicates whether the collection view can discard pending changes and restore the original values of an edited object.</summary>
      <returns>
        <see langword="true" /> if the collection view can discard pending changes and restore the original values of an edited object; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#CancelEdit">
      <summary>Ends the edit transaction and, if possible, restores the original value to the item.</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#CancelNew">
      <summary>Ends the add transaction and discards the pending new item.</summary>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#CanRemove">
      <summary>Gets a value that indicates whether an item can be removed from the collection.</summary>
      <returns>
        <see langword="true" /> if an item can be removed from the collection; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#CommitEdit">
      <summary>Ends the edit transaction and saves the pending changes.</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#CommitNew">
      <summary>Ends the add transaction and saves the pending new item.</summary>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#CurrentAddItem">
      <summary>Gets the item that is being added during the current add transaction.</summary>
      <returns>The item that is being added if <see cref="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" /> is <see langword="true" />; otherwise, <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#CurrentEditItem">
      <summary>Gets the item in the collection that is being edited.</summary>
      <returns>The item in the collection that is being edited if <see cref="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" /> is <see langword="true" />; otherwise, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#EditItem(System.Object)">
      <summary>Begins an edit transaction of the specified item.</summary>
      <param name="item">The item to edit.</param>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#IsAddingNew">
      <summary>Gets a value that indicates whether an add transaction is in progress.</summary>
      <returns>
        <see langword="true" /> if an add transaction is in progress; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#IsEditingItem">
      <summary>Gets a value that indicates whether an edit transaction is in progress.</summary>
      <returns>
        <see langword="true" /> if an edit transaction is in progress; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#NewItemPlaceholderPosition">
      <summary>Gets or sets the position of the new item placeholder in the collection view.</summary>
      <returns>One of the enumeration values that specifies the position of the new item placeholder in the collection view.</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#Remove(System.Object)">
      <summary>Removes the specified item from the collection.</summary>
      <param name="item">The item to remove.</param>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#RemoveAt(System.Int32)">
      <summary>Removes the item at the specified position from the collection.</summary>
      <param name="index">The position of the item to remove.</param>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionViewAddNewItem#AddNewItem(System.Object)">
      <summary>Adds the specified object to the collection.</summary>
      <param name="newItem">The object to add to the collection.</param>
      <returns>The object that was added to the collection.</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionViewAddNewItem#CanAddNewItem">
      <summary>Gets a value that indicates whether a specified object can be added to the collection.</summary>
      <returns>
        <see langword="true" /> if a specified object can be added to the collection; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#ComponentModel#IItemProperties#ItemProperties">
      <summary>Gets a collection that contains information about the properties that are available on the items in a collection.</summary>
      <returns>A collection that contains information about the properties that are available on the items in a collection.</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>Receives events from the centralized event manager.</summary>
      <param name="managerType">The type of the <see cref="T:System.Windows.WeakEventManager" /> calling this method.</param>
      <param name="sender">Object that originated the event.</param>
      <param name="e">Event data.</param>
      <returns>
        <see langword="true" /> if the listener handled the event; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.ItemContainerGenerator">
      <summary>Generates the user interface (UI) on behalf of its host, such as an <see cref="T:System.Windows.Controls.ItemsControl" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.ContainerFromIndex(System.Int32)">
      <summary>Returns the element corresponding to the item at the given index within the <see cref="T:System.Windows.Controls.ItemCollection" />.</summary>
      <param name="index">The index of the desired item.</param>
      <returns>Returns the element corresponding to the item at the given index within the <see cref="T:System.Windows.Controls.ItemCollection" /> or returns <see langword="null" /> if the item is not realized.</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.ContainerFromItem(System.Object)">
      <summary>Returns the <see cref="T:System.Windows.UIElement" /> corresponding to the given item.</summary>
      <param name="item">The <see cref="T:System.Object" /> item to find the <see cref="T:System.Windows.UIElement" /> for.</param>
      <returns>A <see cref="T:System.Windows.UIElement" /> that corresponds to the given item. Returns <see langword="null" /> if the item does not belong to the item collection, or if a <see cref="T:System.Windows.UIElement" /> has not been generated for it.</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.GenerateBatches">
      <summary>Returns an object that manages the <see cref="P:System.Windows.Controls.ItemContainerGenerator.Status" /> property.</summary>
      <returns>An object that manages the <see cref="P:System.Windows.Controls.ItemContainerGenerator.Status" /> property.</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.IndexFromContainer(System.Windows.DependencyObject)">
      <summary>Returns the index to an item that corresponds to the specified, generated <see cref="T:System.Windows.UIElement" />.</summary>
      <param name="container">The <see cref="T:System.Windows.DependencyObject" /> that corresponds to the item to the index to be returned.</param>
      <returns>An <see cref="T:System.Int32" /> index to an item that corresponds to the specified, generated <see cref="T:System.Windows.UIElement" /> or -1 if <paramref name="container" /> is not found.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="container" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.IndexFromContainer(System.Windows.DependencyObject,System.Boolean)">
      <summary>Returns the index to an item that corresponds to the specified, generated <see cref="T:System.Windows.UIElement" />, optionally recursively searching hierarchical items.</summary>
      <param name="container">The <see cref="T:System.Windows.DependencyObject" /> that corresponds to the item to the index to be returned.</param>
      <param name="returnLocalIndex">
        <see langword="true" /> to search the current level of hierarchical items; <see langword="false" /> to recursively search hierarchical items.</param>
      <returns>An <see cref="T:System.Int32" /> index to an item that corresponds to the specified, generated <see cref="T:System.Windows.UIElement" /> or -1 if <paramref name="container" /> is not found.</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.ItemFromContainer(System.Windows.DependencyObject)">
      <summary>Returns the item that corresponds to the specified, generated <see cref="T:System.Windows.UIElement" />.</summary>
      <param name="container">The <see cref="T:System.Windows.DependencyObject" /> that corresponds to the item to be returned.</param>
      <returns>A <see cref="T:System.Windows.DependencyObject" /> that is the item which corresponds to the specified, generated <see cref="T:System.Windows.UIElement" />. If the <see cref="T:System.Windows.UIElement" /> has not been generated, <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> is returned.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="container" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Controls.ItemContainerGenerator.Items">
      <summary>Gets the collection of items that belong to this <see cref="T:System.Windows.Controls.ItemContainerGenerator" />.</summary>
      <returns>The collection of items that belong to this <see cref="T:System.Windows.Controls.ItemContainerGenerator" />.</returns>
    </member>
    <member name="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged">
      <summary>The <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> event is raised by a <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> to inform layouts that the items collection has changed.</summary>
    </member>
    <member name="P:System.Windows.Controls.ItemContainerGenerator.Status">
      <summary>The generation status of the <see cref="T:System.Windows.Controls.ItemContainerGenerator" />.</summary>
      <returns>A <see cref="T:System.Windows.Controls.Primitives.GeneratorStatus" /> value that represents the generation status of the <see cref="T:System.Windows.Controls.ItemContainerGenerator" />.</returns>
    </member>
    <member name="E:System.Windows.Controls.ItemContainerGenerator.StatusChanged">
      <summary>The <see cref="E:System.Windows.Controls.ItemContainerGenerator.StatusChanged" /> event is raised by a <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> to inform controls that its status has changed.</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#GenerateNext">
      <summary>Returns the container element used to display the next item.</summary>
      <returns>A DependencyObject that is the container element which is used to display the next item.</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#GenerateNext(System.Boolean@)">
      <summary>Returns the container element used to display the next item, and whether the container element has been newly generated (realized).</summary>
      <param name="isNewlyRealized">Is true if the returned DependencyObject is newly generated (realized); otherwise, false.</param>
      <returns>A DependencyObject that is the container element which is used to display the next item.</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#GeneratorPositionFromIndex(System.Int32)">
      <summary>Returns the GeneratorPosition object that maps to the item at the specified index.</summary>
      <param name="itemIndex">The index of desired item.</param>
      <returns>A GeneratorPosition object that maps to the item at the specified index.</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#GetItemContainerGeneratorForPanel(System.Windows.Controls.Panel)">
      <summary>Returns the ItemContainerGenerator appropriate for use by the specified panel.</summary>
      <param name="panel">The panel for which to return an appropriate ItemContainerGenerator.</param>
      <returns>An ItemContainerGenerator appropriate for use by the specified panel.</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#IndexFromGeneratorPosition(System.Windows.Controls.Primitives.GeneratorPosition)">
      <summary>Returns the index that maps to the specified GeneratorPosition.</summary>
      <param name="position">The index of desired item.</param>
      <returns>An Int32 that is the index which maps to the specified GeneratorPosition.</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#PrepareItemContainer(System.Windows.DependencyObject)">
      <summary>Prepares the specified element as the container for the corresponding item.</summary>
      <param name="container">The container to prepare. Normally, container is the result of the previous call to GenerateNext.</param>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#Remove(System.Windows.Controls.Primitives.GeneratorPosition,System.Int32)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="position">Removes one or more generated (realized) items.</param>
      <param name="count">The Int32 number of elements to remove, starting at <paramref name="position" />.</param>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#RemoveAll">
      <summary>Removes all generated (realized) items.</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#StartAt(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorDirection)">
      <summary>Prepares the generator to generate items, starting at the specified GeneratorPosition, and in the specified GeneratorDirection.</summary>
      <param name="position">A GeneratorPosition that specifies the position of the item to start generating items at.</param>
      <param name="direction">A GeneratorDirection that specifies the direction which to generate items.</param>
      <returns>An IDisposable object that tracks the lifetime of the generation process.</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#StartAt(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorDirection,System.Boolean)">
      <summary>Prepares the generator to generate items, starting at the specified GeneratorPosition, and in the specified GeneratorDirection, and controlling whether or not to start at a generated (realized) item.</summary>
      <param name="position">A GeneratorPosition that specifies the position of the item to start generating items at.</param>
      <param name="direction">A GeneratorDirection that specifies the direction which to generate items.</param>
      <param name="allowStartAtRealizedItem">A Boolean that specifies whether to start at a generated (realized) item.</param>
      <returns>An IDisposable object that tracks the lifetime of the generation process.</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IRecyclingItemContainerGenerator#Recycle(System.Windows.Controls.Primitives.GeneratorPosition,System.Int32)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="position">The index of the first element to reuse. <paramref name="position" /> must refer to a previously generated (realized) item.</param>
      <param name="count">The number of elements to reuse, starting at <paramref name="position" />.</param>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="managerType">The type of the <see cref="T:System.Windows.WeakEventManager" /> calling this method.</param>
      <param name="sender">Object that originated the event.</param>
      <param name="e">Event data.</param>
      <returns>
        <see langword="true" /> if the listener handled the event.</returns>
    </member>
    <member name="T:System.Windows.Controls.ItemContainerTemplate">
      <summary>Provides the template for producing a container for an <see cref="T:System.Windows.Controls.ItemsControl" /> object.</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerTemplate.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ItemContainerTemplate" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.ItemContainerTemplate.ItemContainerTemplateKey">
      <summary>Gets the default key of the <see cref="T:System.Windows.Controls.ItemContainerTemplate" />.</summary>
      <returns>The default key of the <see cref="T:System.Windows.Controls.ItemContainerTemplate" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.ItemContainerTemplateKey">
      <summary>Provides a resource key for an <see cref="T:System.Windows.Controls.ItemContainerTemplate" /> object.</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerTemplateKey.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ItemContainerTemplateKey" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerTemplateKey.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ItemContainerTemplateKey" /> class with the specified data type.</summary>
      <param name="dataType">The type for which this template is designed.</param>
    </member>
    <member name="T:System.Windows.Controls.ItemContainerTemplateSelector">
      <summary>Enables you to select an <see cref="T:System.Windows.Controls.ItemContainerTemplate" /> for each item within an <see cref="T:System.Windows.Controls.ItemsControl" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerTemplateSelector.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ItemContainerTemplateSelector" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerTemplateSelector.SelectTemplate(System.Object,System.Windows.Controls.ItemsControl)">
      <summary>When overridden in a derived class, returns an <see cref="T:System.Windows.Controls.ItemContainerTemplate" /> based on custom logic.</summary>
      <param name="item">The object for which to select the template.</param>
      <param name="parentItemsControl">The container for the items.</param>
      <returns>The template. The default implementation returns <see langword="null" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.ItemsControl">
      <summary>Represents a control that can be used to present a collection of items.</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ItemsControl" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.AddChild(System.Object)">
      <summary>Adds the specified object as the child of the <see cref="T:System.Windows.Controls.ItemsControl" /> object.</summary>
      <param name="value">The object to add as a child.</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.AddText(System.String)">
      <summary>Adds the specified text string to the <see cref="T:System.Windows.Controls.ItemsControl" /> object.</summary>
      <param name="text">The string to add.</param>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.AlternationCount">
      <summary>Gets or sets the number of alternating item containers in the <see cref="T:System.Windows.Controls.ItemsControl" />, which enables alternating containers to have a unique appearance.</summary>
      <returns>The number of alternating item containers in the <see cref="T:System.Windows.Controls.ItemsControl" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.AlternationCountProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ItemsControl.AlternationCount" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.AlternationIndex">
      <summary>Gets the assigned value of the item container when alternating item containers are used.</summary>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.AlternationIndexProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ItemsControl.AlternationIndex" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.BeginInit">
      <summary>Indicates that the initialization of the <see cref="T:System.Windows.Controls.ItemsControl" /> object is about to start.</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>When overridden in a derived class, undoes the effects of the <see cref="M:System.Windows.Controls.ItemsControl.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" /> method.</summary>
      <param name="element">The container element.</param>
      <param name="item">The item.</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.ContainerFromElement(System.Windows.Controls.ItemsControl,System.Windows.DependencyObject)">
      <summary>Returns the container that belongs to the specified <see cref="T:System.Windows.Controls.ItemsControl" /> that owns the given container element.</summary>
      <param name="itemsControl">The <see cref="T:System.Windows.Controls.ItemsControl" /> to return the container for.</param>
      <param name="element">The element to return the container for.</param>
      <returns>The container that belongs to the specified <see cref="T:System.Windows.Controls.ItemsControl" /> that owns the given element, if <paramref name="itemsControl" /> is not <see langword="null" />. If <paramref name="itemsControl" /> is <see langword="null" />, returns the closest container that belongs to any <see cref="T:System.Windows.Controls.ItemsControl" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.ContainerFromElement(System.Windows.DependencyObject)">
      <summary>Returns the container that belongs to the current <see cref="T:System.Windows.Controls.ItemsControl" /> that owns the given element.</summary>
      <param name="element">The element to return the container for.</param>
      <returns>The container that belongs to the current <see cref="T:System.Windows.Controls.ItemsControl" /> that owns the given element or <see langword="null" /> if no such container exists.</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.DisplayMemberPath">
      <summary>Gets or sets a path to a value on the source object to serve as the visual representation of the object.</summary>
      <returns>The path to a value on the source object. This can be any path, or an XPath such as "<see cref="Name" />". The default is an empty string ("").</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.DisplayMemberPathProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ItemsControl.DisplayMemberPath" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.EndInit">
      <summary>Indicates that the initialization of the <see cref="T:System.Windows.Controls.ItemsControl" /> object is complete.</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.GetAlternationIndex(System.Windows.DependencyObject)">
      <summary>Gets the <see cref="P:System.Windows.Controls.ItemsControl.AlternationIndex" /> for the specified object.</summary>
      <param name="element">The object from which to get the <see cref="P:System.Windows.Controls.ItemsControl.AlternationIndex" />.</param>
      <returns>The value of the <see cref="P:System.Windows.Controls.ItemsControl.AlternationIndex" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.GetContainerForItemOverride">
      <summary>Creates or identifies the element that is used to display the given item.</summary>
      <returns>The element that is used to display the given item.</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.GetItemsOwner(System.Windows.DependencyObject)">
      <summary>Returns the <see cref="T:System.Windows.Controls.ItemsControl" /> that the specified element hosts items for.</summary>
      <param name="element">The host element.</param>
      <returns>The <see cref="T:System.Windows.Controls.ItemsControl" /> that the specified element hosts items for, or <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.GroupStyle">
      <summary>Gets a collection of <see cref="T:System.Windows.Controls.GroupStyle" /> objects that define the appearance of each level of groups.</summary>
      <returns>A collection of <see cref="T:System.Windows.Controls.GroupStyle" /> objects that define the appearance of each level of groups.</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.GroupStyleSelector">
      <summary>Gets or sets a method that enables you to provide custom selection logic for a <see cref="T:System.Windows.Controls.GroupStyle" /> to apply to each group in a collection.</summary>
      <returns>A method that enables you to provide custom selection logic for a <see cref="T:System.Windows.Controls.GroupStyle" /> to apply to each group in a collection.</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.GroupStyleSelectorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ItemsControl.GroupStyleSelector" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.HasItems">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.ItemsControl" /> contains items.</summary>
      <returns>
        <see langword="true" /> if the items count is greater than 0; otherwise, <see langword="false" />.The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.HasItemsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ItemsControl.HasItems" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.IsGrouping">
      <summary>Gets a value that indicates whether the control is using grouping.</summary>
      <returns>
        <see langword="true" /> if a control is using grouping; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.IsGroupingProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ItemsControl.IsGrouping" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.IsItemItsOwnContainer(System.Object)">
      <summary>Determines if the specified item is (or is eligible to be) its own container.</summary>
      <param name="item">The item to check.</param>
      <returns>
        <see langword="true" /> if the item is (or is eligible to be) its own container; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.IsItemItsOwnContainerOverride(System.Object)">
      <summary>Determines if the specified item is (or is eligible to be) its own container.</summary>
      <param name="item">The item to check.</param>
      <returns>
        <see langword="true" /> if the item is (or is eligible to be) its own container; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.IsTextSearchCaseSensitive">
      <summary>Gets or sets a value that indicates whether case is a condition when searching for items.</summary>
      <returns>
        <see langword="true" /> if text searches are case-sensitive; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.IsTextSearchCaseSensitiveProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ItemsControl.IsTextSearchCaseSensitive" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.IsTextSearchEnabled">
      <summary>Gets or sets a value that indicates whether <see cref="T:System.Windows.Controls.TextSearch" /> is enabled on the <see cref="T:System.Windows.Controls.ItemsControl" /> instance.</summary>
      <returns>
        <see langword="true" /> if <see cref="T:System.Windows.Controls.TextSearch" /> is enabled; otherwise, <see langword="true" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.IsTextSearchEnabledProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ItemsControl.IsTextSearchEnabled" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.ItemBindingGroup">
      <summary>Gets or sets the <see cref="T:System.Windows.Data.BindingGroup" /> that is copied to each item in the <see cref="T:System.Windows.Controls.ItemsControl" />.</summary>
      <returns>The <see cref="T:System.Windows.Data.BindingGroup" /> that is copied to each item in the <see cref="T:System.Windows.Controls.ItemsControl" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.ItemBindingGroupProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ItemsControl.ItemBindingGroup" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.ItemContainerGenerator">
      <summary>Gets the <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> that is associated with the control.</summary>
      <returns>The <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> that is associated with the control. The default is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.ItemContainerStyle">
      <summary>Gets or sets the <see cref="T:System.Windows.Style" /> that is applied to the container element generated for each item.</summary>
      <returns>The <see cref="T:System.Windows.Style" /> that is applied to the container element generated for each item. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.ItemContainerStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector">
      <summary>Gets or sets custom style-selection logic for a style that can be applied to each generated container element.</summary>
      <returns>A <see cref="T:System.Windows.Controls.StyleSelector" /> object that contains logic that chooses the style to use as the <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" />. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.ItemContainerStyleSelectorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.Items">
      <summary>Gets the collection used to generate the content of the <see cref="T:System.Windows.Controls.ItemsControl" />.</summary>
      <returns>The collection that is used to generate the content of the <see cref="T:System.Windows.Controls.ItemsControl" />. The default is an empty collection.</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.ItemsControlFromItemContainer(System.Windows.DependencyObject)">
      <summary>Returns the <see cref="T:System.Windows.Controls.ItemsControl" /> that owns the specified container element.</summary>
      <param name="container">The container element to return the <see cref="T:System.Windows.Controls.ItemsControl" /> for.</param>
      <returns>The <see cref="T:System.Windows.Controls.ItemsControl" /> that owns the specified container element.</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.ItemsPanel">
      <summary>Gets or sets the template that defines the panel that controls the layout of items.</summary>
      <returns>An <see cref="T:System.Windows.Controls.ItemsPanelTemplate" /> that defines the panel to use for the layout of the items. The default value for the <see cref="T:System.Windows.Controls.ItemsControl" /> is an <see cref="T:System.Windows.Controls.ItemsPanelTemplate" /> that specifies a <see cref="T:System.Windows.Controls.StackPanel" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.ItemsPanelProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ItemsControl.ItemsPanel" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.ItemsSource">
      <summary>Gets or sets a collection used to generate the content of the <see cref="T:System.Windows.Controls.ItemsControl" />.</summary>
      <returns>A collection that is used to generate the content of the <see cref="T:System.Windows.Controls.ItemsControl" />. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.ItemsSourceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.ItemStringFormat">
      <summary>Gets or sets a composite string that specifies how to format the items in the <see cref="T:System.Windows.Controls.ItemsControl" /> if they are displayed as strings.</summary>
      <returns>A composite string that specifies how to format the items in the <see cref="T:System.Windows.Controls.ItemsControl" /> if they are displayed as strings.</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.ItemStringFormatProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ItemsControl.ItemStringFormat" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.ItemTemplate">
      <summary>Gets or sets the <see cref="T:System.Windows.DataTemplate" /> used to display each item.</summary>
      <returns>A <see cref="T:System.Windows.DataTemplate" /> that specifies the visualization of the data objects. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.ItemTemplateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector">
      <summary>Gets or sets the custom logic for choosing a template used to display each item.</summary>
      <returns>A custom <see cref="T:System.Windows.Controls.DataTemplateSelector" /> object that provides logic and returns a <see cref="T:System.Windows.DataTemplate" />. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.ItemTemplateSelectorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.LogicalChildren">
      <summary>Gets an enumerator for the logical child objects of the <see cref="T:System.Windows.Controls.ItemsControl" /> object.</summary>
      <returns>An enumerator for the logical child objects of the <see cref="T:System.Windows.Controls.ItemsControl" /> object. The default is <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnAlternationCountChanged(System.Int32,System.Int32)">
      <summary>Invoked when the <see cref="P:System.Windows.Controls.ItemsControl.AlternationCount" /> property changes.</summary>
      <param name="oldAlternationCount">The old value of <see cref="P:System.Windows.Controls.ItemsControl.AlternationCount" />.</param>
      <param name="newAlternationCount">The new value of <see cref="P:System.Windows.Controls.ItemsControl.AlternationCount" />.</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnDisplayMemberPathChanged(System.String,System.String)">
      <summary>Invoked when the <see cref="P:System.Windows.Controls.ItemsControl.DisplayMemberPath" /> property changes.</summary>
      <param name="oldDisplayMemberPath">The old value of the <see cref="P:System.Windows.Controls.ItemsControl.DisplayMemberPath" /> property.</param>
      <param name="newDisplayMemberPath">New value of the <see cref="P:System.Windows.Controls.ItemsControl.DisplayMemberPath" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnGroupStyleSelectorChanged(System.Windows.Controls.GroupStyleSelector,System.Windows.Controls.GroupStyleSelector)">
      <summary>Invoked when the <see cref="P:System.Windows.Controls.ItemsControl.GroupStyleSelector" /> property changes.</summary>
      <param name="oldGroupStyleSelector">Old value of the <see cref="P:System.Windows.Controls.ItemsControl.GroupStyleSelector" /> property.</param>
      <param name="newGroupStyleSelector">New value of the <see cref="P:System.Windows.Controls.ItemsControl.GroupStyleSelector" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnItemBindingGroupChanged(System.Windows.Data.BindingGroup,System.Windows.Data.BindingGroup)">
      <summary>Invoked when the <see cref="P:System.Windows.Controls.ItemsControl.ItemBindingGroup" /> property changes.</summary>
      <param name="oldItemBindingGroup">The old value of the <see cref="P:System.Windows.Controls.ItemsControl.ItemBindingGroup" />.</param>
      <param name="newItemBindingGroup">The new value of the <see cref="P:System.Windows.Controls.ItemsControl.ItemBindingGroup" />.</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnItemContainerStyleChanged(System.Windows.Style,System.Windows.Style)">
      <summary>Invoked when the <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" /> property changes.</summary>
      <param name="oldItemContainerStyle">Old value of the <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" /> property.</param>
      <param name="newItemContainerStyle">New value of the <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnItemContainerStyleSelectorChanged(System.Windows.Controls.StyleSelector,System.Windows.Controls.StyleSelector)">
      <summary>Invoked when the <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" /> property changes.</summary>
      <param name="oldItemContainerStyleSelector">Old value of the <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" /> property.</param>
      <param name="newItemContainerStyleSelector">New value of the <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>Invoked when the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> property changes.</summary>
      <param name="e">Information about the change.</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnItemsPanelChanged(System.Windows.Controls.ItemsPanelTemplate,System.Windows.Controls.ItemsPanelTemplate)">
      <summary>Invoked when the <see cref="P:System.Windows.Controls.ItemsControl.ItemsPanel" /> property changes.</summary>
      <param name="oldItemsPanel">Old value of the <see cref="P:System.Windows.Controls.ItemsControl.ItemsPanel" /> property.</param>
      <param name="newItemsPanel">New value of the <see cref="P:System.Windows.Controls.ItemsControl.ItemsPanel" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnItemsSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>Called when the <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> property changes.</summary>
      <param name="oldValue">Old value of the <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> property.</param>
      <param name="newValue">New value of the <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnItemStringFormatChanged(System.String,System.String)">
      <summary>Invoked when the <see cref="P:System.Windows.Controls.ItemsControl.ItemStringFormat" /> property changes.</summary>
      <param name="oldItemStringFormat">The old value of the <see cref="P:System.Windows.Controls.ItemsControl.ItemStringFormat" /> property.</param>
      <param name="newItemStringFormat">The new value of the <see cref="P:System.Windows.Controls.ItemsControl.ItemStringFormat" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnItemTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>Invoked when the <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> property changes.</summary>
      <param name="oldItemTemplate">The old <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> property value.</param>
      <param name="newItemTemplate">The new <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> property value.</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnItemTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)">
      <summary>Invoked when the <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> property changes.</summary>
      <param name="oldItemTemplateSelector">Old value of the <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> property.</param>
      <param name="newItemTemplateSelector">New value of the <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Invoked when the <see cref="E:System.Windows.UIElement.KeyDown" /> event is received.</summary>
      <param name="e">Information about the event.</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
      <summary>Invoked when the <see cref="E:System.Windows.UIElement.TextInput" /> event is received.</summary>
      <param name="e">Information about the event.</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>Prepares the specified element to display the specified item.</summary>
      <param name="element">Element used to display the specified item.</param>
      <param name="item">Specified item.</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.ShouldApplyItemContainerStyle(System.Windows.DependencyObject,System.Object)">
      <summary>Returns a value that indicates whether to apply the style from the <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" /> or <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" /> property to the container element of the specified item.</summary>
      <param name="container">The container element.</param>
      <param name="item">The item of interest.</param>
      <returns>Always <see langword="true" /> for the base implementation.</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.ShouldSerializeGroupStyle">
      <summary>Returns a value that indicates whether serialization processes should serialize the effective value of the <see cref="P:System.Windows.Controls.ItemsControl.GroupStyle" /> property.</summary>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.Controls.ItemsControl.GroupStyle" /> property value should be serialized; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.ShouldSerializeItems">
      <summary>Returns a value that indicates whether serialization processes should serialize the effective value of the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> property.</summary>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> property value should be serialized; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.System#Windows#Controls#Primitives#IContainItemStorage#Clear">
      <summary>Clears all property associations.</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.System#Windows#Controls#Primitives#IContainItemStorage#ClearItemValue(System.Object,System.Windows.DependencyProperty)">
      <summary>Removes the association between the specified item and property.</summary>
      <param name="item">The associated item.</param>
      <param name="dp">The associated property.</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.System#Windows#Controls#Primitives#IContainItemStorage#ClearValue(System.Windows.DependencyProperty)">
      <summary>Removes the specified property from all property lists.</summary>
      <param name="dp">The property to remove.</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.System#Windows#Controls#Primitives#IContainItemStorage#ReadItemValue(System.Object,System.Windows.DependencyProperty)">
      <summary>Returns the value of the specified property that is associated with the specified item.</summary>
      <param name="item">The item that has the specified property associated with it.</param>
      <param name="dp">The property whose value to return.</param>
      <returns>The value of the specified property that is associated with the specified item.</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.System#Windows#Controls#Primitives#IContainItemStorage#StoreItemValue(System.Object,System.Windows.DependencyProperty,System.Object)">
      <summary>Stores the specified property and value and associates them with the specified item.</summary>
      <param name="item">The item to associate the value and property with.</param>
      <param name="dp">The property that is associated with the specified item.</param>
      <param name="value">The value of the associated property.</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="value">The object to add as a child.</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="text">The text to add.</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.ToString">
      <summary>Provides a string representation of the <see cref="T:System.Windows.Controls.ItemsControl" /> object.</summary>
      <returns>The string representation of the object.</returns>
    </member>
    <member name="T:System.Windows.Controls.ItemsPanelTemplate">
      <summary>Specifies the panel that the <see cref="T:System.Windows.Controls.ItemsPresenter" /> creates for the layout of the items of an <see cref="T:System.Windows.Controls.ItemsControl" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsPanelTemplate.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Windows.Controls.ItemsPanelTemplate" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsPanelTemplate.#ctor(System.Windows.FrameworkElementFactory)">
      <summary>Initializes an instance of the <see cref="T:System.Windows.Controls.ItemsPanelTemplate" /> class with the specified template.</summary>
      <param name="root">The <see cref="T:System.Windows.FrameworkElementFactory" /> object that represents the template.</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsPanelTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)">
      <summary>Checks that the templated parent is a non-null <see cref="T:System.Windows.Controls.ItemsPresenter" /> object.</summary>
      <param name="templatedParent">The element this template is applied to. This must be an <see cref="T:System.Windows.Controls.ItemsPresenter" /> object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="templatedParent" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="templatedParent" /> is not an <see cref="T:System.Windows.Controls.ItemsPresenter" />.</exception>
    </member>
    <member name="T:System.Windows.Controls.ItemsPresenter">
      <summary>Used within the template of an item control to specify the place in the control's visual tree where the <see cref="P:System.Windows.Controls.ItemsControl.ItemsPanel" /> defined by the <see cref="T:System.Windows.Controls.ItemsControl" /> is to be added.</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsPresenter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ItemsPresenter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsPresenter.ArrangeOverride(System.Windows.Size)">
      <summary>Called to arrange and size the content of an <see cref="T:System.Windows.Controls.ItemsPresenter" /> object.</summary>
      <param name="arrangeSize">Computed size used to arrange the content.</param>
      <returns>Size of content.</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsPresenter.MeasureOverride(System.Windows.Size)">
      <summary>Overrides the base class implementation of <see cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" /> to measure the size of the <see cref="T:System.Windows.Controls.ItemsPresenter" /> object and return proper sizes to the layout engine.</summary>
      <param name="constraint">Constraint size is an "upper limit." The return value should not exceed this size.</param>
      <returns>The desired size.</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsPresenter.OnApplyTemplate">
      <summary>Called when an internal process or application calls <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />, which is used to build the current template's visual tree.</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsPresenter.OnTemplateChanged(System.Windows.Controls.ItemsPanelTemplate,System.Windows.Controls.ItemsPanelTemplate)">
      <summary>Called when the control template changes.</summary>
      <param name="oldTemplate">Value of the old template.</param>
      <param name="newTemplate">Value of the new template.</param>
    </member>
    <member name="T:System.Windows.Controls.Label">
      <summary>Represents the text label for a control and provides support for access keys.</summary>
    </member>
    <member name="M:System.Windows.Controls.Label.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Label" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.Label.OnCreateAutomationPeer">
      <summary>Provides an appropriate <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" /> implementation for this control, as part of the WPF infrastructure.</summary>
      <returns>The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</returns>
    </member>
    <member name="P:System.Windows.Controls.Label.Target">
      <summary>Gets or sets the element that receives focus when the user presses the label's access key.</summary>
      <returns>The <see cref="T:System.Windows.UIElement" /> that receives focus when the user presses the access key. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Label.TargetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Label.Target" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Controls.ListBox">
      <summary>Contains a list of selectable items.</summary>
    </member>
    <member name="M:System.Windows.Controls.ListBox.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ListBox" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.ListBox.AnchorItem">
      <summary>Gets or sets the item that is initially selected when <see cref="P:System.Windows.Controls.ListBox.SelectionMode" /> is <see cref="F:System.Windows.Controls.SelectionMode.Extended" />.</summary>
      <returns>The item that is initially selected when <see cref="P:System.Windows.Controls.ListBox.SelectionMode" /> is <see cref="F:System.Windows.Controls.SelectionMode.Extended" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.ListBox.GetContainerForItemOverride">
      <summary>Creates or identifies the element used to display a specified item.</summary>
      <returns>The element used to display a specified item.</returns>
    </member>
    <member name="P:System.Windows.Controls.ListBox.HandlesScrolling">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.ListBox" /> supports scrolling.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.ListBox" /> supports scrolling; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.ListBox.IsItemItsOwnContainerOverride(System.Object)">
      <summary>Determines if the specified item is (or is eligible to be) its own <c>ItemContainer</c>.</summary>
      <param name="item">Specified item.</param>
      <returns>
        <see langword="true" /> if the item is its own <see langword="ItemContainer" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.ListBox.OnCreateAutomationPeer">
      <summary>Provides an appropriate <see cref="T:System.Windows.Automation.Peers.ListBoxAutomationPeer" /> implementation for this control, as part of the WPF automation infrastructure.</summary>
      <returns>The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</returns>
    </member>
    <member name="M:System.Windows.Controls.ListBox.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Called when the <see cref="P:System.Windows.UIElement.IsMouseCaptured" /> property changes.</summary>
      <param name="e">Provides data for the <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</param>
    </member>
    <member name="M:System.Windows.Controls.ListBox.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Responds to the <see cref="E:System.Windows.UIElement.KeyDown" /> event.</summary>
      <param name="e">Provides data for <see cref="T:System.Windows.Input.KeyEventArgs" />.</param>
    </member>
    <member name="M:System.Windows.Controls.ListBox.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>Called when a <see cref="T:System.Windows.Controls.ListBox" /> reports a mouse move.</summary>
      <param name="e">Provides data for <see cref="T:System.Windows.Input.MouseEventArgs" />.</param>
    </member>
    <member name="M:System.Windows.Controls.ListBox.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
      <summary>Responds to a list box selection change by raising a <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> event.</summary>
      <param name="e">Provides data for <see cref="T:System.Windows.Controls.SelectionChangedEventArgs" />.</param>
    </member>
    <member name="M:System.Windows.Controls.ListBox.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>Prepares the specified element to display the specified item.</summary>
      <param name="element">Element used to display the specified item.</param>
      <param name="item">Specified item.</param>
    </member>
    <member name="M:System.Windows.Controls.ListBox.ScrollIntoView(System.Object)">
      <summary>Causes the object to scroll into view.</summary>
      <param name="item">Object to scroll.</param>
    </member>
    <member name="M:System.Windows.Controls.ListBox.SelectAll">
      <summary>Selects all the items in a <see cref="T:System.Windows.Controls.ListBox" />.</summary>
      <exception cref="T:System.NotSupportedException">The <see cref="P:System.Windows.Controls.ListBox.SelectionMode" /> property is set to <see cref="F:System.Windows.Controls.SelectionMode.Single" />.</exception>
    </member>
    <member name="P:System.Windows.Controls.ListBox.SelectedItems">
      <summary>Gets the currently selected items.</summary>
      <returns>Returns a collection of the currently selected items.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Windows.Controls.ListBox.SelectionMode" /> property is set to <see cref="F:System.Windows.Controls.SelectionMode.Single" />.</exception>
    </member>
    <member name="F:System.Windows.Controls.ListBox.SelectedItemsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ListBox.SelectedItems" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ListBox.SelectionMode">
      <summary>Gets or sets the selection behavior for a <see cref="T:System.Windows.Controls.ListBox" />.</summary>
      <returns>One of the <see cref="T:System.Windows.Controls.SelectionMode" /> values. The default is <see cref="F:System.Windows.Controls.SelectionMode.Single" /> selection.</returns>
    </member>
    <member name="F:System.Windows.Controls.ListBox.SelectionModeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ListBox.SelectionMode" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.ListBox.SetSelectedItems(System.Collections.IEnumerable)">
      <summary>Sets a collection of selected items.</summary>
      <param name="selectedItems">Collection of items to be selected.</param>
      <returns>
        <see langword="true" /> if all items have been selected; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.ListBox.UnselectAll">
      <summary>Clears all the selection in a <see cref="T:System.Windows.Controls.ListBox" />.</summary>
    </member>
    <member name="T:System.Windows.Controls.ListBoxItem">
      <summary>Represents a selectable item in a <see cref="T:System.Windows.Controls.ListBox" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ListBoxItem" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.ListBoxItem.IsSelected">
      <summary>Gets or sets a value that indicates whether a <see cref="T:System.Windows.Controls.ListBoxItem" /> is selected.</summary>
      <returns>
        <see langword="true" /> if the item is selected; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ListBoxItem.IsSelectedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ListBoxItem.IsSelected" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnCreateAutomationPeer">
      <summary>Provides an appropriate <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer" /> implementation for this control, as part of the WPF automation infrastructure.</summary>
      <returns>The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</returns>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>Called when the mouse enters a <see cref="T:System.Windows.Controls.ListBoxItem" />.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>Called when the mouse leaves a <see cref="T:System.Windows.Controls.ListBoxItem" />.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Called when the user presses the right mouse button over the <see cref="T:System.Windows.Controls.ListBoxItem" />.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Called when the user presses the right mouse button over a <see cref="T:System.Windows.Controls.ListBoxItem" />.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnSelected(System.Windows.RoutedEventArgs)">
      <summary>Called when the <see cref="T:System.Windows.Controls.ListBoxItem" /> is selected in a <see cref="T:System.Windows.Controls.ListBox" />.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnUnselected(System.Windows.RoutedEventArgs)">
      <summary>Called when the <see cref="T:System.Windows.Controls.ListBoxItem" /> is unselected in a <see cref="T:System.Windows.Controls.ListBox" />.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnVisualParentChanged(System.Windows.DependencyObject)">
      <summary>Called when the visual parent of a list box item changes.</summary>
      <param name="oldParent">The previous <see cref="P:System.Windows.FrameworkElement.Parent" /> property of the <see cref="T:System.Windows.Controls.ListBoxItem" />.</param>
    </member>
    <member name="E:System.Windows.Controls.ListBoxItem.Selected">
      <summary>Occurs when a <see cref="T:System.Windows.Controls.ListBoxItem" /> is selected.</summary>
    </member>
    <member name="F:System.Windows.Controls.ListBoxItem.SelectedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.ListBoxItem.Selected" /> routed event.</summary>
    </member>
    <member name="E:System.Windows.Controls.ListBoxItem.Unselected">
      <summary>Occurs when a <see cref="T:System.Windows.Controls.ListBoxItem" /> is unselected.</summary>
    </member>
    <member name="F:System.Windows.Controls.ListBoxItem.UnselectedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.ListBoxItem.Unselected" /> routed event.</summary>
    </member>
    <member name="T:System.Windows.Controls.ListView">
      <summary>Represents a control that displays a list of data items.</summary>
    </member>
    <member name="M:System.Windows.Controls.ListView.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ListView" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.ListView.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>Removes all templates, styles, and bindings for the object that is displayed as a <see cref="T:System.Windows.Controls.ListViewItem" />.</summary>
      <param name="element">The <see cref="T:System.Windows.Controls.ListViewItem" /> container to clear.</param>
      <param name="item">The object that the <see cref="T:System.Windows.Controls.ListViewItem" /> contains.</param>
    </member>
    <member name="M:System.Windows.Controls.ListView.GetContainerForItemOverride">
      <summary>Creates and returns a new <see cref="T:System.Windows.Controls.ListViewItem" /> container.</summary>
      <returns>A new <see cref="T:System.Windows.Controls.ListViewItem" /> control.</returns>
    </member>
    <member name="M:System.Windows.Controls.ListView.IsItemItsOwnContainerOverride(System.Object)">
      <summary>Determines whether an object is a <see cref="T:System.Windows.Controls.ListViewItem" />.</summary>
      <param name="item">The object to evaluate.</param>
      <returns>
        <see langword="true" /> if the <paramref name="item" /> is a <see cref="T:System.Windows.Controls.ListViewItem" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.ListView.OnCreateAutomationPeer">
      <summary>Defines an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for the <see cref="T:System.Windows.Controls.ListView" /> control.</summary>
      <returns>Returns a <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" /> object for the <see cref="T:System.Windows.Controls.ListView" /> control.</returns>
    </member>
    <member name="M:System.Windows.Controls.ListView.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>Responds to an <see cref="M:System.Windows.Controls.ItemsControl.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />.</summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:System.Windows.Controls.ListView.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>Sets the styles, templates, and bindings for a <see cref="T:System.Windows.Controls.ListViewItem" />.</summary>
      <param name="element">An object that is a <see cref="T:System.Windows.Controls.ListViewItem" /> or that can be converted into one.</param>
      <param name="item">The object to use to create the <see cref="T:System.Windows.Controls.ListViewItem" />.</param>
    </member>
    <member name="P:System.Windows.Controls.ListView.View">
      <summary>Gets or sets an object that defines how the data is styled and organized in a <see cref="T:System.Windows.Controls.ListView" /> control.</summary>
      <returns>A <see cref="T:System.Windows.Controls.ViewBase" /> object that specifies how to display information in the <see cref="T:System.Windows.Controls.ListView" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ListView.ViewProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ListView.View" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Controls.ListViewItem">
      <summary>Represents an item in a <see cref="T:System.Windows.Controls.ListView" /> control.</summary>
    </member>
    <member name="M:System.Windows.Controls.ListViewItem.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ListViewItem" /> class.</summary>
    </member>
    <member name="T:System.Windows.Controls.MediaElement">
      <summary>Represents a control that contains audio and/or video.</summary>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.#ctor">
      <summary>Instantiates a new instance of the <see cref="T:System.Windows.Controls.MediaElement" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges and sizes a <see cref="T:System.Windows.Controls.MediaElement" /> control.</summary>
      <param name="finalSize">Size used to arrange the control.</param>
      <returns>Size of the control.</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.Balance">
      <summary>Gets or sets a ratio of volume across speakers.</summary>
      <returns>The ratio of volume across speakers in the range between -1 and 1. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.BalanceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MediaElement.Balance" /> dependency property.</summary>
    </member>
    <member name="E:System.Windows.Controls.MediaElement.BufferingEnded">
      <summary>Occurs when media buffering has ended.</summary>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.BufferingEndedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.MediaElement.BufferingEnded" /> routed event.</summary>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.BufferingProgress">
      <summary>Gets a value that indicates the percentage of buffering progress made.</summary>
      <returns>The percentage of buffering completed for streaming content. The value ranges from 0 to 1.</returns>
    </member>
    <member name="E:System.Windows.Controls.MediaElement.BufferingStarted">
      <summary>Occurs when media buffering has begun.</summary>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.BufferingStartedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.MediaElement.BufferingStarted" /> routed event.</summary>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.CanPause">
      <summary>Gets a value indicating whether the media can be paused.</summary>
      <returns>
        <see langword="true" /> if the media can be paused; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.Clock">
      <summary>Gets or sets the clock associated with the <see cref="T:System.Windows.Media.MediaTimeline" /> that controls media playback.</summary>
      <returns>A clock associated with the <see cref="T:System.Windows.Media.MediaTimeline" /> that controls media playback. The default value is <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.Close">
      <summary>Closes the media.</summary>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.DownloadProgress">
      <summary>Gets a percentage value indicating the amount of download completed for content located on a remote server.</summary>
      <returns>A percentage value indicating the amount of download completed for content located on a remote server. The value ranges from 0 to 1. The default value is 0.</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.HasAudio">
      <summary>Gets a value indicating whether the media has audio.</summary>
      <returns>
        <see langword="true" /> if the media has audio; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.HasVideo">
      <summary>Gets a value indicating whether the media has video.</summary>
      <returns>
        <see langword="true" /> if the media has video; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.IsBuffering">
      <summary>Get a value indicating whether the media is buffering.</summary>
      <returns>
        <see langword="true" /> if the media is buffering; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.IsMuted">
      <summary>Gets or sets a value indicating whether the audio is muted.</summary>
      <returns>
        <see langword="true" /> if audio is muted; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.IsMutedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MediaElement.IsMuted" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.LoadedBehavior">
      <summary>Gets or sets the load behavior <see cref="T:System.Windows.Controls.MediaState" /> for the media.</summary>
      <returns>The load behavior <see cref="T:System.Windows.Controls.MediaState" /> set for the media. The default value is <see cref="F:System.Windows.Controls.MediaState.Play" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.LoadedBehaviorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MediaElement.LoadedBehavior" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.MeasureOverride(System.Windows.Size)">
      <summary>Updates the <see cref="P:System.Windows.UIElement.DesiredSize" /> of the <see cref="T:System.Windows.Controls.MediaElement" />. This method is called by a parent <see cref="T:System.Windows.UIElement" />. This is the first pass of layout.</summary>
      <param name="availableSize">The upper limit the element should not exceed.</param>
      <returns>The desired size.</returns>
    </member>
    <member name="E:System.Windows.Controls.MediaElement.MediaEnded">
      <summary>Occurs when the media has ended.</summary>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.MediaEndedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.MediaElement.MediaEnded" /> routed event.</summary>
    </member>
    <member name="E:System.Windows.Controls.MediaElement.MediaFailed">
      <summary>Occurs when an error is encountered.</summary>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.MediaFailedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.MediaElement.MediaFailed" /> routed event.</summary>
    </member>
    <member name="E:System.Windows.Controls.MediaElement.MediaOpened">
      <summary>Occurs when media loading has finished.</summary>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.MediaOpenedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.MediaElement.MediaOpened" /> routed event.</summary>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.NaturalDuration">
      <summary>Gets the natural duration of the media.</summary>
      <returns>The natural duration of the media.</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.NaturalVideoHeight">
      <summary>Gets the height of the video associated with the media.</summary>
      <returns>The height of the video associated with the media. Audio files will return zero.</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.NaturalVideoWidth">
      <summary>Gets the width of the video associated with the media.</summary>
      <returns>The width of the video associated with the media.</returns>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.OnCreateAutomationPeer">
      <summary>Creates and returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> object for this <see cref="T:System.Windows.Controls.MediaElement" />.</summary>
      <returns>An <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for this <see cref="T:System.Windows.Controls.MediaElement" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.OnRender(System.Windows.Media.DrawingContext)">
      <summary>Draws the content of a <see cref="T:System.Windows.Media.DrawingContext" /> object during the render pass of a <see cref="T:System.Windows.Controls.MediaElement" /> control.</summary>
      <param name="drawingContext">The <see cref="T:System.Windows.Media.DrawingContext" /> to draw.</param>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.Pause">
      <summary>Pauses media at the current position.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Windows.Controls.MediaElement.Clock" /> property is not <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.Play">
      <summary>Plays media from the current position.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Windows.Controls.MediaElement.Clock" /> property is not <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.Position">
      <summary>Gets or sets the current position of progress through the media's playback time.</summary>
      <returns>The amount of time since the beginning of the media. The default is 00:00:00.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Windows.Controls.MediaElement.Clock" /> property is not <see langword="null" />.</exception>
    </member>
    <member name="E:System.Windows.Controls.MediaElement.ScriptCommand">
      <summary>Occurs when a script command is encountered in the media.</summary>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.ScriptCommandEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.MediaElement.ScriptCommand" /> routed event.</summary>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.ScrubbingEnabled">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.MediaElement" /> will update frames for seek operations while paused.</summary>
      <returns>
        <see langword="true" /> if frames are updated while paused; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.ScrubbingEnabledProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MediaElement.ScrubbingEnabled" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.Source">
      <summary>Gets or sets a media source on the <see cref="T:System.Windows.Controls.MediaElement" />.</summary>
      <returns>The URI that specifies the source of the element. The default is <see langword="null" />.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Windows.Controls.MediaElement.Clock" /> property is not <see langword="null" />.</exception>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.SourceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MediaElement.Source" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.SpeedRatio">
      <summary>Gets or sets the speed ratio of the media.</summary>
      <returns>The speed ratio of the media. The valid range is between 0 (zero) and infinity. Values less than 1 yield slower than normal playback, and values greater than 1 yield faster than normal playback. Negative values are treated as 0. The default value is 1.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Windows.Controls.MediaElement.Clock" /> property is not <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.Stop">
      <summary>Stops and resets media to be played from the beginning.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Windows.Controls.MediaElement.Clock" /> property is not <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.Stretch">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.Stretch" /> value that describes how a <see cref="T:System.Windows.Controls.MediaElement" /> fills the destination rectangle.</summary>
      <returns>The stretch value for the rendered media. The default is <see cref="F:System.Windows.Media.Stretch.Uniform" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.StretchDirection">
      <summary>Gets or sets a value that determines the restrictions on scaling that are applied to the image.</summary>
      <returns>The value that specifies the direction the element is stretched. The default is <see cref="F:System.Windows.Controls.StretchDirection.Both" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.StretchDirectionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MediaElement.StretchDirection" /> dependency property.</summary>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.StretchProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MediaElement.Stretch" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.System#Windows#Markup#IUriContext#BaseUri">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>The base URI of the current context.</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.UnloadedBehavior">
      <summary>Gets or sets the unload behavior <see cref="T:System.Windows.Controls.MediaState" /> for the media.</summary>
      <returns>The unload behavior <see cref="T:System.Windows.Controls.MediaState" /> for the media.</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.UnloadedBehaviorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MediaElement.UnloadedBehavior" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.Volume">
      <summary>Gets or sets the media's volume.</summary>
      <returns>The media's volume represented on a linear scale between 0 and 1. The default is 0.5.</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.VolumeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MediaElement.Volume" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Controls.MediaState">
      <summary>Specifies the states that can be applied to a <see cref="T:System.Windows.Controls.MediaElement" /> for the <see cref="P:System.Windows.Controls.MediaElement.LoadedBehavior" /> and <see cref="P:System.Windows.Controls.MediaElement.UnloadedBehavior" /> properties.</summary>
    </member>
    <member name="F:System.Windows.Controls.MediaState.Close">
      <summary>The state used to close the media. All media resources are released (including video memory).</summary>
    </member>
    <member name="F:System.Windows.Controls.MediaState.Manual">
      <summary>The state used to control a <see cref="T:System.Windows.Controls.MediaElement" /> manually. Interactive methods like <see cref="M:System.Windows.Controls.MediaElement.Play" /> and <see cref="M:System.Windows.Controls.MediaElement.Pause" /> can be used. Media will preroll but not play when the <see cref="T:System.Windows.Controls.MediaElement" /> is assigned valid media source.</summary>
    </member>
    <member name="F:System.Windows.Controls.MediaState.Pause">
      <summary>The state used to pause the media. Media will preroll but remains paused when the <see cref="T:System.Windows.Controls.MediaElement" /> is assigned valid media source.</summary>
    </member>
    <member name="F:System.Windows.Controls.MediaState.Play">
      <summary>The state used to play the media. . Media will preroll automatically being playback when the <see cref="T:System.Windows.Controls.MediaElement" /> is assigned valid media source.</summary>
    </member>
    <member name="F:System.Windows.Controls.MediaState.Stop">
      <summary>The state used to stop the media. Media will preroll but not play when the <see cref="T:System.Windows.Controls.MediaElement" /> is assigned valid media source. Media resources are not released.</summary>
    </member>
    <member name="T:System.Windows.Controls.Menu">
      <summary>Represents a Windows menu control that enables you to hierarchically organize elements associated with commands and event handlers.</summary>
    </member>
    <member name="M:System.Windows.Controls.Menu.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Menu" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.Menu.HandleMouseButton(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Called when any mouse button is pressed or released.</summary>
      <param name="e">A <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:System.Windows.Controls.Menu.IsMainMenu">
      <summary>Gets or sets a value that indicates whether this <see cref="T:System.Windows.Controls.Menu" /> receives a main menu activation notification.</summary>
      <returns>
        <see langword="true" /> if the menu receives a main menu activation notification; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Menu.IsMainMenuProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Menu.IsMainMenu" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.Menu.OnCreateAutomationPeer">
      <summary>Provides an appropriate <see cref="T:System.Windows.Automation.Peers.MenuAutomationPeer" /> implementation for this control, as part of the WPF automation infrastructure.</summary>
      <returns>The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</returns>
    </member>
    <member name="M:System.Windows.Controls.Menu.OnInitialized(System.EventArgs)">
      <summary>Called when the <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> property is set to <see langword="true" />.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Menu.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Responds to the <see cref="E:System.Windows.ContentElement.KeyDown" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Menu.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
      <summary>Handles the <see cref="E:System.Windows.UIElement.TextInput" /> routed event that occurs when the menu receives text input from any device.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Menu.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>Prepares the specified element to display the specified item.</summary>
      <param name="element">The element used to display the specified item.</param>
      <param name="item">The item to display.</param>
    </member>
    <member name="T:System.Windows.Controls.MenuItem">
      <summary>Represents a selectable item inside a <see cref="T:System.Windows.Controls.Menu" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.MenuItem" /> class.</summary>
    </member>
    <member name="E:System.Windows.Controls.MenuItem.Checked">
      <summary>Occurs when a menu item is checked.</summary>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.CheckedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.MenuItem.Checked" /> routed event.</summary>
    </member>
    <member name="E:System.Windows.Controls.MenuItem.Click">
      <summary>Occurs when a <see cref="T:System.Windows.Controls.MenuItem" /> is clicked.</summary>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.ClickEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.MenuItem.Click" /> routed event.</summary>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.Command">
      <summary>Gets or sets the command associated with the menu item.</summary>
      <returns>The command associated with the <see cref="T:System.Windows.Controls.MenuItem" />.  The default is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.CommandParameter">
      <summary>Gets or sets the parameter to pass to the <see cref="P:System.Windows.Controls.MenuItem.Command" /> property of a <see cref="T:System.Windows.Controls.MenuItem" />.</summary>
      <returns>The parameter to pass to the <see cref="P:System.Windows.Controls.MenuItem.Command" /> property of a <see cref="T:System.Windows.Controls.MenuItem" />. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.CommandParameterProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MenuItem.CommandParameter" /> dependency property.</summary>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.CommandProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MenuItem.Command" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.CommandTarget">
      <summary>Gets or sets the target element on which to raise the specified command.</summary>
      <returns>The element on which to raise the specified command. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.CommandTargetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MenuItem.CommandTarget" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.GetContainerForItemOverride">
      <summary>Creates or identifies the element used to display a specified item.</summary>
      <returns>The element used to display a specified item.</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.HandlesScrolling">
      <summary>Gets whether the control supports scrolling.</summary>
      <returns>
        <see langword="true" /> in all cases.</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.Icon">
      <summary>Gets or sets the icon that appears in a <see cref="T:System.Windows.Controls.MenuItem" />.</summary>
      <returns>The icon that appears in a <see cref="T:System.Windows.Controls.MenuItem" />. The default value is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.IconProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MenuItem.Icon" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.InputGestureText">
      <summary>Sets the text describing an input gesture that will call the command tied to the specified item.</summary>
      <returns>The text that describes the input gesture, such as Ctrl+C for the Copy command. The default is an empty string ("").</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.InputGestureTextProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MenuItem.InputGestureText" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.IsCheckable">
      <summary>Gets a value that indicates whether a <see cref="T:System.Windows.Controls.MenuItem" /> can be checked.</summary>
      <returns>
        <see langword="true" /> if the menu item can be checked; otherwise, <see langword="false" />.  The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.IsCheckableProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MenuItem.IsCheckable" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.IsChecked">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.MenuItem" /> is checked.</summary>
      <returns>
        <see langword="true" /> if a <see cref="T:System.Windows.Controls.MenuItem" /> is checked; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.IsCheckedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MenuItem.IsChecked" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.IsEnabledCore">
      <summary>Gets a value that indicates whether the <see cref="P:System.Windows.ContentElement.IsEnabled" /> property is <see langword="true" /> for the current menu item.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.MenuItem" /> can be selected; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.IsHighlighted">
      <summary>Gets a value that indicates whether a <see cref="T:System.Windows.Controls.MenuItem" /> is highlighted.</summary>
      <returns>
        <see langword="true" /> if a <see cref="T:System.Windows.Controls.MenuItem" /> is highlighted; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.IsHighlightedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MenuItem.IsHighlighted" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.IsItemItsOwnContainerOverride(System.Object)">
      <summary>Determines if the specified item is (or is eligible to be) its own <c>ItemContainer</c>.</summary>
      <param name="item">Specified item.</param>
      <returns>
        <see langword="true" /> if the item is its own <c>ItemContainer</c>; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.IsPressed">
      <summary>Gets a value that indicates whether a <see cref="T:System.Windows.Controls.MenuItem" /> is pressed.</summary>
      <returns>
        <see langword="true" /> if a <see cref="T:System.Windows.Controls.MenuItem" /> is pressed; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.IsPressedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MenuItem.IsPressed" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.IsSubmenuOpen">
      <summary>Gets or sets a value that indicates whether the submenu of the <see cref="T:System.Windows.Controls.MenuItem" /> is open.</summary>
      <returns>
        <see langword="true" /> if the submenu of the <see cref="T:System.Windows.Controls.MenuItem" /> is open; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.IsSubmenuOpenProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MenuItem.IsSubmenuOpen" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimation">
      <summary>Gets whether a menu suspends animations on its <see cref="T:System.Windows.Controls.Primitives.Popup" /> control.</summary>
      <returns>
        <see langword="true" /> if the menu should suspend animations on its popup; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimationProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimation" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.ItemContainerTemplateSelector">
      <summary>Gets or sets the custom logic for choosing a template used to display each item.</summary>
      <returns>A custom object that provides logic and returns an item container.</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.ItemContainerTemplateSelectorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MenuItem.ItemContainerTemplateSelector" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
      <summary>Responds when the <see cref="P:System.Windows.Controls.AccessText.AccessKey" /> for this control is invoked.</summary>
      <param name="e">The event data for the <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnApplyTemplate">
      <summary>Called when the template's tree is generated.</summary>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnChecked(System.Windows.RoutedEventArgs)">
      <summary>Called when the <see cref="P:System.Windows.Controls.MenuItem.IsChecked" /> property becomes <see langword="true" />. This method raises the <see cref="E:System.Windows.Controls.MenuItem.Checked" /> routed event.</summary>
      <param name="e">The event data for the <see cref="E:System.Windows.Controls.MenuItem.Checked" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnClick">
      <summary>Called when a <see cref="T:System.Windows.Controls.MenuItem" /> is clicked and raises a <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event.</summary>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnCreateAutomationPeer">
      <summary>Provides an appropriate <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" /> implementation for this control, as part of the WPF automation infrastructure.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" /> for this <see cref="T:System.Windows.Controls.MenuItem" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>Announces that the keyboard is focused on this element.</summary>
      <param name="e">The event data for the <see cref="E:System.Windows.UIElement.GotFocus" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnInitialized(System.EventArgs)">
      <summary>Called when the <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> property is set to <see langword="true" /> and raises an <see cref="E:System.Windows.FrameworkElement.Initialized" /> event.</summary>
      <param name="e">The event data for the <see cref="E:System.Windows.FrameworkElement.Initialized" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Called when the focus is no longer on or within a <see cref="T:System.Windows.Controls.MenuItem" />.</summary>
      <param name="e">The event data for the <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>Called when the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> property changes.</summary>
      <param name="e">The event data for the <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Responds to the <see cref="E:System.Windows.UIElement.KeyDown" /> event.</summary>
      <param name="e">The event data for the <see cref="E:System.Windows.UIElement.KeyDown" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>Called whenever the mouse enters a <see cref="T:System.Windows.Controls.MenuItem" />.</summary>
      <param name="e">The event data for the <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>Called whenever the mouse leaves a <see cref="T:System.Windows.Controls.MenuItem" />.</summary>
      <param name="e">The event data for the <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Called when the left mouse button is pressed.</summary>
      <param name="e">The event data for the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Called when the left mouse button is released.</summary>
      <param name="e">The event data for the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>Called when the mouse is moved over a menu item.</summary>
      <param name="e">The event data for the <see cref="E:System.Windows.Input.Mouse.MouseMove" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Called when the right mouse button is pressed.</summary>
      <param name="e">The event data for the <see cref="E:System.Windows.UIElement.MouseRightButtonDown" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Called when the right mouse button is released.</summary>
      <param name="e">The event data for the <see cref="E:System.Windows.UIElement.MouseRightButtonUp" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnSubmenuClosed(System.Windows.RoutedEventArgs)">
      <summary>Called when the submenu of a <see cref="T:System.Windows.Controls.MenuItem" /> is closed.</summary>
      <param name="e">The event data for the <see cref="E:System.Windows.Controls.MenuItem.SubmenuClosed" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnSubmenuOpened(System.Windows.RoutedEventArgs)">
      <summary>Called when the submenu of a <see cref="T:System.Windows.Controls.MenuItem" /> is opened.</summary>
      <param name="e">The event data for the <see cref="E:System.Windows.Controls.MenuItem.SubmenuOpened" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnUnchecked(System.Windows.RoutedEventArgs)">
      <summary>Called when the <see cref="P:System.Windows.Controls.MenuItem.IsChecked" /> property becomes <see langword="false" />. This method raises the <see cref="E:System.Windows.Controls.MenuItem.Unchecked" /> routed event.</summary>
      <param name="e">The event data for the <see cref="E:System.Windows.Controls.MenuItem.Unchecked" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnVisualParentChanged(System.Windows.DependencyObject)">
      <summary>Called when the parent of the visual <see cref="T:System.Windows.Controls.MenuItem" /> changes.</summary>
      <param name="oldParent">Old value of the parent of the visual, or null if the visual did not have a parent.</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>Prepares the specified element to display the specified item.</summary>
      <param name="element">Element used to display the specified item.</param>
      <param name="item">Specified item.</param>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.Role">
      <summary>Gets a value that indicates the role of a <see cref="T:System.Windows.Controls.MenuItem" />.</summary>
      <returns>One of the <see cref="T:System.Windows.Controls.MenuItemRole" /> values. The default is <see cref="F:System.Windows.Controls.MenuItemRole.TopLevelItem" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.RoleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MenuItem.Role" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.SeparatorStyleKey">
      <summary>Gets the resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when the <see cref="T:System.Windows.Controls.MenuItem" /> is a <see cref="T:System.Windows.Controls.Separator" />.</summary>
      <returns>The resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when the <see cref="T:System.Windows.Controls.MenuItem" /> is a <see cref="T:System.Windows.Controls.Separator" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.ShouldApplyItemContainerStyle(System.Windows.DependencyObject,System.Object)">
      <summary>Used to determine whether to apply a style to the item container.</summary>
      <param name="container">Container to which the style will be applied.</param>
      <param name="item">Item to which the container belongs.</param>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.MenuItem" /> is not a <see cref="T:System.Windows.Controls.Separator" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.StaysOpenOnClick">
      <summary>Gets or sets a value that indicates that the submenu in which this <see cref="T:System.Windows.Controls.MenuItem" /> is located should not close when this item is clicked.</summary>
      <returns>
        <see langword="true" /> if the submenu in which this <see cref="T:System.Windows.Controls.MenuItem" /> is located should not close when this item is clicked; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.StaysOpenOnClickProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MenuItem.StaysOpenOnClick" /> dependency property.</summary>
    </member>
    <member name="E:System.Windows.Controls.MenuItem.SubmenuClosed">
      <summary>Occurs when the state of the <see cref="P:System.Windows.Controls.MenuItem.IsSubmenuOpen" /> property changes to <see langword="false" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.SubmenuClosedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.MenuItem.SubmenuClosed" /> routed event.</summary>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.SubmenuHeaderTemplateKey">
      <summary>Gets the resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when the <see cref="T:System.Windows.Controls.MenuItem" /> is a header of a submenu.</summary>
      <returns>The resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when the <see cref="T:System.Windows.Controls.MenuItem" /> is a header of a submenu.</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.SubmenuItemTemplateKey">
      <summary>Gets the resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when the <see cref="T:System.Windows.Controls.MenuItem" /> is a submenu.</summary>
      <returns>The resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when the <see cref="T:System.Windows.Controls.MenuItem" /> is a submenu.</returns>
    </member>
    <member name="E:System.Windows.Controls.MenuItem.SubmenuOpened">
      <summary>Occurs when the state of the <see cref="P:System.Windows.Controls.MenuItem.IsSubmenuOpen" /> property changes to <see langword="true" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.SubmenuOpenedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.MenuItem.SubmenuOpened" /> routed event.</summary>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.TopLevelHeaderTemplateKey">
      <summary>Gets the resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when the <see cref="T:System.Windows.Controls.MenuItem" /> is a header of a top-level menu.</summary>
      <returns>The resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when the <see cref="T:System.Windows.Controls.MenuItem" /> is a header of a top-level menu.</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.TopLevelItemTemplateKey">
      <summary>Gets the resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when it is a top-level <see cref="T:System.Windows.Controls.MenuItem" /> that can invoke commands.</summary>
      <returns>The resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when it is a top-level <see cref="T:System.Windows.Controls.MenuItem" /> that can invoke commands.</returns>
    </member>
    <member name="E:System.Windows.Controls.MenuItem.Unchecked">
      <summary>Occurs when a <see cref="T:System.Windows.Controls.MenuItem" /> is unchecked.</summary>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.UncheckedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.MenuItem.Unchecked" /> routed event.</summary>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.UsesItemContainerTemplate">
      <summary>Gets or sets a value that indicates whether the menu selects different item containers, depending on the type of the item in the underlying collection or some other heuristic.</summary>
      <returns>
        <see langword="true" /> the menu selects different item containers; otherwise, <see langword="false" />.  
The registered default is <see langword="false" />. For more information about what can influence the value, see Dependency Property Value Precedence.</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.UsesItemContainerTemplateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.MenuItem.UsesItemContainerTemplate" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Controls.MenuItemRole">
      <summary>Defines the different roles that a <see cref="T:System.Windows.Controls.MenuItem" /> can have.</summary>
    </member>
    <member name="F:System.Windows.Controls.MenuItemRole.SubmenuHeader">
      <summary>Header for a submenu.</summary>
    </member>
    <member name="F:System.Windows.Controls.MenuItemRole.SubmenuItem">
      <summary>Menu item in a submenu that can invoke commands.</summary>
    </member>
    <member name="F:System.Windows.Controls.MenuItemRole.TopLevelHeader">
      <summary>Header for top-level menus.</summary>
    </member>
    <member name="F:System.Windows.Controls.MenuItemRole.TopLevelItem">
      <summary>Top-level menu item that can invoke commands.</summary>
    </member>
    <member name="T:System.Windows.Controls.MenuScrollingVisibilityConverter">
      <summary>Represents a data-binding converter to handle the visibility of repeat buttons in scrolling menus.</summary>
    </member>
    <member name="M:System.Windows.Controls.MenuScrollingVisibilityConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.MenuScrollingVisibilityConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.MenuScrollingVisibilityConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Called when moving a value from a source to a target.</summary>
      <param name="values">Values produced by the source binding.</param>
      <param name="targetType">Type of the target. Type that the source will be converted into.</param>
      <param name="parameter">Converter parameter.</param>
      <param name="culture">Culture information.</param>
      <returns>Converted value.</returns>
    </member>
    <member name="M:System.Windows.Controls.MenuScrollingVisibilityConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
      <summary>Not supported.</summary>
      <param name="value">This parameter is not used.</param>
      <param name="targetTypes">This parameter is not used.</param>
      <param name="parameter">This parameter is not used.</param>
      <param name="culture">This parameter is not used.</param>
      <returns>
        <see cref="F:System.Windows.Data.Binding.DoNothing" />
      </returns>
    </member>
    <member name="T:System.Windows.Controls.NotifyDataErrorValidationRule">
      <summary>Represents a rule that checks for errors that are raised by a data source that implements <see cref="T:System.ComponentModel.INotifyDataErrorInfo" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.NotifyDataErrorValidationRule.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.NotifyDataErrorValidationRule.Validate(System.Object,System.Globalization.CultureInfo)">
      <summary>Performs validation checks on a value.</summary>
      <param name="value">The value (from the binding target) to check.</param>
      <param name="cultureInfo">The culture to use in this rule.</param>
      <returns>A <see cref="T:System.Windows.Controls.ValidationResult" /> object.</returns>
    </member>
    <member name="T:System.Windows.Controls.Orientation">
      <summary>Defines the different orientations that a control or layout can have.</summary>
    </member>
    <member name="F:System.Windows.Controls.Orientation.Horizontal">
      <summary>Control or layout should be horizontally oriented.</summary>
    </member>
    <member name="F:System.Windows.Controls.Orientation.Vertical">
      <summary>Control or layout should be vertically oriented.</summary>
    </member>
    <member name="T:System.Windows.Controls.OverflowMode">
      <summary>Specifies how <see cref="T:System.Windows.Controls.ToolBar" /> items are placed in the main toolbar panel and in the overflow panel.</summary>
    </member>
    <member name="F:System.Windows.Controls.OverflowMode.Always">
      <summary>Item is permanently placed in the overflow panel.</summary>
    </member>
    <member name="F:System.Windows.Controls.OverflowMode.AsNeeded">
      <summary>Item moves between the main panel and overflow panel, depending on the available space.</summary>
    </member>
    <member name="F:System.Windows.Controls.OverflowMode.Never">
      <summary>Item is never allowed to overflow.</summary>
    </member>
    <member name="T:System.Windows.Controls.Page">
      <summary>Encapsulates a page of content that can be navigated to and hosted by Windows Internet Explorer, <see cref="T:System.Windows.Navigation.NavigationWindow" />, and <see cref="T:System.Windows.Controls.Frame" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.Page.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Page" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.Page.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges the content (child elements) of the <see cref="T:System.Windows.Controls.Page" />.</summary>
      <param name="arrangeBounds">The size to use to arrange the child elements.</param>
      <returns>A <see cref="T:System.Windows.Size" /> that represents the arranged size of the page.</returns>
    </member>
    <member name="P:System.Windows.Controls.Page.Background">
      <summary>Gets or sets the background for a <see cref="T:System.Windows.Controls.Page" />.</summary>
      <returns>The <see cref="T:System.Windows.Media.Brush" /> that <see cref="T:System.Windows.Controls.Page" /> uses to paint its background.</returns>
    </member>
    <member name="F:System.Windows.Controls.Page.BackgroundProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Page.Background" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Page.Content">
      <summary>Gets or sets the content of a <see cref="T:System.Windows.Controls.Page" />.</summary>
      <returns>An object that contains the content of a <see cref="T:System.Windows.Controls.Page" />. The default is <see cref="P:System.Windows.SystemFonts.MessageFontFamily" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Page.ContentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Page.Content" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Page.FontFamily">
      <summary>Gets or sets the name of the specified font family.</summary>
      <returns>A <see cref="T:System.Windows.Media.FontFamily" /> that is the font family for the content of a <see cref="T:System.Windows.Controls.Page" />. The default is <see cref="P:System.Windows.SystemFonts.MessageFontFamily" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Page.FontFamilyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Page.FontFamily" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Page.FontSize">
      <summary>Gets or sets the font size.</summary>
      <returns>The font size for the content of a <see cref="T:System.Windows.Controls.Page" />. The default is <see cref="P:System.Windows.SystemFonts.MessageFontSize" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Page.FontSizeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Page.FontSize" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Page.Foreground">
      <summary>Gets or sets the foreground for a <see cref="T:System.Windows.Controls.Page" />.</summary>
      <returns>The <see cref="T:System.Windows.Media.Brush" /> that <see cref="T:System.Windows.Controls.Page" /> uses to paint its foreground. The default is <see cref="P:System.Windows.Media.Brushes.Black" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Page.ForegroundProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Page.Foreground" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Page.KeepAlive">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.Page" /> instance is retained in navigation history.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.Page" /> instance is retained in navigation history; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Page.KeepAliveProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Page.KeepAlive" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Page.LogicalChildren">
      <summary>Returns an enumerator for the logical child elements of a <see cref="T:System.Windows.Controls.Page" />.</summary>
      <returns>The <see cref="T:System.Collections.IEnumerator" /> for the logical child elements of a <see cref="T:System.Windows.Controls.Page" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.Page.MeasureOverride(System.Windows.Size)">
      <summary>Measures the child elements of the <see cref="T:System.Windows.Controls.Page" />.</summary>
      <param name="constraint">The available area that the window can give to its children.</param>
      <returns>A <see cref="T:System.Windows.Size" /> that is the actual size of the window. The method may return a larger value, in which case the parent may need to add scroll bars.</returns>
    </member>
    <member name="P:System.Windows.Controls.Page.NavigationService">
      <summary>Gets the navigation service that the host of the page is using to manage navigation.</summary>
      <returns>The <see cref="T:System.Windows.Navigation.NavigationService" /> object that the host of the page is using to manage navigation, or <see langword="null" /> if the host does not support navigation.</returns>
    </member>
    <member name="M:System.Windows.Controls.Page.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)">
      <summary>Called when the template for a <see cref="T:System.Windows.Controls.Page" /> changes.</summary>
      <param name="oldTemplate">The old template.</param>
      <param name="newTemplate">The new template.</param>
    </member>
    <member name="M:System.Windows.Controls.Page.OnVisualParentChanged(System.Windows.DependencyObject)">
      <summary>Called when the parent of the <see cref="T:System.Windows.Controls.Page" /> is changed.</summary>
      <param name="oldParent">The previous parent. Set to <see langword="null" /> if the <see cref="T:System.Windows.DependencyObject" /> did not have a previous parent.</param>
      <exception cref="T:System.InvalidOperationException">The new parent is neither a <see cref="T:System.Windows.Window" /> nor a <see cref="T:System.Windows.Controls.Frame" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.Page.ShouldSerializeShowsNavigationUI">
      <summary>Allows derived classes to determine the serialization behavior of the <see cref="P:System.Windows.Controls.Page.ShowsNavigationUI" /> property.</summary>
      <returns>
        <see langword="true" /> if the content should be serialized; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.Page.ShouldSerializeTitle">
      <summary>Allows derived classes to determine the serialization behavior of the <see cref="P:System.Windows.Controls.Page.Title" /> property.</summary>
      <returns>
        <see langword="true" /> if the content should be serialized; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.Page.ShouldSerializeWindowHeight">
      <summary>Allows derived classes to determine the serialization behavior of the <see cref="P:System.Windows.Controls.Page.WindowHeight" /> property.</summary>
      <returns>
        <see langword="true" /> if the content should be serialized; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.Page.ShouldSerializeWindowTitle">
      <summary>Allows derived classes to determine the serialization behavior of the <see cref="P:System.Windows.Controls.Page.WindowTitle" /> property.</summary>
      <returns>
        <see langword="true" /> if the content should be serialized; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.Page.ShouldSerializeWindowWidth">
      <summary>Allows derived classes to determine the serialization behavior of the <see cref="P:System.Windows.Controls.Page.WindowWidth" /> property.</summary>
      <returns>
        <see langword="true" /> if the content should be serialized; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.Page.ShowsNavigationUI">
      <summary>Gets or sets a value that indicates whether the navigation UI of a <see cref="T:System.Windows.Navigation.NavigationWindow" /> on Microsoft Internet Explorer 6 is visible.</summary>
      <returns>
        <see langword="true" /> if the navigation UI of a host <see cref="T:System.Windows.Navigation.NavigationWindow" /> is visible; otherwise, <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Windows.Controls.Page.ShowsNavigationUI" /> property is inspected on a <see cref="T:System.Windows.Controls.Page" /> instance that is not hosted by a <see cref="T:System.Windows.Window" />, <see cref="T:System.Windows.Navigation.NavigationWindow" />, or a browser.</exception>
    </member>
    <member name="M:System.Windows.Controls.Page.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Markup.IAddChild.AddChild(System.Object)" />.</summary>
      <param name="obj">The child object to add.</param>
    </member>
    <member name="M:System.Windows.Controls.Page.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Markup.IAddChild.AddText(System.String)" />.</summary>
      <param name="str">The text to add to the object.</param>
    </member>
    <member name="P:System.Windows.Controls.Page.Template">
      <summary>Gets or sets the control template for a <see cref="T:System.Windows.Controls.Page" />.</summary>
      <returns>The <see cref="T:System.Windows.Controls.ControlTemplate" /> for a <see cref="T:System.Windows.Controls.Page" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Page.TemplateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Page.Template" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Page.Title">
      <summary>Gets or sets the title of the <see cref="T:System.Windows.Controls.Page" />.</summary>
      <returns>The title of the <see cref="T:System.Windows.Controls.Page" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Page.TitleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Page.Title" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Page.WindowHeight">
      <summary>Gets or sets the height of the host <see cref="T:System.Windows.Window" /> or <see cref="T:System.Windows.Navigation.NavigationWindow" /> of a <see cref="T:System.Windows.Controls.Page" />.</summary>
      <returns>The height of a window that directly hosts a <see cref="T:System.Windows.Controls.Page" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.Page.WindowTitle">
      <summary>Gets or sets the title of the host <see cref="T:System.Windows.Window" /> or <see cref="T:System.Windows.Navigation.NavigationWindow" /> of a <see cref="T:System.Windows.Controls.Page" />.</summary>
      <returns>The title of a window that directly hosts the <see cref="T:System.Windows.Controls.Page" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.Page.WindowWidth">
      <summary>Gets or sets the width of the host <see cref="T:System.Windows.Window" /> or <see cref="T:System.Windows.Navigation.NavigationWindow" /> of a <see cref="T:System.Windows.Controls.Page" />.</summary>
      <returns>The width of a window that directly hosts a <see cref="T:System.Windows.Controls.Page" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.PageRange">
      <summary>Specifies a range of pages.</summary>
    </member>
    <member name="M:System.Windows.Controls.PageRange.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.PageRange" /> class that includes only the single specified page.</summary>
      <param name="page">The page that is printed or processed.</param>
    </member>
    <member name="M:System.Windows.Controls.PageRange.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.PageRange" /> class with the specified first and last pages.</summary>
      <param name="pageFrom">The first page of the range.</param>
      <param name="pageTo">The last page of the range.</param>
    </member>
    <member name="M:System.Windows.Controls.PageRange.Equals(System.Object)">
      <summary>Tests whether an object of unknown type is equal to this <see cref="T:System.Windows.Controls.PageRange" />.</summary>
      <param name="obj">The object tested.</param>
      <returns>
        <see langword="true" /> if the object is of type <see cref="T:System.Windows.Controls.PageRange" /> and is equal to this <see cref="T:System.Windows.Controls.PageRange" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.PageRange.Equals(System.Windows.Controls.PageRange)">
      <summary>Tests whether a <see cref="T:System.Windows.Controls.PageRange" /> is equal to this <see cref="T:System.Windows.Controls.PageRange" />.</summary>
      <param name="pageRange">The <see cref="T:System.Windows.Controls.PageRange" /> tested.</param>
      <returns>
        <see langword="true" /> if the two <see cref="T:System.Windows.Controls.PageRange" /> objects are equal; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.PageRange.GetHashCode">
      <summary>Gets the hash code value for the <see cref="T:System.Windows.Controls.PageRange" />.</summary>
      <returns>The hash code value for the <see cref="T:System.Windows.Controls.PageRange" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.PageRange.op_Equality(System.Windows.Controls.PageRange,System.Windows.Controls.PageRange)">
      <summary>Defines the "==" operator for testing whether two specified <see cref="T:System.Windows.Controls.PageRange" /> objects are equal.</summary>
      <param name="pr1">The first <see cref="T:System.Windows.Controls.PageRange" />.</param>
      <param name="pr2">The second <see cref="T:System.Windows.Controls.PageRange" />.</param>
      <returns>
        <see langword="true" /> if the two <see cref="T:System.Windows.Controls.PageRange" /> objects are equal; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.PageRange.op_Inequality(System.Windows.Controls.PageRange,System.Windows.Controls.PageRange)">
      <summary>Defines the "!=" operator for testing whether two specified <see cref="T:System.Windows.Controls.PageRange" /> objects are not equal.</summary>
      <param name="pr1">The first <see cref="T:System.Windows.Controls.PageRange" />.</param>
      <param name="pr2">The second <see cref="T:System.Windows.Controls.PageRange" />.</param>
      <returns>
        <see langword="true" /> if the two <see cref="T:System.Windows.Controls.PageRange" /> objects are not equal; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.PageRange.PageFrom">
      <summary>Gets or sets the page number of the first page in the range.</summary>
      <returns>The 1-based page number of the first page in the range.</returns>
    </member>
    <member name="P:System.Windows.Controls.PageRange.PageTo">
      <summary>Gets or sets the page number of the last page in the range.</summary>
      <returns>The 1-based page number of the last page in the range.</returns>
    </member>
    <member name="M:System.Windows.Controls.PageRange.ToString">
      <summary>Gets a string representation of the range.</summary>
      <returns>A string that represents the range of pages in the format "<see cref="P:System.Windows.Controls.PageRange.PageFrom" /><c>-</c><see cref="P:System.Windows.Controls.PageRange.PageTo" />".</returns>
    </member>
    <member name="T:System.Windows.Controls.PageRangeSelection">
      <summary>Specifies whether all the pages or only a limited range will be processed by an operation, usually printing.</summary>
    </member>
    <member name="F:System.Windows.Controls.PageRangeSelection.AllPages">
      <summary>All pages.</summary>
    </member>
    <member name="F:System.Windows.Controls.PageRangeSelection.CurrentPage">
      <summary>The current page.</summary>
    </member>
    <member name="F:System.Windows.Controls.PageRangeSelection.SelectedPages">
      <summary>The selected pages.</summary>
    </member>
    <member name="F:System.Windows.Controls.PageRangeSelection.UserPages">
      <summary>A user-specified range of pages.</summary>
    </member>
    <member name="T:System.Windows.Controls.Panel">
      <summary>Provides a base class for all <see cref="T:System.Windows.Controls.Panel" /> elements. Use <see cref="T:System.Windows.Controls.Panel" /> elements to position and arrange child objects in Windows Presentation Foundation (WPF) applications.</summary>
    </member>
    <member name="M:System.Windows.Controls.Panel.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Panel" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.Panel.Background">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.Brush" /> that is used to fill the area between the borders of a <see cref="T:System.Windows.Controls.Panel" />.</summary>
      <returns>A <see cref="T:System.Windows.Media.Brush" />. This default value is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Panel.BackgroundProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Panel.Background" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Panel.Children">
      <summary>Gets a <see cref="T:System.Windows.Controls.UIElementCollection" /> of child elements of this <see cref="T:System.Windows.Controls.Panel" />.</summary>
      <returns>A <see cref="T:System.Windows.Controls.UIElementCollection" />. The default is an empty <see cref="T:System.Windows.Controls.UIElementCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.Panel.CreateUIElementCollection(System.Windows.FrameworkElement)">
      <summary>Creates a new <see cref="T:System.Windows.Controls.UIElementCollection" />.</summary>
      <param name="logicalParent">The logical parent element of the collection to be created.</param>
      <returns>An ordered collection of elements that have the specified logical parent.</returns>
    </member>
    <member name="M:System.Windows.Controls.Panel.GetVisualChild(System.Int32)">
      <summary>Gets a <see cref="T:System.Windows.Media.Visual" /> child of this <see cref="T:System.Windows.Controls.Panel" /> at the specified index position.</summary>
      <param name="index">The index position of the <see cref="T:System.Windows.Media.Visual" /> child.</param>
      <returns>A <see cref="T:System.Windows.Media.Visual" /> child of the parent <see cref="T:System.Windows.Controls.Panel" /> element.</returns>
    </member>
    <member name="M:System.Windows.Controls.Panel.GetZIndex(System.Windows.UIElement)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.Panel.ZIndex" /> property for a given element.</summary>
      <param name="element">The element for which to retrieve the <see cref="P:System.Windows.Controls.Panel.ZIndex" /> value.</param>
      <returns>The <see cref="P:System.Windows.Controls.Panel.ZIndex" /> position of the element.</returns>
      <exception cref="T:System.ArgumentNullException">The element is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Controls.Panel.HasLogicalOrientation">
      <summary>Gets a value that indicates whether this <see cref="T:System.Windows.Controls.Panel" /> arranges its descendants in a single dimension.</summary>
      <returns>
        <see langword="true" /> if the orientation of the <see cref="T:System.Windows.Controls.Panel" /> is in one dimension; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.Panel.HasLogicalOrientationPublic">
      <summary>Gets a value that indicates whether this <see cref="T:System.Windows.Controls.Panel" /> arranges its descendants in a single dimension.</summary>
      <returns>
        <see langword="true" /> if the orientation of the <see cref="T:System.Windows.Controls.Panel" /> is in one dimension; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.Panel.InternalChildren">
      <summary>Gets a <see cref="T:System.Windows.Controls.UIElementCollection" /> of child elements.</summary>
      <returns>An ordered collection of <see cref="T:System.Windows.UIElement" /> objects. This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Controls.Panel.IsItemsHost">
      <summary>Gets or sets a value that indicates that this <see cref="T:System.Windows.Controls.Panel" /> is a container for user interface (UI) items that are generated by an <see cref="T:System.Windows.Controls.ItemsControl" />.</summary>
      <returns>
        <see langword="true" /> if this instance of <see cref="T:System.Windows.Controls.Panel" /> is an items host; otherwise, <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Panel.IsItemsHostProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Panel.IsItemsHost" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Panel.LogicalChildren">
      <summary>Gets an enumerator that can iterate the logical child elements of this <see cref="T:System.Windows.Controls.Panel" /> element.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" />. This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Controls.Panel.LogicalOrientation">
      <summary>The <see cref="T:System.Windows.Controls.Orientation" /> of the panel, if the panel supports layout in only a single dimension.</summary>
      <returns>The <see cref="T:System.Windows.Controls.Orientation" /> of the panel. This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Controls.Panel.LogicalOrientationPublic">
      <summary>The <see cref="T:System.Windows.Controls.Orientation" /> of the panel, if the panel supports layout in only a single dimension.</summary>
      <returns>The <see cref="T:System.Windows.Controls.Orientation" /> of the panel. This property has no default value.</returns>
    </member>
    <member name="M:System.Windows.Controls.Panel.OnIsItemsHostChanged(System.Boolean,System.Boolean)">
      <summary>Indicates that the <see cref="P:System.Windows.Controls.Panel.IsItemsHost" /> property value has changed.</summary>
      <param name="oldIsItemsHost">The old property value.</param>
      <param name="newIsItemsHost">The new property value.</param>
    </member>
    <member name="M:System.Windows.Controls.Panel.OnRender(System.Windows.Media.DrawingContext)">
      <summary>Draws the content of a <see cref="T:System.Windows.Media.DrawingContext" /> object during the render pass of a <see cref="T:System.Windows.Controls.Panel" /> element.</summary>
      <param name="dc">The <see cref="T:System.Windows.Media.DrawingContext" /> object to draw.</param>
    </member>
    <member name="M:System.Windows.Controls.Panel.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary>Invoked when the <see cref="T:System.Windows.Media.VisualCollection" /> of a visual object is modified.</summary>
      <param name="visualAdded">The <see cref="T:System.Windows.Media.Visual" /> that was added to the collection.</param>
      <param name="visualRemoved">The <see cref="T:System.Windows.Media.Visual" /> that was removed from the collection.</param>
    </member>
    <member name="M:System.Windows.Controls.Panel.SetZIndex(System.Windows.UIElement,System.Int32)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.Panel.ZIndex" /> attached property for a given element.</summary>
      <param name="element">The element on which to apply the property value.</param>
      <param name="value">The order on the z-plane in which this element appears.</param>
      <exception cref="T:System.ArgumentNullException">The element is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.Panel.ShouldSerializeChildren">
      <summary>Determines whether the <see cref="P:System.Windows.Controls.Panel.Children" /> collection of a panel should be serialized.</summary>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.Controls.Panel.Children" /> collection should be serialized; otherwise, <see langword="false" />. The <see cref="P:System.Windows.Controls.Panel.Children" /> collection is only serialized if it is not empty and not <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.Panel.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="value">An object to add as a child.</param>
    </member>
    <member name="M:System.Windows.Controls.Panel.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="text">A string to add to the object.</param>
    </member>
    <member name="P:System.Windows.Controls.Panel.VisualChildrenCount">
      <summary>Gets the number of child <see cref="T:System.Windows.Media.Visual" /> objects in this instance of <see cref="T:System.Windows.Controls.Panel" />.</summary>
      <returns>The number of child <see cref="T:System.Windows.Media.Visual" /> objects.</returns>
    </member>
    <member name="P:System.Windows.Controls.Panel.ZIndex">
      <summary>Gets or sets a value that represents the order on the z-plane in which an element appears.</summary>
    </member>
    <member name="F:System.Windows.Controls.Panel.ZIndexProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Panel.ZIndex" /> attached property.</summary>
    </member>
    <member name="T:System.Windows.Controls.PanningMode">
      <summary>Specifies how <see cref="T:System.Windows.Controls.ScrollViewer" /> reacts to touch manipulation.</summary>
    </member>
    <member name="F:System.Windows.Controls.PanningMode.Both">
      <summary>The <see cref="T:System.Windows.Controls.ScrollViewer" /> scrolls horizontally and vertically.</summary>
    </member>
    <member name="F:System.Windows.Controls.PanningMode.HorizontalFirst">
      <summary>The <see cref="T:System.Windows.Controls.ScrollViewer" /> scrolls when the user moves a finger horizontally first.  If the user moves the vertically first, the movement is treated as mouse events.  After the <see cref="T:System.Windows.Controls.ScrollViewer" /> begins to scroll, it will scroll horizontally and vertically.</summary>
    </member>
    <member name="F:System.Windows.Controls.PanningMode.HorizontalOnly">
      <summary>The <see cref="T:System.Windows.Controls.ScrollViewer" /> scrolls horizontally only.</summary>
    </member>
    <member name="F:System.Windows.Controls.PanningMode.None">
      <summary>The <see cref="T:System.Windows.Controls.ScrollViewer" /> does not respond to touch input.</summary>
    </member>
    <member name="F:System.Windows.Controls.PanningMode.VerticalFirst">
      <summary>The <see cref="T:System.Windows.Controls.ScrollViewer" /> scrolls when the user moves a finger vertically first.  If the user moves the horizontally first, the movement is treated as mouse events.  After the <see cref="T:System.Windows.Controls.ScrollViewer" /> begins to scroll, it will scroll horizontally and vertically.</summary>
    </member>
    <member name="F:System.Windows.Controls.PanningMode.VerticalOnly">
      <summary>The <see cref="T:System.Windows.Controls.ScrollViewer" /> scrolls vertically only.</summary>
    </member>
    <member name="T:System.Windows.Controls.PasswordBox">
      <summary>Represents a control designed for entering and handling passwords.</summary>
    </member>
    <member name="M:System.Windows.Controls.PasswordBox.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.PasswordBox" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.CaretBrush">
      <summary>Gets or sets the brush that specifies the color of the password box's caret.</summary>
      <returns>A brush that describes the color of the password box's caret.</returns>
    </member>
    <member name="F:System.Windows.Controls.PasswordBox.CaretBrushProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.PasswordBox.CaretBrush" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.PasswordBox.Clear">
      <summary>Clears the value of the <see cref="P:System.Windows.Controls.PasswordBox.Password" /> property.</summary>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.IsInactiveSelectionHighlightEnabled">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.PasswordBox" /> displays selected text when the <see cref="T:System.Windows.Controls.PasswordBox" /> does not have focus.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.PasswordBox" /> displays selected text when the <see cref="T:System.Windows.Controls.PasswordBox" /> does not have focus; otherwise, <see langword="false" />.  
The registered default is <see langword="false" />. For more information about what can influence the value, see Dependency Property Value Precedence.</returns>
    </member>
    <member name="F:System.Windows.Controls.PasswordBox.IsInactiveSelectionHighlightEnabledProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.PasswordBox.IsInactiveSelectionHighlightEnabled" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.IsSelectionActive">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.PasswordBox" /> has focus and selected text.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.PasswordBox" /> has focus and selected text; otherwise, <see langword="false" />.  
The registered default is <see langword="false" />. For more information about what can influence the value, see Dependency Property Value Precedence.</returns>
    </member>
    <member name="F:System.Windows.Controls.PasswordBox.IsSelectionActiveProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.PasswordBox.IsSelectionActive" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.MaxLength">
      <summary>Gets or sets the maximum length for passwords to be handled by this <see cref="T:System.Windows.Controls.PasswordBox" />.</summary>
      <returns>An integer specifying the maximum length, in characters, for passwords to be handled by this <see cref="T:System.Windows.Controls.PasswordBox" />.  
 A value of zero (0) means no limit.  
 The default value is 0 (no length limit).</returns>
    </member>
    <member name="F:System.Windows.Controls.PasswordBox.MaxLengthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.PasswordBox.MaxLength" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.PasswordBox.OnApplyTemplate">
      <summary>Called when an internal process or application calls <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />, which is used to build the current template's visual tree.</summary>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.Password">
      <summary>Gets or sets the password currently held by the <see cref="T:System.Windows.Controls.PasswordBox" />.</summary>
      <returns>A string representing the password currently held by the <see cref="T:System.Windows.Controls.PasswordBox" />.  
 The default value is <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="E:System.Windows.Controls.PasswordBox.PasswordChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Controls.PasswordBox.Password" /> property changes.</summary>
    </member>
    <member name="F:System.Windows.Controls.PasswordBox.PasswordChangedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.PasswordBox.PasswordChanged" /> routed event.</summary>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.PasswordChar">
      <summary>Gets or sets the masking character for the <see cref="T:System.Windows.Controls.PasswordBox" />.</summary>
      <returns>A masking character to echo when the user enters text into the <see cref="T:System.Windows.Controls.PasswordBox" />.  
 The default value is a bullet character (●).</returns>
    </member>
    <member name="F:System.Windows.Controls.PasswordBox.PasswordCharProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.PasswordBox.PasswordChar" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.PasswordBox.Paste">
      <summary>Replaces the current selection in the <see cref="T:System.Windows.Controls.PasswordBox" /> with the contents of the Clipboard.</summary>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.SecurePassword">
      <summary>Gets the password currently held by the <see cref="T:System.Windows.Controls.PasswordBox" /> as a <see cref="T:System.Security.SecureString" />.</summary>
      <returns>A secure string representing the password currently held by the <see cref="T:System.Windows.Controls.PasswordBox" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.PasswordBox.SelectAll">
      <summary>Selects the entire contents of the <see cref="T:System.Windows.Controls.PasswordBox" />.</summary>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.SelectionBrush">
      <summary>Gets or sets the brush that highlights selected text.</summary>
      <returns>A brush that highlights selected text.</returns>
    </member>
    <member name="F:System.Windows.Controls.PasswordBox.SelectionBrushProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.PasswordBox.SelectionBrush" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.SelectionOpacity">
      <summary>Gets or sets the opacity of the <see cref="P:System.Windows.Controls.PasswordBox.SelectionBrush" />.</summary>
      <returns>The opacity of the <see cref="P:System.Windows.Controls.PasswordBox.SelectionBrush" />. The default is 0.4.</returns>
    </member>
    <member name="F:System.Windows.Controls.PasswordBox.SelectionOpacityProperty">
      <summary>Identifies the <see cref="F:System.Windows.Controls.PasswordBox.SelectionOpacityProperty" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.SelectionTextBrush">
      <summary>Gets or sets a value that defines the brush used for selected text in the <see cref="T:System.Windows.Controls.PasswordBox" /> control.</summary>
      <returns>The brush used for selected text.</returns>
    </member>
    <member name="F:System.Windows.Controls.PasswordBox.SelectionTextBrushProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.PasswordBox.SelectionTextBrush" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.AutoToolTipPlacement">
      <summary>Describes the means by which the automatic <see cref="T:System.Windows.Controls.ToolTip" /> is positioned on a <see cref="T:System.Windows.Controls.Slider" /> control.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.AutoToolTipPlacement.BottomRight">
      <summary>For a horizontal <see cref="T:System.Windows.Controls.Slider" /> show the automatic <see cref="T:System.Windows.Controls.ToolTip" /> at the bottom edge of the <see cref="T:System.Windows.Controls.Primitives.Thumb" />. For a vertical <see cref="T:System.Windows.Controls.Slider" /> show the automatic <see cref="T:System.Windows.Controls.ToolTip" /> at the right edge of the <see cref="T:System.Windows.Controls.Primitives.Thumb" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.AutoToolTipPlacement.None">
      <summary>No automatic <see cref="T:System.Windows.Controls.ToolTip" /></summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.AutoToolTipPlacement.TopLeft">
      <summary>For a horizontal <see cref="T:System.Windows.Controls.Slider" /> show the automatic <see cref="T:System.Windows.Controls.ToolTip" /> at the top edge of the <see cref="T:System.Windows.Controls.Primitives.Thumb" />. For a vertical <see cref="T:System.Windows.Controls.Slider" /> show the automatic <see cref="T:System.Windows.Controls.ToolTip" /> at the left edge of the <see cref="T:System.Windows.Controls.Primitives.Thumb" />.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.BulletDecorator">
      <summary>Represents a layout control that aligns a bullet and another visual object.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.BulletDecorator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.BulletDecorator.ArrangeOverride(System.Windows.Size)">
      <summary>Overrides the default content arrangement behavior for the <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> control.</summary>
      <param name="arrangeSize">The available <see cref="T:System.Windows.Size" /> to use to lay out the content of the <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> control.</param>
      <returns>The computed size of the <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> control.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.BulletDecorator.Background">
      <summary>Gets or sets the background color for a <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> control.</summary>
      <returns>The background color for the <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Bullet" /> and <see cref="P:System.Windows.Controls.Decorator.Child" /> of a <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" />. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.BulletDecorator.BackgroundProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Background" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.BulletDecorator.Bullet">
      <summary>Gets or sets the object to use as the bullet in a <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" />.</summary>
      <returns>The <see cref="T:System.Windows.UIElement" /> to use as the bullet. The default is <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.BulletDecorator.GetVisualChild(System.Int32)">
      <summary>Gets the child element that is at the specified index.</summary>
      <param name="index">The specified index for the child element.</param>
      <returns>The <see cref="T:System.Windows.Media.Visual" /> child element that is at the specified index.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than 0.  
-or-  
<paramref name="index" /> is greater than or equal to <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.VisualChildrenCount" />.</exception>
    </member>
    <member name="P:System.Windows.Controls.Primitives.BulletDecorator.LogicalChildren">
      <summary>Gets an enumerator for the logical child elements of the <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> control.</summary>
      <returns>The enumerator that provides access to the logical child elements of the <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> control. The default is <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.BulletDecorator.MeasureOverride(System.Windows.Size)">
      <summary>Overrides the default measurement behavior for the objects of a <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> control.</summary>
      <param name="constraint">The upper <see cref="T:System.Windows.Size" /> limit of the <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" />.</param>
      <returns>The required <see cref="T:System.Windows.Size" /> for the <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> control, based on the size of its <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Bullet" /> and <see cref="P:System.Windows.Controls.Decorator.Child" /> objects.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.BulletDecorator.OnRender(System.Windows.Media.DrawingContext)">
      <summary>Renders the content of a <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> control.</summary>
      <param name="dc">The <see cref="T:System.Windows.Media.DrawingContext" /> for the <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" />.</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.BulletDecorator.VisualChildrenCount">
      <summary>Gets the number of visual child elements for the <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> control.</summary>
      <returns>The number of visual elements that are defined for the <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" />. The default is 0.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ButtonBase">
      <summary>Represents the base class for all <see cref="T:System.Windows.Controls.Button" /> controls.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> class.</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.ButtonBase.Click">
      <summary>Occurs when a <see cref="T:System.Windows.Controls.Button" /> is clicked.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ButtonBase.ClickEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> routed event.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode">
      <summary>Gets or sets when the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event occurs.</summary>
      <returns>When the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event occurs. The default value is <see cref="F:System.Windows.Controls.ClickMode.Release" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ButtonBase.ClickModeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ButtonBase.Command">
      <summary>Gets or sets the command to invoke when this button is pressed.</summary>
      <returns>A command to invoke when this button is pressed. The default value is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter">
      <summary>Gets or sets the parameter to pass to the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> property.</summary>
      <returns>Parameter to pass to the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> property.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ButtonBase.CommandParameterProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter" /> dependency property.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ButtonBase.CommandProperty">
      <summary>Identifies the routed <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget">
      <summary>Gets or sets the element on which to raise the specified command.</summary>
      <returns>Element on which to raise a command.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ButtonBase.CommandTargetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ButtonBase.IsEnabledCore">
      <summary>Gets the value of the <see cref="P:System.Windows.ContentElement.IsEnabled" /> property.</summary>
      <returns>
        <see langword="true" /> if the control is enabled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed">
      <summary>Gets a value that indicates whether a <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> is currently activated.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> is activated; otherwise <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ButtonBase.IsPressedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
      <summary>Responds when the <see cref="P:System.Windows.Controls.AccessText.AccessKey" /> for this control is called.</summary>
      <param name="e">The event data for the <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnClick">
      <summary>Raises the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> routed event.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Called when the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /> property changes.</summary>
      <param name="e">The data for <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.KeyDown" /> routed event that occurs when the user presses a key while this control has focus.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.KeyUp" /> routed event that occurs when the user releases a key while this control has focus.</summary>
      <param name="e">The event data for the <see cref="E:System.Windows.UIElement.KeyUp" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>Called when an element loses keyboard focus.</summary>
      <param name="e">The event data for the <see cref="E:System.Windows.IInputElement.LostKeyboardFocus" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.LostMouseCapture" /> routed event that occurs when this control is no longer receiving mouse event messages.</summary>
      <param name="e">The event data for the <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>Provides class handling for the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" /> routed event that occurs when the mouse enters this control.</summary>
      <param name="e">The event data for the <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeave" /> routed event that occurs when the mouse leaves an element.</summary>
      <param name="e">The event data for the <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> routed event that occurs when the left mouse button is pressed while the mouse pointer is over this control.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> routed event that occurs when the left mouse button is released while the mouse pointer is over this control.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.MouseMove" /> routed event that occurs when the mouse pointer moves while over this element.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
      <summary>Called when the rendered size of a control changes.</summary>
      <param name="sizeInfo">Specifies the size changes.</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.CalendarButton">
      <summary>Represents a month or year on a <see cref="T:System.Windows.Controls.Calendar" /> object.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CalendarButton.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.CalendarButton" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.CalendarButton.HasSelectedDays">
      <summary>Gets a value that indicates whether this button represents a year or month that contains selected dates.</summary>
      <returns>
        <see langword="true" /> if this button represents a year or month that contains selected dates; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.CalendarButton.HasSelectedDaysProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.CalendarButton.HasSelectedDays" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.CalendarButton.IsInactive">
      <summary>Gets a value that indicates whether this button represents a year that is not in the currently displayed decade.</summary>
      <returns>
        <see langword="true" /> if this button represents a day that is not in the currently displayed month, or a year that is not in the currently displayed decade; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.CalendarButton.IsInactiveProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.CalendarButton.IsInactive" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.CalendarDayButton">
      <summary>Represents a day on a <see cref="T:System.Windows.Controls.Calendar" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CalendarDayButton.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.CalendarDayButton" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.CalendarDayButton.IsBlackedOut">
      <summary>Gets a value that indicates whether the date is unavailable.</summary>
      <returns>
        <see langword="true" /> if the date unavailable; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.CalendarDayButton.IsBlackedOutProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.CalendarDayButton.IsBlackedOut" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.CalendarDayButton.IsHighlighted">
      <summary>Gets a value that indicates whether this button is highlighted.</summary>
      <returns>
        <see langword="true" /> if the button is highlighted; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.CalendarDayButton.IsHighlightedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.CalendarDayButton.IsHighlighted" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.CalendarDayButton.IsInactive">
      <summary>Gets a value that indicates whether this button represents a day that is not in the currently displayed month.</summary>
      <returns>
        <see langword="true" /> if the button represents a day that is not in the currently displayed month; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.CalendarDayButton.IsInactiveProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.CalendarDayButton.IsInactive" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.CalendarDayButton.IsSelected">
      <summary>Gets a value that indicates whether the date represented by this button is selected.</summary>
      <returns>
        <see langword="true" /> if the date is selected; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.CalendarDayButton.IsSelectedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.CalendarDayButton.IsSelected" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.CalendarDayButton.IsToday">
      <summary>Gets a value that indicates whether the date represented by this button is the current date.</summary>
      <returns>
        <see langword="true" /> if the date is the current date; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.CalendarDayButton.IsTodayProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.CalendarDayButton.IsToday" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.CalendarItem">
      <summary>Represents the currently displayed month or year on a <see cref="T:System.Windows.Controls.Calendar" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CalendarItem.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.CalendarItem" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.CalendarItem.DayTitleTemplateResourceKey">
      <summary>Gets or sets the resource key for the <see cref="T:System.Windows.DataTemplate" /> that displays the days of the week.</summary>
      <returns>The resource key for the <see cref="T:System.Windows.DataTemplate" /> that displays the days of the week.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CalendarItem.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.Primitives.CalendarItem" /> when a new template is applied.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.CustomPopupPlacement">
      <summary>Defines custom placement parameters for a <see cref="T:System.Windows.Controls.Primitives.Popup" /> control.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CustomPopupPlacement.#ctor(System.Windows.Point,System.Windows.Controls.Primitives.PopupPrimaryAxis)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> structure.</summary>
      <param name="point">The <see cref="T:System.Windows.Point" /> that is relative to the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> where the upper-left corner of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> is placed.</param>
      <param name="primaryAxis">The <see cref="T:System.Windows.Controls.Primitives.PopupPrimaryAxis" /> along which a <see cref="T:System.Windows.Controls.Primitives.Popup" /> control moves when it is obstructed by a screen edge.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CustomPopupPlacement.Equals(System.Object)">
      <summary>Compares this structure with another <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> structure to determine whether they are equal.</summary>
      <param name="o">The <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> structure to compare.</param>
      <returns>
        <see langword="true" /> if the structures have the same values; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CustomPopupPlacement.GetHashCode">
      <summary>Gets the hash code for this structure.</summary>
      <returns>The hash code for this structure.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CustomPopupPlacement.op_Equality(System.Windows.Controls.Primitives.CustomPopupPlacement,System.Windows.Controls.Primitives.CustomPopupPlacement)">
      <summary>Compares two <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> structures to determine whether they are equal.</summary>
      <param name="placement1">The first <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> structure to compare.</param>
      <param name="placement2">The second <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> structure to compare.</param>
      <returns>
        <see langword="true" /> if the structures have the same values; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CustomPopupPlacement.op_Inequality(System.Windows.Controls.Primitives.CustomPopupPlacement,System.Windows.Controls.Primitives.CustomPopupPlacement)">
      <summary>Compares two <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> structures to determine whether they are not equal.</summary>
      <param name="placement1">The first <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> structure to compare.</param>
      <param name="placement2">The second <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> structure to compare.</param>
      <returns>
        <see langword="true" /> if the structures do not have the same values; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.CustomPopupPlacement.Point">
      <summary>Gets or sets the point that is relative to the target object where the upper-left corner of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control is placed.</summary>
      <returns>A <see cref="T:System.Windows.Point" /> that is used to position a <see cref="T:System.Windows.Controls.Primitives.Popup" /> control. The default value is (0,0).</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.CustomPopupPlacement.PrimaryAxis">
      <summary>Gets or sets the direction in which to move a <see cref="T:System.Windows.Controls.Primitives.Popup" /> control when the <see cref="T:System.Windows.Controls.Primitives.Popup" /> is obscured by screen boundaries.</summary>
      <returns>The direction in which to move a <see cref="T:System.Windows.Controls.Primitives.Popup" /> control when the <see cref="T:System.Windows.Controls.Primitives.Popup" /> is obscured by screen boundaries.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback">
      <summary>Represents a method that provides custom positioning for a <see cref="T:System.Windows.Controls.Primitives.Popup" /> control.</summary>
      <param name="popupSize">The <see cref="T:System.Windows.Size" /> of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control.</param>
      <param name="targetSize">The <see cref="T:System.Windows.Size" /> of the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" />.</param>
      <param name="offset">The <see cref="T:System.Windows.Point" /> computed from the <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> and <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /> property values.</param>
      <returns>An array of possible <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> positions for the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control relative to the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DataGridCellsPresenter">
      <summary>Used within the template of a <see cref="T:System.Windows.Controls.DataGrid" /> to specify the location in the control's visual tree where the cells are to be added.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.DataGridCellsPresenter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.ArrangeOverride(System.Windows.Size)">
      <summary>Called to arrange and size the content of a <see cref="T:System.Windows.Controls.Control" /> object.</summary>
      <param name="finalSize">The final area within the parent that this element should use to arrange itself and its children.</param>
      <returns>The size of the control.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>Clears the container reference for the specified cell.</summary>
      <param name="element">The <see cref="T:System.Windows.Controls.DataGridCell" /> to clear.</param>
      <param name="item">The data item. This value is not used.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.GetContainerForItemOverride">
      <summary>Returns a new <see cref="T:System.Windows.Controls.DataGridCell" /> instance to contain a cell value.</summary>
      <returns>A new <see cref="T:System.Windows.Controls.DataGridCell" /> instance.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.IsItemItsOwnContainerOverride(System.Object)">
      <summary>Determines if the specified item is (or is eligible to be) its own container.</summary>
      <param name="item">The item to check.</param>
      <returns>
        <see langword="true" /> if the item is (or is eligible to be) its own container; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridCellsPresenter.Item">
      <summary>Gets the data item that the row represents.</summary>
      <returns>The data item that the row represents.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.MeasureOverride(System.Windows.Size)">
      <summary>Called to remeasure a control.</summary>
      <param name="availableSize">The available size that this element can give to child elements.</param>
      <returns>The size of the control, up to the maximum specified by constraint.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.OnApplyTemplate">
      <summary>It's invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.OnColumnsChanged(System.Collections.ObjectModel.ObservableCollection{System.Windows.Controls.DataGridColumn},System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>Updates the displayed cells when the <see cref="P:System.Windows.Controls.DataGrid.Columns" /> collection has changed.</summary>
      <param name="columns">The <see cref="P:System.Windows.Controls.DataGrid.Columns" /> collection.</param>
      <param name="e">The event data from the <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" /> event of the <see cref="P:System.Windows.Controls.DataGrid.Columns" /> collection.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.OnItemChanged(System.Object,System.Object)">
      <summary>Updates the displayed cells when the <see cref="P:System.Windows.Controls.Primitives.DataGridCellsPresenter.Item" /> property value has changed.</summary>
      <param name="oldItem">The previous value of the <see cref="P:System.Windows.Controls.Primitives.DataGridCellsPresenter.Item" /> property.</param>
      <param name="newItem">The new value of the <see cref="P:System.Windows.Controls.Primitives.DataGridCellsPresenter.Item" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.OnRender(System.Windows.Media.DrawingContext)">
      <summary>Called by the layout system to draw a horizontal line below the cells if horizontal grid lines are visible.</summary>
      <param name="drawingContext">The drawing instructions for the cells. This context is provided to the layout system.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>Prepares the cell to display the specified item.</summary>
      <param name="element">The cell to prepare.</param>
      <param name="item">The item to display.</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DataGridColumnHeader">
      <summary>Represents an individual <see cref="T:System.Windows.Controls.DataGrid" /> column header.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.DataGridColumnHeader" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeader.CanUserSort">
      <summary>Gets a value that indicates whether the user can click this column header to sort the <see cref="T:System.Windows.Controls.DataGrid" /> by the associated column.</summary>
      <returns>
        <see langword="true" /> if the user can click this column header to sort the <see cref="T:System.Windows.Controls.DataGrid" /> by the associated column; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DataGridColumnHeader.CanUserSortProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.CanUserSort" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeader.Column">
      <summary>Gets the <see cref="T:System.Windows.Controls.DataGridColumn" /> associated with this column header.</summary>
      <returns>The column associated with this column header.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeader.ColumnFloatingHeaderStyleKey">
      <summary>Gets the key that references the style for displaying column headers during a header drag operation.</summary>
      <returns>The style key for floating column headers.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeader.ColumnHeaderDropSeparatorStyleKey">
      <summary>Gets the key that references the style for the drop location indicator during a header drag operation.</summary>
      <returns>The style key for the drop location indicator.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeader.DisplayIndex">
      <summary>Gets the display position of the column associated with this column header relative to the other columns in the <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
      <returns>The display position of associated column relative to the other columns in the <see cref="T:System.Windows.Controls.DataGrid" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DataGridColumnHeader.DisplayIndexProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.DisplayIndex" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeader.IsFrozen">
      <summary>Gets a value that indicates whether the column associated with this column header is prevented from scrolling horizontally.</summary>
      <returns>
        <see langword="true" /> if the associated column is prevented from scrolling horizontally; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DataGridColumnHeader.IsFrozenProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.IsFrozen" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.OnApplyTemplate">
      <summary>Builds the visual tree for the column header when a new template is applied.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.OnClick">
      <summary>Raises the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event and initiates sorting.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.OnCreateAutomationPeer">
      <summary>Returns a new <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeaderAutomationPeer" /> for this column header.</summary>
      <returns>A new automation peer for this column header.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.LostMouseCapture" /> routed event that occurs when this control is no longer receiving mouse event messages.</summary>
      <param name="e">The event data for the <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> routed event that occurs when the left mouse button is pressed while the mouse pointer is over this control.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> routed event that occurs when the left mouse button is released while the mouse pointer is over this control.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.MouseMove" /> routed event that occurs when the mouse pointer moves while over this element.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeader.SeparatorBrush">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> used to paint the column header separator lines.</summary>
      <returns>The brush used to paint column header separator lines.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DataGridColumnHeader.SeparatorBrushProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.SeparatorBrush" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeader.SeparatorVisibility">
      <summary>Gets or sets the user interface (UI) visibility of the column header separator lines.</summary>
      <returns>The UI visibility of the column header separator lines. The default is <see cref="F:System.Windows.Visibility.Visible" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DataGridColumnHeader.SeparatorVisibilityProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.SeparatorVisibility" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeader.SortDirection">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.DataGrid" /> is sorted by the associated column and whether the column values are in ascending or descending order.</summary>
      <returns>The sort direction of the column or <see langword="null" /> if unsorted.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DataGridColumnHeader.SortDirectionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.SortDirection" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter">
      <summary>Used within the template of a <see cref="T:System.Windows.Controls.DataGrid" /> to specify the location in the control's visual tree where the column headers are to be added.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.ArrangeOverride(System.Windows.Size)">
      <summary>Called to arrange and size the content of a <see cref="T:System.Windows.Controls.Control" /> object.</summary>
      <param name="finalSize">The final area within the parent that this element should use to arrange itself and its children.</param>
      <returns>The size of the control.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>When overridden in a derived class, undoes the effects of the <see cref="M:System.Windows.Controls.ItemsControl.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" /> method.</summary>
      <param name="element">The container element.</param>
      <param name="item">The item.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.GetContainerForItemOverride">
      <summary>Returns a new <see cref="T:System.Windows.Controls.Primitives.DataGridColumnHeader" /> instance to contain a column header value.</summary>
      <returns>A new <see cref="T:System.Windows.Controls.Primitives.DataGridColumnHeader" /> instance.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.GetLayoutClip(System.Windows.Size)">
      <summary>Returns a geometry for a clipping mask. The mask applies if the layout system attempts to arrange an element that is larger than the available display space.</summary>
      <param name="layoutSlotSize">The rendered size of the column header.</param>
      <returns>The clipping geometry.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.GetVisualChild(System.Int32)">
      <summary>Returns the <see cref="T:System.Windows.Media.Visual" /> child at the specified index.</summary>
      <param name="index">The index of the <see cref="T:System.Windows.Media.Visual" /> child to return.</param>
      <returns>The child.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.IsItemItsOwnContainerOverride(System.Object)">
      <summary>Determines if the specified item is (or is eligible to be) its own container.</summary>
      <param name="item">The item to check.</param>
      <returns>
        <see langword="true" /> if the item is (or is eligible to be) its own container; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.MeasureOverride(System.Windows.Size)">
      <summary>Called to remeasure a control.</summary>
      <param name="availableSize">The available size that this element can give to child elements.</param>
      <returns>The size of the control, up to the maximum specified by constraint.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.OnApplyTemplate">
      <summary>It's invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.OnCreateAutomationPeer">
      <summary>Returns a new <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeadersPresenterAutomationPeer" /> for this presenter.</summary>
      <returns>A new automation peer for this presenter.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>Prepares the specified element to display the specified item.</summary>
      <param name="element">Element used to display the specified item.</param>
      <param name="item">Specified item.</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.VisualChildrenCount">
      <summary>Gets the number of <see cref="T:System.Windows.Media.Visual" /> children in this presenter.</summary>
      <returns>The number of visual children.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DataGridDetailsPresenter">
      <summary>Used within the template of a <see cref="T:System.Windows.Controls.DataGrid" /> to specify the location in the control's visual tree where the row details are to be added.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridDetailsPresenter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.DataGridDetailsPresenter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridDetailsPresenter.ArrangeOverride(System.Windows.Size)">
      <summary>Positions the single child element and determines the content of a <see cref="T:System.Windows.Controls.ContentPresenter" /> object.</summary>
      <param name="finalSize">The final area within the parent that this element should use to arrange itself and its children.</param>
      <returns>The actual size needed by the element.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridDetailsPresenter.MeasureOverride(System.Windows.Size)">
      <summary>Determines the size of the <see cref="T:System.Windows.Controls.ContentPresenter" /> object based on the sizing properties, margin, and requested size of the child content.</summary>
      <param name="availableSize">The available size that this element can give to child elements.</param>
      <returns>The size that is required to arrange child content.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridDetailsPresenter.OnCreateAutomationPeer">
      <summary>Returns a new <see cref="T:System.Windows.Automation.Peers.DataGridDetailsPresenterAutomationPeer" /> for this presenter.</summary>
      <returns>A new automation peer for this presenter.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridDetailsPresenter.OnRender(System.Windows.Media.DrawingContext)">
      <summary>Called by the layout system to draw a horizontal line below the row details section if horizontal grid lines are visible.</summary>
      <param name="drawingContext">The drawing instructions for the row details. This context is provided to the layout system.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridDetailsPresenter.OnVisualParentChanged(System.Windows.DependencyObject)">
      <summary>Invoked when the parent of this element in the visual tree is changed. Overrides <see cref="M:System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)" />.</summary>
      <param name="oldParent">The old parent element. May be <see langword="null" /> to indicate that the element did not have a visual parent previously.</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DataGridRowHeader">
      <summary>Represents an individual <see cref="T:System.Windows.Controls.DataGrid" /> row header.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowHeader.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.DataGridRowHeader" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridRowHeader.IsRowSelected">
      <summary>Gets a value that indicates whether the row is selected.</summary>
      <returns>
        <see langword="true" /> if the row is selected; otherwise, <see langword="false" />. The registered default is <see langword="false" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DataGridRowHeader.IsRowSelectedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DataGridRowHeader.IsRowSelected" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowHeader.MeasureOverride(System.Windows.Size)">
      <summary>Measures the children of a <see cref="T:System.Windows.Controls.Primitives.DataGridRowHeader" /> to prepare for arranging them during the <see cref="M:System.Windows.Controls.Control.ArrangeOverride(System.Windows.Size)" /> pass.</summary>
      <param name="availableSize">The available size that this element can give to child elements. Indicates an upper limit that child elements should not exceed.</param>
      <returns>The size that the <see cref="T:System.Windows.Controls.Primitives.DataGridRowHeader" /> determines it needs during layout, based on its calculations of child object allocated sizes.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowHeader.OnApplyTemplate">
      <summary>Builds the visual tree for the row header when a new template is applied.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowHeader.OnClick">
      <summary>Raises the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event and initiates row selection or drag operations.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowHeader.OnCreateAutomationPeer">
      <summary>Returns a new <see cref="T:System.Windows.Automation.Peers.DataGridRowHeaderAutomationPeer" /> for this row header.</summary>
      <returns>A new automation peer for this row header.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridRowHeader.SeparatorBrush">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> used to paint the row header separator lines.</summary>
      <returns>The brush used to paint row header separator lines.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DataGridRowHeader.SeparatorBrushProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DataGridRowHeader.SeparatorBrush" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridRowHeader.SeparatorVisibility">
      <summary>Gets or sets the user interface (UI) visibility of the row header separator lines.</summary>
      <returns>The UI visibility of the row header separator lines. The default is <see cref="F:System.Windows.Visibility.Visible" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DataGridRowHeader.SeparatorVisibilityProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DataGridRowHeader.SeparatorVisibility" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DataGridRowsPresenter">
      <summary>Used within the template of a <see cref="T:System.Windows.Controls.DataGrid" /> to specify the location in the control's visual tree where the rows are to be added.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowsPresenter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.DataGridRowsPresenter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowsPresenter.MeasureOverride(System.Windows.Size)">
      <summary>Measures the child elements of a <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> in anticipation of arranging them during the <see cref="M:System.Windows.Controls.VirtualizingStackPanel.ArrangeOverride(System.Windows.Size)" /> pass.</summary>
      <param name="constraint">An upper limit <see cref="T:System.Windows.Size" /> that should not be exceeded.</param>
      <returns>The <see cref="T:System.Windows.Size" /> that represents the desired size of the element.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowsPresenter.OnCleanUpVirtualizedItem(System.Windows.Controls.CleanUpVirtualizedItemEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem" /> event for rows that have scrolled out of view.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowsPresenter.OnIsItemsHostChanged(System.Boolean,System.Boolean)">
      <summary>Indicates that the <see cref="P:System.Windows.Controls.Panel.IsItemsHost" /> property value has changed.</summary>
      <param name="oldIsItemsHost">The old property value.</param>
      <param name="newIsItemsHost">The new property value.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowsPresenter.OnViewportSizeChanged(System.Windows.Size,System.Windows.Size)">
      <summary>Called when the size of the viewport changes.</summary>
      <param name="oldViewportSize">The old size of the viewport.</param>
      <param name="newViewportSize">The new size of the viewport.</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DatePickerTextBox">
      <summary>Represents the text input of a <see cref="T:System.Windows.Controls.DatePicker" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DatePickerTextBox.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.DatePickerTextBox" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DatePickerTextBox.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.Primitives.DatePickerTextBox" /> when a new template is applied.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DocumentPageView">
      <summary>Represents a viewport for a paginated <see cref="T:System.Windows.Documents.DocumentPage" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentPageView.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentPageView.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges the content to fit a specified view size.</summary>
      <param name="finalSize">The maximum size that the page view should use to arrange itself and its children.</param>
      <returns>The actual size that the page view used to arrange itself and its children.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentPageView.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" />.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentPageView.DocumentPage">
      <summary>Gets the <see cref="T:System.Windows.Documents.DocumentPage" /> associated with this view.</summary>
      <returns>The document page associated with this view.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentPageView.DocumentPaginator">
      <summary>Gets or sets the <see cref="T:System.Windows.Documents.DocumentPaginator" /> used to retrieve content pages for this view.</summary>
      <returns>The paginator that retrieves content pages for this view.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentPageView.GetService(System.Type)">
      <summary>Gets the service object of the specified type.</summary>
      <param name="serviceType">The type of service object to get.</param>
      <returns>A service object of type <paramref name="serviceType" />, or <see langword="null" /> if there is no service object of type <paramref name="serviceType" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentPageView.GetVisualChild(System.Int32)">
      <summary>Returns the <see cref="T:System.Windows.Media.Visual" /> child at a specified index.</summary>
      <param name="index">The index of the visual child to return.</param>
      <returns>The visual child at the specified index.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero, or greater than or equal to <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.VisualChildrenCount" />.</exception>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentPageView.IsDisposed">
      <summary>Gets a value that indicates whether <see cref="M:System.Windows.Controls.Primitives.DocumentPageView.Dispose" /> has been called for this instance.</summary>
      <returns>
        <see langword="true" /> if <see cref="M:System.Windows.Controls.Primitives.DocumentPageView.Dispose" /> has been called for this <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentPageView.MeasureOverride(System.Windows.Size)">
      <summary>Returns the available viewport size that can be given to display the current <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.DocumentPage" />.</summary>
      <param name="availableSize">The maximum available size.</param>
      <returns>The actual desired size.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentPageView.OnCreateAutomationPeer">
      <summary>Creates and returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for this <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" />.</summary>
      <returns>The new <see cref="T:System.Windows.Automation.Peers.DocumentPageViewAutomationPeer" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentPageView.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)">
      <summary>Invoked when the DPI setting for the document page view is changed.</summary>
      <param name="oldDpiScaleInfo">The available size that the parent can give to the child. This is soft constraint.</param>
      <param name="newDpiScaleInfo">The DocumentPageView's desired size.</param>
    </member>
    <member name="E:System.Windows.Controls.Primitives.DocumentPageView.PageConnected">
      <summary>Occurs when a <see cref="T:System.Windows.Media.Visual" /> element of the <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.DocumentPage" /> is connected.</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.DocumentPageView.PageDisconnected">
      <summary>Occurs when a <see cref="T:System.Windows.Media.Visual" /> element of the <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.DocumentPage" /> is disconnected.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentPageView.PageNumber">
      <summary>Gets or sets the page number of the current page displayed.</summary>
      <returns>The zero-based page number of the current page displayed.  The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentPageView.PageNumberProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.PageNumber" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentPageView.Stretch">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.Stretch" /> enumeration that specifies how content should be stretched to fill the display page.</summary>
      <returns>The enumeration value that specifies how content should be stretched to fill the display page.  The default is <see cref="F:System.Windows.Media.Stretch.Uniform" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentPageView.StretchDirection">
      <summary>Gets or sets a <see cref="T:System.Windows.Controls.StretchDirection" /> enumeration that specifies in what scaling directions <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.Stretch" /> should be applied.</summary>
      <returns>The enumeration value that specifies in what scaling directions <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.Stretch" /> should be applied.  The default is <see cref="F:System.Windows.Controls.StretchDirection.DownOnly" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentPageView.StretchDirectionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.StretchDirection" /> dependency property.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentPageView.StretchProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.Stretch" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentPageView.System#IDisposable#Dispose">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.  Use the type-safe <see cref="M:System.Windows.Controls.Primitives.DocumentPageView.Dispose" /> method instead.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentPageView.System#IServiceProvider#GetService(System.Type)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.  Use the type-safe <see cref="M:System.Windows.Controls.Primitives.DocumentPageView.GetService(System.Type)" /> method instead.</summary>
      <param name="serviceType">An object that specifies the type of service object to get.</param>
      <returns>A service object of type <paramref name="serviceType" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentPageView.VisualChildrenCount">
      <summary>Gets the number of visual children contained in this view.</summary>
      <returns>The number of visual children contained in this view.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DocumentViewerBase">
      <summary>Provides a base class for viewers that are intended to display fixed or flow content (represented by a <see cref="T:System.Windows.Documents.FixedDocument" /> or <see cref="T:System.Windows.Documents.FlowDocument" />, respectively).</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.#ctor">
      <summary>Initializes base class values when called by a derived class.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.CancelPrint">
      <summary>Cancels any current printing job.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToNextPage">
      <summary>Gets a value that indicates whether or not the viewer can jump to the next page in the current <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" />.</summary>
      <returns>
        <see langword="true" /> if the viewer can jump to the next page; otherwise, <see langword="false" />.  
This property has no default value.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToNextPageProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToNextPage" /> dependency property.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToNextPagePropertyKey">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToNextPage" /> dependency property key.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToPage(System.Int32)">
      <summary>Returns a value that indicates whether or the viewer is able to jump to the specified page number.</summary>
      <param name="pageNumber">A page number to check for as a valid jump target.</param>
      <returns>A Boolean value that indicates whether or the viewer is able to jump to the specified page number.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToPreviousPage">
      <summary>Gets a value that indicates whether or not the viewer can jump to the previous page in the current <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" />.</summary>
      <returns>
        <see langword="true" /> if the viewer can jump to the previous page; otherwise, <see langword="false" />.  
This property has no default value.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToPreviousPageProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToPreviousPage" /> dependency property.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToPreviousPagePropertyKey">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToPreviousPage" /> dependency property key.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document">
      <summary>Gets or sets a <see cref="T:System.Windows.Documents.IDocumentPaginatorSource" /> to be paginated and displayed by the viewer.</summary>
      <returns>A <see cref="T:System.Windows.Documents.IDocumentPaginatorSource" /> to be paginated and displayed by the viewer.  
 The default property is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.DocumentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.FirstPage">
      <summary>Causes the viewer to jump to the first page of the current document (represented by the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" /> property).</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.GetIsMasterPage(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.IsMasterPage" /> attached property for a specified dependency object.</summary>
      <param name="element">A dependency object from which to retrieve the value of <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.IsMasterPage" />.</param>
      <returns>The value of the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.IsMasterPage" /> attached property, read from the dependency object specified by element.</returns>
      <exception cref="T:System.ArgumentNullException">Raised if <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.GetMasterPageView">
      <summary>Returns the current master <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> for this viewer.</summary>
      <returns>The current master <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> for this viewer, or null if no master <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> can be found.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.GetPageViewsCollection(System.Boolean@)">
      <summary>Creates and returns a new, read-only collection of <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> objects that are associated with the current display document (represented by the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" /> property).</summary>
      <param name="changed">Returns <see langword="true" /> on the first call to <see cref="M:System.Windows.Controls.Primitives.DocumentViewerBase.GetPageViewsCollection(System.Boolean@)" /> or if the collection has not changed since the previous <see cref="M:System.Windows.Controls.Primitives.DocumentViewerBase.GetPageViewsCollection(System.Boolean@)" /> call; otherwise, <see langword="false" /> if the collection has changed since the last <see cref="M:System.Windows.Controls.Primitives.DocumentViewerBase.GetPageViewsCollection(System.Boolean@)" /> call.</param>
      <returns>A read-only collection of <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> objects that are associated with the current display document.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.GoToPage(System.Int32)">
      <summary>Causes the viewer to jump to a specified page number.</summary>
      <param name="pageNumber">The number of the page to jump to.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.InvalidatePageViews">
      <summary>Causes the working <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.PageViews" /> collection to be re-built.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentViewerBase.IsMasterPage">
      <summary>Gets a value that indicates whether or not a child element in the viewer should be used as a master page.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.IsMasterPageProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.IsMasterPage" /> attached property</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.LastPage">
      <summary>Causes the viewer to jump to the last page in the current document (represented by the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" /> property).</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentViewerBase.LogicalChildren">
      <summary>Gets an enumerator for the children in the logical tree of the viewer.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to enumerate the logical children of the viewer.  
 This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentViewerBase.MasterPageNumber">
      <summary>Gets the page number for the current master page.</summary>
      <returns>The page number for the current master page, or 0 if no Document is currently loaded.  
 This property has no default value.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.MasterPageNumberProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.MasterPageNumber" /> dependency property.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.MasterPageNumberPropertyKey">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.MasterPageNumber" /> dependency property key.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.NextPage">
      <summary>Causes the viewer to jump to the next page in the current document (represented by the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" /> property).</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnApplyTemplate">
      <summary>Builds the visual tree for the viewer.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnBringIntoView(System.Windows.DependencyObject,System.Windows.Rect,System.Int32)">
      <summary>Invoked whenever the <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> event reaches an element derived from this class in its route.  Implement this method to add class handling for this event.</summary>
      <param name="element">The element from which the <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> event originated.</param>
      <param name="rect">A rectangular region, in the coordinate space of <paramref name="element" />, which should be made visible.</param>
      <param name="pageNumber">The page number for the page that contains <paramref name="element" />.</param>
      <exception cref="T:System.ArgumentNullException">Raised if element is null.</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnCancelPrintCommand">
      <summary>Handles the <see cref="P:System.Windows.Input.ApplicationCommands.CancelPrint" /> routed command.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnCreateAutomationPeer">
      <summary>Creates and returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> object for this viewer.</summary>
      <returns>An <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> object for this viewer.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnDocumentChanged">
      <summary>Called whenever the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" /> property is modified.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)">
      <summary>Invoked when the DPI scale changes. Sets the DPI of the flow document to the new scale.</summary>
      <param name="oldDpiScaleInfo">The previous DPI scale setting.</param>
      <param name="newDpiScaleInfo">The new DPI scale setting.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnFirstPageCommand">
      <summary>Handles the <see cref="P:System.Windows.Input.NavigationCommands.FirstPage" /> routed command.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnGoToPageCommand(System.Int32)">
      <summary>Handles the <see cref="P:System.Windows.Input.NavigationCommands.GoToPage" /> routed command.</summary>
      <param name="pageNumber">The number of the page to jump to.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnLastPageCommand">
      <summary>Handles the <see cref="P:System.Windows.Input.NavigationCommands.LastPage" /> routed command.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnMasterPageNumberChanged">
      <summary>Called whenever the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.MasterPageNumber" /> property is modified.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnNextPageCommand">
      <summary>Handles the <see cref="P:System.Windows.Input.NavigationCommands.NextPage" /> routed command.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnPageViewsChanged">
      <summary>Called whenever the working set of <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> objects for this viewer (represented by the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.PageViews" /> property) is modified.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnPreviousPageCommand">
      <summary>Handles the <see cref="P:System.Windows.Input.NavigationCommands.PreviousPage" /> routed command.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnPrintCommand">
      <summary>Handles the <see cref="P:System.Windows.Input.ApplicationCommands.Print" /> routed command.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentViewerBase.PageCount">
      <summary>Gets the total number of pages in the current <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" />.</summary>
      <returns>The number of pages in the current document, or 0 if no document is currently loaded.  
 This property has no default value.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.PageCountProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.PageCount" /> dependency property.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.PageCountPropertyKey">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.PageCount" /> dependency property key.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentViewerBase.PageViews">
      <summary>Gets a read-only collection of the active <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> objects contained within the viewer.</summary>
      <returns>A read-only collection of the active <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> objects contained within the viewer.  
 This property has no default value.</returns>
    </member>
    <member name="E:System.Windows.Controls.Primitives.DocumentViewerBase.PageViewsChanged">
      <summary>Occurs when the collection of <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> items associated with this viewer (represented by the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.PageViews" /> property) changes.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.PreviousPage">
      <summary>Causes the viewer to jump to the previous page of the current document (represented by the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" /> property).</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.Print">
      <summary>Invokes a standard Print dialog which can be used to print the contents of the viewer and configure printing preferences.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.SetIsMasterPage(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.IsMasterPage" /> attached property on a specified dependency object.</summary>
      <param name="element">A dependency object on which to set the value of <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.IsMasterPage" />.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised if element is null.</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.System#IServiceProvider#GetService(System.Type)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="serviceType">An object that specifies the type of service object to get.</param>
      <returns>A service object of type <paramref name="serviceType" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="value">An object to add as a child.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="text">A string to add to the object.</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DragCompletedEventArgs">
      <summary>Provides information about the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragCompleted" /> event that occurs when a user completes a drag operation with the mouse of a <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DragCompletedEventArgs.#ctor(System.Double,System.Double,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.DragCompletedEventArgs" /> class.</summary>
      <param name="horizontalChange">The horizontal change in position of the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control, resulting from the drag operation.</param>
      <param name="verticalChange">The vertical change in position of the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control, resulting from the drag operation.</param>
      <param name="canceled">A Boolean value that indicates whether the drag operation was canceled by a call to the <see cref="M:System.Windows.Controls.Primitives.Thumb.CancelDrag" /> method.</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragCompletedEventArgs.Canceled">
      <summary>Gets whether the drag operation for a <see cref="T:System.Windows.Controls.Primitives.Thumb" /> was canceled by a call to the <see cref="M:System.Windows.Controls.Primitives.Thumb.CancelDrag" /> method.</summary>
      <returns>
        <see langword="true" /> if a drag operation was canceled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragCompletedEventArgs.HorizontalChange">
      <summary>Gets the horizontal change in position of the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> after the user drags the control with the mouse.</summary>
      <returns>The horizontal difference between the point at which the user pressed the left mouse button and the point at which the user released the button during a drag operation of a <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control. There is no default value.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DragCompletedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>Converts a method that handles the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragCompleted" /> event to the <see cref="T:System.Windows.Controls.Primitives.DragCompletedEventHandler" /> type.</summary>
      <param name="genericHandler">The event handler delegate.</param>
      <param name="genericTarget">The <see cref="T:System.Windows.Controls.Primitives.Thumb" /> that uses the handler.</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragCompletedEventArgs.VerticalChange">
      <summary>Gets the vertical change in position of the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> after the user drags the control with the mouse.</summary>
      <returns>The vertical difference between the point at which the user pressed the left mouse button and the point at which the user released the button during a drag operation of a <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control. There is no default value.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DragCompletedEventHandler">
      <summary>Represents a method that will handle the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragCompleted" /> routed event  of a <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control.</summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DragDeltaEventArgs">
      <summary>Provides information about the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> event that occurs one or more times when a user drags a <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control with the mouse.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DragDeltaEventArgs.#ctor(System.Double,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.DragDeltaEventArgs" /> class.</summary>
      <param name="horizontalChange">The horizontal change in the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> position since the last <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> event.</param>
      <param name="verticalChange">The vertical change in the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> position since the last <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> event.</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragDeltaEventArgs.HorizontalChange">
      <summary>Gets the horizontal distance that the mouse has moved since the previous <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> event when the user drags the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control with the mouse.</summary>
      <returns>A horizontal change in position of the mouse during a drag operation. There is no default value.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DragDeltaEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>Converts a method that handles the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> event to the <see cref="T:System.Windows.Controls.Primitives.DragDeltaEventHandler" /> type.</summary>
      <param name="genericHandler">The event handler delegate.</param>
      <param name="genericTarget">The <see cref="T:System.Windows.Controls.Primitives.Thumb" /> that uses the handler.</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragDeltaEventArgs.VerticalChange">
      <summary>Gets the vertical distance that the mouse has moved since the previous <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> event when the user drags the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> with the mouse.</summary>
      <returns>A vertical change in position of the mouse during a drag operation. There is no default value.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DragDeltaEventHandler">
      <summary>Represents a method that will handle the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> routed event of a <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control.</summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DragStartedEventArgs">
      <summary>Provides information about the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragStarted" /> event that occurs when a user drags a <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control with the mouse.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DragStartedEventArgs.#ctor(System.Double,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.DragStartedEventArgs" /> class.</summary>
      <param name="horizontalOffset">The horizontal offset of the mouse click with respect to the screen coordinates of the <see cref="T:System.Windows.Controls.Primitives.Thumb" />.</param>
      <param name="verticalOffset">The vertical offset of the mouse click with respect to the screen coordinates of the <see cref="T:System.Windows.Controls.Primitives.Thumb" />.</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragStartedEventArgs.HorizontalOffset">
      <summary>Gets the horizontal offset of the mouse click relative to the screen coordinates of the <see cref="T:System.Windows.Controls.Primitives.Thumb" />.</summary>
      <returns>The horizontal offset of the mouse click with respect to the upper-left corner of the bounding box of the <see cref="T:System.Windows.Controls.Primitives.Thumb" />. There is no default value.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DragStartedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>Converts a method that handles the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragStarted" /> event to the <see cref="T:System.Windows.Controls.Primitives.DragStartedEventHandler" /> type.</summary>
      <param name="genericHandler">The event handler delegate.</param>
      <param name="genericTarget">The <see cref="T:System.Windows.Controls.Primitives.Thumb" /> that uses the handler.</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragStartedEventArgs.VerticalOffset">
      <summary>Gets the vertical offset of the mouse click relative to the screen coordinates of the <see cref="T:System.Windows.Controls.Primitives.Thumb" />.</summary>
      <returns>The horizontal offset of the mouse click with respect to the upper-left corner of the bounding box of the <see cref="T:System.Windows.Controls.Primitives.Thumb" />. There is no default value.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DragStartedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragStarted" /> routed event of a <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control.</summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.GeneratorDirection">
      <summary>Specifies the direction in which item generation will occur. <see cref="T:System.Windows.Controls.Primitives.GeneratorDirection" /> is used by <see cref="Overload:System.Windows.Controls.Primitives.IItemContainerGenerator.StartAt" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.GeneratorDirection.Backward">
      <summary>Specifies to generate items in a backward direction.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.GeneratorDirection.Forward">
      <summary>Specifies to generate items in a forward direction.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.GeneratorPosition">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> is used to describe the position of an item that is managed by <see cref="T:System.Windows.Controls.ItemContainerGenerator" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GeneratorPosition.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> with the specified index and offset.</summary>
      <param name="index">An <see cref="T:System.Int32" /> index that is relative to the generated (realized) items. -1 is a special value that refers to a fictitious item at the beginning or the end of the items list.</param>
      <param name="offset">An <see cref="T:System.Int32" /> offset that is relative to the ungenerated (unrealized) items near the indexed item. An offset of 0 refers to the indexed element itself, an offset 1 refers to the next ungenerated (unrealized) item, and an offset of -1 refers to the previous item.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GeneratorPosition.Equals(System.Object)">
      <summary>Compares the specified instance and the current instance of <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> for value equality.</summary>
      <param name="o">The <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> instance to compare.</param>
      <returns>
        <see langword="true" /> if <paramref name="o" /> and this instance of <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> have the same values.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GeneratorPosition.GetHashCode">
      <summary>Returns the hash code for this <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />.</summary>
      <returns>The hash code for this <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.GeneratorPosition.Index">
      <summary>Gets or sets the <see cref="T:System.Int32" /> index that is relative to the generated (realized) items.</summary>
      <returns>An <see cref="T:System.Int32" /> index that is relative to the generated (realized) items.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.GeneratorPosition.Offset">
      <summary>Gets or sets the <see cref="T:System.Int32" /> offset that is relative to the ungenerated (unrealized) items near the indexed item.</summary>
      <returns>An <see cref="T:System.Int32" /> offset that is relative to the ungenerated (unrealized) items near the indexed item.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GeneratorPosition.op_Equality(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorPosition)">
      <summary>Compares two <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> objects for value equality.</summary>
      <param name="gp1">The first instance to compare.</param>
      <param name="gp2">The second instance to compare.</param>
      <returns>
        <see langword="true" /> if the two objects are equal; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GeneratorPosition.op_Inequality(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorPosition)">
      <summary>Compares two <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> objects for value inequality.</summary>
      <param name="gp1">The first instance to compare.</param>
      <param name="gp2">The second instance to compare.</param>
      <returns>
        <see langword="true" /> if the values are not equal; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GeneratorPosition.ToString">
      <summary>Returns a string representation of this instance of <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />.</summary>
      <returns>A string representation of this instance of <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /></returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.GeneratorStatus">
      <summary>Used by <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> to indicate the status of its item generation.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.GeneratorStatus.ContainersGenerated">
      <summary>The generator has finished generating containers.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.GeneratorStatus.Error">
      <summary>The generator has finished generating containers, but encountered one or more errors.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.GeneratorStatus.GeneratingContainers">
      <summary>The generator is generating containers.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.GeneratorStatus.NotStarted">
      <summary>The generator has not tried to generate content.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.GridViewRowPresenterBase">
      <summary>Represents the base class for classes that define the layout for a row of data where different data items are displayed in different columns.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GridViewRowPresenterBase.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Windows.Controls.Primitives.GridViewRowPresenterBase" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.GridViewRowPresenterBase.Columns">
      <summary>Gets or sets a <see cref="T:System.Windows.Controls.GridViewColumnCollection" />.</summary>
      <returns>A collection of <see cref="T:System.Windows.Controls.GridViewColumn" /> objects that display data. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.GridViewRowPresenterBase.ColumnsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.GridViewRowPresenterBase.Columns" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GridViewRowPresenterBase.GetVisualChild(System.Int32)">
      <summary>Gets the visual child in the row item at the specified index.</summary>
      <param name="index">The index of the child.</param>
      <returns>A <see cref="T:System.Windows.Media.Visual" /> object that contains the child at the specified index.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.GridViewRowPresenterBase.LogicalChildren">
      <summary>Gets an enumerator for the logical children of a row.</summary>
      <returns>The <see cref="T:System.Collections.IEnumerator" /> for the logical children of this row.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GridViewRowPresenterBase.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="managerType">The type of the <see cref="T:System.Windows.WeakEventManager" /> calling this method.</param>
      <param name="sender">Object that originated the event.</param>
      <param name="args">Event data.</param>
      <returns>
        <see langword="true" /> if the listener handled the event.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GridViewRowPresenterBase.ToString">
      <summary>Returns a string representation of a <see cref="T:System.Windows.Controls.Primitives.GridViewRowPresenterBase" /> object.</summary>
      <returns>A string that contains the type of the object and the number of columns.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.GridViewRowPresenterBase.VisualChildrenCount">
      <summary>Gets the number of visual children for a row.</summary>
      <returns>The number of visual children for the current row.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.IContainItemStorage">
      <summary>Provides a property bag implementation for item panels.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IContainItemStorage.Clear">
      <summary>Clears all property associations.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IContainItemStorage.ClearItemValue(System.Object,System.Windows.DependencyProperty)">
      <summary>Removes the association between the specified item and property.</summary>
      <param name="item">The associated item.</param>
      <param name="dp">The associated property.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IContainItemStorage.ClearValue(System.Windows.DependencyProperty)">
      <summary>Removes the specified property from all property bags.</summary>
      <param name="dp">The property to remove.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IContainItemStorage.ReadItemValue(System.Object,System.Windows.DependencyProperty)">
      <summary>Returns the value of the specified property that is associated with the specified item.</summary>
      <param name="item">The item that has the specified property associated with it.</param>
      <param name="dp">The property whose value to return.</param>
      <returns>The value of the specified property that is associated with the specified item.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IContainItemStorage.StoreItemValue(System.Object,System.Windows.DependencyProperty,System.Object)">
      <summary>Stores the specified property and value and associates them with the specified item.</summary>
      <param name="item">The item to associate the value and property with.</param>
      <param name="dp">The property that is associated with the specified item.</param>
      <param name="value">The value of the associated property.</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.IHierarchicalVirtualizationAndScrollInfo">
      <summary>Provides properties through which a control that displays hierarchical data communicates with a <see cref="T:System.Windows.Controls.VirtualizingPanel" />.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IHierarchicalVirtualizationAndScrollInfo.Constraints">
      <summary>Gets or sets an object that represents the sizes of the control's viewport and cache.</summary>
      <returns>An object that represents the sizes of the control's viewport and cache.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IHierarchicalVirtualizationAndScrollInfo.HeaderDesiredSizes">
      <summary>Gets an object that represents the desired size of the control's header, in device-independent units (1/96th inch per unit) and in logical units.</summary>
      <returns>An object that represents the desired size of the control's header, in device-independent units (1/96th inch per unit) and in logical units.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IHierarchicalVirtualizationAndScrollInfo.InBackgroundLayout">
      <summary>Gets a value that indicates whether the control's layout pass occurs at a lower priority.</summary>
      <returns>
        <see langword="true" /> if the control's layout pass occurs at a lower priority; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IHierarchicalVirtualizationAndScrollInfo.ItemDesiredSizes">
      <summary>Gets or sets an object that represents the desired size of the control's items, in device-independent units (1/96th inch per unit) and in logical units.</summary>
      <returns>An object that represents the desired size of the control's items, in device-independent units (1/96th inch per unit) and in logical units.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IHierarchicalVirtualizationAndScrollInfo.ItemsHost">
      <summary>Gets the <see cref="T:System.Windows.Controls.Panel" /> that displays the items of the control.</summary>
      <returns>The <see cref="T:System.Windows.Controls.Panel" /> that displays the items of the control.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IHierarchicalVirtualizationAndScrollInfo.MustDisableVirtualization">
      <summary>Gets or sets a value that indicates whether the owning <see cref="T:System.Windows.Controls.ItemsControl" /> should virtualize its items.</summary>
      <returns>
        <see langword="true" /> if the owning <see cref="T:System.Windows.Controls.ItemsControl" /> should virtualize its items; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.IItemContainerGenerator">
      <summary>An interface that is implemented by classes which are responsible for generating user interface (UI) content on behalf of a host.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.GenerateNext">
      <summary>Returns the container element used to display the next item.</summary>
      <returns>A <see cref="T:System.Windows.DependencyObject" /> that is the container element which is used to display the next item.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.GenerateNext(System.Boolean@)">
      <summary>Returns the container element used to display the next item, and whether the container element has been newly generated (realized).</summary>
      <param name="isNewlyRealized">Is <see langword="true" /> if the returned <see cref="T:System.Windows.DependencyObject" /> is newly generated (realized); otherwise, <see langword="false" />.</param>
      <returns>A <see cref="T:System.Windows.DependencyObject" /> that is the container element which is used to display the next item.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.GeneratorPositionFromIndex(System.Int32)">
      <summary>Returns the <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> object that maps to the item at the specified index.</summary>
      <param name="itemIndex">The index of desired item.</param>
      <returns>An <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> object that maps to the item at the specified index.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.GetItemContainerGeneratorForPanel(System.Windows.Controls.Panel)">
      <summary>Returns the <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> appropriate for use by the specified panel.</summary>
      <param name="panel">The panel for which to return an appropriate <see cref="T:System.Windows.Controls.ItemContainerGenerator" />.</param>
      <returns>An <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> appropriate for use by the specified panel.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.IndexFromGeneratorPosition(System.Windows.Controls.Primitives.GeneratorPosition)">
      <summary>Returns the index that maps to the specified <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />.</summary>
      <param name="position">The index of desired item.  
 The <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> for the desired index.</param>
      <returns>An <see cref="T:System.Int32" /> that is the index which maps to the specified <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.PrepareItemContainer(System.Windows.DependencyObject)">
      <summary>Prepares the specified element as the container for the corresponding item.</summary>
      <param name="container">The container to prepare. Normally, <paramref name="container" /> is the result of the previous call to <see cref="Overload:System.Windows.Controls.Primitives.IItemContainerGenerator.GenerateNext" />.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.Remove(System.Windows.Controls.Primitives.GeneratorPosition,System.Int32)">
      <summary>Removes one or more generated (realized) items.</summary>
      <param name="position">The <see cref="T:System.Int32" /> index of the element to remove. <paramref name="position" /> must refer to a previously generated (realized) item, which means its offset must be zero.</param>
      <param name="count">The <see cref="T:System.Int32" /> number of elements to remove, starting at <paramref name="position" />.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.RemoveAll">
      <summary>Removes all generated (realized) items.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.StartAt(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorDirection)">
      <summary>Prepares the generator to generate items, starting at the specified <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />, and in the specified <see cref="T:System.Windows.Controls.Primitives.GeneratorDirection" />.</summary>
      <param name="position">A <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />, that specifies the position of the item to start generating items at.</param>
      <param name="direction">A <see cref="T:System.Windows.Controls.Primitives.GeneratorDirection" /> that specifies the direction which to generate items.</param>
      <returns>An <see cref="T:System.IDisposable" /> object that tracks the lifetime of the generation process.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.StartAt(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorDirection,System.Boolean)">
      <summary>Prepares the generator to generate items, starting at the specified <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />, and in the specified <see cref="T:System.Windows.Controls.Primitives.GeneratorDirection" />, and controlling whether or not to start at a generated (realized) item.</summary>
      <param name="position">A <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />, that specifies the position of the item to start generating items at.</param>
      <param name="direction">Specifies the position of the item to start generating items at.</param>
      <param name="allowStartAtRealizedItem">A <see cref="T:System.Boolean" /> that specifies whether to start at a generated (realized) item.</param>
      <returns>An <see cref="T:System.IDisposable" /> object that tracks the lifetime of the generation process.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.IRecyclingItemContainerGenerator">
      <summary>Extends the <see cref="T:System.Windows.Controls.Primitives.IItemContainerGenerator" /> interface to reuse the UI content it generates. Classes that are responsible for generating user interface (UI) content on behalf of a host implement this interface.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IRecyclingItemContainerGenerator.Recycle(System.Windows.Controls.Primitives.GeneratorPosition,System.Int32)">
      <summary>Disassociates item containers from their data items and saves the containers so they can be reused later for other data items.</summary>
      <param name="position">The zero-based index of the first element to reuse. <paramref name="position" /> must refer to a previously generated (realized) item.</param>
      <param name="count">The number of elements to reuse, starting at <paramref name="position" />.</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.IScrollInfo">
      <summary>Represents the main scrollable region inside a <see cref="T:System.Windows.Controls.ScrollViewer" /> control.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.CanHorizontallyScroll">
      <summary>Gets or sets a value that indicates whether scrolling on the horizontal axis is possible.</summary>
      <returns>
        <see langword="true" /> if scrolling is possible; otherwise, <see langword="false" />. This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.CanVerticallyScroll">
      <summary>Gets or sets a value that indicates whether scrolling on the vertical axis is possible.</summary>
      <returns>
        <see langword="true" /> if scrolling is possible; otherwise, <see langword="false" />. This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.ExtentHeight">
      <summary>Gets the vertical size of the extent.</summary>
      <returns>A <see cref="T:System.Double" /> that represents, in device independent pixels, the vertical size of the extent.  
 This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.ExtentWidth">
      <summary>Gets the horizontal size of the extent.</summary>
      <returns>A <see cref="T:System.Double" /> that represents, in device independent pixels, the horizontal size of the extent. This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.HorizontalOffset">
      <summary>Gets the horizontal offset of the scrolled content.</summary>
      <returns>A <see cref="T:System.Double" /> that represents, in device independent pixels, the horizontal offset. This property has no default value.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.LineDown">
      <summary>Scrolls down within content by one logical unit.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.LineLeft">
      <summary>Scrolls left within content by one logical unit.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.LineRight">
      <summary>Scrolls right within content by one logical unit.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.LineUp">
      <summary>Scrolls up within content by one logical unit.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.MakeVisible(System.Windows.Media.Visual,System.Windows.Rect)">
      <summary>Forces content to scroll until the coordinate space of a <see cref="T:System.Windows.Media.Visual" /> object is visible.</summary>
      <param name="visual">A <see cref="T:System.Windows.Media.Visual" /> that becomes visible.</param>
      <param name="rectangle">A bounding rectangle that identifies the coordinate space to make visible.</param>
      <returns>A <see cref="T:System.Windows.Rect" /> that is visible.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.MouseWheelDown">
      <summary>Scrolls down within content after a user clicks the wheel button on a mouse.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.MouseWheelLeft">
      <summary>Scrolls left within content after a user clicks the wheel button on a mouse.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.MouseWheelRight">
      <summary>Scrolls right within content after a user clicks the wheel button on a mouse.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.MouseWheelUp">
      <summary>Scrolls up within content after a user clicks the wheel button on a mouse.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.PageDown">
      <summary>Scrolls down within content by one page.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.PageLeft">
      <summary>Scrolls left within content by one page.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.PageRight">
      <summary>Scrolls right within content by one page.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.PageUp">
      <summary>Scrolls up within content by one page.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.ScrollOwner">
      <summary>Gets or sets a <see cref="T:System.Windows.Controls.ScrollViewer" /> element that controls scrolling behavior.</summary>
      <returns>A <see cref="T:System.Windows.Controls.ScrollViewer" /> element that controls scrolling behavior. This property has no default value.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.SetHorizontalOffset(System.Double)">
      <summary>Sets the amount of horizontal offset.</summary>
      <param name="offset">The degree to which content is horizontally offset from the containing viewport.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.SetVerticalOffset(System.Double)">
      <summary>Sets the amount of vertical offset.</summary>
      <param name="offset">The degree to which content is vertically offset from the containing viewport.</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.VerticalOffset">
      <summary>Gets the vertical offset of the scrolled content.</summary>
      <returns>A <see cref="T:System.Double" /> that represents, in device independent pixels, the vertical offset of the scrolled content. Valid values are between zero and the <see cref="P:System.Windows.Controls.Primitives.IScrollInfo.ExtentHeight" /> minus the <see cref="P:System.Windows.Controls.Primitives.IScrollInfo.ViewportHeight" />. This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.ViewportHeight">
      <summary>Gets the vertical size of the viewport for this content.</summary>
      <returns>A <see cref="T:System.Double" /> that represents, in device independent pixels, the vertical size of the viewport for this content. This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.ViewportWidth">
      <summary>Gets the horizontal size of the viewport for this content.</summary>
      <returns>A <see cref="T:System.Double" /> that represents, in device independent pixels, the horizontal size of the viewport for this content. This property has no default value.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ItemsChangedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> event.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ItemsChangedEventArgs.Action">
      <summary>Gets the action that occurred on the items collection.</summary>
      <returns>Returns the action that occurred.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ItemsChangedEventArgs.ItemCount">
      <summary>Gets the number of items that were involved in the change.</summary>
      <returns>Integer that represents the number of items involved in the change.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ItemsChangedEventArgs.ItemUICount">
      <summary>Gets the number of user interface (UI) elements involved in the change.</summary>
      <returns>Integer that represents the number of UI elements involved in the change.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ItemsChangedEventArgs.OldPosition">
      <summary>Gets the position in the collection before the change occurred.</summary>
      <returns>Returns a <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ItemsChangedEventArgs.Position">
      <summary>Gets the position in the collection where the change occurred.</summary>
      <returns>Returns a <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ItemsChangedEventHandler">
      <summary>Represents the method that will handle the  <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> event.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.LayoutInformation">
      <summary>Defines methods that provide additional information about the layout state of an element.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.LayoutInformation.GetLayoutClip(System.Windows.FrameworkElement)">
      <summary>Returns a <see cref="T:System.Windows.Media.Geometry" /> that represents the visible region of an element.</summary>
      <param name="element">The <see cref="T:System.Windows.FrameworkElement" /> whose layout clip is desired.</param>
      <returns>A <see cref="T:System.Windows.Media.Geometry" /> that represents the visible region of an <paramref name="element" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.LayoutInformation.GetLayoutExceptionElement(System.Windows.Threading.Dispatcher)">
      <summary>Returns a <see cref="T:System.Windows.UIElement" /> that was being processed by the layout engine at the moment of an unhandled exception.</summary>
      <param name="dispatcher">The <see cref="T:System.Windows.Threading.Dispatcher" /> object that defines the scope of the operation. There is one dispatcher per layout engine instance.</param>
      <returns>A <see cref="T:System.Windows.UIElement" /> that was being processed by the layout engine at the moment of an unhandled exception.</returns>
      <exception cref="T:System.ArgumentNullException">Occurs when <paramref name="dispatcher" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.LayoutInformation.GetLayoutSlot(System.Windows.FrameworkElement)">
      <summary>Returns a <see cref="T:System.Windows.Rect" /> that represents the layout partition that is reserved for a child element.</summary>
      <param name="element">The <see cref="T:System.Windows.FrameworkElement" /> whose layout slot is desired.</param>
      <returns>A <see cref="T:System.Windows.Rect" /> that represents the layout slot of the element.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.MenuBase">
      <summary>Represents a control that defines choices for users to select.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MenuBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.MenuBase" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MenuBase.GetContainerForItemOverride">
      <summary>Creates or identifies the element used to display the specified item.</summary>
      <returns>The element used to display the specified item.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MenuBase.HandleMouseButton(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Called when a mouse button is pressed or released.</summary>
      <param name="e">The event data for a mouse event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MenuBase.IsItemItsOwnContainerOverride(System.Object)">
      <summary>Determines whether the specified item is, or is eligible to be, its own item container.</summary>
      <param name="item">The item to check whether it is an item container.</param>
      <returns>
        <see langword="true" /> if the item is a <see cref="T:System.Windows.Controls.MenuItem" /> or a <see cref="T:System.Windows.Controls.Separator" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.MenuBase.ItemContainerTemplateSelector">
      <summary>Gets or sets the custom logic for choosing a template used to display each item.</summary>
      <returns>A custom object that provides logic and returns an item container.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.MenuBase.ItemContainerTemplateSelectorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.MenuBase.ItemContainerTemplateSelector" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MenuBase.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Responds to a change to the <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" /> property.</summary>
      <param name="e">The event data for the <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MenuBase.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.KeyDown" /> routed event that occurs when the user presses a key.</summary>
      <param name="e">The event data for the <see cref="E:System.Windows.UIElement.KeyDown" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MenuBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeave" /> routed event that occurs when the mouse leaves the control.</summary>
      <param name="e">The event data for the <see cref="E:System.Windows.UIElement.MouseLeave" /> event.</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplate">
      <summary>Gets or sets a value that indicates whether the menu selects different item containers, depending on the type of the item in the underlying collection or some other heuristic.</summary>
      <returns>
        <see langword="true" /> the menu selects different item containers; otherwise, <see langword="false" />.  
The registered default is <see langword="false" />. For more information about what can influence the value, see Dependency Property Value Precedence.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplate" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.MultiSelector">
      <summary>Provides an abstract class for controls that allow multiple items to be selected.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MultiSelector.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MultiSelector.BeginUpdateSelectedItems">
      <summary>Starts a new selection transaction.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Controls.Primitives.MultiSelector.IsUpdatingSelectedItems" /> is <see langword="true" /> when this method is called.</exception>
    </member>
    <member name="P:System.Windows.Controls.Primitives.MultiSelector.CanSelectMultipleItems">
      <summary>Gets or sets a value that indicates whether the multiple items in the <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> can be selected at a time.</summary>
      <returns>
        <see langword="true" /> if multiple items in the <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> can be selected at a time; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MultiSelector.EndUpdateSelectedItems">
      <summary>Commits the selected items to the <see cref="T:System.Windows.Controls.Primitives.MultiSelector" />.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Controls.Primitives.MultiSelector.IsUpdatingSelectedItems" /> is <see langword="false" /> when this method is called.</exception>
    </member>
    <member name="P:System.Windows.Controls.Primitives.MultiSelector.IsUpdatingSelectedItems">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> is currently performing a bulk update to the <see cref="P:System.Windows.Controls.Primitives.MultiSelector.SelectedItems" /> collection.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> is currently performing a bulk update to the <see cref="P:System.Windows.Controls.Primitives.MultiSelector.SelectedItems" /> collection; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MultiSelector.SelectAll">
      <summary>Selects all of the items in the <see cref="T:System.Windows.Controls.Primitives.MultiSelector" />.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Controls.Primitives.MultiSelector.CanSelectMultipleItems" /> is <see langword="false" />.</exception>
    </member>
    <member name="P:System.Windows.Controls.Primitives.MultiSelector.SelectedItems">
      <summary>Gets the items in the <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> that are selected.</summary>
      <returns>The items in the <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> that are selected.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MultiSelector.UnselectAll">
      <summary>Unselects all of the items in the <see cref="T:System.Windows.Controls.Primitives.MultiSelector" />.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.PlacementMode">
      <summary>Describes the placement of where a <see cref="T:System.Windows.Controls.Primitives.Popup" /> control appears on the screen.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Absolute">
      <summary>A position of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control relative to the upper-left corner of the screen and at an offset that is defined by the <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> and <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /> property values. If the screen edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup" />, the control then repositions itself to align with the edge.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.AbsolutePoint">
      <summary>A position of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control relative to the upper-left corner of the screen and at an offset that is defined by the <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> and <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /> property values. If the screen edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup" />, the control extends in the opposite direction from the axis defined by the <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> or <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" />=.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Bottom">
      <summary>A position of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control where the control  aligns its upper edge with the lower edge of the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> and aligns its left edge with the left edge of the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" />. If the lower screen-edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup" />, the control repositions itself so that its lower edge aligns with the upper edge of the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" />. If the upper screen-edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup" />, the control then repositions itself so that its upper edge aligns with the upper screen-edge.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Center">
      <summary>A position of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control where it is centered over the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" />. If a screen edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup" />, the control repositions itself to align with the screen edge.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Custom">
      <summary>A position and repositioning behavior for the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control that is defined by the  <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback" /> delegate specified by the <see cref="P:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback" /> property.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Left">
      <summary>A <see cref="T:System.Windows.Controls.Primitives.Popup" /> control that aligns its right edge with the left edge of the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> and aligns its upper edge with the upper edge of the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" />. If the left screen-edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup" />, the <see cref="T:System.Windows.Controls.Primitives.Popup" /> repositions itself so that its left edge aligns with the right edge of the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" />. If the right screen-edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup" />, the right edge of the control aligns with the right screen-edge. If the upper or lower screen-edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup" />, the control repositions itself to align with the obscuring screen edge.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Mouse">
      <summary>A position of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control that aligns its upper edge with the lower edge of the bounding box of the mouse and aligns its left edge with the left edge of the bounding box of the mouse. If the lower screen-edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup" />, it repositions itself to align with the upper edge of the bounding box of the mouse. If the upper screen-edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup" />, the control repositions itself to align with the upper screen-edge.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.MousePoint">
      <summary>A position of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control relative to the tip of the mouse cursor and at an offset that is defined by the <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> and <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /> property values. If a horizontal or vertical screen edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup" />, it opens in the opposite direction from the obscuring edge. If the opposite screen edge also obscures the <see cref="T:System.Windows.Controls.Primitives.Popup" />, it then aligns with the obscuring screen edge.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Relative">
      <summary>A position of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control relative to the upper-left corner of the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> and at an offset that is defined by the <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> and <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /> property values. If the screen edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup" />, the control repositions itself to align with the screen edge.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.RelativePoint">
      <summary>A position of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control relative to the upper-left corner of the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> and at an offset that is defined by the <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> and <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /> property values. If a screen edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup" />, the <see cref="T:System.Windows.Controls.Primitives.Popup" /> extends in the opposite direction from the direction from the axis defined by the <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> or <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" />. If the opposite screen edge also obscures the <see cref="T:System.Windows.Controls.Primitives.Popup" />, the control then aligns with this screen edge.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Right">
      <summary>A position of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control that aligns its left edge with the right edge of the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> and aligns its upper edge with the upper edge of the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" />. If the right screen-edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup" />, the control repositions itself so that its left edge aligns with the left edge of the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" />. If the left screen-edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup" />, the control repositions itself so that its left edge aligns with the left screen-edge. If the upper or lower screen-edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup" />, the control then repositions itself to align with the obscuring screen edge.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Top">
      <summary>A position of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control that aligns its lower edge with the upper edge of the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> and aligns its left edge with the left edge of the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" />. If the upper screen-edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup" />, the control repositions itself so that its upper edge aligns with the lower edge of the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" />. If the lower screen-edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup" />, the lower edge of the control aligns with the lower screen-edge. If the left or right screen-edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup" />, it then repositions itself to align with the obscuring screen.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.Popup">
      <summary>Represents a pop-up window that has content.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency">
      <summary>Gets or sets a value that indicates whether a <see cref="T:System.Windows.Controls.Primitives.Popup" /> control can contain transparent content.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control can contain transparent content; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.AllowsTransparencyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.Child">
      <summary>Gets or sets the content of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control.</summary>
      <returns>The <see cref="T:System.Windows.UIElement" /> content of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.ChildProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.Child" /> dependency property.</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Popup.Closed">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> property changes to <see langword="false" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.CreateRootPopup(System.Windows.Controls.Primitives.Popup,System.Windows.UIElement)">
      <summary>Attaches a child element to a <see cref="T:System.Windows.Controls.Primitives.Popup" /> control.</summary>
      <param name="popup">The <see cref="T:System.Windows.Controls.Primitives.Popup" /> to which to add child content.</param>
      <param name="child">The <see cref="T:System.Windows.UIElement" /> child content.</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback">
      <summary>Gets or sets a delegate handler method that positions the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control.</summary>
      <returns>The <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback" /> delegate method that provides placement information for the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallbackProperty">
      <summary>Identifies the <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.GetUIParentCore">
      <summary>Returns the logical parent of a <see cref="T:System.Windows.Controls.Primitives.Popup" />.</summary>
      <returns>If the <see cref="T:System.Windows.Controls.Primitives.Popup" /> does not have a defined parent and the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> is not <see langword="null" />, the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> is returned. Otherwise, the return values are the same as <see cref="M:System.Windows.FrameworkElement.GetUIParentCore" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.HasDropShadow">
      <summary>Gets a value that indicates whether a <see cref="T:System.Windows.Controls.Primitives.Popup" /> is displayed with a drop shadow effect.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.Primitives.Popup" /> is displayed with a drop shadow; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.HasDropShadowProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.HasDropShadow" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
      <summary>Get or sets the horizontal distance between the target origin and the popup alignment point.</summary>
      <returns>The horizontal distance between the target origin and the popup alignment point. For information about the target origin and popup alignment point, see Popup Placement Behavior. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.HorizontalOffsetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.IsOpen">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.Primitives.Popup" /> is visible.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.Primitives.Popup" /> is visible; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.IsOpenProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.LogicalChildren">
      <summary>Gets an enumerator that you can use to access the logical child elements of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that you can use to access the logical child elements of a <see cref="T:System.Windows.Controls.Primitives.Popup" /> control. The default is <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.MeasureOverride(System.Windows.Size)">
      <summary>Determines the required size of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> content within the visual tree of the logical parent.</summary>
      <param name="availableSize">The available size that this element can give to the child. You can use infinity as a value to indicate that the element can size to whatever content is available.</param>
      <returns>A <see cref="T:System.Windows.Size" /> structure that has the <see cref="P:System.Windows.Size.Height" /> and <see cref="P:System.Windows.Size.Width" /> properties both equal to zero (0).</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.OnClosed(System.EventArgs)">
      <summary>Responds when the value of the <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> property changes from to <see langword="true" /> to <see langword="false" />.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.OnOpened(System.EventArgs)">
      <summary>Responds to the condition in which the value of the <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> property changes from <see langword="false" /> to <see langword="true" />.</summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Popup.Opened">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> property changes to <see langword="true" />.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.Placement">
      <summary>Gets or sets the orientation of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control when the control opens, and specifies the behavior of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control when it overlaps screen boundaries.</summary>
      <returns>A <see cref="T:System.Windows.Controls.Primitives.PlacementMode" /> enumeration value that determines the orientation of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control when the control opens, and that specifies how the control interacts with screen boundaries. The default is <see cref="F:System.Windows.Controls.Primitives.PlacementMode.Bottom" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.PlacementProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.Placement" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle">
      <summary>Gets or sets the rectangle relative to which the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control is positioned when it opens.</summary>
      <returns>The rectangle that is used to position the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.PlacementRectangleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.PlacementTarget">
      <summary>Gets or sets the element relative to which the <see cref="T:System.Windows.Controls.Primitives.Popup" /> is positioned when it opens.</summary>
      <returns>The <see cref="T:System.Windows.UIElement" /> that is the logical parent of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.PlacementTargetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.PopupAnimation">
      <summary>Gets or sets an animation for the opening and closing of a <see cref="T:System.Windows.Controls.Primitives.Popup" /> control.</summary>
      <returns>The <see cref="T:System.Windows.Controls.Primitives.PopupAnimation" /> enumeration value that defines an animation to open and close a <see cref="T:System.Windows.Controls.Primitives.Popup" /> control. The default is <see cref="F:System.Windows.Controls.Primitives.PopupAnimation.None" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.PopupAnimationProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.PopupAnimation" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.StaysOpen">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control closes when the control is no longer in focus.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control closes when <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> property is set to <see langword="false" />; <see langword="false" /> if the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control closes when a mouse or keyboard event occurs outside the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control. The default is <see langword="true" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.StaysOpenProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.StaysOpen" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="value">An object to add as a child.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="text">A string to add to the object.</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
      <summary>Gets or sets the vertical distance between the target origin and the popup alignment point.</summary>
      <returns>The vertical distance between the target origin and the popup alignment point. For information about the target origin and popup alignment point, see Popup Placement Behavior. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.PopupAnimation">
      <summary>Describes how a <see cref="T:System.Windows.Controls.Primitives.Popup" /> control animates when it opens.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PopupAnimation.Fade">
      <summary>The <see cref="T:System.Windows.Controls.Primitives.Popup" /> control gradually appears, or fades in. This effect is created by increasing the opacity of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> window over time.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PopupAnimation.None">
      <summary>The <see cref="T:System.Windows.Controls.Primitives.Popup" /> control appears without animation.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PopupAnimation.Scroll">
      <summary>The <see cref="T:System.Windows.Controls.Primitives.Popup" /> control scrolls from the upper-left corner of its parent. If the screen does not provide enough room to allow the <see cref="T:System.Windows.Controls.Primitives.Popup" /> default behavior, the <see cref="T:System.Windows.Controls.Primitives.Popup" /> scrolls from the lower-right corner instead.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PopupAnimation.Slide">
      <summary>The <see cref="T:System.Windows.Controls.Primitives.Popup" /> control slides down or up into place. By default, a <see cref="T:System.Windows.Controls.Primitives.Popup" /> slides down. However, if the screen does not provide enough room for the <see cref="T:System.Windows.Controls.Primitives.Popup" /> to slide down, it slides up instead.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.PopupPrimaryAxis">
      <summary>Describes the direction to move a <see cref="T:System.Windows.Controls.Primitives.Popup" /> control to increase the amount of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> that is visible.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PopupPrimaryAxis.Horizontal">
      <summary>A <see cref="T:System.Windows.Controls.Primitives.Popup" /> control changes position by moving along the horizontal axis of the screen before moving along the vertical axis.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PopupPrimaryAxis.None">
      <summary>A <see cref="T:System.Windows.Controls.Primitives.Popup" /> control changes position according to default <see cref="T:System.Windows.Controls.Primitives.Popup" /> behavior.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PopupPrimaryAxis.Vertical">
      <summary>A <see cref="T:System.Windows.Controls.Primitives.Popup" /> control changes position by moving along the vertical axis of the screen before moving along the horizontal axis.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.RangeBase">
      <summary>Represents an element that has a value within a specific range.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RangeBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RangeBase.LargeChange">
      <summary>Gets or sets a value to be added to or subtracted from the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> of a <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> control.</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> to add to or subtract from the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> of the <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> element. The default is 1.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RangeBase.LargeChangeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RangeBase.Maximum">
      <summary>Gets or sets the highest possible <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> of the range element.</summary>
      <returns>The highest possible <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> of the range element. The default is 1.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RangeBase.MaximumProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RangeBase.Minimum">
      <summary>Gets or sets the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> possible <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> of the range element.</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> possible <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> of the range element. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RangeBase.MinimumProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RangeBase.OnMaximumChanged(System.Double,System.Double)">
      <summary>Called when the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> property changes.</summary>
      <param name="oldMaximum">Old value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> property.</param>
      <param name="newMaximum">New value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RangeBase.OnMinimumChanged(System.Double,System.Double)">
      <summary>Called when the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> property changes.</summary>
      <param name="oldMinimum">Old value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> property.</param>
      <param name="newMinimum">New value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RangeBase.OnValueChanged(System.Double,System.Double)">
      <summary>Raises the <see cref="E:System.Windows.Controls.Primitives.RangeBase.ValueChanged" /> routed event.</summary>
      <param name="oldValue">Old value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> property</param>
      <param name="newValue">New value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> property</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RangeBase.SmallChange">
      <summary>Gets or sets a <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> to be added to or subtracted from the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> of a <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> control.</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> to add to or subtract from the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> of the <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> element. The default is 0.1.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RangeBase.SmallChangeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RangeBase.ToString">
      <summary>Provides a string representation of a <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> object.</summary>
      <returns>Returns the string representation of a <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> object.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RangeBase.Value">
      <summary>Gets or sets the current magnitude of the range control.</summary>
      <returns>The current magnitude of the range control. The default is 0.</returns>
    </member>
    <member name="E:System.Windows.Controls.Primitives.RangeBase.ValueChanged">
      <summary>Occurs when the range value changes.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RangeBase.ValueChangedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.Primitives.RangeBase.ValueChanged" /> routed event.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RangeBase.ValueProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.RepeatButton">
      <summary>Represents a control that raises its <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event repeatedly from the time it is pressed until it is released.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RepeatButton.Delay">
      <summary>Gets or sets the amount of time, in milliseconds, the <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> waits while it is pressed before it starts repeating. The value must be non-negative.</summary>
      <returns>The amount of time, in milliseconds, the <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> waits while it is pressed before it starts repeating. The default is the value of <see cref="P:System.Windows.SystemParameters.KeyboardDelay" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RepeatButton.DelayProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.RepeatButton.Delay" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RepeatButton.Interval">
      <summary>Gets or sets the amount of time, in milliseconds, between repeats once repeating starts. The value must be non-negative.</summary>
      <returns>The amount of time, in milliseconds, between repeats after repeating starts. The default is the value of <see cref="P:System.Windows.SystemParameters.KeyboardSpeed" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RepeatButton.IntervalProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.RepeatButton.Interval" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.OnClick">
      <summary>Raises an automation event and calls the base method to raise the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.OnCreateAutomationPeer">
      <summary>Provides an appropriate <see cref="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer" /> implementation for this control, as part of the WPF infrastructure.</summary>
      <returns>The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Responds to the <see cref="E:System.Windows.UIElement.KeyDown" /> event.</summary>
      <param name="e">The event data for a <see cref="E:System.Windows.UIElement.KeyDown" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.OnKeyUp(System.Windows.Input.KeyEventArgs)">
      <summary>Responds to the <see cref="E:System.Windows.UIElement.KeyUp" /> event.</summary>
      <param name="e">The event data for a <see cref="E:System.Windows.UIElement.KeyUp" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>Called when a <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> loses mouse capture.</summary>
      <param name="e">The event data for a <see cref="E:System.Windows.UIElement.LostMouseCapture" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>Reports when the mouse enters an element.</summary>
      <param name="e">The event data for a <see cref="E:System.Windows.UIElement.MouseEnter" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>Reports when the mouse leaves an element.</summary>
      <param name="e">The event data for a <see cref="E:System.Windows.UIElement.MouseLeave" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Responds to the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> event.</summary>
      <param name="e">The event data for a <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Responds to the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> event.</summary>
      <param name="e">The event data for a <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" /> event.</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ResizeGrip">
      <summary>Represents an implementation of a <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control that enables a <see cref="T:System.Windows.Window" /> to change its size.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ResizeGrip.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.ResizeGrip" /> class.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ScrollBar">
      <summary>Represents a control that provides a scroll bar that has a sliding <see cref="T:System.Windows.Controls.Primitives.Thumb" /> whose position corresponds to a value.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollBar.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> class.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.DeferScrollToHorizontalOffsetCommand">
      <summary>The command that notifies the <see cref="T:System.Windows.Controls.ScrollViewer" /> that the user is dragging the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> of the horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> to the value that is provided in <see cref="P:System.Windows.Input.ExecutedRoutedEventArgs.Parameter" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.DeferScrollToVerticalOffsetCommand">
      <summary>The command that notifies the <see cref="T:System.Windows.Controls.ScrollViewer" /> that the user is dragging the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> of the vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> to the value that is provided in <see cref="P:System.Windows.Input.ExecutedRoutedEventArgs.Parameter" />.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ScrollBar.IsEnabledCore">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> is enabled.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> is enabled in a <see cref="T:System.Windows.Controls.ScrollViewer" /> and the size of the content is larger than the display area; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.LineDownCommand">
      <summary>The command that scrolls a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> by a small amount in the vertical direction of increasing value of its <see cref="T:System.Windows.Controls.Primitives.Track" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.LineLeftCommand">
      <summary>The command that scrolls a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> by a small amount in the horizontal direction of decreasing value of its <see cref="T:System.Windows.Controls.Primitives.Track" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.LineRightCommand">
      <summary>The command that scrolls a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> by a small amount in the horizontal direction of increasing value of its <see cref="T:System.Windows.Controls.Primitives.Track" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.LineUpCommand">
      <summary>The command that scrolls a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> by a small amount in the vertical direction of decreasing value of its <see cref="T:System.Windows.Controls.Primitives.Track" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollBar.OnApplyTemplate">
      <summary>Creates the visual tree for the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollBar.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.FrameworkElement.ContextMenuClosing" /> event that occurs when the <see cref="T:System.Windows.Controls.ContextMenu" /> for a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> closes.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollBar.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> event that occurs when the <see cref="T:System.Windows.Controls.ContextMenu" /> for a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> opens.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollBar.OnCreateAutomationPeer">
      <summary>Creates an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for this <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> control.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.ScrollBarAutomationPeer" /> for the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> control.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollBar.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollBar.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ScrollBar.Orientation">
      <summary>Gets or sets whether the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> is displayed horizontally or vertically.</summary>
      <returns>An <see cref="T:System.Windows.Controls.Orientation" /> enumeration value that defines whether the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> is displayed horizontally or vertically. The default is <see cref="F:System.Windows.Controls.Orientation.Vertical" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.OrientationProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.ScrollBar.Orientation" /> dependency property.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.PageDownCommand">
      <summary>The command that scrolls a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> by a large amount in the vertical direction of increasing value of its <see cref="T:System.Windows.Controls.Primitives.Track" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.PageLeftCommand">
      <summary>The command that scrolls a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> by a large amount in the horizontal direction of decreasing value of its <see cref="T:System.Windows.Controls.Primitives.Track" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.PageRightCommand">
      <summary>The command that scrolls a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> by a large amount in the horizontal direction of increasing value of its <see cref="T:System.Windows.Controls.Primitives.Track" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.PageUpCommand">
      <summary>The command that scrolls a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> by a large amount in the vertical direction of decreasing value of its <see cref="T:System.Windows.Controls.Primitives.Track" />.</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.ScrollBar.Scroll">
      <summary>Occurs one or more times as content scrolls in a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> when the user moves the <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> by using the mouse.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll" /> routed event.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollHereCommand">
      <summary>The command that scrolls a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> to the point of the mouse click that opened the <see cref="T:System.Windows.Controls.ContextMenu" /> in the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToBottomCommand">
      <summary>The command that scrolls a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> to the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> value.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToEndCommand">
      <summary>The command that scrolls the content to the lower-right corner of a <see cref="T:System.Windows.Controls.ScrollViewer" /> control.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToHomeCommand">
      <summary>The command that scrolls the content to the upper-left corner of a <see cref="T:System.Windows.Controls.ScrollViewer" /> control.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToHorizontalOffsetCommand">
      <summary>The command that scrolls a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> in a <see cref="T:System.Windows.Controls.ScrollViewer" /> to the value that is provided in <see cref="P:System.Windows.Input.ExecutedRoutedEventArgs.Parameter" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToLeftEndCommand">
      <summary>The command that scrolls a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> to the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> value for a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToRightEndCommand">
      <summary>The command that scrolls a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> to the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> value for a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToTopCommand">
      <summary>The command that scrolls a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> to the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> value for a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToVerticalOffsetCommand">
      <summary>The command that scrolls a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> in a <see cref="T:System.Windows.Controls.ScrollViewer" /> to the value that is provided in <see cref="P:System.Windows.Input.ExecutedRoutedEventArgs.Parameter" />.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ScrollBar.Track">
      <summary>Gets the <see cref="T:System.Windows.Controls.Primitives.Track" /> for a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> control.</summary>
      <returns>The <see cref="T:System.Windows.Controls.Primitives.Track" /> that is used with a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> control.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ScrollBar.ViewportSize">
      <summary>Gets or sets the amount of the scrollable content that is currently visible.</summary>
      <returns>The amount of the scrollable content that is currently visible. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ViewportSizeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.ScrollBar.ViewportSize" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ScrollEventArgs">
      <summary>Provides data for a <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll" /> event that occurs when the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> of a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> moves.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollEventArgs.#ctor(System.Windows.Controls.Primitives.ScrollEventType,System.Double)">
      <summary>Initializes an instance of the <see cref="T:System.Windows.Controls.Primitives.ScrollEventArgs" /> class by using the specified <see cref="T:System.Windows.Controls.Primitives.ScrollEventType" /> enumeration value and the new location of the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control in the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />.</summary>
      <param name="scrollEventType">A <see cref="T:System.Windows.Controls.Primitives.ScrollEventType" /> enumeration value that describes the type of <see cref="T:System.Windows.Controls.Primitives.Thumb" /> movement that caused the event.</param>
      <param name="newValue">The value that corresponds to the new location of the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> in the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>Performs the appropriate type casting to call the type-safe <see cref="T:System.Windows.Controls.Primitives.ScrollEventHandler" /> delegate for the <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll" /> event.</summary>
      <param name="genericHandler">The event handler to call.</param>
      <param name="genericTarget">The current object along the event's route.</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ScrollEventArgs.NewValue">
      <summary>Gets a value that represents the new location of the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> in the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />.</summary>
      <returns>The value that corresponds to the new position of the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> in the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ScrollEventArgs.ScrollEventType">
      <summary>Gets the <see cref="T:System.Windows.Controls.Primitives.ScrollEventType" /> enumeration value that describes the change in the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> position that caused this event.</summary>
      <returns>A <see cref="T:System.Windows.Controls.Primitives.ScrollEventType" /> enumeration value that describes the type of <see cref="T:System.Windows.Controls.Primitives.Thumb" /> movement that caused the <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll" /> event.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ScrollEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll" /> routed event that occurs when the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> of a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> moves.</summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ScrollEventType">
      <summary>Describes the behavior that caused a <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll" /> event for a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> control.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.EndScroll">
      <summary>The <see cref="T:System.Windows.Controls.Primitives.Thumb" /> was dragged to a new position and is now no longer being dragged by the user.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.First">
      <summary>The <see cref="T:System.Windows.Controls.Primitives.Thumb" /> moved to the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> position of the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />. For a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />, this movement occurs when the CTRL+HOME keys are pressed. This movement corresponds to a <see cref="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToTopCommand" /> in a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> and a <see cref="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToLeftEndCommand" /> in a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.LargeDecrement">
      <summary>The <see cref="T:System.Windows.Controls.Primitives.Thumb" /> moved a specified distance, as determined by the value of <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange" />, to the left for a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> or upward for a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />. For a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />, this movement occurs when the page button that is above the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> is pressed, or when the PAGE UP key is pressed, and corresponds to a <see cref="F:System.Windows.Controls.Primitives.ScrollBar.PageUpCommand" />. For a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />, this movement occurs when the page button to the left of the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> is pressed, and corresponds to a <see cref="F:System.Windows.Controls.Primitives.ScrollBar.PageLeftCommand" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.LargeIncrement">
      <summary>The <see cref="T:System.Windows.Controls.Primitives.Thumb" /> moved a specified distance, as determined by the value of <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange" />, to the right for a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> or downward for a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />. For a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />, this movement occurs when the page button that is below the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> is pressed, or when the PAGE DOWN key is pressed, and corresponds to a <see cref="F:System.Windows.Controls.Primitives.ScrollBar.PageDownCommand" />. For a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />, this movement occurs when the page button to the right of the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> is pressed, and corresponds to a <see cref="F:System.Windows.Controls.Primitives.ScrollBar.PageRightCommand" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.Last">
      <summary>The <see cref="T:System.Windows.Controls.Primitives.Thumb" /> moved to the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> position of the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />. For a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />, this movement occurs when the CTRL+END keys are pressed. This movement corresponds to a <see cref="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToEndCommand" /> in a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> and a <see cref="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToRightEndCommand" /> in a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.SmallDecrement">
      <summary>The <see cref="T:System.Windows.Controls.Primitives.Thumb" /> moved a small distance, as determined by the value of <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange" />, to the left for a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> or upward for a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />. For a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />, this movement occurs when the upper <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> is pressed or when the UP ARROW key is pressed, and corresponds to a <see cref="F:System.Windows.Controls.Primitives.ScrollBar.LineUpCommand" />. For a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />, this movement occurs when the left <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> is pressed, and corresponds to a <see cref="F:System.Windows.Controls.Primitives.ScrollBar.LineLeftCommand" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.SmallIncrement">
      <summary>The <see cref="T:System.Windows.Controls.Primitives.Thumb" /> moved a small distance, as determined by the value of <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange" />, to the right for a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> or downward for a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />. For a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />, this movement occurs when the lower <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> is pressed or when the DOWN ARROW key is pressed, and corresponds to a <see cref="F:System.Windows.Controls.Primitives.ScrollBar.LineDownCommand" />. For a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />, this movement occurs when the right <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> is pressed, and corresponds to a <see cref="F:System.Windows.Controls.Primitives.ScrollBar.LineRightCommand" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.ThumbPosition">
      <summary>The <see cref="T:System.Windows.Controls.Primitives.Thumb" /> moved to a new position because the user selected Scroll Here in the shortcut menu of the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />. This movement corresponds to the <see cref="F:System.Windows.Controls.Primitives.ScrollBar.ScrollHereCommand" />. To view the shortcut menu, right-click the mouse when the pointer is over the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.ThumbTrack">
      <summary>The <see cref="T:System.Windows.Controls.Primitives.Thumb" /> was dragged and caused a <see cref="E:System.Windows.UIElement.MouseMove" /> event. A <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll" /> event of this <see cref="T:System.Windows.Controls.Primitives.ScrollEventType" /> may occur more than one time when the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> is dragged in the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.SelectiveScrollingGrid">
      <summary>A panel that can hold specified cells in place when the view is scrolled.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.SelectiveScrollingGrid.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.SelectiveScrollingGrid" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.SelectiveScrollingGrid.GetSelectiveScrollingOrientation(System.Windows.DependencyObject)">
      <summary>Gets the direction that cells can scroll for a specified object.</summary>
      <param name="obj">The object whose scrolling orientation is retrieved.</param>
      <returns>The direction that cells can scroll.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.SelectiveScrollingGrid.SelectiveScrollingOrientation">
      <summary>Gets or sets the direction that cells can scroll.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.SelectiveScrollingGrid.SelectiveScrollingOrientationProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.SelectiveScrollingGrid.SelectiveScrollingOrientation" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.SelectiveScrollingGrid.SetSelectiveScrollingOrientation(System.Windows.DependencyObject,System.Windows.Controls.SelectiveScrollingOrientation)">
      <summary>Sets the direction that cells can scroll for a specified object.</summary>
      <param name="obj">The object whose scrolling orientation is set.</param>
      <param name="value">The scrolling orientation.</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.Selector">
      <summary>Represents a control that allows a user to select items from among its child elements.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.Selector" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.AddSelectedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
      <summary>Adds a handler for the <see cref="E:System.Windows.Controls.Primitives.Selector.Selected" /> attached event.</summary>
      <param name="element">Element that listens to this event.</param>
      <param name="handler">Event handler to add.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.AddUnselectedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
      <summary>Adds a handler for the <see cref="E:System.Windows.Controls.Primitives.Selector.Unselected" /> attached event.</summary>
      <param name="element">Element that listens to this event.</param>
      <param name="handler">Event handler to add.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>Returns an item container to the state it was in before <see cref="M:System.Windows.Controls.ItemsControl.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />.</summary>
      <param name="element">The item container element.</param>
      <param name="item">The data item.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.GetIsSelected(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.Primitives.Selector.IsSelected" /> attached property that indicates whether an item is selected.</summary>
      <param name="element">Object to query concerning the <see cref="P:System.Windows.Controls.Primitives.Selector.IsSelected" /> property.</param>
      <returns>Boolean value, <see langword="true" /> if the <see cref="P:System.Windows.Controls.Primitives.Selector.IsSelected" /> property is <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.GetIsSelectionActive(System.Windows.DependencyObject)">
      <summary>Gets a value that indicates whether the keyboard focus is within the <see cref="T:System.Windows.Controls.Primitives.Selector" /></summary>
      <param name="element">The element from which to read the attached property.</param>
      <returns>Value of the property, <see langword="true" /> if the keyboard focus is within the <see cref="T:System.Windows.Controls.Primitives.Selector" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Selector.IsSelected">
      <summary>Gets or sets a value that indicates whether an item is selected.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.IsSelectedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Selector.IsSelected" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Selector.IsSelectionActive">
      <summary>Gets a value that indicates whether the keyboard focus is within the value returned by a <see cref="T:System.Windows.Controls.Primitives.Selector" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.IsSelectionActiveProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Selector.IsSelectionActive" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Selector.IsSynchronizedWithCurrentItem">
      <summary>Gets or sets a value that indicates whether a <see cref="T:System.Windows.Controls.Primitives.Selector" /> should keep the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" /> synchronized with the current item in the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> property.</summary>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" /> is always synchronized with the current item in the <see cref="T:System.Windows.Controls.ItemCollection" />; <see langword="false" /> if the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" /> is never synchronized with the current item; <see langword="null" /> if the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" /> is synchronized with the current item only if the <see cref="T:System.Windows.Controls.Primitives.Selector" /> uses a <see cref="T:System.Windows.Data.CollectionView" />.  The default value is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.IsSynchronizedWithCurrentItemProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Selector.IsSynchronizedWithCurrentItem" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.OnInitialized(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.FrameworkElement.Initialized" /> event. This method is invoked whenever <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> is set to <see langword="true" /> internally.</summary>
      <param name="e">The <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Called when the <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" /> property has changed.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>Updates the current selection when an item in the <see cref="T:System.Windows.Controls.Primitives.Selector" /> has changed</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.OnItemsSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>Called when the source of an item in a selector changes.</summary>
      <param name="oldValue">Old value of the source.</param>
      <param name="newValue">New value of the source.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
      <summary>Called when the selection changes.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>Prepares the specified element to display the specified item.</summary>
      <param name="element">The element that is used to display the specified item.</param>
      <param name="item">The specified item to display.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.RemoveSelectedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
      <summary>Removes a handler for the <see cref="E:System.Windows.Controls.Primitives.Selector.Selected" /> attached event.</summary>
      <param name="element">Element that listens to this event.</param>
      <param name="handler">Event handler to remove.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.RemoveUnselectedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
      <summary>Removes a handler for the <see cref="E:System.Windows.Controls.Primitives.Selector.Unselected" /> attached event.</summary>
      <param name="element">Element that listens to this event.</param>
      <param name="handler">Event handler to remove.</param>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Selector.Selected">
      <summary>Occurs when an item is selected.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.SelectedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.Primitives.Selector.Selected" /> routed event.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Selector.SelectedIndex">
      <summary>Gets or sets the index of the first item in the current selection or returns negative one (-1) if the selection is empty.</summary>
      <returns>The index of first item in the current selection. The default value is negative one (-1).</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.SelectedIndexProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedIndex" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Selector.SelectedItem">
      <summary>Gets or sets the first item in the current selection or returns null if the selection is empty</summary>
      <returns>The first item in the current selection or <see langword="null" /> if the selection is empty.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.SelectedItemProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Selector.SelectedValue">
      <summary>Gets or sets the value of the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" />, obtained by using <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValuePath" />.</summary>
      <returns>The value of the selected item.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Selector.SelectedValuePath">
      <summary>Gets or sets the path that is used to get the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValue" /> from the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" />.</summary>
      <returns>The path used to get the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValue" />. The default is an empty string.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.SelectedValuePathProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValuePath" /> dependency property.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.SelectedValueProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValue" /> dependency property.</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Selector.SelectionChanged">
      <summary>Occurs when the selection of a <see cref="T:System.Windows.Controls.Primitives.Selector" /> changes.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.SelectionChangedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> routed event.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.SetIsSelected(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets a property value that indicates whether an item in a <see cref="T:System.Windows.Controls.Primitives.Selector" /> is selected.</summary>
      <param name="element">Object on which to set the property.</param>
      <param name="isSelected">Value to set.</param>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Selector.Unselected">
      <summary>Occurs when an item is unselected.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.UnselectedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.Primitives.Selector.Unselected" /> routed event.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.StatusBar">
      <summary>Represents a control that displays items and information in a horizontal bar in an application window.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.StatusBar.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.StatusBar" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.StatusBar.GetContainerForItemOverride">
      <summary>Creates a new <see cref="T:System.Windows.Controls.Primitives.StatusBarItem" />.</summary>
      <returns>The element used to display the specified item.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.StatusBar.IsItemItsOwnContainerOverride(System.Object)">
      <summary>Determines if the specified item is (or is eligible to be) its own container.</summary>
      <param name="item">The specified object to evaluate.</param>
      <returns>Returns <see langword="true" /> if the item is (or is eligible to be) its own container; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.StatusBar.ItemContainerTemplateSelector">
      <summary>Gets or sets the custom logic for choosing a template used to display each item.</summary>
      <returns>A custom object that provides logic and returns an item container.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.StatusBar.ItemContainerTemplateSelectorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.StatusBar.ItemContainerTemplateSelector" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.StatusBar.OnCreateAutomationPeer">
      <summary>Specifies an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for the <see cref="T:System.Windows.Controls.Primitives.StatusBar" />.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.StatusBarAutomationPeer" /> for this <see cref="T:System.Windows.Controls.Primitives.StatusBar" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.StatusBar.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>Prepares an item for display in the <see cref="T:System.Windows.Controls.Primitives.StatusBar" />.</summary>
      <param name="element">The item to display in the <see cref="T:System.Windows.Controls.Primitives.StatusBar" />.</param>
      <param name="item">The content of the item to display.</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.StatusBar.SeparatorStyleKey">
      <summary>The key that represents the style to use for <see cref="T:System.Windows.Controls.Separator" /> objects in the <see cref="T:System.Windows.Controls.Primitives.StatusBar" />.</summary>
      <returns>A <see cref="T:System.Windows.ResourceKey" /> that references the style to use for <see cref="T:System.Windows.Controls.Separator" /> objects.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.StatusBar.ShouldApplyItemContainerStyle(System.Windows.DependencyObject,System.Object)">
      <summary>Determines whether to apply the <see cref="T:System.Windows.Style" /> for an item in the <see cref="T:System.Windows.Controls.Primitives.StatusBar" /> to an object.</summary>
      <param name="container">The container for the item.</param>
      <param name="item">The object to evaluate.</param>
      <returns>
        <see langword="true" /> if the <paramref name="item" /> is not a <see cref="T:System.Windows.Controls.Separator" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.StatusBar.UsesItemContainerTemplate">
      <summary>Gets or sets a value that indicates whether the menu selects different item containers, depending on the type of the item in the underlying collection or some other heuristic.</summary>
      <returns>
        <see langword="true" /> the menu selects different item containers; otherwise, <see langword="false" />.  
The registered default is <see langword="false" />. For more information about what can influence the value, see Dependency Property Value Precedence.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.StatusBar.UsesItemContainerTemplateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.StatusBar.UsesItemContainerTemplate" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.StatusBarItem">
      <summary>Represents an item of a <see cref="T:System.Windows.Controls.Primitives.StatusBar" /> control.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.StatusBarItem.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.StatusBarItem" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.StatusBarItem.OnCreateAutomationPeer">
      <summary>Specifies an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for the <see cref="T:System.Windows.Controls.Primitives.StatusBarItem" />.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.StatusBarItemAutomationPeer" /> for this <see cref="T:System.Windows.Controls.Primitives.StatusBarItem" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.TabPanel">
      <summary>Handles the layout of the <see cref="T:System.Windows.Controls.TabItem" /> objects on a <see cref="T:System.Windows.Controls.TabControl" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TabPanel.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.TabPanel" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TabPanel.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges and sizes the content of a <see cref="T:System.Windows.Controls.Primitives.TabPanel" /> object.</summary>
      <param name="arrangeSize">The size that a tab panel assumes to position child elements.</param>
      <returns>The size of the tab panel.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TabPanel.GetLayoutClip(System.Windows.Size)">
      <summary>Used to override default clipping.</summary>
      <param name="layoutSlotSize">The size of the panel.</param>
      <returns>A size that is the layout size of the <see cref="T:System.Windows.Controls.Primitives.TabPanel" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TabPanel.MeasureOverride(System.Windows.Size)">
      <summary>Called when remeasuring the control is required.</summary>
      <param name="constraint">Constraint size is an upper limit. The return value should not exceed this size.</param>
      <returns>The desired size.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.TextBoxBase">
      <summary>An abstract base class that provides functionality for text editing controls, including <see cref="T:System.Windows.Controls.TextBox" /> and <see cref="T:System.Windows.Controls.RichTextBox" />.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn">
      <summary>Gets or sets a value that indicates how the text editing control responds when the user presses the ENTER key.</summary>
      <returns>
        <see langword="true" /> if pressing the ENTER key inserts a new line at the current cursor position; otherwise, the ENTER key is ignored. The default value is <see langword="false" /> for <see cref="T:System.Windows.Controls.TextBox" /> and <see langword="true" /> for <see cref="T:System.Windows.Controls.RichTextBox" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturnProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab">
      <summary>Gets or sets a value that indicates how the text editing control responds when the user presses the TAB key.</summary>
      <returns>
        <see langword="true" /> if pressing the TAB key inserts a tab character at the current cursor position; <see langword="false" /> if pressing the TAB key moves the focus to the next control that is marked as a tab stop and does not insert a tab character.  
The default value is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTabProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.AppendText(System.String)">
      <summary>Appends a string to the contents of a text control.</summary>
      <param name="textData">A string that specifies the text to append to the current contents of the text control.</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection">
      <summary>Gets or sets a value that determines whether when a user selects part of a word by dragging across it with the mouse, the rest of the word is selected.</summary>
      <returns>
        <see langword="true" /> if automatic word selection is enabled; otherwise, <see langword="false" />.  
The default value is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelectionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange">
      <summary>Begins a change block.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.CanRedo">
      <summary>Gets a value that indicates whether the most recent undo action can be redone.</summary>
      <returns>
        <see langword="true" /> if the most recent undo action can be redone; otherwise, <see langword="false" />.  
This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.CanUndo">
      <summary>Gets a value that indicates whether the most recent action can be undone.</summary>
      <returns>
        <see langword="true" /> if the most recent action can be undone; otherwise, <see langword="false" />.  
This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.CaretBrush">
      <summary>Gets or sets the brush that is used to paint the caret of the text box.</summary>
      <returns>The brush that is used to paint the caret of the text box.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.CaretBrushProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.CaretBrush" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.Copy">
      <summary>Copies the current selection of the text editing control to the <see cref="T:System.Windows.Clipboard" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.Cut">
      <summary>Removes the current selection from the text editing control and copies it to the <see cref="T:System.Windows.Clipboard" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock">
      <summary>Creates a change block.</summary>
      <returns>An <see cref="T:System.IDisposable" /> object that refers to a new change block.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange">
      <summary>Ends a change block.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.ExtentHeight">
      <summary>Gets the vertical size of the visible content area.</summary>
      <returns>A floating-point value that specifies the vertical size of the visible content area, in device-independent units (1/96th inch per unit).  
 The value of this property is 0.0 if the text-editing control is not configured to support scrolling.  
 This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.ExtentWidth">
      <summary>Gets the horizontal size of the visible content area.</summary>
      <returns>A floating-point value that specifies the horizontal size of the visible content area, in device-independent units (1/96th inch per unit).  
 The value of this property is 0.0 if the text editing control is not configured to support scrolling.  
 This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalOffset">
      <summary>Gets or sets the horizontal scroll position.</summary>
      <returns>A floating-point value that specifies the horizontal scroll position, in device-independent units (1/96th inch per unit).  
 Setting this property causes the text editing control to scroll to the specified horizontal offset. Reading this property returns the current horizontal offset.  
 The value of this property is 0.0 if the text editing control is not configured to support scrolling.  
 This property has no default value.</returns>
      <exception cref="T:System.ArgumentException">An attempt is made to set this property to a negative value.</exception>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility">
      <summary>Gets or sets a value that indicates whether a horizontal scroll bar is shown.</summary>
      <returns>A value that is defined by the <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> enumeration.  
 The default value is <see cref="F:System.Windows.Visibility.Hidden" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibilityProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabled">
      <summary>Gets or sets a value that indicates whether the text box displays selected text when the text box does not have focus.</summary>
      <returns>
        <see langword="true" /> if the text box displays selected text when the text box does not have focus; otherwise, <see langword="false" />.  
The registered default is <see langword="false" />. For more information about what can influence the value, see Dependency Property Value Precedence.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabledProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabled" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly">
      <summary>Gets or sets a value that indicates whether the text editing control is read-only to a user interacting with the control.</summary>
      <returns>
        <see langword="true" /> if the contents of the text editing control are read-only to a user; otherwise, the contents of the text editing control can be modified by the user. The default value is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible">
      <summary>Gets or sets a value that indicates whether a read-only text box displays a caret.</summary>
      <returns>
        <see langword="true" /> if a read-only text box displays a caret; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisibleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible" /> dependency property.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActive">
      <summary>Gets a value that indicates whether the text box has focus and selected text.</summary>
      <returns>
        <see langword="true" /> if the text box has focus and selected text; otherwise, <see langword="false" />.  
The registered default is <see langword="false" />. For more information about what can influence the value, see Dependency Property Value Precedence.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActiveProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActive" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled">
      <summary>Gets or sets a value that indicates whether undo support is enabled for the text-editing control.</summary>
      <returns>
        <see langword="true" /> if undo support is enabled; otherwise, <see langword="false" />. The default value is <see langword="true" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabledProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.LineDown">
      <summary>Scrolls the contents of the control down by one line.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.LineLeft">
      <summary>Scrolls the contents of the control to the left by one line.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.LineRight">
      <summary>Scrolls the contents of the control to the right by one line.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.LineUp">
      <summary>Scrolls the contents of the control upward by one line.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit">
      <summary>Locks the most recent undo unit of the undo stack of the application. This prevents the locked unit from being merged with undo units that are added subsequently.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnApplyTemplate">
      <summary>Is called when a control template is applied.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
      <summary>Called whenever an unhandled <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> routed event reaches this class in its route. Implement this method to add class handling for this event.</summary>
      <param name="e">Arguments of the event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnDragEnter(System.Windows.DragEventArgs)">
      <summary>Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached routed event reaches an element derived from this class in its route. Implement this method to add class handling for this event.</summary>
      <param name="e">Provides data about the event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnDragLeave(System.Windows.DragEventArgs)">
      <summary>Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.DragLeave" /> attached routed event reaches an element derived from this class in its route. Implement this method to add class handling for this event.</summary>
      <param name="e">Provides data about the event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnDragOver(System.Windows.DragEventArgs)">
      <summary>Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.DragOver" /> attached routed event reaches an element derived from this class in its route. Implement this method to add class handling for this event.</summary>
      <param name="e">Provides data about the event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnDrop(System.Windows.DragEventArgs)">
      <summary>Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached routed event reaches an element derived from this class in its route. Implement this method to add class handling for this event.</summary>
      <param name="e">Provides data about the event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)">
      <summary>Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.GiveFeedback" /> attached routed event reaches an element derived from this class in its route. Implement this method to add class handling for this event.</summary>
      <param name="e">Provides data about the event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>Invoked whenever an unhandled <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached routed event reaches an element derived from this class in its route. Implement this method to add class handling for this event.</summary>
      <param name="e">Provides data about the event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Invoked whenever an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached routed event reaches an element derived from this class in its route. Implement this method to add class handling for this event.</summary>
      <param name="e">Provides data about the event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnKeyUp(System.Windows.Input.KeyEventArgs)">
      <summary>Invoked whenever an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached routed event reaches an element derived from this class in its route. Implement this method to add class handling for this event.</summary>
      <param name="e">Provides data about the event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnLostFocus(System.Windows.RoutedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.UIElement.LostFocus" /> event (using the provided arguments).</summary>
      <param name="e">Provides data about the event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>Invoked whenever an unhandled <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached routed event reaches an element derived from this class in its route. Implement this method to add class handling for this event.</summary>
      <param name="e">Provides data about the event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Invoked whenever an unhandled <see cref="E:System.Windows.Input.Mouse.MouseDown" /> attached routed event reaches an element derived from this class in its route. Implement this method to add class handling for this event.</summary>
      <param name="e">Provides data about the event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>Invoked whenever an unhandled <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached routed event reaches an element derived from this class in its route. Implement this method to add class handling for this event.</summary>
      <param name="e">Provides data about the event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Invoked whenever an unhandled <see cref="E:System.Windows.Input.Mouse.MouseUp" /> event reaches an element derived from this class in its route. Implement this method to add class handling for this event.</summary>
      <param name="e">Arguments of the event. These arguments will include details about which mouse button was depressed, and the handled state.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
      <summary>Is called when a <see cref="E:System.Windows.UIElement.MouseWheel" /> event is routed to this class (or to a class that inherits from this class).</summary>
      <param name="e">The mouse wheel arguments that are associated with this event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Called when the <see cref="E:System.Windows.UIElement.KeyDown" /> occurs.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)">
      <summary>Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> attached  routed event reaches an element derived from this class in its route. Implement this method to add class handling for this event.</summary>
      <param name="e">Provides data about the event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)">
      <summary>Invoked whenever an unhandled <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> attached routed event reaches an element derived from this class in its route. Implement this method to add class handling for this event.</summary>
      <param name="e">Provides data about the event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnSelectionChanged(System.Windows.RoutedEventArgs)">
      <summary>Is called when the caret or current selection changes position.</summary>
      <param name="e">The arguments that are associated with the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)">
      <summary>Is called when the control template changes.</summary>
      <param name="oldTemplate">A <see cref="T:System.Windows.Controls.ControlTemplate" /> object that specifies the control template that is currently active.</param>
      <param name="newTemplate">A <see cref="T:System.Windows.Controls.ControlTemplate" /> object that specifies a new control template to use.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnTextChanged(System.Windows.Controls.TextChangedEventArgs)">
      <summary>Is called when content in this editing control changes.</summary>
      <param name="e">The arguments that are associated with the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
      <summary>Invoked whenever an unhandled <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> attached routed event reaches an element derived from this class in its route. Implement this method to add class handling for this event.</summary>
      <param name="e">Provides data about the event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.PageDown">
      <summary>Scrolls the contents of the control down by one page.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.PageLeft">
      <summary>Scrolls the contents of the control to the left by one page.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.PageRight">
      <summary>Scrolls the contents of the control to the right by one page.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.PageUp">
      <summary>Scrolls the contents of the control up by one page.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.Paste">
      <summary>Pastes the contents of the Clipboard over the current selection in the text editing control.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.Redo">
      <summary>Undoes the most recent undo command. In other words, redoes the most recent undo unit on the undo stack.</summary>
      <returns>
        <see langword="true" /> if the redo operation was successful; otherwise, <see langword="false" />. This method returns <see langword="false" /> if there is no undo command available (the undo stack is empty).</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd">
      <summary>Scrolls the view of the editing control to the end of the content.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome">
      <summary>Scrolls the view of the editing control to the beginning of the viewport.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHorizontalOffset(System.Double)">
      <summary>Scrolls the contents of the editing control to the specified horizontal offset.</summary>
      <param name="offset">A double value that specifies the horizontal offset to scroll to.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToVerticalOffset(System.Double)">
      <summary>Scrolls the contents of the editing control to the specified vertical offset.</summary>
      <param name="offset">A double value that specifies the vertical offset to scroll to.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.SelectAll">
      <summary>Selects all the contents of the text editing control.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush">
      <summary>Gets or sets the brush that highlights selected text.</summary>
      <returns>The brush that highlights selected text.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrushProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" /> dependency property.</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged">
      <summary>Occurs when the text selection has changed.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.SelectionChangedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" /> routed event.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity">
      <summary>Gets or sets the opacity of the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />.</summary>
      <returns>The opacity of the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />. The default is 0.4.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacityProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionTextBrush">
      <summary>Gets or sets a value that defines the brush used for selected text.</summary>
      <returns>The brush used for selected text.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.SelectionTextBrushProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionTextBrush" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.SpellCheck">
      <summary>Gets a <see cref="T:System.Windows.Controls.SpellCheck" /> object that provides access to spelling errors in the text contents of a <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> or <see cref="T:System.Windows.Controls.RichTextBox" />.</summary>
      <returns>A <see cref="T:System.Windows.Controls.SpellCheck" /> object that provides access to spelling errors in the text contents of a <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> or <see cref="T:System.Windows.Controls.RichTextBox" />.  
 This property has no default value.</returns>
    </member>
    <member name="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged">
      <summary>Occurs when content changes in the text element.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.TextChangedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> routed event.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.Undo">
      <summary>Undoes the most recent undo command. In other words, undoes the most recent undo unit on the undo stack.</summary>
      <returns>
        <see langword="true" /> if the undo operation was successful; otherwise, <see langword="false" />. This method returns <see langword="false" /> if the undo stack is empty.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit">
      <summary>Gets or sets the number of actions stored in the undo queue.</summary>
      <returns>The number of actions stored in the undo queue. The default is -1, which means the undo queue is limited to the memory that is available.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" /> is set after calling <see cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" /> and before calling <see cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />.</exception>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.UndoLimitProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalOffset">
      <summary>Gets or sets the vertical scroll position.</summary>
      <returns>A floating-point value that specifies the vertical scroll position, in device-independent units (1/96th inch per unit).  
 Setting this property causes the text editing control to scroll to the specified vertical offset. Reading this property returns the current vertical offset.  
 The value of this property is 0.0 if the text editing control is not configured to support scrolling.  
 This property has no default value.</returns>
      <exception cref="T:System.ArgumentException">An attempt is made to set this property to a negative value.</exception>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility">
      <summary>Gets or sets a value that indicates whether a vertical scroll bar is shown.</summary>
      <returns>A value that is defined by the <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> enumeration.  
 The default value is <see cref="F:System.Windows.Visibility.Hidden" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibilityProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.ViewportHeight">
      <summary>Gets the vertical size of the scrollable content area.</summary>
      <returns>A floating-point value that specifies the vertical size of the scrollable content area, in device-independent units (1/96th inch per unit).  
 The value of this property is 0.0 if the text editing control is not configured to support scrolling.  
 This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.ViewportWidth">
      <summary>Gets the horizontal size of the scrollable content area.</summary>
      <returns>A floating-point value that specifies the horizontal size of the scrollable content area, in device-independent units (1/96th inch per unit).  
 The value of this property is 0.0 if the text editing control is not configured to support scrolling.  
 This property has no default value.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.Thumb">
      <summary>Represents a control that can be dragged by the user.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Thumb.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Thumb.CancelDrag">
      <summary>Cancels a drag operation for the <see cref="T:System.Windows.Controls.Primitives.Thumb" />.</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Thumb.DragCompleted">
      <summary>Occurs when the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control loses mouse capture.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Thumb.DragCompletedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragCompleted" /> routed event.</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Thumb.DragDelta">
      <summary>Occurs one or more times as the mouse changes position when a <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control has logical focus and mouse capture.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Thumb.DragDeltaEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> routed event.</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Thumb.DragStarted">
      <summary>Occurs when a <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control receives logical focus and mouse capture.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Thumb.DragStartedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragStarted" /> routed event.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Thumb.IsDragging">
      <summary>Gets whether the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control has logical focus and mouse capture and the left mouse button is pressed.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control has focus and mouse capture; otherwise <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Thumb.IsDraggingProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Thumb.IsDragging" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Thumb.OnCreateAutomationPeer">
      <summary>Creates an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.ThumbAutomationPeer" /> for the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Thumb.OnDraggingChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Responds to a change in the value of the <see cref="P:System.Windows.Controls.Primitives.Thumb.IsDragging" /> property.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Thumb.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Thumb.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Thumb.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.MouseMove" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.TickBar">
      <summary>Represents a control that draws a set of tick marks for a <see cref="T:System.Windows.Controls.Slider" /> control.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TickBar.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.TickBar" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.Fill">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> that is used to draw the tick marks.</summary>
      <returns>A <see cref="T:System.Windows.Media.Brush" /> to use to draw tick marks. The default value is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.FillProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TickBar.Fill" /> dependency property. This property is read-only.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.IsDirectionReversed">
      <summary>Gets or sets the direction of increasing value of the tick marks.</summary>
      <returns>
        <see langword="true" /> if the direction of increasing value is to the left for a horizontal <see cref="T:System.Windows.Controls.Slider" /> or down for a vertical <see cref="T:System.Windows.Controls.Slider" />; otherwise, <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.IsDirectionReversedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TickBar.IsDirectionReversed" /> dependency property. This property is read-only.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.IsSelectionRangeEnabled">
      <summary>Gets or sets whether the <see cref="T:System.Windows.Controls.Primitives.TickBar" /> displays a selection range.</summary>
      <returns>
        <see langword="true" /> if a selection range is displayed; otherwise, <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.IsSelectionRangeEnabledProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Slider.IsSelectionRangeEnabled" /> dependency property. This property is read-only.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.Maximum">
      <summary>Gets or sets the maximum value that is possible for a tick mark.</summary>
      <returns>The largest possible value for a tick mark. The default value is 100.0.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.MaximumProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TickBar.Maximum" /> dependency property. This property is read-only.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.Minimum">
      <summary>Gets or sets the minimum value that is possible for a tick mark.</summary>
      <returns>The smallest possible value for a tick mark. The default value is zero (0.0).</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.MinimumProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TickBar.Minimum" /> dependency property. This property is read-only.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TickBar.OnRender(System.Windows.Media.DrawingContext)">
      <summary>Draws the tick marks for a <see cref="T:System.Windows.Controls.Slider" /> control.</summary>
      <param name="dc">The <see cref="T:System.Windows.Media.DrawingContext" /> that is used to draw the ticks.</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.Placement">
      <summary>Gets or sets where tick marks appear  relative to a <see cref="T:System.Windows.Controls.Primitives.Track" /> of a <see cref="T:System.Windows.Controls.Slider" /> control.</summary>
      <returns>A <see cref="T:System.Windows.Controls.Primitives.TickBarPlacement" /> enumeration value that identifies the position of the <see cref="T:System.Windows.Controls.Primitives.TickBar" /> in the <see cref="T:System.Windows.Style" /> layout of a <see cref="T:System.Windows.Controls.Slider" />. The default value is <see cref="F:System.Windows.Controls.Primitives.TickBarPlacement.Top" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.PlacementProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TickBar.Placement" /> dependency property. This property is read-only.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.ReservedSpace">
      <summary>Gets or sets a space buffer for the area that contains the tick marks that are specified for a <see cref="T:System.Windows.Controls.Primitives.TickBar" />.</summary>
      <returns>A value that represents the total buffer area on either side of the row or column of tick marks. The default value is zero (0.0).</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.ReservedSpaceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TickBar.ReservedSpace" /> dependency property. This property is read-only.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.SelectionEnd">
      <summary>Gets or sets the end point of a selection.</summary>
      <returns>The last value in a range of values for a selection. The default value is -1.0.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.SelectionEndProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TickBar.SelectionEnd" /> dependency property. This property is read-only.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.SelectionStart">
      <summary>Gets or sets the start point of a selection.</summary>
      <returns>The first value in a range of values for a selection. The default value is -1.0.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.SelectionStartProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TickBar.SelectionStart" /> dependency property. This property is read-only.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.TickFrequency">
      <summary>Gets or sets the interval between tick marks.</summary>
      <returns>The distance between tick marks. The default value is one (1.0).</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.TickFrequencyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TickBar.TickFrequency" /> dependency property. This property is read-only.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.Ticks">
      <summary>Gets or sets the positions of the tick marks.</summary>
      <returns>A <see cref="T:System.Windows.Media.DoubleCollection" /> that specifies the locations of the tick marks. The default value is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.TicksProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TickBar.Ticks" /> dependency property. This property is read-only.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.TickBarPlacement">
      <summary>Specifies the placement of a <see cref="T:System.Windows.Controls.Primitives.TickBar" /> with respect to the <see cref="T:System.Windows.Controls.Primitives.Track" /> of a <see cref="T:System.Windows.Controls.Slider" /> control.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBarPlacement.Bottom">
      <summary>The tick bar is positioned below the <see cref="T:System.Windows.Controls.Primitives.Track" /> of the <see cref="T:System.Windows.Controls.Slider" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBarPlacement.Left">
      <summary>The tick bar is positioned to the left of the <see cref="T:System.Windows.Controls.Primitives.Track" /> of the <see cref="T:System.Windows.Controls.Slider" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBarPlacement.Right">
      <summary>The tick bar is positioned to the right of the <see cref="T:System.Windows.Controls.Primitives.Track" /> of the <see cref="T:System.Windows.Controls.Slider" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBarPlacement.Top">
      <summary>The tick bar is positioned above the <see cref="T:System.Windows.Controls.Primitives.Track" /> of the <see cref="T:System.Windows.Controls.Slider" />.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.TickPlacement">
      <summary>Specifies the position of tick marks in a <see cref="T:System.Windows.Controls.Slider" /> control with respect to the <see cref="T:System.Windows.Controls.Primitives.Track" /> that the control implements.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickPlacement.Both">
      <summary>Tick marks appear above and below the <see cref="T:System.Windows.Controls.Primitives.Track" /> bar for a horizontal <see cref="T:System.Windows.Controls.Slider" />, or to the left and right of the <see cref="T:System.Windows.Controls.Primitives.Track" /> for a vertical <see cref="T:System.Windows.Controls.Slider" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickPlacement.BottomRight">
      <summary>Tick marks appear below the <see cref="T:System.Windows.Controls.Primitives.Track" /> for a horizontal <see cref="T:System.Windows.Controls.Slider" />, or to the right of the <see cref="T:System.Windows.Controls.Primitives.Track" /> for a vertical <see cref="T:System.Windows.Controls.Slider" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickPlacement.None">
      <summary>No tick marks appear.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickPlacement.TopLeft">
      <summary>Tick marks appear above the <see cref="T:System.Windows.Controls.Primitives.Track" /> for a horizontal <see cref="T:System.Windows.Controls.Slider" />, or to the left of the <see cref="T:System.Windows.Controls.Primitives.Track" /> for a vertical <see cref="T:System.Windows.Controls.Slider" />.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ToggleButton">
      <summary>Base class for controls that can switch states, such as <see cref="T:System.Windows.Controls.CheckBox" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> class.</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.ToggleButton.Checked">
      <summary>Occurs when a <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> is checked.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ToggleButton.CheckedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Checked" /> routed event.</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.ToggleButton.Indeterminate">
      <summary>Occurs when the state of a <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> is neither on nor off.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ToggleButton.IndeterminateEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Indeterminate" /> routed event.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ToggleButton.IsChecked">
      <summary>Gets or sets whether the <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> is checked.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> is checked; false if the <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> is unchecked; otherwise <see langword="null" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ToggleButton.IsCheckedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.ToggleButton.IsChecked" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ToggleButton.IsThreeState">
      <summary>Determines whether the control supports two or three states.</summary>
      <returns>
        <see langword="true" /> if the control supports three states; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ToggleButton.IsThreeStateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.ToggleButton.IsThreeState" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.OnChecked(System.Windows.RoutedEventArgs)">
      <summary>Called when a <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> raises a <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Checked" /> event.</summary>
      <param name="e">The event data for the <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Checked" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.OnClick">
      <summary>Called when a control is clicked by the mouse or the keyboard.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.OnCreateAutomationPeer">
      <summary>Provides an appropriate <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer" /> implementation for this control, as part of the WPF infrastructure.</summary>
      <returns>The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.OnIndeterminate(System.Windows.RoutedEventArgs)">
      <summary>Called when a <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> raises an <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Indeterminate" /> event.</summary>
      <param name="e">The event data for the <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Indeterminate" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.OnToggle">
      <summary>Called by the <see cref="M:System.Windows.Controls.Primitives.ToggleButton.OnClick" /> method to implement toggle behavior.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.OnUnchecked(System.Windows.RoutedEventArgs)">
      <summary>Called when a <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> raises an <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Unchecked" /> event.</summary>
      <param name="e">The event data for the <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Unchecked" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.ToString">
      <summary>Returns the string representation of a <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> object.</summary>
      <returns>String representation of a <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> object.</returns>
    </member>
    <member name="E:System.Windows.Controls.Primitives.ToggleButton.Unchecked">
      <summary>Occurs when a <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> is unchecked.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ToggleButton.UncheckedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Unchecked" /> routed event.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ToolBarOverflowPanel">
      <summary>Used to arrange overflow <see cref="T:System.Windows.Controls.ToolBar" /> items.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToolBarOverflowPanel.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.ToolBarOverflowPanel" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToolBarOverflowPanel.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges and sizes the content of a <see cref="T:System.Windows.Controls.Primitives.ToolBarOverflowPanel" /> object.</summary>
      <param name="arrangeBounds">Size that a toolbar overflow panel assumes to position child elements.</param>
      <returns>The size of the <see cref="T:System.Windows.Controls.Primitives.ToolBarOverflowPanel" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToolBarOverflowPanel.CreateUIElementCollection(System.Windows.FrameworkElement)">
      <summary>Creates a new <see cref="T:System.Windows.Controls.UIElementCollection" />.</summary>
      <param name="logicalParent">Logical parent of the new collection.</param>
      <returns>A new collection.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToolBarOverflowPanel.MeasureOverride(System.Windows.Size)">
      <summary>Remeasures the <see cref="T:System.Windows.Controls.Primitives.ToolBarOverflowPanel" />.</summary>
      <param name="constraint">Constraint size is an upper limit. The return value should not exceed this size.</param>
      <returns>The desired size.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ToolBarOverflowPanel.WrapWidth">
      <summary>Gets or sets the recommended width for an overflow <see cref="T:System.Windows.Controls.ToolBar" /> before items flow to the next line.</summary>
      <returns>A double value that represents the recommended width of the <see cref="T:System.Windows.Controls.ToolBar" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ToolBarOverflowPanel.WrapWidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.ToolBarOverflowPanel.WrapWidth" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ToolBarPanel">
      <summary>Arranges <see cref="T:System.Windows.Controls.ToolBar" /> items inside a <see cref="T:System.Windows.Controls.ToolBar" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToolBarPanel.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.ToolBarPanel" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToolBarPanel.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges and sizes <see cref="T:System.Windows.Controls.ToolBar" /> items inside a <see cref="T:System.Windows.Controls.Primitives.ToolBarPanel" />.</summary>
      <param name="arrangeSize">The size that the <see cref="T:System.Windows.Controls.Primitives.ToolBarPanel" /> assumes to position its children.</param>
      <returns>The size of the panel.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToolBarPanel.MeasureOverride(System.Windows.Size)">
      <summary>Remeasures a toolbar panel.</summary>
      <param name="constraint">The measurement constraints; a <see cref="T:System.Windows.Controls.Primitives.ToolBarPanel" /> cannot return a size larger than the constraint.</param>
      <returns>The desired size of the panel.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.Track">
      <summary>Represents a control primitive that handles the positioning and sizing of a <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control and two <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> controls that are used to set a <see cref="P:System.Windows.Controls.Primitives.Track.Value" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Track.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.Track" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Track.ArrangeOverride(System.Windows.Size)">
      <summary>Creates the layout for the <see cref="T:System.Windows.Controls.Primitives.Track" />.</summary>
      <param name="arrangeSize">The area that is provided for the <see cref="T:System.Windows.Controls.Primitives.Track" />.</param>
      <returns>The <see cref="T:System.Windows.Size" /> to use for the <see cref="T:System.Windows.Controls.Primitives.Track" /> content.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Track.DecreaseRepeatButton">
      <summary>Gets the <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> that decreases the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> property of the <see cref="T:System.Windows.Controls.Primitives.Track" />.</summary>
      <returns>The <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> that reduces the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> of the <see cref="T:System.Windows.Controls.Primitives.Track" /> control when the <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> is pressed. The default is a <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> control that has default settings.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Track.GetVisualChild(System.Int32)">
      <summary>Gets the child of the <see cref="T:System.Windows.Controls.Primitives.Track" /> at the specified index.</summary>
      <param name="index">The index of the child.</param>
      <returns>Returns the object of the <see cref="T:System.Windows.Controls.Primitives.Track" /> at the specified index in the list of visual child elements. The index must be a number between zero (0) and the value of the <see cref="P:System.Windows.Controls.Primitives.Track.VisualChildrenCount" /> property minus one (1).</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified index is greater than the value of the <see cref="P:System.Windows.Controls.Primitives.Track.VisualChildrenCount" /> property minus one (1).</exception>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Track.IncreaseRepeatButton">
      <summary>Gets the <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> that increases the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> property of the <see cref="T:System.Windows.Controls.Primitives.Track" /> class.</summary>
      <returns>The <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> that increases the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> of the <see cref="T:System.Windows.Controls.Primitives.Track" /> control when the <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> is pressed. The default is a <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> control that has default settings.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Track.IsDirectionReversed">
      <summary>Gets or sets whether the direction of increasing <see cref="P:System.Windows.Controls.Primitives.Track.Value" /> is reversed from the default direction.</summary>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.Controls.Primitives.Track.IncreaseRepeatButton" /> and the <see cref="P:System.Windows.Controls.Primitives.Track.DecreaseRepeatButton" /> exchanged positions and the direction of increasing value is reversed; otherwise <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Track.IsDirectionReversedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Track.IsDirectionReversed" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Track.Maximum">
      <summary>Gets or sets the maximum possible <see cref="P:System.Windows.Controls.Primitives.Track.Value" /> of the <see cref="T:System.Windows.Controls.Primitives.Track" />.</summary>
      <returns>The largest allowable <see cref="P:System.Windows.Controls.Primitives.Track.Value" /> for the <see cref="T:System.Windows.Controls.Primitives.Track" />. The default is 1.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Track.MaximumProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Track.Maximum" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Track.MeasureOverride(System.Windows.Size)">
      <summary>Measures the layout size that is required for the <see cref="T:System.Windows.Controls.Primitives.Track" /> and its components.</summary>
      <param name="availableSize">The size of the available space for the track.</param>
      <returns>The layout <see cref="T:System.Windows.Size" /> that is required by the <see cref="T:System.Windows.Controls.Primitives.Track" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Track.Minimum">
      <summary>Gets or sets the minimum possible <see cref="P:System.Windows.Controls.Primitives.Track.Value" /> of the <see cref="T:System.Windows.Controls.Primitives.Track" />.</summary>
      <returns>The smallest allowable <see cref="P:System.Windows.Controls.Primitives.Track.Value" /> for the <see cref="T:System.Windows.Controls.Primitives.Track" />. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Track.MinimumProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Track.Minimum" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Track.Orientation">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.Primitives.Track" /> is displayed horizontally or vertically.</summary>
      <returns>An <see cref="T:System.Windows.Controls.Orientation" /> enumeration value that indicates whether the <see cref="T:System.Windows.Controls.Primitives.Track" /> is displayed horizontally or vertically. The default is <see cref="F:System.Windows.Controls.Orientation.Horizontal" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Track.OrientationProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Track.Orientation" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Track.Thumb">
      <summary>Gets the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control that is used to change the <see cref="P:System.Windows.Controls.Primitives.Track.Value" /> of a <see cref="T:System.Windows.Controls.Primitives.Track" />.</summary>
      <returns>The <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control that is used with the <see cref="T:System.Windows.Controls.Primitives.Track" />. The default is a <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control that has default settings.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Track.Value">
      <summary>Gets or sets the current value of the <see cref="T:System.Windows.Controls.Primitives.Track" /> as determined by the position of the <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> control.</summary>
      <returns>The current value of the <see cref="T:System.Windows.Controls.Primitives.Track" />. The default is 0.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Track.ValueFromDistance(System.Double,System.Double)">
      <summary>Calculates the change in the <see cref="P:System.Windows.Controls.Primitives.Track.Value" /> of the <see cref="T:System.Windows.Controls.Primitives.Track" /> when the <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> moves.</summary>
      <param name="horizontal">The horizontal displacement of the <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" />.</param>
      <param name="vertical">The vertical displacement of the <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" />.</param>
      <returns>The change in <see cref="P:System.Windows.Controls.Primitives.Track.Value" /> that corresponds to the displacement of the <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> of the <see cref="T:System.Windows.Controls.Primitives.Track" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Track.ValueFromPoint(System.Windows.Point)">
      <summary>Calculates the distance from the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> to a specified point along the <see cref="T:System.Windows.Controls.Primitives.Track" />.</summary>
      <param name="pt">The specified point.</param>
      <returns>The distance between the <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> and the specified <paramref name="pt" /> value.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Track.ValueProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Track.Value" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Track.ViewportSize">
      <summary>Gets or sets the size of the part of the scrollable content that is visible.</summary>
      <returns>The size of the visible area of the scrollable content. The default is <see cref="F:System.Double.NaN" />, which means that the content size is not defined.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Track.ViewportSizeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Track.ViewportSize" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Track.VisualChildrenCount">
      <summary>Gets the number of child elements of a <see cref="T:System.Windows.Controls.Primitives.Track" />.</summary>
      <returns>An integer between 0 and 2 that specifies the number of child elements in the <see cref="T:System.Windows.Controls.Primitives.Track" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.UniformGrid">
      <summary>Provides a way to arrange content in a grid where all the cells in the grid have the same size.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.UniformGrid.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.UniformGrid" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.UniformGrid.ArrangeOverride(System.Windows.Size)">
      <summary>Defines the layout of the <see cref="T:System.Windows.Controls.Primitives.UniformGrid" /> by distributing space evenly among all of the child elements.</summary>
      <param name="arrangeSize">The <see cref="T:System.Windows.Size" /> of the area for the grid to use.</param>
      <returns>The actual <see cref="T:System.Windows.Size" /> of the grid that is rendered to display the child elements that are visible.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.UniformGrid.Columns">
      <summary>Gets or sets the number of columns that are in the grid.</summary>
      <returns>The number of columns that are in the grid. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.UniformGrid.ColumnsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.UniformGrid.Columns" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.UniformGrid.FirstColumn">
      <summary>Gets or sets the number of leading blank cells in the first row of the grid.</summary>
      <returns>The number of empty cells that are in the first row of the grid. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.UniformGrid.FirstColumnProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.UniformGrid.FirstColumn" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.UniformGrid.MeasureOverride(System.Windows.Size)">
      <summary>Computes the desired size of the <see cref="T:System.Windows.Controls.Primitives.UniformGrid" /> by measuring all of the child elements.</summary>
      <param name="constraint">The <see cref="T:System.Windows.Size" /> of the available area for the grid.</param>
      <returns>The desired <see cref="T:System.Windows.Size" /> based on the child content of the grid and the <paramref name="constraint" /> parameter.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.UniformGrid.Rows">
      <summary>Gets or sets the number of rows that are in the grid.</summary>
      <returns>The number of rows that are in the grid. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.UniformGrid.RowsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.UniformGrid.Rows" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Controls.PrintDialog">
      <summary>Invokes a standard Microsoft Windows print dialog box that configures a <see cref="T:System.Printing.PrintTicket" /> and <see cref="T:System.Printing.PrintQueue" /> according to user input and then prints a document.</summary>
    </member>
    <member name="M:System.Windows.Controls.PrintDialog.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.PrintDialog" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.PrintDialog.CurrentPageEnabled">
      <summary>Gets or sets a value that indicates whether the option to print the current page is enabled.</summary>
      <returns>
        <see langword="true" /> if the option to print the current page is enabled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.PrintDialog.MaxPage">
      <summary>Gets or sets the highest page number that is allowed in page ranges.</summary>
      <returns>A <see cref="T:System.UInt32" /> that represents the highest page number that can be used in a page range in the Print dialog box.</returns>
      <exception cref="T:System.ArgumentException">The property is being set to less than 1.</exception>
    </member>
    <member name="P:System.Windows.Controls.PrintDialog.MinPage">
      <summary>Gets or sets the lowest page number that is allowed in page ranges.</summary>
      <returns>A <see cref="T:System.UInt32" /> that represents the lowest page number that can be used in a page range in the Print dialog box.</returns>
      <exception cref="T:System.ArgumentException">The property is being set to less than 1.</exception>
    </member>
    <member name="P:System.Windows.Controls.PrintDialog.PageRange">
      <summary>Gets or sets the range of pages to print when <see cref="P:System.Windows.Controls.PrintDialog.PageRangeSelection" /> is set to <see cref="F:System.Windows.Controls.PageRangeSelection.UserPages" />.</summary>
      <returns>A <see cref="T:System.Windows.Controls.PageRange" /> that represents the range of pages that are printed.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="T:System.Windows.Controls.PageRange" /> object that is being used to set the property has either the beginning of the range or the end of the range set to a value that is less than 1.</exception>
    </member>
    <member name="P:System.Windows.Controls.PrintDialog.PageRangeSelection">
      <summary>Gets or sets the <see cref="T:System.Windows.Controls.PageRangeSelection" /> for this instance of <see cref="T:System.Windows.Controls.PrintDialog" />.</summary>
      <returns>The <see cref="T:System.Windows.Controls.PageRangeSelection" /> value that represents the type of page range to print.</returns>
    </member>
    <member name="P:System.Windows.Controls.PrintDialog.PrintableAreaHeight">
      <summary>Gets the height of the printable area of the page.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the height of the printable page area.</returns>
    </member>
    <member name="P:System.Windows.Controls.PrintDialog.PrintableAreaWidth">
      <summary>Gets the width of the printable area of the page.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the width of the printable page area.</returns>
    </member>
    <member name="M:System.Windows.Controls.PrintDialog.PrintDocument(System.Windows.Documents.DocumentPaginator,System.String)">
      <summary>Prints a <see cref="T:System.Windows.Documents.DocumentPaginator" /> object to the <see cref="T:System.Printing.PrintQueue" /> that is currently selected.</summary>
      <param name="documentPaginator">The <see cref="T:System.Windows.Documents.DocumentPaginator" /> object to print.</param>
      <param name="description">A description of the job that is to be printed. This text appears in the user interface (UI) of the printer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="documentPaginator" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Controls.PrintDialog.PrintQueue">
      <summary>Gets or sets a <see cref="T:System.Printing.PrintQueue" /> that represents the printer that is selected.</summary>
      <returns>The <see cref="T:System.Printing.PrintQueue" /> that the user selected.</returns>
    </member>
    <member name="P:System.Windows.Controls.PrintDialog.PrintTicket">
      <summary>Gets or sets the <see cref="T:System.Printing.PrintTicket" /> that is used by the <see cref="T:System.Windows.Controls.PrintDialog" /> when the user clicks Print for the current print job.</summary>
      <returns>A <see cref="T:System.Printing.PrintTicket" /> that is used the next time the Print button in the dialog box is clicked.  
 Setting this <see cref="P:System.Windows.Controls.PrintDialog.PrintTicket" /> property does not validate or modify the specified <see cref="T:System.Printing.PrintTicket" /> for a particular <see cref="T:System.Printing.PrintQueue" />.  If needed, use the <see cref="M:System.Printing.PrintQueue.MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket)" /> method to create a <see cref="T:System.Printing.PrintQueue" />-specific <see cref="T:System.Printing.PrintTicket" /> that is valid for a given printer.</returns>
    </member>
    <member name="M:System.Windows.Controls.PrintDialog.PrintVisual(System.Windows.Media.Visual,System.String)">
      <summary>Prints a visual (non-text) object, which is derived from the <see cref="T:System.Windows.Media.Visual" /> class, to the <see cref="T:System.Printing.PrintQueue" /> that is currently selected.</summary>
      <param name="visual">The <see cref="T:System.Windows.Media.Visual" /> to print.</param>
      <param name="description">A description of the job that is to be printed. This text appears in the user interface (UI) of the printer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visual" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Controls.PrintDialog.SelectedPagesEnabled">
      <summary>Gets or sets a value that indicates whether the option to print the selected pages is enabled.</summary>
      <returns>
        <see langword="true" /> if the option to print the selected pages is enabled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.PrintDialog.ShowDialog">
      <summary>Invokes the <see cref="T:System.Windows.Controls.PrintDialog" /> as a modal dialog box.</summary>
      <returns>
        <see langword="true" /> if a user clicks Print; <see langword="false" /> if a user clicks Cancel; or <see langword="null" /> if a user closes the dialog box without clicking Print or Cancel.</returns>
    </member>
    <member name="P:System.Windows.Controls.PrintDialog.UserPageRangeEnabled">
      <summary>Gets or sets a value that indicates whether users of the Print dialog box have the option to specify ranges of pages to print.</summary>
      <returns>
        <see langword="true" /> if the option is available; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.PrintDialogException">
      <summary>The exception that is thrown when an error condition occurs during the opening, accessing, or using of a PrintDialog.</summary>
    </member>
    <member name="M:System.Windows.Controls.PrintDialogException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.PrintDialogException" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.PrintDialogException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.PrintDialogException" /> class that provides specific <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" />. This constructor is protected.</summary>
      <param name="info">The data that is required to serialize or deserialize an object.</param>
      <param name="context">The context, including source and destination, of the serialized stream.</param>
    </member>
    <member name="M:System.Windows.Controls.PrintDialogException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.PrintDialogException" /> class that provides a specific error condition in a <see cref="T:System.String" /> .</summary>
      <param name="message">A <see cref="T:System.String" /> that describes the error condition.</param>
    </member>
    <member name="M:System.Windows.Controls.PrintDialogException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.PrintDialogException" /> class that provides a specific error condition, including its underlying cause.</summary>
      <param name="message">The <see cref="T:System.String" /> that describes the error condition.</param>
      <param name="innerException">The underlying error condition that caused the <see cref="T:System.Windows.Controls.PrintDialogException" />.</param>
    </member>
    <member name="T:System.Windows.Controls.ProgressBar">
      <summary>Indicates the progress of an operation.</summary>
    </member>
    <member name="M:System.Windows.Controls.ProgressBar.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ProgressBar" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.ProgressBar.IsIndeterminate">
      <summary>Gets or sets whether the <see cref="T:System.Windows.Controls.ProgressBar" /> shows actual values or generic, continuous progress feedback.</summary>
      <returns>
        <see langword="false" /> if the <see cref="T:System.Windows.Controls.ProgressBar" /> shows actual values; <see langword="true" /> if the <see cref="T:System.Windows.Controls.ProgressBar" /> shows generic progress. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ProgressBar.IsIndeterminateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ProgressBar.IsIndeterminate" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.ProgressBar.OnApplyTemplate">
      <summary>Called when a template is applied to a <see cref="T:System.Windows.Controls.ProgressBar" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.ProgressBar.OnCreateAutomationPeer">
      <summary>Provides an appropriate <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer" /> implementation for this control, as part of the WPF automation infrastructure.</summary>
      <returns>The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</returns>
    </member>
    <member name="M:System.Windows.Controls.ProgressBar.OnMaximumChanged(System.Double,System.Double)">
      <summary>Updates the current position of the <see cref="T:System.Windows.Controls.ProgressBar" /> when the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> property changes.</summary>
      <param name="oldMaximum">Old value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> property.</param>
      <param name="newMaximum">New value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.ProgressBar.OnMinimumChanged(System.Double,System.Double)">
      <summary>Updates the current position of the <see cref="T:System.Windows.Controls.ProgressBar" /> when the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> property changes.</summary>
      <param name="oldMinimum">Old value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> property.</param>
      <param name="newMinimum">New value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.ProgressBar.OnValueChanged(System.Double,System.Double)">
      <summary>Updates the current position of the <see cref="T:System.Windows.Controls.ProgressBar" /> when the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> property changes.</summary>
      <param name="oldValue">Old value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> property.</param>
      <param name="newValue">New value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> property.</param>
    </member>
    <member name="P:System.Windows.Controls.ProgressBar.Orientation">
      <summary>Gets or sets the orientation of a <see cref="T:System.Windows.Controls.ProgressBar" />: horizontal or vertical.</summary>
      <returns>One of the <see cref="T:System.Windows.Controls.Orientation" /> values. The default is <see cref="F:System.Windows.Controls.Orientation.Horizontal" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ProgressBar.OrientationProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ProgressBar.Orientation" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Controls.RadioButton">
      <summary>Represents a button that can be selected, but not cleared, by a user. The <see cref="P:System.Windows.Controls.Primitives.ToggleButton.IsChecked" /> property of a <see cref="T:System.Windows.Controls.RadioButton" /> can be set by clicking it, but it can only be cleared programmatically.</summary>
    </member>
    <member name="M:System.Windows.Controls.RadioButton.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.RadioButton" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.RadioButton.GroupName">
      <summary>Gets or sets the name that specifies which <see cref="T:System.Windows.Controls.RadioButton" /> controls are mutually exclusive.</summary>
      <returns>The name that specifies which <see cref="T:System.Windows.Controls.RadioButton" /> controls are mutually exclusive.  The default is an empty string.</returns>
    </member>
    <member name="F:System.Windows.Controls.RadioButton.GroupNameProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.RadioButton.GroupName" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.RadioButton.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
      <summary>Called when the <see cref="P:System.Windows.Controls.AccessText.AccessKey" /> for a radio button is invoked.</summary>
      <param name="e">Provides data for <see cref="T:System.Windows.Input.AccessKeyEventArgs" />.</param>
    </member>
    <member name="M:System.Windows.Controls.RadioButton.OnChecked(System.Windows.RoutedEventArgs)">
      <summary>Called when the <see cref="P:System.Windows.Controls.Primitives.ToggleButton.IsChecked" /> property becomes <see langword="true" />.</summary>
      <param name="e">Provides data for <see cref="T:System.Windows.RoutedEventArgs" />.</param>
    </member>
    <member name="M:System.Windows.Controls.RadioButton.OnCreateAutomationPeer">
      <summary>Provides an appropriate <see cref="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer" /> implementation for this control, as part of the WPF automation infrastructure.</summary>
      <returns>The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</returns>
    </member>
    <member name="M:System.Windows.Controls.RadioButton.OnToggle">
      <summary>Called by the <see cref="M:System.Windows.Controls.Primitives.ToggleButton.OnClick" /> method to implement a <see cref="T:System.Windows.Controls.RadioButton" /> control's toggle behavior.</summary>
    </member>
    <member name="T:System.Windows.Controls.RichTextBox">
      <summary>Represents a rich editing control which operates on <see cref="T:System.Windows.Documents.FlowDocument" /> objects.</summary>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.#ctor">
      <summary>Initializes a new, default instance of the <see cref="T:System.Windows.Controls.RichTextBox" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.#ctor(System.Windows.Documents.FlowDocument)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.RichTextBox" /> class, adding a specified <see cref="T:System.Windows.Documents.FlowDocument" /> as the initial content.</summary>
      <param name="document">A <see cref="T:System.Windows.Documents.FlowDocument" /> to be added as the initial contents of the new <see cref="T:System.Windows.Controls.RichTextBox" />.</param>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.CaretPosition">
      <summary>Gets or sets the position of the input caret.</summary>
      <returns>A <see cref="T:System.Windows.Documents.TextPointer" /> object specifying the position of the input caret.  
 By default, the caret is at the first insertion position at the beginning of the content hosted by the <see cref="T:System.Windows.Controls.RichTextBox" />. See <see cref="T:System.Windows.Documents.TextPointer" /> for more information on text position terminology like "insertion position".</returns>
      <exception cref="T:System.ArgumentNullException">An attempt is made to set this property to <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">An attempt is made to set this property to a <see cref="T:System.Windows.Documents.TextPointer" /> that references a position outside of the current document.</exception>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.Document">
      <summary>Gets or sets the <see cref="T:System.Windows.Documents.FlowDocument" /> that represents the contents of the <see cref="T:System.Windows.Controls.RichTextBox" />.</summary>
      <returns>A <see cref="T:System.Windows.Documents.FlowDocument" /> object that represents the contents of the <see cref="T:System.Windows.Controls.RichTextBox" />.  
 By default, this property is set to an empty <see cref="T:System.Windows.Documents.FlowDocument" />.  Specifically, the empty <see cref="T:System.Windows.Documents.FlowDocument" /> contains a single <see cref="T:System.Windows.Documents.Paragraph" />, which contains a single <see cref="T:System.Windows.Documents.Run" /> which contains no text.</returns>
      <exception cref="T:System.ArgumentNullException">An attempt is made to set this property to <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">An attempt is made to set this property to a <see cref="T:System.Windows.Documents.FlowDocument" /> that represents the contents of another <see cref="T:System.Windows.Controls.RichTextBox" />.</exception>
      <exception cref="T:System.InvalidOperationException">This property is set while a change block has been activated.</exception>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.GetNextSpellingErrorPosition(System.Windows.Documents.TextPointer,System.Windows.Documents.LogicalDirection)">
      <summary>Returns a <see cref="T:System.Windows.Documents.TextPointer" /> that points to the next spelling error in the contents of the <see cref="T:System.Windows.Controls.RichTextBox" />.</summary>
      <param name="position">A <see cref="T:System.Windows.Documents.TextPointer" /> indicating a position from which to search for the next spelling error.</param>
      <param name="direction">A <see cref="T:System.Windows.Documents.LogicalDirection" /> in which to search for the next spelling error, starting at the specified <c>position</c>.</param>
      <returns>A <see cref="T:System.Windows.Documents.TextPointer" /> that points to the next spelling error in the contents of the <see cref="T:System.Windows.Controls.RichTextBox" />, or <see langword="null" /> if no next spelling error exists.</returns>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.GetPositionFromPoint(System.Windows.Point,System.Boolean)">
      <summary>Returns a <see cref="T:System.Windows.Documents.TextPointer" /> that points to the insertion point closest to the specified position.</summary>
      <param name="point">A <see cref="T:System.Windows.Point" /> object specifying the position to retrieve a <see cref="T:System.Windows.Documents.TextPointer" /> for.</param>
      <param name="snapToText">If <see langword="true" />, this method always returns a <see cref="T:System.Windows.Documents.TextPointer" /> specifying the closest insertion position for the <see cref="T:System.Windows.Point" /> specified, regardless or whether or not the supplied <see cref="T:System.Windows.Point" /> is inside a character's bounding box.  
 If <see langword="false" />, this method returns <see langword="null" /> if the specified <see cref="T:System.Windows.Point" /> does not fall within any character bounding box.</param>
      <returns>A <see cref="T:System.Windows.Documents.TextPointer" /> specifying the closest insertion position for the supplied point, or <see langword="null" /> if <paramref name="snapToText" /> is <see langword="false" /> and the supplied <see cref="T:System.Windows.Point" /> is not within any character's bounding box. Note that the <see cref="T:System.Windows.Documents.TextPointer" /> returned is usually the position between two characters. Use the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> property of the returned <see cref="T:System.Windows.Documents.TextPointer" /> to determine which of the two characters the <see cref="T:System.Windows.Documents.TextPointer" /> corresponds to.</returns>
      <exception cref="T:System.InvalidOperationException">Raised if layout information for the <see cref="T:System.Windows.Controls.RichTextBox" /> is not current.</exception>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.GetSpellingError(System.Windows.Documents.TextPointer)">
      <summary>Returns a <see cref="T:System.Windows.Controls.SpellingError" /> object associated with any spelling error at a specified position in the contents of the <see cref="T:System.Windows.Controls.RichTextBox" />.</summary>
      <param name="position">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position and logical direction that resolves to a character to examine for a spelling error. Use the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> property of this <see cref="T:System.Windows.Documents.TextPointer" /> to specify the direction of the character to examine.</param>
      <returns>A <see cref="T:System.Windows.Controls.SpellingError" /> object containing the details of the spelling error found at the character indicated by <paramref name="position" />, or <see langword="null" /> if no spelling error exists at the specified character.</returns>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.GetSpellingErrorRange(System.Windows.Documents.TextPointer)">
      <summary>Returns a <see cref="T:System.Windows.Documents.TextRange" /> object covering any misspelled word at a specified position in the contents of the <see cref="T:System.Windows.Controls.RichTextBox" />.</summary>
      <param name="position">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position and logical direction that resolves to a character to examine for a spelling error. Use the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> property of this <see cref="T:System.Windows.Documents.TextPointer" /> to specify the direction of the character to examine.</param>
      <returns>A <see cref="T:System.Windows.Documents.TextRange" /> object covering any misspelled word that includes the character specified by <paramref name="position" />, or <see langword="null" /> if no spelling error exists at the specified character.</returns>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.IsDocumentEnabled">
      <summary>Gets or sets a value that indicates whether the user can interact with <see cref="T:System.Windows.UIElement" /> and <see cref="T:System.Windows.ContentElement" /> objects within the <see cref="T:System.Windows.Controls.RichTextBox" />.</summary>
      <returns>
        <see langword="true" /> if the user can interact with <see cref="T:System.Windows.UIElement" /> and <see cref="T:System.Windows.ContentElement" /> objects within the <see cref="T:System.Windows.Controls.RichTextBox" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.RichTextBox.IsDocumentEnabledProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.RichTextBox.IsDocumentEnabled" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.LogicalChildren">
      <summary>Gets an enumerator that can iterate the logical children of the <see langword="RichTextBox" />.</summary>
      <returns>An enumerator for the logical children.</returns>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.MeasureOverride(System.Windows.Size)">
      <summary>Called to re-measure the <see cref="T:System.Windows.Controls.RichTextBox" />.</summary>
      <param name="constraint">A <see cref="T:System.Windows.Size" /> structure specifying constraints on the size of the <see cref="T:System.Windows.Controls.RichTextBox" />.</param>
      <returns>A <see cref="T:System.Windows.Size" /> structure indicating the new size of the <see cref="T:System.Windows.Controls.RichTextBox" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.OnCreateAutomationPeer">
      <summary>Creates and returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> object for this <see cref="T:System.Windows.Controls.RichTextBox" />.</summary>
      <returns>An <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> object for this <see cref="T:System.Windows.Controls.RichTextBox" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)">
      <summary>Called when the DPI at which this Rich Text Box is rendered changes.</summary>
      <param name="oldDpiScaleInfo">The previous DPI scale setting.</param>
      <param name="newDpiScaleInfo">The new DPI scale setting.</param>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.Selection">
      <summary>Gets a <see cref="T:System.Windows.Documents.TextSelection" /> object containing the current selection in the <see cref="T:System.Windows.Controls.RichTextBox" />.</summary>
      <returns>A <see cref="T:System.Windows.Documents.TextSelection" /> object containing the current selection in the <see cref="T:System.Windows.Controls.RichTextBox" />.  
 The default returned <see cref="T:System.Windows.Documents.TextSelection" /> has an <see cref="P:System.Windows.Documents.TextRange.IsEmpty" /> property value of <see langword="true" />. An empty <see cref="T:System.Windows.Documents.TextSelection" /> renders as a caret in the text area with no selection.</returns>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.ShouldSerializeDocument">
      <summary>Returns a value that indicates whether or not the effective value of the <see cref="P:System.Windows.Controls.RichTextBox.Document" /> property should be serialized during serialization of a <see cref="T:System.Windows.Controls.RichTextBox" /> object.</summary>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.Controls.RichTextBox.Document" /> property should be serialized; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="value">An object to add as a child.</param>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="text">A string to add to the object.</param>
    </member>
    <member name="T:System.Windows.Controls.RowDefinition">
      <summary>Defines row-specific properties that apply to <see cref="T:System.Windows.Controls.Grid" /> elements.</summary>
    </member>
    <member name="M:System.Windows.Controls.RowDefinition.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.RowDefinition" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.RowDefinition.ActualHeight">
      <summary>Gets a value that represents the calculated height of the <see cref="T:System.Windows.Controls.RowDefinition" />.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the calculated height in device independent pixels. The default value is 0.0.</returns>
    </member>
    <member name="P:System.Windows.Controls.RowDefinition.Height">
      <summary>Gets the calculated height of a <see cref="T:System.Windows.Controls.RowDefinition" /> element, or sets the <see cref="T:System.Windows.GridLength" /> value of a row that is defined by the <see cref="T:System.Windows.Controls.RowDefinition" />.</summary>
      <returns>The <see cref="T:System.Windows.GridLength" /> that represents the height of the row. The default value is 1.0.</returns>
    </member>
    <member name="F:System.Windows.Controls.RowDefinition.HeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.RowDefinition.Height" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.RowDefinition.MaxHeight">
      <summary>Gets or sets a value that represents the maximum height of a <see cref="T:System.Windows.Controls.RowDefinition" />.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the maximum height.</returns>
    </member>
    <member name="F:System.Windows.Controls.RowDefinition.MaxHeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.RowDefinition.MaxHeight" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.RowDefinition.MinHeight">
      <summary>Gets or sets a value that represents the minimum allowable height of a <see cref="T:System.Windows.Controls.RowDefinition" />.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the minimum allowable height. The default value is 0.</returns>
    </member>
    <member name="F:System.Windows.Controls.RowDefinition.MinHeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.RowDefinition.MinHeight" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.RowDefinition.Offset">
      <summary>Gets a value that represents the offset value of this <see cref="T:System.Windows.Controls.RowDefinition" />.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the offset of the row. The default value is 0.0.</returns>
    </member>
    <member name="T:System.Windows.Controls.RowDefinitionCollection">
      <summary>Provides access to an ordered, strongly typed collection of <see cref="T:System.Windows.Controls.RowDefinition" /> objects.</summary>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.Add(System.Windows.Controls.RowDefinition)">
      <summary>Adds a <see cref="T:System.Windows.Controls.RowDefinition" /> element to a <see cref="T:System.Windows.Controls.RowDefinitionCollection" />.</summary>
      <param name="value">Identifies the <see cref="T:System.Windows.Controls.RowDefinition" /> to add to the collection.</param>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.Clear">
      <summary>Clears the content of the <see cref="T:System.Windows.Controls.RowDefinitionCollection" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.Contains(System.Windows.Controls.RowDefinition)">
      <summary>Determines whether a given <see cref="T:System.Windows.Controls.RowDefinition" /> exists within a <see cref="T:System.Windows.Controls.RowDefinitionCollection" />.</summary>
      <param name="value">Identifies the <see cref="T:System.Windows.Controls.RowDefinition" /> that is being tested.</param>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.RowDefinition" /> exists within the collection; otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.CopyTo(System.Windows.Controls.RowDefinition[],System.Int32)">
      <summary>Copies an array of <see cref="T:System.Windows.Controls.RowDefinition" /> objects to a given index position within a <see cref="T:System.Windows.Controls.RowDefinitionCollection" />.</summary>
      <param name="array">An array of <see cref="T:System.Windows.Controls.RowDefinition" /> objects.</param>
      <param name="index">Identifies the index position within <paramref name="array" /> to which the <see cref="T:System.Windows.Controls.RowDefinition" /> objects are copied.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional.  
-or-  
The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from index to the end of the destination array.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.</exception>
    </member>
    <member name="P:System.Windows.Controls.RowDefinitionCollection.Count">
      <summary>Gets the total number of items within this instance of <see cref="T:System.Windows.Controls.RowDefinitionCollection" />.</summary>
      <returns>The total number of items in the collection. This property has no default value.</returns>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.IndexOf(System.Windows.Controls.RowDefinition)">
      <summary>Returns the index position of a given <see cref="T:System.Windows.Controls.RowDefinition" /> within a <see cref="T:System.Windows.Controls.RowDefinitionCollection" />.</summary>
      <param name="value">The <see cref="T:System.Windows.Controls.RowDefinition" /> whose index position is desired.</param>
      <returns>The index of <paramref name="value" /> if found in the collection; otherwise, -1.</returns>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.Insert(System.Int32,System.Windows.Controls.RowDefinition)">
      <summary>Inserts a <see cref="T:System.Windows.Controls.RowDefinition" /> at the specified index position within a <see cref="T:System.Windows.Controls.RowDefinitionCollection" />.</summary>
      <param name="index">The position within the collection where the item is inserted.</param>
      <param name="value">The <see cref="T:System.Windows.Controls.RowDefinition" /> to insert.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</exception>
    </member>
    <member name="P:System.Windows.Controls.RowDefinitionCollection.IsReadOnly">
      <summary>Gets a value that indicates whether a <see cref="T:System.Windows.Controls.RowDefinitionCollection" /> is read-only.</summary>
      <returns>
        <see langword="true" /> if the collection is read-only; otherwise <see langword="false" />. This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Controls.RowDefinitionCollection.IsSynchronized">
      <summary>Gets a value that indicates whether access to this <see cref="T:System.Windows.Controls.RowDefinitionCollection" /> is synchronized (thread-safe).</summary>
      <returns>
        <see langword="true" /> if access to this collection is synchronized; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.RowDefinitionCollection.Item(System.Int32)">
      <summary>Gets a value that indicates the current item within a <see cref="T:System.Windows.Controls.RowDefinitionCollection" />.</summary>
      <param name="index">The current item in the collection.</param>
      <returns>The element at the specified index.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index position in the collection.</exception>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.Remove(System.Windows.Controls.RowDefinition)">
      <summary>Removes a <see cref="T:System.Windows.Controls.RowDefinition" /> from a <see cref="T:System.Windows.Controls.RowDefinitionCollection" />.</summary>
      <param name="value">The <see cref="T:System.Windows.Controls.RowDefinition" /> to remove from the collection.</param>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.RowDefinition" /> was found in the collection and removed; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.RemoveAt(System.Int32)">
      <summary>Removes a <see cref="T:System.Windows.Controls.RowDefinition" /> from a <see cref="T:System.Windows.Controls.RowDefinitionCollection" /> at the specified index position.</summary>
      <param name="index">The position within the collection at which the <see cref="T:System.Windows.Controls.RowDefinition" /> is removed.</param>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.RemoveRange(System.Int32,System.Int32)">
      <summary>Removes a range of <see cref="T:System.Windows.Controls.RowDefinition" /> objects from a <see cref="T:System.Windows.Controls.RowDefinitionCollection" />.</summary>
      <param name="index">The position within the collection at which the first <see cref="T:System.Windows.Controls.RowDefinition" /> is removed.</param>
      <param name="count">The total number of <see cref="T:System.Windows.Controls.RowDefinition" /> objects to remove from the collection.</param>
    </member>
    <member name="P:System.Windows.Controls.RowDefinitionCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Windows.Controls.RowDefinitionCollection" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Windows.Controls.RowDefinitionCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.System#Collections#Generic#IEnumerable{System#Windows#Controls#RowDefinition}#GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of the collection to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</summary>
      <param name="array">A zero-based <see cref="T:System.Array" /> that receives the copied items from the <see cref="T:System.Windows.Controls.RowDefinitionCollection" />.</param>
      <param name="index">The first position in the specified <see cref="T:System.Array" /> to receive the copied contents.</param>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Add(System.Object)">
      <summary>Adds an item to the collection.</summary>
      <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Windows.Controls.RowDefinitionCollection" />.</param>
      <returns>The position into which the new element was inserted.</returns>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Contains(System.Object)">
      <summary>Determines whether the collection contains a specific value.</summary>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Controls.RowDefinitionCollection" />.</param>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Windows.Controls.RowDefinitionCollection" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>Determines the index of a specific item in the collection.</summary>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Controls.RowDefinitionCollection" />.</param>
      <returns>The index of <paramref name="value" /> if found in the list; otherwise, -1.</returns>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Inserts an item to the collection at the specified index.</summary>
      <param name="index">The zero-based index at which to insert the <see cref="T:System.Object" />.</param>
      <param name="value">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Windows.Controls.RowDefinitionCollection" />.</param>
    </member>
    <member name="P:System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#IsFixedSize">
      <summary>Gets a value indicating whether the collection has a fixed size.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.RowDefinitionCollection" /> has a fixed size; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Item(System.Int32)">
      <summary>Gets or sets the element at the specified index.</summary>
      <param name="index">The zero-based index of the element to get or set.</param>
      <returns>The element at the specified index.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index position in the list.</exception>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Remove(System.Object)">
      <summary>Removes the first occurrence of a specific object from the collection.</summary>
      <param name="value">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Windows.Controls.RowDefinitionCollection" />.</param>
    </member>
    <member name="T:System.Windows.Controls.ScrollBarVisibility">
      <summary>Specifies the visibility of a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> for scrollable content.</summary>
    </member>
    <member name="F:System.Windows.Controls.ScrollBarVisibility.Auto">
      <summary>A <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> appears and the dimension of the <see cref="T:System.Windows.Controls.ScrollViewer" /> is applied to the content when the viewport cannot display all of the content. For a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />, the width of the content is set to the <see cref="P:System.Windows.Controls.ScrollViewer.ViewportWidth" /> of the <see cref="T:System.Windows.Controls.ScrollViewer" />. For a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />, the height of the content is set to the <see cref="P:System.Windows.Controls.ScrollViewer.ViewportHeight" /> of the <see cref="T:System.Windows.Controls.ScrollViewer" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.ScrollBarVisibility.Disabled">
      <summary>A <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> does not appear even when the viewport cannot display all of the content. The dimension of the content is set to the corresponding dimension of the <see cref="T:System.Windows.Controls.ScrollViewer" /> parent. For a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />, the width of the content is set to the <see cref="P:System.Windows.Controls.ScrollViewer.ViewportWidth" /> of the <see cref="T:System.Windows.Controls.ScrollViewer" />. For a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />, the height of the content is set to the <see cref="P:System.Windows.Controls.ScrollViewer.ViewportHeight" /> of the <see cref="T:System.Windows.Controls.ScrollViewer" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.ScrollBarVisibility.Hidden">
      <summary>A <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> does not appear even when the viewport cannot display all of the content. The dimension of the <see cref="T:System.Windows.Controls.ScrollViewer" /> is not applied to the content.</summary>
    </member>
    <member name="F:System.Windows.Controls.ScrollBarVisibility.Visible">
      <summary>A <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> always appears. The dimension of the <see cref="T:System.Windows.Controls.ScrollViewer" /> is applied to the content. For a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />, the width of the content is set to the <see cref="P:System.Windows.Controls.ScrollViewer.ViewportWidth" /> of the <see cref="T:System.Windows.Controls.ScrollViewer" />. For a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />, the height of the content is set to the <see cref="P:System.Windows.Controls.ScrollViewer.ViewportHeight" /> of the <see cref="T:System.Windows.Controls.ScrollViewer" />.</summary>
    </member>
    <member name="T:System.Windows.Controls.ScrollChangedEventArgs">
      <summary>Describes a change in the scrolling state and contains the required arguments for a <see cref="E:System.Windows.Controls.ScrollViewer.ScrollChanged" /> event.</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollChangedEventArgs.ExtentHeight">
      <summary>Gets the updated height of the <see cref="T:System.Windows.Controls.ScrollViewer" /> extent.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the updated extent height.</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollChangedEventArgs.ExtentHeightChange">
      <summary>Gets a value that indicates the change in height of the <see cref="T:System.Windows.Controls.ScrollViewer" /> extent.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the change in extent height.</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollChangedEventArgs.ExtentWidth">
      <summary>Gets the updated width of the <see cref="T:System.Windows.Controls.ScrollViewer" /> extent.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the updated extent width.</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollChangedEventArgs.ExtentWidthChange">
      <summary>Gets a value that indicates the change in width of the <see cref="T:System.Windows.Controls.ScrollViewer" /> extent.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the change in extent width.</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollChangedEventArgs.HorizontalChange">
      <summary>Gets a value that indicates the change in horizontal offset for a <see cref="T:System.Windows.Controls.ScrollViewer" />.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the change in horizontal offset for a <see cref="T:System.Windows.Controls.ScrollViewer" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollChangedEventArgs.HorizontalOffset">
      <summary>Gets the updated horizontal offset value for a <see cref="T:System.Windows.Controls.ScrollViewer" />.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the updated value of the horizontal offset for a <see cref="T:System.Windows.Controls.ScrollViewer" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollChangedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>Performs proper type casting before invoking the type-safe <see cref="T:System.Windows.Controls.ScrollChangedEventHandler" /> delegate</summary>
      <param name="genericHandler">The event handler to invoke, in this case the <see cref="T:System.Windows.Controls.ScrollChangedEventHandler" /> delegate.</param>
      <param name="genericTarget">The target upon which the <paramref name="genericHandler" /> is invoked.</param>
    </member>
    <member name="P:System.Windows.Controls.ScrollChangedEventArgs.VerticalChange">
      <summary>Gets a value that indicates the change in vertical offset of a <see cref="T:System.Windows.Controls.ScrollViewer" />.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the change in vertical offset of a <see cref="T:System.Windows.Controls.ScrollViewer" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollChangedEventArgs.VerticalOffset">
      <summary>Gets the updated value of the vertical offset for a <see cref="T:System.Windows.Controls.ScrollViewer" />.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the updated vertical offset of a <see cref="T:System.Windows.Controls.ScrollViewer" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollChangedEventArgs.ViewportHeight">
      <summary>Gets the updated value of the viewport height for a <see cref="T:System.Windows.Controls.ScrollViewer" />.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the updated viewport height of a <see cref="T:System.Windows.Controls.ScrollViewer" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollChangedEventArgs.ViewportHeightChange">
      <summary>Gets a value that indicates the change in value of the viewport height for a <see cref="T:System.Windows.Controls.ScrollViewer" />.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the change in vertical viewport height for a <see cref="T:System.Windows.Controls.ScrollViewer" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollChangedEventArgs.ViewportWidth">
      <summary>Gets the updated value of the viewport width for a <see cref="T:System.Windows.Controls.ScrollViewer" />.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the updated value of the viewport width for a <see cref="T:System.Windows.Controls.ScrollViewer" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollChangedEventArgs.ViewportWidthChange">
      <summary>Gets a value that indicates the change in viewport width of a <see cref="T:System.Windows.Controls.ScrollViewer" />.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the change in viewport width for a <see cref="T:System.Windows.Controls.ScrollViewer" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.ScrollChangedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Controls.ScrollViewer.ScrollChanged" /> routed event.</summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Controls.ScrollContentPresenter">
      <summary>Displays the content of a <see cref="T:System.Windows.Controls.ScrollViewer" /> control.</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ScrollContentPresenter" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.AdornerLayer">
      <summary>Gets the <see cref="T:System.Windows.Documents.AdornerLayer" /> on which adorners are rendered.</summary>
      <returns>The <see cref="T:System.Windows.Documents.AdornerLayer" /> on which adorners are rendered.</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.CanContentScroll">
      <summary>Indicates whether the content, if it supports <see cref="T:System.Windows.Controls.Primitives.IScrollInfo" />, should be allowed to control scrolling.</summary>
      <returns>
        <see langword="true" /> if the content is allowed to scroll; otherwise, <see langword="false" />. A <see langword="false" /> value indicates that the <see cref="T:System.Windows.Controls.ScrollContentPresenter" /> acts as the scrolling client. This property has no default value.</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollContentPresenter.CanContentScrollProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ScrollContentPresenter.CanContentScroll" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.CanHorizontallyScroll">
      <summary>Gets or sets a value that indicates whether scrolling on the horizontal axis is possible.</summary>
      <returns>
        <see langword="true" /> if scrolling is possible; otherwise, <see langword="false" />. This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.CanVerticallyScroll">
      <summary>Gets or sets a value that indicates whether scrolling on the vertical axis is possible.</summary>
      <returns>
        <see langword="true" /> if scrolling is possible; otherwise, <see langword="false" />. This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.ExtentHeight">
      <summary>Gets the vertical size of the extent.</summary>
      <returns>The vertical size of the extent. This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.ExtentWidth">
      <summary>Gets the horizontal size of the extent.</summary>
      <returns>The horizontal size of the extent. This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.HorizontalOffset">
      <summary>Gets the horizontal offset of the scrolled content.</summary>
      <returns>The horizontal offset. This property has no default value.</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.LineDown">
      <summary>Scrolls the <see cref="T:System.Windows.Controls.ScrollContentPresenter" /> content downward by one line.</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.LineLeft">
      <summary>Scrolls the <see cref="T:System.Windows.Controls.ScrollContentPresenter" /> content to the left by a predetermined amount.</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.LineRight">
      <summary>Scrolls the <see cref="T:System.Windows.Controls.ScrollContentPresenter" /> content to the right by a predetermined amount.</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.LineUp">
      <summary>Scrolls the <see cref="T:System.Windows.Controls.ScrollContentPresenter" /> content upward by one line.</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.MakeVisible(System.Windows.Media.Visual,System.Windows.Rect)">
      <summary>Forces content to scroll until the coordinate space of a <see cref="T:System.Windows.Media.Visual" /> object is visible.</summary>
      <param name="visual">The <see cref="T:System.Windows.Media.Visual" /> that becomes visible.</param>
      <param name="rectangle">The bounding rectangle that identifies the coordinate space to make visible.</param>
      <returns>A <see cref="T:System.Windows.Rect" /> that represents the visible region.</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.MouseWheelDown">
      <summary>Scrolls down within content after a user clicks the wheel button on a mouse.</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.MouseWheelLeft">
      <summary>Scrolls left within content after a user clicks the wheel button on a mouse.</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.MouseWheelRight">
      <summary>Scrolls right within content after a user clicks the wheel button on a mouse.</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.MouseWheelUp">
      <summary>Scrolls up within content after a user clicks the wheel button on a mouse.</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.OnApplyTemplate">
      <summary>Invoked when an internal process or application calls <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />, which is used to build the visual tree of the current template.</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.PageDown">
      <summary>Scrolls down within content by one page.</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.PageLeft">
      <summary>Scrolls left within content by one page.</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.PageRight">
      <summary>Scrolls right within content by one page.</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.PageUp">
      <summary>Scrolls up within content by one page.</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.ScrollOwner">
      <summary>Gets or sets a <see cref="T:System.Windows.Controls.ScrollViewer" /> element that controls scrolling behavior.</summary>
      <returns>The <see cref="T:System.Windows.Controls.ScrollViewer" /> element that controls scrolling behavior. This property has no default value.</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.SetHorizontalOffset(System.Double)">
      <summary>Sets the amount of horizontal offset.</summary>
      <param name="offset">The degree to which content is horizontally offset from the containing viewport.</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.SetVerticalOffset(System.Double)">
      <summary>Sets the amount of vertical offset.</summary>
      <param name="offset">The degree to which content is vertically offset from the containing viewport.</param>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.VerticalOffset">
      <summary>Gets the vertical offset of the scrolled content.</summary>
      <returns>The vertical offset of the scrolled content. Valid values are between zero and the <see cref="P:System.Windows.Controls.ScrollContentPresenter.ExtentHeight" /> minus the <see cref="P:System.Windows.Controls.ScrollContentPresenter.ViewportHeight" />. This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.ViewportHeight">
      <summary>Gets the vertical size of the viewport for this content.</summary>
      <returns>The vertical size of the viewport for this content. This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.ViewportWidth">
      <summary>Gets the horizontal size of the viewport for this content.</summary>
      <returns>The horizontal size of the viewport for this content. This property has no default value.</returns>
    </member>
    <member name="T:System.Windows.Controls.ScrollUnit">
      <summary>Specifies the type of unit that is used by the <see cref="P:System.Windows.Controls.VirtualizingPanel.ScrollUnit" /> attached property.</summary>
    </member>
    <member name="F:System.Windows.Controls.ScrollUnit.Item">
      <summary>The <see cref="P:System.Windows.Controls.VirtualizingPanel.ScrollUnit" /> is measured in terms of the items that are displayed in the panel.</summary>
    </member>
    <member name="F:System.Windows.Controls.ScrollUnit.Pixel">
      <summary>The <see cref="P:System.Windows.Controls.VirtualizingPanel.ScrollUnit" /> is measured in terms of device-independent units (1/96th inch per unit).</summary>
    </member>
    <member name="T:System.Windows.Controls.ScrollViewer">
      <summary>Represents a scrollable area that can contain other visible elements.</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ScrollViewer" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges the content of the <see cref="T:System.Windows.Controls.ScrollViewer" />.</summary>
      <param name="arrangeSize">The final area within the parent that this element should use to arrange itself and its children.</param>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.CanContentScroll">
      <summary>Gets or sets a value that indicates whether elements that support the <see cref="T:System.Windows.Controls.Primitives.IScrollInfo" /> interface are allowed to scroll.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.ScrollViewer" /> scrolls in terms of logical units; <see langword="false" /> if the <see cref="T:System.Windows.Controls.ScrollViewer" /> scrolls in terms of physical units. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.CanContentScrollProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ScrollViewer.CanContentScroll" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ComputedHorizontalScrollBarVisibility">
      <summary>Gets a value that indicates whether the horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> is visible.</summary>
      <returns>A <see cref="T:System.Windows.Visibility" /> that indicates whether the horizontal scroll bar is visible. The default is <see cref="F:System.Windows.Controls.ScrollBarVisibility.Hidden" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ComputedHorizontalScrollBarVisibilityProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ScrollViewer.ComputedHorizontalScrollBarVisibility" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ComputedVerticalScrollBarVisibility">
      <summary>Gets a value that indicates whether the vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> is visible.</summary>
      <returns>A <see cref="T:System.Windows.Visibility" /> that indicates whether the vertical scroll bar is visible. The default is <see cref="F:System.Windows.Controls.ScrollBarVisibility.Visible" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ComputedVerticalScrollBarVisibilityProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ScrollViewer.ComputedVerticalScrollBarVisibility" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ContentHorizontalOffset">
      <summary>Gets the horizontal offset of the visible content.</summary>
      <returns>The horizontal offset of the visible content.</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ContentHorizontalOffsetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ScrollViewer.ContentHorizontalOffset" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ContentVerticalOffset">
      <summary>Gets the vertical offset of the visible content.</summary>
      <returns>The vertical offset of the visible content.</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ContentVerticalOffsetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ScrollViewer.ContentVerticalOffset" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ExtentHeight">
      <summary>Gets a value that contains the vertical size of the extent.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the vertical size of the extent. The default is 0.0.</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ExtentHeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ScrollViewer.ExtentHeight" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ExtentWidth">
      <summary>Gets a value that contains the horizontal size of the extent.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the horizontal size of the extent. The default is 0.0.</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ExtentWidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ScrollViewer.ExtentWidth" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.GetCanContentScroll(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.ScrollViewer.CanContentScroll" /> dependency property from a given element.</summary>
      <param name="element">The element from which the property value is read.</param>
      <returns>
        <see langword="true" /> if this element can scroll; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.GetHorizontalScrollBarVisibility(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility" /> dependency property from a given element.</summary>
      <param name="element">The element from which the property value is read.</param>
      <returns>The value of the <see cref="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.GetIsDeferredScrollingEnabled(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled" /> property for the specified object.</summary>
      <param name="element">The object from which to get <see cref="P:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled" />.</param>
      <returns>
        <see langword="true" /> if the content is stationary when the user drags the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> of a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.GetPanningDeceleration(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Controls.ScrollViewer.PanningDeceleration" /> property for the specified object.</summary>
      <param name="element">The element from which the property value is read.</param>
      <returns>The rate <see cref="T:System.Windows.Controls.ScrollViewer" /> slows in device-independent units (1/96th inch per unit) per squared millisecond.</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.GetPanningMode(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Controls.ScrollViewer.PanningMode" /> property for the specified object.</summary>
      <param name="element">The element from which the property value is read.</param>
      <returns>A value that specifies how <see cref="T:System.Windows.Controls.ScrollViewer" /> reacts to touch manipulation.</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.GetPanningRatio(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Controls.ScrollViewer.PanningRatio" /> property for the specified object.</summary>
      <param name="element">The element from which the property value is read.</param>
      <returns>The ratio of scrolling offset to translate manipulation offset.</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.GetVerticalScrollBarVisibility(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility" /> dependency property from a given element.</summary>
      <param name="element">The element from which the property value is read.</param>
      <returns>The value of the <see cref="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.HandlesScrolling">
      <summary>Gets a value that indicates that a control has a <see cref="T:System.Windows.Controls.ScrollViewer" /> defined in its style that defines custom keyboard scrolling behavior.</summary>
      <returns>
        <see langword="true" /> if this control defines custom keyboard scrolling behavior; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.HitTestCore(System.Windows.Media.PointHitTestParameters)">
      <summary>Performs a hit test to determine whether the specified points are within the bounds of this <see cref="T:System.Windows.Controls.ScrollViewer" />.</summary>
      <param name="hitTestParameters">The parameters for hit testing within a visual object.</param>
      <returns>The result of the hit test.</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.HorizontalOffset">
      <summary>Gets a value that contains the horizontal offset of the scrolled content.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the horizontal offset of the scrolled content. The default is 0.0.</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.HorizontalOffsetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ScrollViewer.HorizontalOffset" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility">
      <summary>Gets or sets a value that indicates whether a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> should be displayed.</summary>
      <returns>A <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> value that indicates whether a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> should be displayed. The default is <see cref="F:System.Windows.Controls.ScrollBarVisibility.Hidden" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibilityProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.InvalidateScrollInfo">
      <summary>Called by an <see cref="T:System.Windows.Controls.Primitives.IScrollInfo" /> interface that is attached to a <see cref="T:System.Windows.Controls.ScrollViewer" /> when the value of any scrolling property size changes. Scrolling properties include offset, extent, or viewport.</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled">
      <summary>Gets or sets a value that indicates whether the content is stationary when the user drags the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> of a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />.</summary>
      <returns>
        <see langword="true" /> if the content is stationary when the user drags the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> of a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabledProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.LineDown">
      <summary>Scrolls the <see cref="T:System.Windows.Controls.ScrollViewer" /> content downward by one line.</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.LineLeft">
      <summary>Scrolls the <see cref="T:System.Windows.Controls.ScrollViewer" /> content to the left by a predetermined amount.</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.LineRight">
      <summary>Scrolls the <see cref="T:System.Windows.Controls.ScrollViewer" /> content to the right by a predetermined amount.</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.LineUp">
      <summary>Scrolls the <see cref="T:System.Windows.Controls.ScrollViewer" /> content upward by one line.</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.MeasureOverride(System.Windows.Size)">
      <summary>Measures the content of a <see cref="T:System.Windows.Controls.ScrollViewer" /> element.</summary>
      <param name="constraint">The upper limit <see cref="T:System.Windows.Size" /> that should not be exceeded.</param>
      <returns>The computed desired limit <see cref="T:System.Windows.Size" /> of the <see cref="T:System.Windows.Controls.ScrollViewer" /> element.</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.OnApplyTemplate">
      <summary>Called when an internal process or application calls <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />, which is used to build the current template's visual tree.</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.OnCreateAutomationPeer">
      <summary>Provides an appropriate <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation for this control, as part of the Windows Presentation Foundation (WPF) automation infrastructure.</summary>
      <returns>The appropriate <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation for this control.</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Responds to specific keyboard input and invokes associated scrolling behavior.</summary>
      <param name="e">Required arguments for this event.</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)">
      <summary>Called when the <see cref="E:System.Windows.UIElement.ManipulationCompleted" /> event occurs.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)">
      <summary>Called when the <see cref="E:System.Windows.UIElement.ManipulationDelta" /> event occurs.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.OnManipulationInertiaStarting(System.Windows.Input.ManipulationInertiaStartingEventArgs)">
      <summary>Called when the <see cref="E:System.Windows.UIElement.ManipulationInertiaStarting" /> event occurs.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.OnManipulationStarting(System.Windows.Input.ManipulationStartingEventArgs)">
      <summary>Called when the <see cref="E:System.Windows.UIElement.ManipulationStarting" /> event occurs.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Responds to a click of the left mouse button.</summary>
      <param name="e">Required arguments that describe this event.</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
      <summary>Responds to a click of the mouse wheel.</summary>
      <param name="e">Required arguments that describe this event.</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.OnScrollChanged(System.Windows.Controls.ScrollChangedEventArgs)">
      <summary>Called when a change in scrolling state is detected, such as a change in scroll position, extent, or viewport size.</summary>
      <param name="e">The <see cref="T:System.Windows.Controls.ScrollChangedEventArgs" /> that contain information about the change in the scrolling state.</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)">
      <summary>Called when a tap gesture initiated by a stylus is detected.</summary>
      <param name="e">The <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> that contains information about the gesture.</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.PageDown">
      <summary>Scrolls the <see cref="T:System.Windows.Controls.ScrollViewer" /> content downward by one page.</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.PageLeft">
      <summary>Scrolls the <see cref="T:System.Windows.Controls.ScrollViewer" /> content to the left by one page.</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.PageRight">
      <summary>Scrolls the <see cref="T:System.Windows.Controls.ScrollViewer" /> content to the right by one page.</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.PageUp">
      <summary>Scrolls the <see cref="T:System.Windows.Controls.ScrollViewer" /> content upward by one page.</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.PanningDeceleration">
      <summary>Gets or sets the rate <see cref="T:System.Windows.Controls.ScrollViewer" /> slows in device-independent units (1/96th inch per unit) per squared millisecond when in inertia.</summary>
      <returns>The rate <see cref="T:System.Windows.Controls.ScrollViewer" /> slows in device-independent units (1/96th inch per unit) per squared millisecond.</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.PanningDecelerationProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ScrollViewer.PanningDeceleration" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.PanningMode">
      <summary>Gets or sets the way <see cref="T:System.Windows.Controls.ScrollViewer" /> reacts to touch manipulation.</summary>
      <returns>A value that specifies how <see cref="T:System.Windows.Controls.ScrollViewer" /> reacts to touch manipulation.  The default is <see cref="F:System.Windows.Controls.PanningMode.None" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.PanningModeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ScrollViewer.PanningMode" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.PanningRatio">
      <summary>Gets or sets the ratio of scrolling offset to translate manipulation offset.</summary>
      <returns>The ratio of scrolling offset to translate manipulation offset. The default is 1.</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.PanningRatioProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ScrollViewer.PanningRatio" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ScrollableHeight">
      <summary>Gets a value that represents the vertical size of the content element that can be scrolled.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the vertical size of the content element that can be scrolled. This property has no default value.</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ScrollableHeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ScrollViewer.ScrollableHeight" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ScrollableWidth">
      <summary>Gets a value that represents the horizontal size of the content element that can be scrolled.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the horizontal size of the content element that can be scrolled. This property has no default value.</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ScrollableWidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ScrollViewer.ScrollableWidth" /> dependency property.</summary>
    </member>
    <member name="E:System.Windows.Controls.ScrollViewer.ScrollChanged">
      <summary>Occurs when changes are detected to the scroll position, extent, or viewport size.</summary>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ScrollChangedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.ScrollViewer.ScrollChanged" /> routed event.</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ScrollInfo">
      <summary>Gets or sets the element that implements the <see cref="T:System.Windows.Controls.Primitives.IScrollInfo" /> interface and provides values for scrolling properties of this <see cref="T:System.Windows.Controls.ScrollViewer" />.</summary>
      <returns>The element that controls scrolling properties, such as extent, offset, or viewport size. This property has no default value.</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.ScrollToBottom">
      <summary>Scrolls vertically to the end of the <see cref="T:System.Windows.Controls.ScrollViewer" /> content.</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.ScrollToEnd">
      <summary>Scrolls vertically to the end of the <see cref="T:System.Windows.Controls.ScrollViewer" /> content.</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.ScrollToHome">
      <summary>Scrolls vertically to the beginning of the <see cref="T:System.Windows.Controls.ScrollViewer" /> content.</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.ScrollToHorizontalOffset(System.Double)">
      <summary>Scrolls the content within the <see cref="T:System.Windows.Controls.ScrollViewer" /> to the specified horizontal offset position.</summary>
      <param name="offset">The position that the content scrolls to.</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.ScrollToLeftEnd">
      <summary>Scrolls horizontally to the beginning of the <see cref="T:System.Windows.Controls.ScrollViewer" /> content.</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.ScrollToRightEnd">
      <summary>Scrolls horizontally to the end of the <see cref="T:System.Windows.Controls.ScrollViewer" /> content.</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.ScrollToTop">
      <summary>Scrolls vertically to the beginning of the <see cref="T:System.Windows.Controls.ScrollViewer" /> content.</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.ScrollToVerticalOffset(System.Double)">
      <summary>Scrolls the content within the <see cref="T:System.Windows.Controls.ScrollViewer" /> to the specified vertical offset position.</summary>
      <param name="offset">The position that the content scrolls to.</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.SetCanContentScroll(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.ScrollViewer.CanContentScroll" /> dependency property to a given element.</summary>
      <param name="element">The element on which to set the property value.</param>
      <param name="canContentScroll">The property value to set.</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.SetHorizontalScrollBarVisibility(System.Windows.DependencyObject,System.Windows.Controls.ScrollBarVisibility)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility" /> dependency property to a given element.</summary>
      <param name="element">The element on which to set the property value.</param>
      <param name="horizontalScrollBarVisibility">The property value to set.</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.SetIsDeferredScrollingEnabled(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the <see cref="P:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled" /> property for the specified object.</summary>
      <param name="element">The object on which to set the <see cref="P:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled" /> property.</param>
      <param name="value">
        <see langword="true" /> to have the content remain stationary when the user drags the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> of a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.SetPanningDeceleration(System.Windows.DependencyObject,System.Double)">
      <summary>Sets the <see cref="P:System.Windows.Controls.ScrollViewer.PanningDeceleration" /> property for the specified object.</summary>
      <param name="element">The object on which to set the <see cref="P:System.Windows.Controls.ScrollViewer.PanningDeceleration" /> property.</param>
      <param name="value">The rate <see cref="T:System.Windows.Controls.ScrollViewer" /> slows in device-independent units (1/96th inch per unit) per squared millisecond.</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.SetPanningMode(System.Windows.DependencyObject,System.Windows.Controls.PanningMode)">
      <summary>Sets the <see cref="P:System.Windows.Controls.ScrollViewer.PanningMode" /> property for the specified object.</summary>
      <param name="element">The object on which to set the <see cref="P:System.Windows.Controls.ScrollViewer.PanningMode" /> property.</param>
      <param name="panningMode">A value that specifies how <see cref="T:System.Windows.Controls.ScrollViewer" /> reacts to touch manipulation.</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.SetPanningRatio(System.Windows.DependencyObject,System.Double)">
      <summary>Sets the <see cref="P:System.Windows.Controls.ScrollViewer.PanningRatio" /> property for the specified object.</summary>
      <param name="element">The object on which to set the <see cref="P:System.Windows.Controls.ScrollViewer.PanningRatio" /> property.</param>
      <param name="value">The ratio of scrolling offset to translate manipulation offset.</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.SetVerticalScrollBarVisibility(System.Windows.DependencyObject,System.Windows.Controls.ScrollBarVisibility)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility" /> dependency property to a given element.</summary>
      <param name="element">The element on which to set the property value.</param>
      <param name="verticalScrollBarVisibility">The property value to set.</param>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.VerticalOffset">
      <summary>Gets a value that contains the vertical offset of the scrolled content.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the vertical offset of the scrolled content. The default is 0.0.</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.VerticalOffsetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ScrollViewer.VerticalOffset" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility">
      <summary>Gets or sets a value that indicates whether a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> should be displayed.</summary>
      <returns>A <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> value that indicates whether a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> should be displayed. The default is <see cref="F:System.Windows.Controls.ScrollBarVisibility.Visible" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibilityProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ViewportHeight">
      <summary>Gets a value that contains the vertical size of the content's viewport.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the vertical size of the content's viewport. This property has no default value.</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ViewportHeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ScrollViewer.ViewportHeight" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ViewportWidth">
      <summary>Gets a value that contains the horizontal size of the content's viewport.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the horizontal size of the content's viewport. The default is 0.0.</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ViewportWidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ScrollViewer.ViewportWidth" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Controls.SelectedCellsChangedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.DataGrid.SelectedCellsChanged" /> event.</summary>
    </member>
    <member name="M:System.Windows.Controls.SelectedCellsChangedEventArgs.#ctor(System.Collections.Generic.List{System.Windows.Controls.DataGridCellInfo},System.Collections.Generic.List{System.Windows.Controls.DataGridCellInfo})">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.SelectedCellsChangedEventArgs" /> class with the specified cells added to and removed from the selection.</summary>
      <param name="addedCells">The cells added to the selection.</param>
      <param name="removedCells">The cells removed from the selection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="addedCells" /> or <paramref name="removedCells" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.SelectedCellsChangedEventArgs.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Controls.DataGridCellInfo},System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Controls.DataGridCellInfo})">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.SelectedCellsChangedEventArgs" /> class with the specified cells added to and removed from the selection.</summary>
      <param name="addedCells">The cells added to the selection.</param>
      <param name="removedCells">The cells removed from the selection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="addedCells" /> or <paramref name="removedCells" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Controls.SelectedCellsChangedEventArgs.AddedCells">
      <summary>Gets the cells that were added to the selection.</summary>
      <returns>The added cells.</returns>
    </member>
    <member name="P:System.Windows.Controls.SelectedCellsChangedEventArgs.RemovedCells">
      <summary>Gets the list of cells removed from the selection.</summary>
      <returns>The list of cells removed.</returns>
    </member>
    <member name="T:System.Windows.Controls.SelectedCellsChangedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Controls.DataGrid.SelectedCellsChanged" /> event of a <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The data for the event.</param>
    </member>
    <member name="T:System.Windows.Controls.SelectedDatesCollection">
      <summary>Represents a set of selected dates in a <see cref="T:System.Windows.Controls.Calendar" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.SelectedDatesCollection.#ctor(System.Windows.Controls.Calendar)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.SelectedDatesCollection" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.Calendar" /> associated with this collection.</param>
    </member>
    <member name="M:System.Windows.Controls.SelectedDatesCollection.AddRange(System.DateTime,System.DateTime)">
      <summary>Adds all the dates in the specified range, which includes the first and last dates, to the collection.</summary>
      <param name="start">The first date to add to the collection.</param>
      <param name="end">The last date to add to the collection.</param>
    </member>
    <member name="T:System.Windows.Controls.SelectionChangedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> event.</summary>
    </member>
    <member name="M:System.Windows.Controls.SelectionChangedEventArgs.#ctor(System.Windows.RoutedEvent,System.Collections.IList,System.Collections.IList)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.SelectionChangedEventArgs" /> class.</summary>
      <param name="id">The event identifier (ID).</param>
      <param name="removedItems">The items that were unselected during this event.</param>
      <param name="addedItems">The items that were selected during this event.</param>
    </member>
    <member name="P:System.Windows.Controls.SelectionChangedEventArgs.AddedItems">
      <summary>Gets a list that contains the items that were selected.</summary>
      <returns>The items that were selected since the last time the <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> event occurred.</returns>
    </member>
    <member name="M:System.Windows.Controls.SelectionChangedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>Performs the proper type casting to call the type-safe <see cref="T:System.Windows.Controls.SelectionChangedEventHandler" /> delegate for the <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> event.</summary>
      <param name="genericHandler">The handler to invoke.</param>
      <param name="genericTarget">The current object along the event's route.</param>
    </member>
    <member name="P:System.Windows.Controls.SelectionChangedEventArgs.RemovedItems">
      <summary>Gets a list that contains the items that were unselected.</summary>
      <returns>The items that were unselected since the last time the <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> event occurred.</returns>
    </member>
    <member name="T:System.Windows.Controls.SelectionChangedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> routed event.</summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Controls.SelectionMode">
      <summary>Defines the selection behavior for a <see cref="T:System.Windows.Controls.ListBox" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.SelectionMode.Extended">
      <summary>The user can select multiple consecutive items while holding down the SHIFT key.</summary>
    </member>
    <member name="F:System.Windows.Controls.SelectionMode.Multiple">
      <summary>The user can select multiple items without holding down a modifier key.</summary>
    </member>
    <member name="F:System.Windows.Controls.SelectionMode.Single">
      <summary>The user can select only one item at a time.</summary>
    </member>
    <member name="T:System.Windows.Controls.SelectiveScrollingOrientation">
      <summary>Specifies the direction that <see cref="T:System.Windows.Controls.Primitives.SelectiveScrollingGrid" /> panels can scroll.</summary>
    </member>
    <member name="F:System.Windows.Controls.SelectiveScrollingOrientation.Both">
      <summary>The panel scrolls in both the horizontal and vertical direction.</summary>
    </member>
    <member name="F:System.Windows.Controls.SelectiveScrollingOrientation.Horizontal">
      <summary>The panel scrolls in the horizontal direction only.</summary>
    </member>
    <member name="F:System.Windows.Controls.SelectiveScrollingOrientation.None">
      <summary>The panel does not scroll.</summary>
    </member>
    <member name="F:System.Windows.Controls.SelectiveScrollingOrientation.Vertical">
      <summary>The panel scrolls in the vertical direction only.</summary>
    </member>
    <member name="T:System.Windows.Controls.Separator">
      <summary>Control that is used to separate items in items controls.</summary>
    </member>
    <member name="M:System.Windows.Controls.Separator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Separator" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.Separator.OnCreateAutomationPeer">
      <summary>Provides an appropriate <see cref="T:System.Windows.Automation.Peers.SeparatorAutomationPeer" /> implementation for this control, as part of the WPF automation infrastructure.</summary>
      <returns>The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</returns>
    </member>
    <member name="T:System.Windows.Controls.Slider">
      <summary>Represents a control that lets the user select from a range of values by moving a <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> control along a <see cref="T:System.Windows.Controls.Primitives.Track" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.Slider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Slider" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.Slider.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges the content of a <see cref="T:System.Windows.Controls.Slider" /> and determines its <see cref="T:System.Windows.Size" />.</summary>
      <param name="finalSize">The computed <see cref="T:System.Windows.Size" /> that is used to arrange the control.</param>
      <returns>The computed <see cref="T:System.Windows.Size" /> of the <see cref="T:System.Windows.Controls.Slider" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.Slider.AutoToolTipPlacement">
      <summary>Gets or sets whether a tooltip that contains the current value of the <see cref="T:System.Windows.Controls.Slider" /> displays when the <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> is pressed. If a tooltip is displayed, this property also specifies the placement of the tooltip.</summary>
      <returns>One of the <see cref="T:System.Windows.Controls.Primitives.AutoToolTipPlacement" /> values that determines where to display the tooltip with respect to the <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> of the <see cref="T:System.Windows.Controls.Slider" />, or that specifies to not show a tooltip. The default is <see cref="F:System.Windows.Controls.Primitives.AutoToolTipPlacement.None" />, which specifies that a tooltip is not displayed.</returns>
    </member>
    <member name="F:System.Windows.Controls.Slider.AutoToolTipPlacementProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Slider.AutoToolTipPlacement" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Slider.AutoToolTipPrecision">
      <summary>Gets or sets the number of digits that are displayed to the right side of the decimal point for the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> of the <see cref="T:System.Windows.Controls.Slider" /> in a tooltip.</summary>
      <returns>The precision of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> that displays in the tooltip, specified as the number of digits that appear to the right of the decimal point. The default is zero (0).</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Controls.Slider.AutoToolTipPrecision" /> is set to a value other than a non-negative integer.</exception>
    </member>
    <member name="F:System.Windows.Controls.Slider.AutoToolTipPrecisionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Slider.AutoToolTipPrecision" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Slider.DecreaseLarge">
      <summary>Gets a command that decreases the value of the <see cref="T:System.Windows.Controls.Slider" /> by the same amount as the <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange" /> property.</summary>
      <returns>The <see cref="T:System.Windows.Input.RoutedCommand" /> that decreases the value of the <see cref="T:System.Windows.Controls.Slider" /> by the same amount as the <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange" /> property. The default <see cref="T:System.Windows.Input.InputGesture" /> is <see cref="F:System.Windows.Input.Key.PageDown" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.Slider.DecreaseSmall">
      <summary>Gets a command that decreases the value of the <see cref="T:System.Windows.Controls.Slider" /> by the same amount as the <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange" /> property.</summary>
      <returns>The <see cref="T:System.Windows.Input.RoutedCommand" /> that decreases the value of the <see cref="T:System.Windows.Controls.Slider" /> by the same amount as the <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange" /> property. The default <see cref="T:System.Windows.Input.InputGesture" /> objects are <see cref="F:System.Windows.Input.Key.Down" /> and <see cref="F:System.Windows.Input.Key.Left" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.Slider.Delay">
      <summary>Gets or sets the amount of time in milliseconds that a <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> waits, while it is pressed, before a command to move the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> executes, such as a <see cref="P:System.Windows.Controls.Slider.DecreaseLarge" /> command.</summary>
      <returns>A time delay in milliseconds. The default is the system key press delay. For more information, see <see cref="P:System.Windows.SystemParameters.KeyboardDelay" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Slider.DelayProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Slider.Delay" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Slider.IncreaseLarge">
      <summary>Gets a command that increases the value of the slider by the same amount as the <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange" /> property.</summary>
      <returns>The <see cref="T:System.Windows.Input.RoutedCommand" /> that increases the value of the <see cref="F:System.Windows.Controls.Slider.SelectionStartProperty" /> by the same amount as the <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange" /> property. The default <see cref="T:System.Windows.Input.InputGesture" /> for this command is <see cref="F:System.Windows.Input.Key.PageUp" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.Slider.IncreaseSmall">
      <summary>Gets a command that increases the value of the slider by the same amount as the <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange" /> property.</summary>
      <returns>Returns the <see cref="T:System.Windows.Input.RoutedCommand" /> that increases the value of the slider by the same amount as the <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange" /> property. The default <see cref="T:System.Windows.Input.InputGesture" /> objects for this command are <see cref="F:System.Windows.Input.Key.Up" /> and <see cref="F:System.Windows.Input.Key.Right" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.Slider.Interval">
      <summary>Gets or sets the amount of time in milliseconds between increase or decrease commands when a user clicks the <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> of a <see cref="T:System.Windows.Controls.Slider" />.</summary>
      <returns>A time in milliseconds between commands that change the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> of a <see cref="T:System.Windows.Controls.Slider" />. The default is the system key repeat rate. For more information, see SystemParametersInfo (SPI_GETKEYBOARDSPEED).</returns>
    </member>
    <member name="F:System.Windows.Controls.Slider.IntervalProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Slider.Interval" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Slider.IsDirectionReversed">
      <summary>Gets or sets the direction of increasing value.</summary>
      <returns>
        <see langword="true" /> if the direction of increasing value is to the left for a horizontal slider or down for a vertical slider; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Slider.IsDirectionReversedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Slider.IsDirectionReversed" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Slider.IsMoveToPointEnabled">
      <summary>Gets or sets a value that indicates whether the <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> of a <see cref="T:System.Windows.Controls.Slider" /> moves immediately to the location of the mouse click that occurs while the mouse pointer pauses on the <see cref="T:System.Windows.Controls.Slider" /> track.</summary>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> moves immediately to the location of a mouse click; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Slider.IsMoveToPointEnabledProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Slider.IsMoveToPointEnabled" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Slider.IsSelectionRangeEnabled">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.Slider" /> displays a selection range along the <see cref="T:System.Windows.Controls.Slider" />.</summary>
      <returns>
        <see langword="true" /> if a selection range is displayed; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Slider.IsSelectionRangeEnabledProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Slider.IsSelectionRangeEnabled" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Slider.IsSnapToTickEnabled">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.Slider" /> automatically moves the <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> to the closest tick mark.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.Slider" /> requires the position of the <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> to be a tick mark; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Slider.IsSnapToTickEnabledProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Slider.IsSnapToTickEnabled" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Slider.MaximizeValue">
      <summary>Gets a command that sets the <see cref="T:System.Windows.Controls.Slider" /><see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> to the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> value.</summary>
      <returns>The <see cref="T:System.Windows.Input.RoutedCommand" /> to use. The default is <see cref="F:System.Windows.Input.Key.End" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.Slider.MinimizeValue">
      <summary>Gets a command that sets the <see cref="T:System.Windows.Controls.Slider" /><see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> to the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> value.</summary>
      <returns>The <see cref="T:System.Windows.Input.RoutedCommand" /> to use. The default is <see cref="F:System.Windows.Input.Key.Home" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.Slider" /> control.</summary>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnCreateAutomationPeer">
      <summary>Creates an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for the <see cref="T:System.Windows.Controls.Slider" />.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.SliderAutomationPeer" /> for the <see cref="T:System.Windows.Controls.Slider" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnDecreaseLarge">
      <summary>Responds to the <see cref="P:System.Windows.Controls.Slider.DecreaseLarge" /> command.</summary>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnDecreaseSmall">
      <summary>Responds to a <see cref="P:System.Windows.Controls.Slider.DecreaseSmall" /> command.</summary>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnIncreaseLarge">
      <summary>Responds to an <see cref="P:System.Windows.Controls.Slider.IncreaseLarge" /> command.</summary>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnIncreaseSmall">
      <summary>Responds to an <see cref="P:System.Windows.Controls.Slider.IncreaseSmall" /> command.</summary>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnMaximizeValue">
      <summary>Responds to the <see cref="P:System.Windows.Controls.Slider.MaximizeValue" /> command.</summary>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnMaximumChanged(System.Double,System.Double)">
      <summary>Responds to a change in the value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> property.</summary>
      <param name="oldMaximum">The old value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> property.</param>
      <param name="newMaximum">The new value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnMinimizeValue">
      <summary>Responds to a <see cref="P:System.Windows.Controls.Slider.MinimizeValue" /> command.</summary>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnMinimumChanged(System.Double,System.Double)">
      <summary>Responds to a change in the value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> property.</summary>
      <param name="oldMinimum">The old value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> property.</param>
      <param name="newMinimum">The new value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" /> routed event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnThumbDragCompleted(System.Windows.Controls.Primitives.DragCompletedEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragCompleted" /> event that occurs when the user stops dragging the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> of the <see cref="T:System.Windows.Controls.Slider" />.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnThumbDragDelta(System.Windows.Controls.Primitives.DragDeltaEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> event that occurs when the user drags the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> of the <see cref="T:System.Windows.Controls.Slider" />.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnThumbDragStarted(System.Windows.Controls.Primitives.DragStartedEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragStarted" /> event that occurs when the user starts to drag the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> of the <see cref="T:System.Windows.Controls.Slider" />.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnValueChanged(System.Double,System.Double)">
      <summary>Updates the current position of the <see cref="T:System.Windows.Controls.Slider" /> when the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> property changes.</summary>
      <param name="oldValue">The old <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> of the <see cref="T:System.Windows.Controls.Slider" />.</param>
      <param name="newValue">The new <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> of the <see cref="T:System.Windows.Controls.Slider" />.</param>
    </member>
    <member name="P:System.Windows.Controls.Slider.Orientation">
      <summary>Gets or sets the orientation of a <see cref="T:System.Windows.Controls.Slider" />.</summary>
      <returns>One of the <see cref="P:System.Windows.Controls.Slider.Orientation" /> values. The default is <see cref="F:System.Windows.Controls.Orientation.Horizontal" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Slider.OrientationProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Slider.Orientation" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Slider.SelectionEnd">
      <summary>Gets or sets the largest value of a specified selection for a <see cref="T:System.Windows.Controls.Slider" />.</summary>
      <returns>The largest value of a selected range of values of a <see cref="T:System.Windows.Controls.Slider" />. The default is zero (0.0).</returns>
    </member>
    <member name="F:System.Windows.Controls.Slider.SelectionEndProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Slider.SelectionEnd" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Slider.SelectionStart">
      <summary>Gets or sets the smallest value of a specified selection for a <see cref="T:System.Windows.Controls.Slider" />.</summary>
      <returns>The largest value of a selected range of values of a <see cref="T:System.Windows.Controls.Slider" />. The default is zero (0.0).</returns>
    </member>
    <member name="F:System.Windows.Controls.Slider.SelectionStartProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Slider.SelectionStart" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Slider.TickFrequency">
      <summary>Gets or sets the interval between tick marks.</summary>
      <returns>The distance between tick marks. The default is (1.0).</returns>
    </member>
    <member name="F:System.Windows.Controls.Slider.TickFrequencyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Slider.TickFrequency" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Slider.TickPlacement">
      <summary>Gets or sets the position of tick marks with respect to the <see cref="T:System.Windows.Controls.Primitives.Track" /> of the <see cref="T:System.Windows.Controls.Slider" />.</summary>
      <returns>A <see cref="P:System.Windows.Controls.Slider.TickPlacement" /> value that defines how to position the tick marks in a <see cref="T:System.Windows.Controls.Slider" /> with respect to the slider bar. The default is <see cref="F:System.Windows.Controls.Primitives.TickPlacement.None" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Slider.TickPlacementProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Slider.TickPlacement" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Slider.Ticks">
      <summary>Gets or sets the positions of the tick marks to display for a <see cref="T:System.Windows.Controls.Slider" />.</summary>
      <returns>A set of tick marks to display for a <see cref="T:System.Windows.Controls.Slider" />. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Slider.TicksProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Slider.Ticks" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Controls.SoundPlayerAction">
      <summary>Represents a lightweight audio playback <see cref="T:System.Windows.TriggerAction" /> used to play .wav files.</summary>
    </member>
    <member name="M:System.Windows.Controls.SoundPlayerAction.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.SoundPlayerAction" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.SoundPlayerAction.Dispose">
      <summary>Releases the resources used by the <see cref="T:System.Windows.Controls.SoundPlayerAction" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.SoundPlayerAction.Source">
      <summary>Gets or sets the audio source location.</summary>
      <returns>The audio source location.</returns>
    </member>
    <member name="F:System.Windows.Controls.SoundPlayerAction.SourceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.SoundPlayerAction.Source" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Controls.SpellCheck">
      <summary>Provides real-time spell-checking functionality to text-editing controls, such as <see cref="T:System.Windows.Controls.TextBox" /> and <see cref="T:System.Windows.Controls.RichTextBox" />.</summary>
    </member>
    <member name="P:System.Windows.Controls.SpellCheck.CustomDictionaries">
      <summary>Gets the collection of lexicon file locations that are used for custom spell checking.</summary>
      <returns>The collection of lexicon file locations.</returns>
    </member>
    <member name="F:System.Windows.Controls.SpellCheck.CustomDictionariesProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.SpellCheck.CustomDictionaries" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.SpellCheck.GetCustomDictionaries(System.Windows.Controls.Primitives.TextBoxBase)">
      <summary>Gets the collection of lexicon file locations that are used for custom spelling checkers on a specified text-editing control.</summary>
      <param name="textBoxBase">The text-editing control whose collection of lexicon files is retrieved.</param>
      <returns>The collection of lexicon file locations.</returns>
      <exception cref="T:System.ArgumentNullException">The <paramref name="textBoxBase" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.SpellCheck.GetIsEnabled(System.Windows.Controls.Primitives.TextBoxBase)">
      <summary>Returns a value that indicates whether the spelling checker is enabled on the specified text-editing control.</summary>
      <param name="textBoxBase">The text-editing control to check. Example controls include <see cref="T:System.Windows.Controls.TextBox" /> and <see cref="T:System.Windows.Controls.RichTextBox" />.</param>
      <returns>
        <see langword="true" /> if the spelling checker is enabled on the text-editing control; otherwise, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">The <paramref name="textBoxBase" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Controls.SpellCheck.IsEnabled">
      <summary>Gets or sets a value that determines whether the spelling checker is enabled on this text-editing control, such as <see cref="T:System.Windows.Controls.TextBox" /> or <see cref="T:System.Windows.Controls.RichTextBox" />.</summary>
      <returns>
        <see langword="true" /> if the spelling checker is enabled on the control; otherwise, <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.SpellCheck.IsEnabledProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.SpellCheck.IsEnabled" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.SpellCheck.SetIsEnabled(System.Windows.Controls.Primitives.TextBoxBase,System.Boolean)">
      <summary>Enables or disables the spelling checker on the specified text-editing control, such as <see cref="T:System.Windows.Controls.TextBox" /> or <see cref="T:System.Windows.Controls.RichTextBox" />.</summary>
      <param name="textBoxBase">The text-editing control on which to enable or disable the spelling checker. Example controls include <see cref="T:System.Windows.Controls.TextBox" /> and <see cref="T:System.Windows.Controls.RichTextBox" />.</param>
      <param name="value">A Boolean value that specifies whether the spelling checker is enabled on the text-editing control.</param>
    </member>
    <member name="M:System.Windows.Controls.SpellCheck.SetSpellingReform(System.Windows.Controls.Primitives.TextBoxBase,System.Windows.Controls.SpellingReform)">
      <summary>Determines the spelling reform rules that are used by the spelling checker.</summary>
      <param name="textBoxBase">The text-editing control to which the spelling checker is applied. Example controls include <see cref="T:System.Windows.Controls.TextBox" /> and <see cref="T:System.Windows.Controls.RichTextBox" />.</param>
      <param name="value">The <see cref="P:System.Windows.Controls.SpellCheck.SpellingReform" /> value that determines the spelling reform rules.</param>
    </member>
    <member name="P:System.Windows.Controls.SpellCheck.SpellingReform">
      <summary>Gets or sets the spelling reform rules that are used by the spelling checker.</summary>
      <returns>The spelling reform rules that are used by the spelling checker. The default value is <see cref="F:System.Windows.Controls.SpellingReform.PreAndPostreform" /> for French and <see cref="F:System.Windows.Controls.SpellingReform.Postreform" /> for German.</returns>
    </member>
    <member name="F:System.Windows.Controls.SpellCheck.SpellingReformProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.SpellCheck.SpellingReform" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Controls.SpellingError">
      <summary>Represents a misspelled word in an editing control (i.e. <see cref="T:System.Windows.Controls.TextBox" /> or <see cref="T:System.Windows.Controls.RichTextBox" />).</summary>
    </member>
    <member name="M:System.Windows.Controls.SpellingError.Correct(System.String)">
      <summary>Replaces the spelling error text with the specified correction.</summary>
      <param name="correctedText">The text used to replace the misspelled text.</param>
    </member>
    <member name="M:System.Windows.Controls.SpellingError.IgnoreAll">
      <summary>Instructs the control to ignore this error and any duplicates for the remainder of the lifetime of the control.</summary>
    </member>
    <member name="P:System.Windows.Controls.SpellingError.Suggestions">
      <summary>Gets a list of suggested spelling replacements for the misspelled word.</summary>
      <returns>The collection of spelling suggestions for the misspelled word.</returns>
    </member>
    <member name="T:System.Windows.Controls.SpellingReform">
      <summary>Specifies the spelling reform rules used by the spellchecker of the text editing control (i.e. <see cref="T:System.Windows.Controls.TextBox" /> or <see cref="T:System.Windows.Controls.RichTextBox" />).</summary>
    </member>
    <member name="F:System.Windows.Controls.SpellingReform.Postreform">
      <summary>Use spelling rules from after the spelling reform.</summary>
    </member>
    <member name="F:System.Windows.Controls.SpellingReform.PreAndPostreform">
      <summary>Use spelling rules from both before and after the spelling reform.</summary>
    </member>
    <member name="F:System.Windows.Controls.SpellingReform.Prereform">
      <summary>Use spelling rules from before the spelling reform.</summary>
    </member>
    <member name="T:System.Windows.Controls.StackPanel">
      <summary>Arranges child elements into a single line that can be oriented horizontally or vertically.</summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.StackPanel" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges the content of a <see cref="T:System.Windows.Controls.StackPanel" /> element.</summary>
      <param name="arrangeSize">The <see cref="T:System.Windows.Size" /> that this element should use to arrange its child elements.</param>
      <returns>The <see cref="T:System.Windows.Size" /> that represents the arranged size of this <see cref="T:System.Windows.Controls.StackPanel" /> element and its child elements.</returns>
    </member>
    <member name="P:System.Windows.Controls.StackPanel.CanHorizontallyScroll">
      <summary>Gets or sets a value that indicates whether a <see cref="T:System.Windows.Controls.StackPanel" /> can scroll in the horizontal dimension.</summary>
      <returns>
        <see langword="true" /> if content can scroll in the horizontal dimension; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.StackPanel.CanVerticallyScroll">
      <summary>Gets or sets a value that indicates whether content can scroll in the vertical dimension.</summary>
      <returns>
        <see langword="true" /> if content can scroll in the vertical dimension; otherwise, <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.StackPanel.ExtentHeight">
      <summary>Gets a value that contains the vertical size of the extent.</summary>
      <returns>The <see cref="T:System.Double" /> that represents the vertical size of the extent. The default value is 0.0.</returns>
    </member>
    <member name="P:System.Windows.Controls.StackPanel.ExtentWidth">
      <summary>Gets a value that contains the horizontal size of the extent.</summary>
      <returns>
        <see cref="T:System.Double" /> that represents the horizontal size of the extent. The default value is 0.0.</returns>
    </member>
    <member name="P:System.Windows.Controls.StackPanel.HasLogicalOrientation">
      <summary>Gets a value that indicates if this <see cref="T:System.Windows.Controls.StackPanel" /> has vertical or horizontal orientation.</summary>
      <returns>This property always returns <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.StackPanel.HorizontalOffset">
      <summary>Gets a value that contains the horizontal offset of the scrolled content.</summary>
      <returns>The <see cref="T:System.Double" /> that represents the horizontal offset of the scrolled content. The default value is 0.0.</returns>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.LineDown">
      <summary>Scrolls content downward by one logical unit.</summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.LineLeft">
      <summary>Scrolls content by one logical unit to the left.</summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.LineRight">
      <summary>Scrolls content by one logical unit to the right.</summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.LineUp">
      <summary>Scrolls content by one logical unit upward.</summary>
    </member>
    <member name="P:System.Windows.Controls.StackPanel.LogicalOrientation">
      <summary>Gets a value that represents the <see cref="T:System.Windows.Controls.Orientation" /> of the <see cref="T:System.Windows.Controls.StackPanel" />.</summary>
      <returns>An <see cref="T:System.Windows.Controls.Orientation" /> value.</returns>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.MakeVisible(System.Windows.Media.Visual,System.Windows.Rect)">
      <summary>Scrolls to the specified coordinates and makes that part of a <see cref="T:System.Windows.Media.Visual" /> visible.</summary>
      <param name="visual">The <see cref="T:System.Windows.Media.Visual" /> that becomes visible.</param>
      <param name="rectangle">The <see cref="T:System.Windows.Rect" /> that represents coordinate space within a visual.</param>
      <returns>A <see cref="T:System.Windows.Rect" /> in the coordinate space that is made visible.</returns>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.MeasureOverride(System.Windows.Size)">
      <summary>Measures the child elements of a <see cref="T:System.Windows.Controls.StackPanel" /> in anticipation of arranging them during the <see cref="M:System.Windows.Controls.StackPanel.ArrangeOverride(System.Windows.Size)" /> pass.</summary>
      <param name="constraint">An upper limit <see cref="T:System.Windows.Size" /> that should not be exceeded.</param>
      <returns>The <see cref="T:System.Windows.Size" /> that represents the desired size of the element.</returns>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.MouseWheelDown">
      <summary>Scrolls content logically downward in response to a click of the mouse wheel button.</summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.MouseWheelLeft">
      <summary>Scrolls content logically to the left in response to a click of the mouse wheel button.</summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.MouseWheelRight">
      <summary>Scrolls content logically to the right in response to a click of the mouse wheel button.</summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.MouseWheelUp">
      <summary>Scrolls content logically upward in response to a click of the mouse wheel button.</summary>
    </member>
    <member name="P:System.Windows.Controls.StackPanel.Orientation">
      <summary>Gets or sets a value that indicates the dimension by which child elements are stacked.</summary>
      <returns>The <see cref="T:System.Windows.Controls.Orientation" /> of child content.</returns>
    </member>
    <member name="F:System.Windows.Controls.StackPanel.OrientationProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.StackPanel.Orientation" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.PageDown">
      <summary>Scrolls content logically downward by one page.</summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.PageLeft">
      <summary>Scrolls content logically to the left by one page.</summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.PageRight">
      <summary>Scrolls content logically to the right by one page.</summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.PageUp">
      <summary>Scrolls content logically upward by one page.</summary>
    </member>
    <member name="P:System.Windows.Controls.StackPanel.ScrollOwner">
      <summary>Gets or sets a value that identifies the container that controls scrolling behavior in this <see cref="T:System.Windows.Controls.StackPanel" />.</summary>
      <returns>The <see cref="T:System.Windows.Controls.ScrollViewer" /> that owns scrolling for this <see cref="T:System.Windows.Controls.StackPanel" />. This property has no default value.</returns>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.SetHorizontalOffset(System.Double)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.StackPanel.HorizontalOffset" /> property.</summary>
      <param name="offset">The value of the <see cref="P:System.Windows.Controls.StackPanel.HorizontalOffset" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.SetVerticalOffset(System.Double)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.StackPanel.VerticalOffset" /> property.</summary>
      <param name="offset">The value of the <see cref="P:System.Windows.Controls.StackPanel.VerticalOffset" /> property.</param>
    </member>
    <member name="P:System.Windows.Controls.StackPanel.VerticalOffset">
      <summary>Gets a value that contains the vertical offset of the scrolled content.</summary>
      <returns>The <see cref="T:System.Double" /> that represents the vertical offset of the scrolled content. The default value is 0.0.</returns>
    </member>
    <member name="P:System.Windows.Controls.StackPanel.ViewportHeight">
      <summary>Gets a value that contains the vertical size of the content's viewport.</summary>
      <returns>The <see cref="T:System.Double" /> that represents the vertical size of the content's viewport. The default value is 0.0.</returns>
    </member>
    <member name="P:System.Windows.Controls.StackPanel.ViewportWidth">
      <summary>Gets a value that contains the horizontal size of the content's viewport.</summary>
      <returns>The <see cref="T:System.Double" /> that represents the vertical size of the content's viewport. The default value is 0.0.</returns>
    </member>
    <member name="T:System.Windows.Controls.StickyNoteControl">
      <summary>Represents a control that lets users attach typed text or handwritten annotations to documents.</summary>
    </member>
    <member name="P:System.Windows.Controls.StickyNoteControl.AnchorInfo">
      <summary>Gets an object that provides information about the annotated object.</summary>
      <returns>An <see cref="T:System.Windows.Annotations.IAnchorInfo" /> object that provides information about the annotated object.</returns>
    </member>
    <member name="P:System.Windows.Controls.StickyNoteControl.Author">
      <summary>Gets the name of the author who created the sticky note.</summary>
      <returns>The name of the author who created the sticky note.</returns>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.AuthorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.StickyNoteControl.Author" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.StickyNoteControl.CaptionFontFamily">
      <summary>Gets or sets the font family of the caption for the <see cref="T:System.Windows.Controls.StickyNoteControl" />.</summary>
      <returns>A <see cref="T:System.Drawing.FontFamily" /> for the control's caption. The default is the value of <see cref="P:System.Windows.SystemFonts.MessageFontFamily" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.CaptionFontFamilyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.StickyNoteControl.CaptionFontFamily" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.StickyNoteControl.CaptionFontSize">
      <summary>Gets or sets the size of the font used for the caption of the <see cref="T:System.Windows.Controls.StickyNoteControl" />.</summary>
      <returns>A <see cref="T:System.Double" /> representing the font size. The default is the value of <see cref="P:System.Windows.SystemFonts.MessageFontSize" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.CaptionFontSizeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.StickyNoteControl.CaptionFontSize" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.StickyNoteControl.CaptionFontStretch">
      <summary>Gets or sets the degree to which the font used for the caption of the <see cref="T:System.Windows.Controls.StickyNoteControl" /> is stretched.</summary>
      <returns>A <see cref="T:System.Windows.FontStretch" /> structure representing the degree of stretching compared to a font's normal aspect ratio. The default is <see cref="P:System.Windows.FontStretches.Normal" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.CaptionFontStretchProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.StickyNoteControl.CaptionFontStretch" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.StickyNoteControl.CaptionFontStyle">
      <summary>Gets or sets the style of the font used for the caption of the <see cref="T:System.Windows.Controls.StickyNoteControl" />.</summary>
      <returns>A <see cref="T:System.Windows.FontStyle" /> structure representing the style of the caption as normal, italic, or oblique. The default is the value of <see cref="P:System.Windows.SystemFonts.MessageFontStyle" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.CaptionFontStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.StickyNoteControl.CaptionFontStyle" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.StickyNoteControl.CaptionFontWeight">
      <summary>Gets or sets the weight of the font used for the caption of the <see cref="T:System.Windows.Controls.StickyNoteControl" />.</summary>
      <returns>A <see cref="T:System.Windows.FontWeight" /> structure representing the weight of the font, for example, bold, ultrabold, or extralight. The default is the value of <see cref="P:System.Windows.SystemFonts.MessageFontWeight" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.CaptionFontWeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.StickyNoteControl.CaptionFontWeight" /> dependency property.</summary>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.DeleteNoteCommand">
      <summary>Represents a command whose <see cref="M:System.Windows.Input.RoutedCommand.Execute(System.Object,System.Windows.IInputElement)" /> method deletes a <see cref="T:System.Windows.Controls.StickyNoteControl" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.InkCommand">
      <summary>Represents a command whose <see cref="M:System.Windows.Input.RoutedCommand.Execute(System.Object,System.Windows.IInputElement)" /> method will switch the cursor in an ink sticky note to one of several possible modes, including draw and erase.</summary>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.InkSchemaName">
      <summary>Gets the Xml type of the ink sticky note annotation.</summary>
    </member>
    <member name="P:System.Windows.Controls.StickyNoteControl.IsActive">
      <summary>Gets a value indicating whether the <see cref="T:System.Windows.Controls.StickyNoteControl" /> is active.</summary>
      <returns>
        <see langword="true" /> if the control is active; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.IsActiveProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.StickyNoteControl.IsActive" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.StickyNoteControl.IsExpanded">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.Windows.Controls.StickyNoteControl" /> is expanded.</summary>
      <returns>
        <see langword="true" /> if the control is expanded; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.IsExpandedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.StickyNoteControl.IsExpanded" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.StickyNoteControl.IsMouseOverAnchor">
      <summary>Gets a value indicating whether the mouse cursor is over the anchor of the <see cref="T:System.Windows.Controls.StickyNoteControl" />.</summary>
      <returns>
        <see langword="true" /> if the mouse cursor is over the anchor; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.IsMouseOverAnchorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.StickyNoteControl.IsMouseOverAnchor" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.StickyNoteControl.OnApplyTemplate">
      <summary>Registers event handlers for all the children of a template.</summary>
    </member>
    <member name="P:System.Windows.Controls.StickyNoteControl.PenWidth">
      <summary>Gets or sets the width of the pen for an ink <see cref="T:System.Windows.Controls.StickyNoteControl" />.</summary>
      <returns>A <see cref="T:System.Double" /> representing the width of the pen. The default is the value of <see cref="P:System.Windows.Ink.DrawingAttributes.Width" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.PenWidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.StickyNoteControl.PenWidth" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.StickyNoteControl.StickyNoteType">
      <summary>Gets a value that indicates whether the sticky note is text or ink.</summary>
      <returns>A <see cref="T:System.Windows.Controls.StickyNoteType" /> value indicating the type of note. The default is <see cref="F:System.Windows.Controls.StickyNoteType.Text" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.StickyNoteTypeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.StickyNoteControl.StickyNoteType" /> dependency property.</summary>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.TextSchemaName">
      <summary>Gets the Xml type of the text sticky note annotation.</summary>
    </member>
    <member name="T:System.Windows.Controls.StickyNoteType">
      <summary>Specifies whether a <see cref="T:System.Windows.Controls.StickyNoteControl" /> accepts text or ink.</summary>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteType.Ink">
      <summary>An ink sticky note.</summary>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteType.Text">
      <summary>A text sticky note.</summary>
    </member>
    <member name="T:System.Windows.Controls.StretchDirection">
      <summary>Describes how scaling applies to content and restricts scaling to named axis types.</summary>
    </member>
    <member name="F:System.Windows.Controls.StretchDirection.Both">
      <summary>The content stretches to fit the parent according to the <see cref="T:System.Windows.Media.Stretch" /> mode.</summary>
    </member>
    <member name="F:System.Windows.Controls.StretchDirection.DownOnly">
      <summary>The content scales downward only when it is larger than the parent. If the content is smaller, no scaling upward is performed.</summary>
    </member>
    <member name="F:System.Windows.Controls.StretchDirection.UpOnly">
      <summary>The content scales upward only when it is smaller than the parent. If the content is larger, no scaling downward is performed.</summary>
    </member>
    <member name="T:System.Windows.Controls.StyleSelector">
      <summary>Provides a way to apply styles based on custom logic.</summary>
    </member>
    <member name="M:System.Windows.Controls.StyleSelector.#ctor">
      <summary>Initializes a new instance of a <see cref="T:System.Windows.Controls.StyleSelector" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.StyleSelector.SelectStyle(System.Object,System.Windows.DependencyObject)">
      <summary>When overridden in a derived class, returns a <see cref="T:System.Windows.Style" /> based on custom logic.</summary>
      <param name="item">The content.</param>
      <param name="container">The element to which the style will be applied.</param>
      <returns>Returns an application-specific style to apply; otherwise, <see langword="null" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.TabControl">
      <summary>Represents a control that contains multiple items that share the same space on the screen.</summary>
    </member>
    <member name="M:System.Windows.Controls.TabControl.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.TabControl" />.class.</summary>
    </member>
    <member name="P:System.Windows.Controls.TabControl.ContentStringFormat">
      <summary>Gets a composite string that specifies how to format the contents of the <see cref="T:System.Windows.Controls.TabItem" /> objects if they are displayed as strings.</summary>
      <returns>A composite string that specifies how to format the contents of the <see cref="T:System.Windows.Controls.TabItem" /> objects if they are displayed as strings.</returns>
    </member>
    <member name="F:System.Windows.Controls.TabControl.ContentStringFormatProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TabControl.ContentStringFormat" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.TabControl.ContentTemplate">
      <summary>Gets or sets the <see cref="T:System.Windows.DataTemplate" /> to apply to any <see cref="T:System.Windows.Controls.TabItem" /> that does not have a <see cref="P:System.Windows.Controls.ContentControl.ContentTemplate" /> or <see cref="P:System.Windows.Controls.ContentControl.ContentTemplateSelector" /> property defined.</summary>
      <returns>The <see cref="T:System.Windows.DataTemplate" /> to apply to any <see cref="T:System.Windows.Controls.TabItem" /> that does not have a <see cref="P:System.Windows.Controls.ContentControl.ContentTemplate" /> or <see cref="P:System.Windows.Controls.ContentControl.ContentTemplateSelector" /> property defined. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.TabControl.ContentTemplateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TabControl.ContentTemplate" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.TabControl.ContentTemplateSelector">
      <summary>Gets or sets a <see cref="T:System.Windows.Controls.DataTemplateSelector" /> that provides custom logic for choosing the template that is used to display the content of the control.</summary>
      <returns>A <see cref="P:System.Windows.Controls.TabControl.ContentTemplateSelector" />. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.TabControl.ContentTemplateSelectorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TabControl.ContentTemplateSelector" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.TabControl.GetContainerForItemOverride">
      <summary>Creates or identifies the element used to display the specified item.</summary>
      <returns>The element used to display the specified item.</returns>
    </member>
    <member name="M:System.Windows.Controls.TabControl.IsItemItsOwnContainerOverride(System.Object)">
      <summary>Determines if the specified item is (or is eligible to be) its own <see langword="ItemContainer" />.</summary>
      <param name="item">Specified item.</param>
      <returns>Returns <see langword="true" /> if the item is its own <see langword="ItemContainer" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.TabControl.OnApplyTemplate">
      <summary>Called when <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> is called.</summary>
    </member>
    <member name="M:System.Windows.Controls.TabControl.OnCreateAutomationPeer">
      <summary>Provides an appropriate <see cref="T:System.Windows.Automation.Peers.TabControlAutomationPeer" /> implementation for this control, as part of the WPF automation infrastructure.</summary>
      <returns>The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</returns>
    </member>
    <member name="M:System.Windows.Controls.TabControl.OnInitialized(System.EventArgs)">
      <summary>Called when <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> is set to <see langword="true" />.</summary>
      <param name="e">Provides data for the <see cref="E:System.Windows.FrameworkElement.Initialized" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.TabControl.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>Called to update the current selection when items change.</summary>
      <param name="e">The event data for the <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.TabControl.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.ContentElement.KeyDown" /> routed event that occurs when the user presses a key.</summary>
      <param name="e">Provides data for <see cref="T:System.Windows.Input.KeyEventArgs" />.</param>
    </member>
    <member name="M:System.Windows.Controls.TabControl.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> routed event.</summary>
      <param name="e">Provides data for <see cref="T:System.Windows.Controls.SelectionChangedEventArgs" />.</param>
    </member>
    <member name="P:System.Windows.Controls.TabControl.SelectedContent">
      <summary>Gets the content of the currently selected <see cref="T:System.Windows.Controls.TabItem" />.</summary>
      <returns>The content of the currently selected <see cref="T:System.Windows.Controls.TabItem" />. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.TabControl.SelectedContentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TabControl.SelectedContent" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.TabControl.SelectedContentStringFormat">
      <summary>Gets a composite string that specifies how to format the content of the currently selected <see cref="T:System.Windows.Controls.TabItem" /> if it is displayed as a string.</summary>
      <returns>A composite string that specifies how to format the content of the currently selected <see cref="T:System.Windows.Controls.TabItem" /> if it is displayed as a string.</returns>
    </member>
    <member name="F:System.Windows.Controls.TabControl.SelectedContentStringFormatProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TabControl.SelectedContentStringFormat" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.TabControl.SelectedContentTemplate">
      <summary>Gets the <see cref="T:System.Windows.DataTemplate" /> of the currently selected item.</summary>
      <returns>The <see cref="T:System.Windows.DataTemplate" /> of the selected item.</returns>
    </member>
    <member name="F:System.Windows.Controls.TabControl.SelectedContentTemplateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TabControl.SelectedContentTemplate" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.TabControl.SelectedContentTemplateSelector">
      <summary>Gets the <see cref="T:System.Windows.Controls.DataTemplateSelector" /> of the currently selected item.</summary>
      <returns>The <see cref="T:System.Windows.Controls.DataTemplateSelector" /> of the currently selected item. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.TabControl.SelectedContentTemplateSelectorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TabControl.SelectedContentTemplateSelector" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.TabControl.TabStripPlacement">
      <summary>Gets or sets how tab headers align relative to the tab content.</summary>
      <returns>The alignment of tab headers relative to tab content. The default is <see cref="F:System.Windows.Controls.Dock.Top" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.TabControl.TabStripPlacementProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TabControl.TabStripPlacement" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Controls.TabItem">
      <summary>Represents a selectable item inside a <see cref="T:System.Windows.Controls.TabControl" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.TabItem.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.TabItem" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.TabItem.IsSelected">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.TabItem" /> is selected.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.TabItem" /> is selected; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.TabItem.IsSelectedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TabItem.IsSelected" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
      <summary>Responds when an <see cref="P:System.Windows.Controls.AccessText.AccessKey" /> for a <see cref="T:System.Windows.Controls.TabControl" /> is called.</summary>
      <param name="e">Provides data for <see cref="T:System.Windows.Input.AccessKeyEventArgs" />.</param>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnContentChanged(System.Object,System.Object)">
      <summary>Called when the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property changes.</summary>
      <param name="oldContent">Old value of the content property.</param>
      <param name="newContent">New value of the content property.</param>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnContentTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>Called when the <see cref="P:System.Windows.Controls.TabControl.ContentTemplate" /> property changes.</summary>
      <param name="oldContentTemplate">Old value of the content template property.</param>
      <param name="newContentTemplate">New value of the content template property.</param>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnContentTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)">
      <summary>Called when the <see cref="P:System.Windows.Controls.TabControl.ContentTemplateSelector" /> property changes.</summary>
      <param name="oldContentTemplateSelector">Old value of the content template selector.</param>
      <param name="newContentTemplateSelector">New value of the content template selector.</param>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnCreateAutomationPeer">
      <summary>Provides an appropriate <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" /> implementation for this control, as part of the WPF automation infrastructure.</summary>
      <returns>The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</returns>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Responds to the <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" /> event.</summary>
      <param name="e">Provides data for <see cref="T:System.Windows.Input.MouseButtonEventArgs" />.</param>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>Announces that the keyboard is focused on this element.</summary>
      <param name="e">Keyboard input event arguments.</param>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnSelected(System.Windows.RoutedEventArgs)">
      <summary>Called to indicate that the <see cref="P:System.Windows.Controls.TabItem.IsSelected" /> property has changed to <see langword="true" />.</summary>
      <param name="e">The event data for the <see cref="E:System.Windows.Controls.Primitives.Selector.Selected" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnUnselected(System.Windows.RoutedEventArgs)">
      <summary>Called to indicate that the <see cref="P:System.Windows.Controls.TabItem.IsSelected" /> property has changed to <see langword="false" />.</summary>
      <param name="e">The event data for the <see cref="E:System.Windows.Controls.Primitives.Selector.Unselected" /> event.</param>
    </member>
    <member name="P:System.Windows.Controls.TabItem.TabStripPlacement">
      <summary>Gets the tab strip placement.</summary>
      <returns>One of the <see cref="T:System.Windows.Controls.Dock" /> values. The default is <see cref="F:System.Windows.Controls.Dock.Top" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.TabItem.TabStripPlacementProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TabItem.TabStripPlacement" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Controls.TextBlock">
      <summary>Provides a lightweight control for displaying small amounts of flow content.</summary>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.TextBlock" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.#ctor(System.Windows.Documents.Inline)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.TextBlock" /> class, adding a specified <see cref="T:System.Windows.Documents.Inline" /> element as the initial display content.</summary>
      <param name="inline">An object deriving from the abstract <see cref="T:System.Windows.Documents.Inline" /> class, to be added as the initial content.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inline" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.ArrangeOverride(System.Windows.Size)">
      <summary>Positions child elements and determines a size for the <see cref="T:System.Windows.Controls.TextBlock" />.</summary>
      <param name="arrangeSize">A <see cref="T:System.Windows.Size" /> within the hosting parent element that the <see cref="T:System.Windows.Controls.TextBlock" /> should use to arrange itself and its child elements. Sizing constraints may affect this requested size.</param>
      <returns>The actual <see cref="T:System.Windows.Size" /> used to arrange the element.</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.Background">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> used to fill the background of content area.</summary>
      <returns>The brush used to fill the background of the content area, or <see langword="null" /> to not use a background brush. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.BackgroundProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.Background" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.BaselineOffset">
      <summary>Gets or sets the amount by which each line of text is offset from the baseline.</summary>
      <returns>The amount by which each line of text is offset from the baseline, in device independent pixels. <see cref="F:System.Double.NaN" /> indicates that an optimal baseline offset is automatically calculated from the current font characteristics. The default is <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.BaselineOffsetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.BaselineOffset" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.BreakAfter">
      <summary>Gets a <see cref="T:System.Windows.LineBreakCondition" /> that indicates how content should break after the current element.</summary>
      <returns>The conditions for breaking content after the current element.</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.BreakBefore">
      <summary>Gets a <see cref="T:System.Windows.LineBreakCondition" /> that indicates how content should break before the current element.</summary>
      <returns>The conditions for breaking content after the current element.</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.ContentEnd">
      <summary>Gets a <see cref="T:System.Windows.Documents.TextPointer" /> to the end of content in the <see cref="T:System.Windows.Controls.TextBlock" />.</summary>
      <returns>A <see cref="T:System.Windows.Documents.TextPointer" /> to the end of content in the <see cref="T:System.Windows.Controls.TextBlock" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.ContentStart">
      <summary>Gets a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of content in the <see cref="T:System.Windows.Controls.TextBlock" />.</summary>
      <returns>A <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of content in the <see cref="T:System.Windows.Controls.TextBlock" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.FontFamily">
      <summary>Gets or sets the preferred top-level font family for the <see cref="T:System.Windows.Controls.TextBlock" />.</summary>
      <returns>A <see cref="T:System.Windows.Media.FontFamily" /> object specifying the preferred font family, or a primary preferred font family with one or more fallback font families. The default is the font determined by the <see cref="P:System.Windows.SystemFonts.MessageFontFamily" /> value.</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.FontFamilyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.FontFamily" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.FontSize">
      <summary>Gets or sets the top-level font size for the <see cref="T:System.Windows.Controls.TextBlock" />.</summary>
      <returns>The desired font size to use in device independent pixels). The default is determined by the <see cref="P:System.Windows.SystemFonts.MessageFontSize" /> value.</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.FontSizeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.FontSize" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.FontStretch">
      <summary>Gets or sets the top-level font-stretching characteristics for the <see cref="T:System.Windows.Controls.TextBlock" />.</summary>
      <returns>A member of the <see cref="T:System.Windows.FontStretch" /> class specifying the desired font-stretching characteristics to use. The default is <see cref="P:System.Windows.FontStretches.Normal" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.FontStretchProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.FontStretch" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.FontStyle">
      <summary>Gets or sets the top-level font style for the <see cref="T:System.Windows.Controls.TextBlock" />.</summary>
      <returns>A member of the <see cref="T:System.Windows.FontStyles" /> class specifying the desired font style. The default is determined by the <see cref="P:System.Windows.SystemFonts.MessageFontStyle" /> value.</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.FontStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.FontStyle" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.FontWeight">
      <summary>Gets or sets the top-level font weight for the <see cref="T:System.Windows.Controls.TextBlock" />.</summary>
      <returns>A member of the <see cref="T:System.Windows.FontWeights" /> class specifying the desired font weight. The default is determined by the <see cref="P:System.Windows.SystemFonts.MessageFontWeight" /> value.</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.FontWeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.FontWeight" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.Foreground">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> to apply to the text contents of the <see cref="T:System.Windows.Controls.TextBlock" />.</summary>
      <returns>The brush used to apply to the text contents. The default is <see cref="P:System.Windows.Media.Brushes.Black" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.ForegroundProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.Foreground" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.GetBaselineOffset(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Controls.TextBlock.BaselineOffset" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Controls.TextBlock.BaselineOffset" /> attached property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Controls.TextBlock.BaselineOffset" /> attached property on the specified dependency object.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.GetFontFamily(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="F:System.Windows.Controls.TextBlock.FontFamilyProperty" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Controls.TextBlock.FontFamily" /> attached property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Controls.TextBlock.FontFamily" /> attached property on the specified dependency object.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.GetFontSize(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Controls.TextBlock.FontSize" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Controls.TextBlock.FontSize" /> attached property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Controls.TextBlock.FontSize" /> attached property on the specified dependency object.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.GetFontStretch(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Controls.TextBlock.FontStretch" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Controls.TextBlock.FontStretch" /> attached property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Controls.TextBlock.FontStretch" /> attached property on the specified dependency object.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.GetFontStyle(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Controls.TextBlock.FontStyle" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Controls.TextBlock.FontStyle" /> attached property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Controls.TextBlock.FontStyle" /> attached property on the specified dependency object.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.GetFontWeight(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Controls.TextBlock.FontWeight" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Controls.TextBlock.FontWeight" /> attached property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Controls.TextBlock.FontWeight" /> attached property on the specified dependency object.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.GetForeground(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Controls.TextBlock.Foreground" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Controls.TextBlock.Foreground" /> attached property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Controls.TextBlock.Foreground" /> attached property on the specified dependency object.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.GetLineHeight(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> attached property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> attached property on the specified dependency object.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.GetLineStackingStrategy(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy" /> attached property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy" /> attached property on the specified dependency object.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.GetPositionFromPoint(System.Windows.Point,System.Boolean)">
      <summary>Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position closest to a specified <see cref="T:System.Windows.Point" />.</summary>
      <param name="point">A <see cref="T:System.Windows.Point" /> in the coordinate space of the <see cref="T:System.Windows.Controls.TextBlock" /> for which to return a <see cref="T:System.Windows.Documents.TextPointer" />.</param>
      <param name="snapToText">
        <see langword="true" /> to return a <see cref="T:System.Windows.Documents.TextPointer" /> to the insertion point closest to <paramref name="point" />, whether or not <paramref name="point" /> is inside a character's bounding box; <see langword="false" /> to return <see langword="null" /> if <paramref name="point" /> is not inside a character's bounding box.</param>
      <returns>A <see cref="T:System.Windows.Documents.TextPointer" /> to the specified point, or <see langword="null" /> if <paramref name="snapToText" /> is <see langword="false" /> and the specified point does not fall within a character bounding box in the <see cref="T:System.Windows.Controls.TextBlock" /> content area.</returns>
      <exception cref="T:System.InvalidOperationException">Current, valid layout information for the control is unavailable.</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.GetRectanglesCore(System.Windows.ContentElement)">
      <summary>Returns a read-only collection of bounding rectangles for a specified <see cref="T:System.Windows.ContentElement" />.</summary>
      <param name="child">A <see cref="T:System.Windows.ContentElement" /> for which to generate and return a collection of bounding rectangles.</param>
      <returns>A read-only collection of bounding rectangles for the specified <see cref="T:System.Windows.ContentElement" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="child" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.GetTextAlignment(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Controls.TextBlock.TextAlignment" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Controls.TextBlock.TextAlignment" /> attached property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Controls.TextBlock.TextAlignment" /> attached property on the specified dependency object.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.GetVisualChild(System.Int32)">
      <summary>Returns the <see cref="T:System.Windows.Media.Visual" /> child at a specified index.</summary>
      <param name="index">A zero-based index specifying the <see cref="T:System.Windows.Media.Visual" /> child to return.  This value must be between 0 and (<see cref="P:System.Windows.Controls.TextBlock.VisualChildrenCount" /> minus 1)</param>
      <returns>The <see cref="T:System.Windows.Media.Visual" /> child at the specified index.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not between 0 and (<see cref="P:System.Windows.Controls.TextBlock.VisualChildrenCount" /> minus 1)</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.HitTestCore(System.Windows.Media.PointHitTestParameters)">
      <summary>Returns a <see cref="T:System.Windows.Media.PointHitTestResult" /> for specified <see cref="T:System.Windows.Media.PointHitTestParameters" />.</summary>
      <param name="hitTestParameters">A <see cref="T:System.Windows.Media.PointHitTestParameters" /> object specifying the parameters to hit test for.</param>
      <returns>A <see cref="T:System.Windows.Media.PointHitTestResult" /> for the specified hit test parameters.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hitTestParameters" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.HostedElementsCore">
      <summary>Gets an enumerator that can be used iterate the elements hosted by this <see cref="T:System.Windows.Controls.TextBlock" />.</summary>
      <returns>An enumerator that can iterate elements hosted by this <see cref="T:System.Windows.Controls.TextBlock" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.Inlines">
      <summary>Gets an <see cref="T:System.Windows.Documents.InlineCollection" /> containing the top-level <see cref="T:System.Windows.Documents.Inline" /> elements that comprise the contents of the <see cref="T:System.Windows.Controls.TextBlock" />.</summary>
      <returns>An <see cref="T:System.Windows.Documents.InlineCollection" /> containing the <see cref="T:System.Windows.Documents.Inline" /> elements that comprise the contents of the <see cref="T:System.Windows.Controls.TextBlock" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.InputHitTestCore(System.Windows.Point)">
      <summary>Returns the <see cref="T:System.Windows.IInputElement" /> at a specified <see cref="T:System.Windows.Point" /> within the <see cref="T:System.Windows.Controls.TextBlock" />.</summary>
      <param name="point">A <see cref="T:System.Windows.Point" />, in the coordinate space of the <see cref="T:System.Windows.Controls.TextBlock" />, for which to return the corresponding <see cref="T:System.Windows.IInputElement" />.</param>
      <returns>The <see cref="T:System.Windows.IInputElement" /> found at the specified Point, or <see langword="null" /> if no such <see cref="T:System.Windows.IInputElement" /> can be found.</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.IsHyphenationEnabled">
      <summary>Gets or sets a value that indicates whether automatic hyphenation of words is enabled or disabled.</summary>
      <returns>
        <see langword="true" /> to indicate that automatic breaking and hyphenation of words is enabled; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.IsHyphenationEnabledProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.IsHyphenationEnabled" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.LineHeight">
      <summary>Gets or sets the height of each line of content.</summary>
      <returns>The height of line, in device independent pixels, in the range of 0.0034 to 160000. A value of <see cref="F:System.Double.NaN" /> (equivalent to an attribute value of "<c>Auto</c>") indicates that the line height is determined automatically from the current font characteristics. The default is <see cref="F:System.Double.NaN" />.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> is set to a non-positive value.</exception>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.LineHeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.LineStackingStrategy">
      <summary>Gets or sets the mechanism by which a line box is determined for each line of text within the <see cref="T:System.Windows.Controls.TextBlock" />.</summary>
      <returns>The mechanism by which a line box is determined for each line of text within the <see cref="T:System.Windows.Controls.TextBlock" />. The default is <see cref="F:System.Windows.LineStackingStrategy.MaxHeight" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.LineStackingStrategyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.LogicalChildren">
      <summary>Gets an enumerator that can iterate the logical children of the <see cref="T:System.Windows.Controls.TextBlock" />.</summary>
      <returns>An enumerator for the logical children.</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.MeasureOverride(System.Windows.Size)">
      <summary>Called to re-measure the <see cref="T:System.Windows.Controls.TextBlock" />.</summary>
      <param name="constraint">A <see cref="T:System.Windows.Size" /> structure specifying any constraints on the size of the <see cref="T:System.Windows.Controls.TextBlock" />.</param>
      <returns>A <see cref="T:System.Windows.Size" /> structure indicating the new size of the <see cref="T:System.Windows.Controls.TextBlock" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.OnChildDesiredSizeChangedCore(System.Windows.UIElement)">
      <summary>Called when a child element deriving from <see cref="T:System.Windows.UIElement" /> changes its <see cref="P:System.Windows.UIElement.DesiredSize" />.</summary>
      <param name="child">The child <see cref="T:System.Windows.UIElement" /> element whose <see cref="P:System.Windows.UIElement.DesiredSize" /> has changed.</param>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.OnCreateAutomationPeer">
      <summary>Creates and returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> object for this <see cref="T:System.Windows.Controls.TextBlock" />.</summary>
      <returns>An <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> object for this <see cref="T:System.Windows.Controls.TextBlock" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Called when the value one or more hosted dependency properties changes.</summary>
      <param name="e">Arguments for the associated event.</param>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.OnRender(System.Windows.Media.DrawingContext)">
      <summary>Renders the contents of a <see cref="T:System.Windows.Controls.TextBlock" />.</summary>
      <param name="ctx">The <see cref="T:System.Windows.Media.DrawingContext" /> to render the control on.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ctx" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.Padding">
      <summary>Gets or sets a value that indicates the thickness of padding space between the boundaries of the content area, and the content displayed by a <see cref="T:System.Windows.Controls.TextBlock" />.</summary>
      <returns>A <see cref="T:System.Windows.Thickness" /> structure specifying the amount of padding to apply, in device independent pixels. The default is <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.PaddingProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.Padding" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.SetBaselineOffset(System.Windows.DependencyObject,System.Double)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.TextBlock.BaselineOffset" /> attached property on a specified dependency object.</summary>
      <param name="element">The dependency object on which to set the value of the <see cref="P:System.Windows.Controls.TextBlock.BaselineOffset" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.SetFontFamily(System.Windows.DependencyObject,System.Windows.Media.FontFamily)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.TextBlock.FontFamily" /> attached property on a specified dependency object.</summary>
      <param name="element">The dependency object on which to set the value of the <see cref="P:System.Windows.Controls.TextBlock.FontFamily" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.SetFontSize(System.Windows.DependencyObject,System.Double)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.TextBlock.FontSize" /> attached property on a specified dependency object.</summary>
      <param name="element">The dependency object on which to set the value of the <see cref="P:System.Windows.Controls.TextBlock.FontSize" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.SetFontStretch(System.Windows.DependencyObject,System.Windows.FontStretch)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.TextBlock.FontStretch" /> attached property on a specified dependency object.</summary>
      <param name="element">The dependency object on which to set the value of the <see cref="P:System.Windows.Controls.TextBlock.FontStretch" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.SetFontStyle(System.Windows.DependencyObject,System.Windows.FontStyle)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.TextBlock.FontStyle" /> attached property on a specified dependency object.</summary>
      <param name="element">The dependency object on which to set the value of the <see cref="P:System.Windows.Controls.TextBlock.FontStyle" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.SetFontWeight(System.Windows.DependencyObject,System.Windows.FontWeight)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.TextBlock.FontWeight" /> attached property on a specified dependency object.</summary>
      <param name="element">The dependency object on which to set the value of the <see cref="P:System.Windows.Controls.TextBlock.FontWeight" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.SetForeground(System.Windows.DependencyObject,System.Windows.Media.Brush)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.TextBlock.Foreground" /> attached property on a specified dependency object.</summary>
      <param name="element">The dependency object on which to set the value of the <see cref="P:System.Windows.Controls.TextBlock.Foreground" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.SetLineHeight(System.Windows.DependencyObject,System.Double)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> attached property on a specified dependency object.</summary>
      <param name="element">The dependency object on which to set the value of the <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> is set to a non-positive value.</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.SetLineStackingStrategy(System.Windows.DependencyObject,System.Windows.LineStackingStrategy)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy" /> attached property on a specified dependency object.</summary>
      <param name="element">The dependency object on which to set the value of the <see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.SetTextAlignment(System.Windows.DependencyObject,System.Windows.TextAlignment)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.TextBlock.TextAlignment" /> attached property on a specified dependency object.</summary>
      <param name="element">The dependency object on which to set the value of the <see cref="P:System.Windows.Controls.TextBlock.TextAlignment" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.ShouldSerializeBaselineOffset">
      <summary>Returns a value that indicates whether the effective value of the <see cref="P:System.Windows.Controls.TextBlock.BaselineOffset" /> property should be serialized during serialization of a <see cref="T:System.Windows.Controls.TextBlock" /> object.</summary>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.Controls.TextBlock.BaselineOffset" /> property should be serialized; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.ShouldSerializeInlines(System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>Returns a value that indicates whether the effective value of the <see cref="P:System.Windows.Controls.TextBlock.Inlines" /> property should be serialized during serialization of a <see cref="T:System.Windows.Controls.TextBlock" /> object.</summary>
      <param name="manager">A serialization service manager object for this object.</param>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.Controls.TextBlock.Inlines" /> property should be serialized; otherwise, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.ShouldSerializeText">
      <summary>Returns a value that indicates whether the effective value of the <see cref="P:System.Windows.Controls.TextBlock.Text" /> property should be serialized during serialization of a <see cref="T:System.Windows.Controls.TextBlock" /> object.</summary>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.Controls.TextBlock.Text" /> property should be serialized; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.System#IServiceProvider#GetService(System.Type)">
      <summary>This method supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="serviceType">An object that specifies the type of service object to get.</param>
      <returns>A service object of type <paramref name="serviceType" />, or <see langword="null" /> if there is no service object of type <paramref name="serviceType" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.System#Windows#IContentHost#GetRectangles(System.Windows.ContentElement)">
      <summary>This method supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.  Use the type-safe <see cref="M:System.Windows.Controls.TextBlock.GetRectanglesCore(System.Windows.ContentElement)" /> method instead.</summary>
      <param name="child">A <see cref="T:System.Windows.ContentElement" /> for which to generate and return a collection of bounding rectangles.</param>
      <returns>A read-only collection of bounding rectangles for the specified <see cref="T:System.Windows.ContentElement" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.System#Windows#IContentHost#HostedElements">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.  Use the type-safe <see cref="P:System.Windows.Controls.TextBlock.HostedElementsCore" /> property instead.</summary>
      <returns>Elements hosted by the content host.</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.System#Windows#IContentHost#InputHitTest(System.Windows.Point)">
      <summary>This method supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.  Use the type-safe <see cref="M:System.Windows.Controls.TextBlock.InputHitTestCore(System.Windows.Point)" /> method instead.</summary>
      <param name="point">Mouse coordinates relative to the content host.</param>
      <returns>The element that has been hit.</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.System#Windows#IContentHost#OnChildDesiredSizeChanged(System.Windows.UIElement)">
      <summary>This method supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.  Use the type-safe <see cref="M:System.Windows.Controls.TextBlock.OnChildDesiredSizeChangedCore(System.Windows.UIElement)" /> method instead.</summary>
      <param name="child">The child <see cref="T:System.Windows.UIElement" /> element whose <see cref="P:System.Windows.UIElement.DesiredSize" /> has changed.</param>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="value">An object to add as a child.</param>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="text">A string to add to the object.</param>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.Text">
      <summary>Gets or sets the text contents of a <see cref="T:System.Windows.Controls.TextBlock" />.</summary>
      <returns>The text contents of this <see cref="T:System.Windows.Controls.TextBlock" />. Note that all non-text content is stripped out, resulting in a plain text representation of the <see cref="T:System.Windows.Controls.TextBlock" /> contents. The default is <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.TextAlignment">
      <summary>Gets or sets a value that indicates the horizontal alignment of text content.</summary>
      <returns>One of the <see cref="T:System.Windows.TextAlignment" /> values that specifies the desired alignment. The default is <see cref="F:System.Windows.TextAlignment.Left" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.TextAlignmentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.TextAlignment" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.TextDecorations">
      <summary>Gets or sets a <see cref="T:System.Windows.TextDecorationCollection" /> that contains the effects to apply to the text of a <see cref="T:System.Windows.Controls.TextBlock" />.</summary>
      <returns>A <see cref="T:System.Windows.TextDecorationCollection" /> collection that contains text decorations to apply to this element. The default is <see langword="null" /> (no text decorations applied).</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.TextDecorationsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.TextDecorations" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.TextEffects">
      <summary>Gets or sets the effects to apply to the text content in this element.</summary>
      <returns>A <see cref="T:System.Windows.Media.TextEffectCollection" /> containing one or more <see cref="T:System.Windows.Media.TextEffect" /> objects that define effects to apply to the text of the <see cref="T:System.Windows.Controls.TextBlock" />. The default is <see langword="null" /> (no effects applied).</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.TextEffectsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.TextEffects" /> dependency property.</summary>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.TextProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.Text" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.TextTrimming">
      <summary>Gets or sets the text trimming behavior to employ when content overflows the content area.</summary>
      <returns>One of the <see cref="T:System.Windows.TextTrimming" /> values that specifies the text trimming behavior to employ. The default is <see cref="F:System.Windows.TextTrimming.None" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.TextTrimmingProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.TextTrimming" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.TextWrapping">
      <summary>Gets or sets how the <see cref="T:System.Windows.Controls.TextBlock" /> should wrap text.</summary>
      <returns>One of the <see cref="T:System.Windows.TextWrapping" /> values. The default is <see cref="F:System.Windows.TextWrapping.NoWrap" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.TextWrappingProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.TextWrapping" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.Typography">
      <summary>Gets the currently effective typography variations for the contents of this element.</summary>
      <returns>A <see cref="T:System.Windows.Documents.Typography" /> object that specifies the currently effective typography variations. For a list of default typography values, see <see cref="T:System.Windows.Documents.Typography" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.VisualChildrenCount">
      <summary>Gets the number of <see cref="T:System.Windows.Media.Visual" /> children hosted by the <see cref="T:System.Windows.Controls.TextBlock" />.</summary>
      <returns>The number of visual children hosted by the <see cref="T:System.Windows.Controls.TextBlock" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.TextBox">
      <summary>Represents a control that can be used to display or edit unformatted text.</summary>
    </member>
    <member name="M:System.Windows.Controls.TextBox.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.TextBox" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBox.CaretIndex">
      <summary>Gets or sets the insertion position index of the caret.</summary>
      <returns>The zero-based insertion position index of the caret.</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.CharacterCasing">
      <summary>Gets or sets how characters are cased when they are manually entered into the text box.</summary>
      <returns>One of the <see cref="T:System.Windows.Controls.CharacterCasing" /> values that specifies how manually entered characters are cased. The default is <see cref="F:System.Windows.Controls.CharacterCasing.Normal" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBox.CharacterCasingProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBox.CharacterCasing" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.TextBox.Clear">
      <summary>Clears all the content from the text box.</summary>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)">
      <summary>Returns the zero-based character index for the first character in the specified line.</summary>
      <param name="lineIndex">The zero-based index of the line to retrieve the initial character index for.</param>
      <returns>The zero-based index for the first character in the specified line.</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)">
      <summary>Returns the zero-based index of the character that is closest to the specified point.</summary>
      <param name="point">A point in <see cref="T:System.Windows.Controls.TextBox" /> coordinate-space for which to return an index.</param>
      <param name="snapToText">
        <see langword="true" /> to return the nearest index if there is no character at the specified point; <see langword="false" /> to return -1 if there is no character at the specified point.</param>
      <returns>The index of the character that is closest to the specified point, or -1 if no valid index can be found.</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex">
      <summary>Returns the line index for the first line that is currently visible in the text box.</summary>
      <returns>The zero-based index for the first visible line in the text box.</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex">
      <summary>Returns the line index for the last line that is currently visible in the text box.</summary>
      <returns>The zero-based index for the last visible line in the text box.</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)">
      <summary>Returns the zero-based line index for the line that contains the specified character index.</summary>
      <param name="charIndex">The zero-based character index for which to retrieve the associated line index.</param>
      <returns>The zero-based index for the line that contains the specified character index.</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetLineLength(System.Int32)">
      <summary>Returns the number of characters in the specified line.</summary>
      <param name="lineIndex">The zero-based line index for which to return a character count.</param>
      <returns>The number of characters in the specified line.</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetLineText(System.Int32)">
      <summary>Returns the text that is currently displayed on the specified line.</summary>
      <param name="lineIndex">The zero-based line index for which to retrieve the currently displayed text.</param>
      <returns>A string containing a copy of the text currently visible on the specified line.</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetNextSpellingErrorCharacterIndex(System.Int32,System.Windows.Documents.LogicalDirection)">
      <summary>Returns the beginning character index for the next spelling error in the contents of the text box.</summary>
      <param name="charIndex">The zero-based character index indicating a position from which to search for the next spelling error.</param>
      <param name="direction">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the direction in which to search for the next spelling error, starting at the specified <paramref name="charIndex" />.</param>
      <returns>The character index for the beginning of the next spelling error in the contents of the text box, or -1 if no next spelling error exists.</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetRectFromCharacterIndex(System.Int32)">
      <summary>Returns the rectangle for the leading edge of the character at the specified index.</summary>
      <param name="charIndex">The zero-based character index of the character for which to retrieve the rectangle.</param>
      <returns>A rectangle for the leading edge of the character at the specified character index, or <see cref="P:System.Windows.Rect.Empty" /> if a bounding rectangle cannot be determined.</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetRectFromCharacterIndex(System.Int32,System.Boolean)">
      <summary>Returns the rectangle for the leading or trailing edge of the character at the specified index.</summary>
      <param name="charIndex">The zero-based character index of the character for which to retrieve the rectangle.</param>
      <param name="trailingEdge">
        <see langword="true" /> to get the trailing edge of the character; <see langword="false" /> to get the leading edge of the character.</param>
      <returns>A rectangle for an edge of the character at the specified character index, or <see cref="P:System.Windows.Rect.Empty" /> if a bounding rectangle cannot be determined.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="charIndex" /> is negative or is greater than the length of the content.</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetSpellingError(System.Int32)">
      <summary>Returns a <see cref="T:System.Windows.Controls.SpellingError" /> object associated with any spelling error at the specified character index.</summary>
      <param name="charIndex">The zero-based character index of a position in content to examine for a spelling error.</param>
      <returns>A <see cref="T:System.Windows.Controls.SpellingError" /> object containing the details of the spelling error found at the character indicated by <paramref name="charIndex" />, or <see langword="null" /> if no spelling error exists at the specified character.</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetSpellingErrorLength(System.Int32)">
      <summary>Returns the length of any spelling error that includes the specified character.</summary>
      <param name="charIndex">The zero-based character index of a position in content to examine for a spelling error.</param>
      <returns>The length of any spelling error that includes the character specified by charIndex, or 0 if the specified character is not part of a spelling error.</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetSpellingErrorStart(System.Int32)">
      <summary>Returns the beginning character index for any spelling error that includes the specified character.</summary>
      <param name="charIndex">The zero-based character index of a position in content to examine for a spelling error.</param>
      <returns>The beginning character index for any spelling error that includes the character specified by <paramref name="charIndex" />, or -1 if the specified character is not part of a spelling error.</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.LineCount">
      <summary>Gets the total number of lines in the text box.</summary>
      <returns>The total number of lines in the text box, or -1 if layout information is not available.</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.LogicalChildren">
      <summary>Gets an enumerator for the logical child elements of the <see cref="T:System.Windows.Controls.TextBox" />.</summary>
      <returns>An enumerator for the logical child elements of the <see cref="T:System.Windows.Controls.TextBox" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.MaxLength">
      <summary>Gets or sets the maximum number of characters that can be manually entered into the text box.</summary>
      <returns>The maximum number of characters that can be manually entered into the text box. The default is 0, which indicates no limit.</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBox.MaxLengthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBox.MaxLength" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBox.MaxLines">
      <summary>Gets or sets the maximum number of visible lines.</summary>
      <returns>The maximum number of visible lines. The default is <see cref="F:System.Int32.MaxValue" />.</returns>
      <exception cref="T:System.Exception">
        <see cref="P:System.Windows.Controls.TextBox.MaxLines" /> is less than <see cref="P:System.Windows.Controls.TextBox.MinLines" />.</exception>
    </member>
    <member name="F:System.Windows.Controls.TextBox.MaxLinesProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBox.MaxLines" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.TextBox.MeasureOverride(System.Windows.Size)">
      <summary>Sizes the text box to its content.</summary>
      <param name="constraint">A <see cref="T:System.Windows.Size" /> structure that specifies the constraints on the size of the text box.</param>
      <returns>A <see cref="T:System.Windows.Size" /> structure indicating the new size of the text box.</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.MinLines">
      <summary>Gets or sets the minimum number of visible lines.</summary>
      <returns>The minimum number of visible lines. The default is 1.</returns>
      <exception cref="T:System.Exception">
        <see cref="P:System.Windows.Controls.TextBox.MinLines" /> is greater than <see cref="P:System.Windows.Controls.TextBox.MaxLines" />.</exception>
    </member>
    <member name="F:System.Windows.Controls.TextBox.MinLinesProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBox.MinLines" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.TextBox.OnCreateAutomationPeer">
      <summary>Creates and returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> object for the text box.</summary>
      <returns>An <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> object for the text box.</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBox.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Called when one or more of the dependency properties that exist on the element have had their effective values changed.</summary>
      <param name="e">Arguments for the associated event.</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.ScrollToLine(System.Int32)">
      <summary>Scrolls the line at the specified line index into view.</summary>
      <param name="lineIndex">The zero-based line index of the line to scroll into view.</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.Select(System.Int32,System.Int32)">
      <summary>Selects a range of text in the text box.</summary>
      <param name="start">The zero-based character index of the first character in the selection.</param>
      <param name="length">The length of the selection, in characters.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="start" /> or <paramref name="length" /> is negative.</exception>
    </member>
    <member name="P:System.Windows.Controls.TextBox.SelectedText">
      <summary>Gets or sets the content of the current selection in the text box.</summary>
      <returns>The currently selected text in the text box.</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.SelectionLength">
      <summary>Gets or sets a value indicating the number of characters in the current selection in the text box.</summary>
      <returns>The number of characters in the current selection in the text box. The default is 0.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Windows.Controls.TextBox.SelectionLength" /> is set to a negative value.</exception>
    </member>
    <member name="P:System.Windows.Controls.TextBox.SelectionStart">
      <summary>Gets or sets a character index for the beginning of the current selection.</summary>
      <returns>The character index for the beginning of the current selection.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Windows.Controls.TextBox.SelectionStart" /> is set to a negative value.</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBox.ShouldSerializeText(System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>Returns a value that indicates whether the effective value of the <see cref="P:System.Windows.Controls.TextBox.Text" /> property should be serialized during serialization of the <see cref="T:System.Windows.Controls.TextBox" /> object.</summary>
      <param name="manager">A serialization service manager object for this object.</param>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.Controls.TextBox.Text" /> property should be serialized; otherwise, <see langword="false" />.</returns>
      <exception cref="T:System.NullReferenceException">
        <paramref name="manager" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBox.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>Throws an exception in all cases.</summary>
      <param name="value">An object to add as a child.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">In all other cases.</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBox.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>Adds the text content of a node to the object.</summary>
      <param name="text">A string to add to the object.</param>
    </member>
    <member name="P:System.Windows.Controls.TextBox.Text">
      <summary>Gets or sets the text contents of the text box.</summary>
      <returns>A string containing the text contents of the text box. The default is an empty string ("").</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.TextAlignment">
      <summary>Gets or sets the horizontal alignment of the contents of the text box.</summary>
      <returns>One of the <see cref="T:System.Windows.TextAlignment" /> values that specifies the horizontal alignment of the contents of the text box. The default is <see cref="F:System.Windows.TextAlignment.Left" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBox.TextAlignmentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBox.TextAlignment" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBox.TextDecorations">
      <summary>Gets the text decorations to apply to the text box.</summary>
      <returns>A <see cref="T:System.Windows.TextDecorationCollection" /> collection that contains text decorations to apply to the text box. The default is <see langword="null" /> (no text decorations applied).</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBox.TextDecorationsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBox.TextDecorations" /> dependency property.</summary>
    </member>
    <member name="F:System.Windows.Controls.TextBox.TextProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBox.Text" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBox.TextWrapping">
      <summary>Gets or sets how the text box should wrap text.</summary>
      <returns>One of the <see cref="T:System.Windows.TextWrapping" /> values that indicates how the text box should wrap text. The default is <see cref="F:System.Windows.TextWrapping.NoWrap" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBox.TextWrappingProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBox.TextWrapping" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBox.Typography">
      <summary>Gets the currently effective typography variations for the text contents of the text box.</summary>
      <returns>A <see cref="T:System.Windows.Documents.Typography" /> object that specifies the currently effective typography variations. For a list of default typography values, see <see cref="T:System.Windows.Documents.Typography" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.TextChange">
      <summary>Contains information about the changes that occur in the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> event.</summary>
    </member>
    <member name="P:System.Windows.Controls.TextChange.AddedLength">
      <summary>Gets or sets the number of symbols that have been added to the control.</summary>
      <returns>The number of symbols that have been added to the control.</returns>
    </member>
    <member name="P:System.Windows.Controls.TextChange.Offset">
      <summary>Gets or sets the position at which the change occurred.</summary>
      <returns>The position at which the change occurred.</returns>
    </member>
    <member name="P:System.Windows.Controls.TextChange.RemovedLength">
      <summary>Gets or sets the number of symbols that have been removed from the control.</summary>
      <returns>The number of symbols that have been removed from the control.</returns>
    </member>
    <member name="T:System.Windows.Controls.TextChangedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> event.</summary>
    </member>
    <member name="M:System.Windows.Controls.TextChangedEventArgs.#ctor(System.Windows.RoutedEvent,System.Windows.Controls.UndoAction)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.TextChangedEventArgs" /> class, using the specified event ID and undo action.</summary>
      <param name="id">The event identifier (ID).</param>
      <param name="action">The <see cref="P:System.Windows.Controls.TextChangedEventArgs.UndoAction" /> caused by the text change.</param>
    </member>
    <member name="M:System.Windows.Controls.TextChangedEventArgs.#ctor(System.Windows.RoutedEvent,System.Windows.Controls.UndoAction,System.Collections.Generic.ICollection{System.Windows.Controls.TextChange})">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.TextChangedEventArgs" /> class, using the specified event ID, undo action, and text changes.</summary>
      <param name="id">The event identifier (ID).</param>
      <param name="action">The <see cref="P:System.Windows.Controls.TextChangedEventArgs.UndoAction" /> caused by the text change.</param>
      <param name="changes">The changes that occurred during this event. For more information, see <see cref="P:System.Windows.Controls.TextChangedEventArgs.Changes" />.</param>
    </member>
    <member name="P:System.Windows.Controls.TextChangedEventArgs.Changes">
      <summary>Gets a collection of objects that contains information about the changes that occurred.</summary>
      <returns>A collection of objects that contains information about the changes that occurred.</returns>
    </member>
    <member name="M:System.Windows.Controls.TextChangedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>Performs the proper type casting to call the type-safe <see cref="T:System.Windows.Controls.TextChangedEventHandler" /> delegate for the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> event.</summary>
      <param name="genericHandler">The handler to invoke.</param>
      <param name="genericTarget">The current object along the event's route.</param>
    </member>
    <member name="P:System.Windows.Controls.TextChangedEventArgs.UndoAction">
      <summary>Gets how the undo stack is caused or affected by this text change</summary>
      <returns>The <see cref="T:System.Windows.Controls.UndoAction" /> appropriate for this text change.</returns>
    </member>
    <member name="T:System.Windows.Controls.TextChangedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> routed event.</summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Controls.TextSearch">
      <summary>Enables a user to quickly access items in a set by typing prefixes of strings.</summary>
    </member>
    <member name="M:System.Windows.Controls.TextSearch.GetText(System.Windows.DependencyObject)">
      <summary>Returns the string to that identifies the specified item.</summary>
      <param name="element">The element from which the property value is read.</param>
      <returns>The string that identifies the specified item.</returns>
    </member>
    <member name="M:System.Windows.Controls.TextSearch.GetTextPath(System.Windows.DependencyObject)">
      <summary>Returns the name of the property that identifies an item in the specified element's collection.</summary>
      <param name="element">The element from which the property value is read.</param>
      <returns>The name of the property that identifies the item to the user.</returns>
    </member>
    <member name="M:System.Windows.Controls.TextSearch.SetText(System.Windows.DependencyObject,System.String)">
      <summary>Writes the <see cref="P:System.Windows.Controls.TextSearch.Text" /> attached property value to the specified element.</summary>
      <param name="element">The element to which the property value is written.</param>
      <param name="text">The string that identifies the item.</param>
    </member>
    <member name="M:System.Windows.Controls.TextSearch.SetTextPath(System.Windows.DependencyObject,System.String)">
      <summary>Writes the <see cref="P:System.Windows.Controls.TextSearch.TextPath" /> attached property to the specified element.</summary>
      <param name="element">The element to which the property value is written.</param>
      <param name="path">The name of the property that identifies an item.</param>
    </member>
    <member name="P:System.Windows.Controls.TextSearch.Text">
      <summary>Gets or sets the string that identifies an item in a control's collection.</summary>
    </member>
    <member name="P:System.Windows.Controls.TextSearch.TextPath">
      <summary>Gets or sets the name of the items' property that identifies each item in a control's collection.</summary>
    </member>
    <member name="F:System.Windows.Controls.TextSearch.TextPathProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextSearch.TextPath" /> attached property.</summary>
    </member>
    <member name="F:System.Windows.Controls.TextSearch.TextProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextSearch.Text" /> attached property.</summary>
    </member>
    <member name="T:System.Windows.Controls.ToolBar">
      <summary>Provides a container for a group of commands or controls.</summary>
    </member>
    <member name="M:System.Windows.Controls.ToolBar.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ToolBar" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.Band">
      <summary>Gets or sets a value that indicates where the toolbar should be located in the <see cref="T:System.Windows.Controls.ToolBarTray" />.</summary>
      <returns>The band of the <see cref="T:System.Windows.Controls.ToolBarTray" /> in which the toolbar is positioned. The default is 0.</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.BandIndex">
      <summary>Gets or sets the band index number that indicates the position of the toolbar on the band.</summary>
      <returns>The position of a toolbar on the band of a <see cref="T:System.Windows.Controls.ToolBarTray" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolBar.BandIndexProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolBar.BandIndex" /> dependency property.</summary>
    </member>
    <member name="F:System.Windows.Controls.ToolBar.BandProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolBar.Band" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.ButtonStyleKey">
      <summary>Gets the <see cref="T:System.Windows.Style" /> applied to buttons on a toolbar.</summary>
      <returns>A resource key that represents the default style for buttons on the toolbar.</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.CheckBoxStyleKey">
      <summary>Gets the <see cref="T:System.Windows.Style" /> applied to check boxes on a <see cref="T:System.Windows.Controls.ToolBar" />.</summary>
      <returns>A resource key that represents the default style for check boxes on the <see cref="T:System.Windows.Controls.ToolBar" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.ComboBoxStyleKey">
      <summary>Gets the <see cref="T:System.Windows.Style" /> applied to combo boxes on a <see cref="T:System.Windows.Controls.ToolBar" />.</summary>
      <returns>A resource key that represents the default style for combo boxes on the toolbar.</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolBar.GetIsOverflowItem(System.Windows.DependencyObject)">
      <summary>Reads the value of the <see cref="P:System.Windows.Controls.ToolBar.IsOverflowItem" /> property from the specified element.</summary>
      <param name="element">The element from which to read the property.</param>
      <returns>The value of the property.</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolBar.GetOverflowMode(System.Windows.DependencyObject)">
      <summary>Reads the value of the <see cref="P:System.Windows.Controls.ToolBar.OverflowMode" /> property from the specified element.</summary>
      <param name="element">The element from which to read the property.</param>
      <returns>The value of the property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.HasOverflowItems">
      <summary>Gets a value that indicates whether the toolbar has items that are not visible.</summary>
      <returns>
        <see langword="true" /> if there are items on the toolbar that are not visible; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolBar.HasOverflowItemsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolBar.HasOverflowItems" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.IsOverflowItem">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.ToolBar" /> item is an overflow item.</summary>
    </member>
    <member name="F:System.Windows.Controls.ToolBar.IsOverflowItemProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolBar.IsOverflowItem" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.IsOverflowOpen">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.ToolBar" /> overflow area is currently visible.</summary>
      <returns>
        <see langword="true" /> if the overflow area is visible; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolBar.IsOverflowOpenProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolBar.IsOverflowOpen" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.ToolBar.MeasureOverride(System.Windows.Size)">
      <summary>Remeasures a <see cref="T:System.Windows.Controls.ToolBar" />.</summary>
      <param name="constraint">The measurement constraints. A <see cref="T:System.Windows.Controls.ToolBar" /> cannot return a size larger than the constraint.</param>
      <returns>The size of the <see cref="T:System.Windows.Controls.ToolBar" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.MenuStyleKey">
      <summary>Gets the <see cref="T:System.Windows.Style" /> applied to menus on a <see cref="T:System.Windows.Controls.ToolBar" />.</summary>
      <returns>A resource key that represents the default style for menus on the toolbar.</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolBar.OnCreateAutomationPeer">
      <summary>Provides an appropriate <see cref="T:System.Windows.Automation.Peers.ToolBarAutomationPeer" /> implementation for this control, as part of the WPF infrastructure.</summary>
      <returns>The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolBar.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>Called when the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> property changes.</summary>
      <param name="e">The arguments for the <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolBar.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.KeyDown" /> routed event that occurs when a key is pressed on an item in the <see cref="T:System.Windows.Controls.ToolBar" />.</summary>
      <param name="e">The arguments for the <see cref="E:System.Windows.UIElement.KeyDown" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolBar.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.LostMouseCapture" /> routed event that occurs when the <see cref="T:System.Windows.Controls.ToolBar" /> loses mouse capture.</summary>
      <param name="e">The arguments for the <see cref="E:System.Windows.UIElement.LostMouseCapture" /> event.</param>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.Orientation">
      <summary>Gets the orientation of the <see cref="T:System.Windows.Controls.ToolBar" />.</summary>
      <returns>The toolbar orientation. The default is <see cref="F:System.Windows.Controls.Orientation.Horizontal" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolBar.OrientationProperty">
      <summary>Identifies the <see cref="T:System.Windows.Controls.Orientation" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.OverflowMode">
      <summary>Gets or sets a value that indicates when an item should be placed in the overflow panel instead of in the main panel.</summary>
    </member>
    <member name="F:System.Windows.Controls.ToolBar.OverflowModeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolBar.OverflowMode" /> attached property.</summary>
    </member>
    <member name="M:System.Windows.Controls.ToolBar.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>Prepares the specified element to display the specified item.</summary>
      <param name="element">The element that will display the item.</param>
      <param name="item">The item to display.</param>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.RadioButtonStyleKey">
      <summary>Gets the <see cref="T:System.Windows.Style" /> applied to radio buttons on a toolbar.</summary>
      <returns>A resource key that represents the default style for radio buttons on the toolbar.</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.SeparatorStyleKey">
      <summary>Gets the <see cref="T:System.Windows.Style" /> applied to separators on a <see cref="T:System.Windows.Controls.ToolBar" />.</summary>
      <returns>A resource key that represents the default style for separators on the toolbar.</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolBar.SetOverflowMode(System.Windows.DependencyObject,System.Windows.Controls.OverflowMode)">
      <summary>Writes the value of the <see cref="P:System.Windows.Controls.ToolBar.OverflowMode" /> property to the specified element.</summary>
      <param name="element">The element to write the property to.</param>
      <param name="mode">The property value to set.</param>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.TextBoxStyleKey">
      <summary>Gets the <see cref="T:System.Windows.Style" /> applied to text boxes on a <see cref="T:System.Windows.Controls.ToolBar" />.</summary>
      <returns>A resource key that represents the default style for text boxes on the toolbar</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.ToggleButtonStyleKey">
      <summary>Gets the <see cref="T:System.Windows.Style" /> applied to <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> controls on a <see cref="T:System.Windows.Controls.ToolBar" />.</summary>
      <returns>A resource key that represents the default style for toggle buttons on the toolbar.</returns>
    </member>
    <member name="T:System.Windows.Controls.ToolBarTray">
      <summary>Represents the container that handles the layout of a <see cref="T:System.Windows.Controls.ToolBar" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.ToolBarTray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ToolBarTray" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.ToolBarTray.ArrangeOverride(System.Windows.Size)">
      <summary>Called to arrange and size its <see cref="T:System.Windows.Controls.ToolBar" /> children.</summary>
      <param name="arrangeSize">The size that the <see cref="T:System.Windows.Controls.ToolBarTray" /> assumes to position its children.</param>
      <returns>The size of the control.</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBarTray.Background">
      <summary>Gets or sets a brush to use for the background color of the <see cref="T:System.Windows.Controls.ToolBarTray" />.</summary>
      <returns>A brush to use for the background color of the <see cref="T:System.Windows.Controls.ToolBarTray" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolBarTray.BackgroundProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolBarTray.Background" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.ToolBarTray.GetIsLocked(System.Windows.DependencyObject)">
      <summary>Reads the value of the <see cref="P:System.Windows.Controls.ToolBarTray.IsLocked" /> property from the specified element.</summary>
      <param name="element">The element from which to read the property.</param>
      <returns>
        <see langword="true" /> if the toolbar cannot be moved inside the toolbar tray; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolBarTray.GetVisualChild(System.Int32)">
      <summary>Gets the index number of the visible child.</summary>
      <param name="index">Index of the visual child.</param>
      <returns>The index number of the visible child.</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBarTray.IsLocked">
      <summary>Gets or sets a value that indicates whether a <see cref="T:System.Windows.Controls.ToolBar" /> can be moved inside a <see cref="T:System.Windows.Controls.ToolBarTray" />.</summary>
      <returns>
        <see langword="true" /> if the toolbar cannot be moved inside the toolbar tray; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolBarTray.IsLockedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolBarTray.IsLocked" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolBarTray.LogicalChildren">
      <summary>Gets an enumerator to the logical child elements of a <see cref="T:System.Windows.Controls.ToolBarTray" />.</summary>
      <returns>An enumerator to the children of a <see cref="T:System.Windows.Controls.ToolBarTray" /> element.</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolBarTray.MeasureOverride(System.Windows.Size)">
      <summary>Called to remeasure a <see cref="T:System.Windows.Controls.ToolBarTray" />.</summary>
      <param name="constraint">The measurement constraints; a <see cref="T:System.Windows.Controls.ToolBarTray" /> cannot return a size larger than the constraint.</param>
      <returns>The size of the control.</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolBarTray.OnRender(System.Windows.Media.DrawingContext)">
      <summary>Called when a <see cref="T:System.Windows.Controls.ToolBarTray" /> is displayed to get the Drawing Context (DC) to use to render the <see cref="T:System.Windows.Controls.ToolBarTray" />.</summary>
      <param name="dc">Drawing context to use to render the <see cref="T:System.Windows.Controls.ToolBarTray" />.</param>
    </member>
    <member name="P:System.Windows.Controls.ToolBarTray.Orientation">
      <summary>Specifies the orientation of a <see cref="T:System.Windows.Controls.ToolBarTray" />.</summary>
      <returns>One of the <see cref="T:System.Windows.Controls.Orientation" /> values. The default is <see cref="F:System.Windows.Controls.Orientation.Horizontal" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolBarTray.OrientationProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolBarTray.Orientation" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.ToolBarTray.SetIsLocked(System.Windows.DependencyObject,System.Boolean)">
      <summary>Writes the value of the <see cref="P:System.Windows.Controls.ToolBarTray.IsLocked" /> property to the specified element.</summary>
      <param name="element">The element to write the property to.</param>
      <param name="value">The property value to set.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolBarTray.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="value">An object to add as a child.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolBarTray.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="text">A string to add to the object.</param>
    </member>
    <member name="P:System.Windows.Controls.ToolBarTray.ToolBars">
      <summary>Gets the collection of <see cref="T:System.Windows.Controls.ToolBar" /> elements in the <see cref="T:System.Windows.Controls.ToolBarTray" />.</summary>
      <returns>A collection of <see cref="T:System.Windows.Controls.ToolBar" /> objects.</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBarTray.VisualChildrenCount">
      <summary>Gets the number of children that are currently visible.</summary>
      <returns>The number of visible <see cref="T:System.Windows.Controls.ToolBar" /> objects in the <see cref="T:System.Windows.Controls.ToolBarTray" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.ToolTip">
      <summary>Represents a control that creates a pop-up window that displays information for an element in the interface.</summary>
    </member>
    <member name="M:System.Windows.Controls.ToolTip.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ToolTip" /> class.</summary>
    </member>
    <member name="E:System.Windows.Controls.ToolTip.Closed">
      <summary>Occurs when a <see cref="T:System.Windows.Controls.ToolTip" /> is closed and is no longer visible.</summary>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.ClosedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.ToolTip.Closed" /> routed event.</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.CustomPopupPlacementCallback">
      <summary>Gets or sets the delegate handler method to use to position the <see cref="T:System.Windows.Controls.ToolTip" />.</summary>
      <returns>The <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback" /> delegate method that provides placement information for the <see cref="T:System.Windows.Controls.ToolTip" />. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.CustomPopupPlacementCallbackProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolTip.CustomPopupPlacementCallback" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.HasDropShadow">
      <summary>Gets or sets a value that indicates whether the control has a drop shadow.</summary>
      <returns>
        <see langword="true" /> if the control has a drop shadow; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.HasDropShadowProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolTip.HasDropShadow" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.HorizontalOffset">
      <summary>Get or sets the horizontal distance between the target origin and the popup alignment point.</summary>
      <returns>The horizontal distance between the target origin and the popup alignment point. For information about the target origin and popup alignment point, see Popup Placement Behavior. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.HorizontalOffsetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolTip.HorizontalOffset" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.IsOpen">
      <summary>Gets or sets a value that indicates whether a <see cref="T:System.Windows.Controls.ToolTip" /> is visible.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.ToolTip" /> is visible; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.IsOpenProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolTip.IsOpen" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.ToolTip.OnClosed(System.Windows.RoutedEventArgs)">
      <summary>Responds to the <see cref="E:System.Windows.Controls.ToolTip.Closed" /> event.</summary>
      <param name="e">The event information.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTip.OnContentChanged(System.Object,System.Object)">
      <summary>Called when the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property changes.</summary>
      <param name="oldContent">The old value of the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property.</param>
      <param name="newContent">The new value of the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTip.OnCreateAutomationPeer">
      <summary>Creates the implementation of <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for the <see cref="T:System.Windows.Controls.ToolTip" /> control.</summary>
      <returns>A new <see cref="T:System.Windows.Automation.Peers.ToolTipAutomationPeer" /> for this <see cref="T:System.Windows.Controls.ToolTip" /> control.</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTip.OnOpened(System.Windows.RoutedEventArgs)">
      <summary>Responds to the <see cref="E:System.Windows.Controls.ToolTip.Opened" /> event.</summary>
      <param name="e">The event information.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTip.OnVisualParentChanged(System.Windows.DependencyObject)">
      <summary>Responds to a change in the visual parent of a <see cref="T:System.Windows.Controls.ToolTip" />.</summary>
      <param name="oldParent">The previous visual parent.</param>
    </member>
    <member name="E:System.Windows.Controls.ToolTip.Opened">
      <summary>Occurs when a <see cref="T:System.Windows.Controls.ToolTip" /> becomes visible.</summary>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.OpenedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.ToolTip.Opened" /> routed event.</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.Placement">
      <summary>Gets or sets the orientation of the <see cref="T:System.Windows.Controls.ToolTip" /> control when it opens, and specifies how the <see cref="T:System.Windows.Controls.ToolTip" /> control behaves when it overlaps screen boundaries.</summary>
      <returns>A <see cref="T:System.Windows.Controls.Primitives.PlacementMode" /> enumeration value that determines the orientation of the <see cref="T:System.Windows.Controls.ToolTip" /> control when it opens, and that specifies how the control interacts with screen boundaries. The default is <see cref="F:System.Windows.Controls.Primitives.PlacementMode.Mouse" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.PlacementProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolTip.Placement" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.PlacementRectangle">
      <summary>Gets or sets the rectangular area relative to which the <see cref="T:System.Windows.Controls.ToolTip" /> control is positioned when it opens.</summary>
      <returns>The <see cref="T:System.Windows.Rect" /> structure that defines the rectangle that is used to position the <see cref="T:System.Windows.Controls.ToolTip" /> control. The default is <see cref="P:System.Windows.Rect.Empty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.PlacementRectangleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolTip.PlacementRectangle" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.PlacementTarget">
      <summary>Gets or sets the <see cref="T:System.Windows.UIElement" /> relative to which the <see cref="T:System.Windows.Controls.ToolTip" /> is positioned when it opens.</summary>
      <returns>The <see cref="T:System.Windows.UIElement" /> that is the logical parent of the <see cref="T:System.Windows.Controls.ToolTip" /> control. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.PlacementTargetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolTip.PlacementTarget" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.StaysOpen">
      <summary>Gets or sets a value that indicates whether an open <see cref="T:System.Windows.Controls.ToolTip" /> remains open until the user clicks the mouse when the mouse is not over the <see cref="T:System.Windows.Controls.ToolTip" />.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.ToolTip" /> stays open until it is closed by the user clicking the mouse button outside the <see cref="T:System.Windows.Controls.ToolTip" />; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
      <exception cref="T:System.NotSupportedException">Occurs when <see cref="P:System.Windows.Controls.ToolTip.StaysOpen" /> is set to <see langword="false" /> when a tooltip is not open.</exception>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.StaysOpenProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolTip.StaysOpen" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.VerticalOffset">
      <summary>Get or sets the vertical distance between the target origin and the popup alignment point.</summary>
      <returns>The vertical distance between the target origin and the popup alignment point. For information about the target origin and popup alignment point, see Popup Placement Behavior. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.VerticalOffsetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolTip.VerticalOffset" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Controls.ToolTipEventArgs">
      <summary>Provides event information for events that occur when a tooltip opens or closes.</summary>
    </member>
    <member name="T:System.Windows.Controls.ToolTipEventHandler">
      <summary>Represents the method that will handle routed event that occur when a tooltip opens and closes.</summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Controls.ToolTipService">
      <summary>Represents a service that provides properties and events to control the display and behavior of tooltips.</summary>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.AddToolTipClosingHandler(System.Windows.DependencyObject,System.Windows.Controls.ToolTipEventHandler)">
      <summary>Adds a handler for the <see cref="E:System.Windows.Controls.ToolTipService.ToolTipClosing" /> attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</param>
      <param name="handler">The event handler to be added.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.AddToolTipOpeningHandler(System.Windows.DependencyObject,System.Windows.Controls.ToolTipEventHandler)">
      <summary>Adds a handler for the <see cref="E:System.Windows.Controls.ToolTipService.ToolTipOpening" /> attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</param>
      <param name="handler">The event handler to be added.</param>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.BetweenShowDelay">
      <summary>Gets or sets the maximum time between the display of two tooltips where the second tooltip appears without a delay.</summary>
      <exception cref="T:System.ArgumentException">The value of the <see cref="P:System.Windows.Controls.ToolTipService.InitialShowDelay" /> property is less than zero (0).</exception>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.BetweenShowDelayProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolTipService.BetweenShowDelay" /> attached property.</summary>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetBetweenShowDelay(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.ToolTipService.BetweenShowDelay" /> attached property for an object.</summary>
      <param name="element">The object from which the property value is read.</param>
      <returns>The object's <see cref="P:System.Windows.Controls.ToolTipService.BetweenShowDelay" /> property value.</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetHasDropShadow(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.ToolTipService.HasDropShadow" /> attached property for an object.</summary>
      <param name="element">The object from which the property value is read.</param>
      <returns>The object's <see cref="P:System.Windows.Controls.ToolTipService.HasDropShadow" /> property value.</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetHorizontalOffset(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.ToolTipService.HorizontalOffset" /> attached property for an object.</summary>
      <param name="element">The object from which the property value is read.</param>
      <returns>The object's <see cref="P:System.Windows.Controls.ToolTipService.HorizontalOffset" /> property value.</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetInitialShowDelay(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.ToolTipService.InitialShowDelay" /> attached property for an object.</summary>
      <param name="element">The object from which the property value is read.</param>
      <returns>The object's <see cref="P:System.Windows.Controls.ToolTipService.InitialShowDelay" /> property value.</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetIsEnabled(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.ToolTipService.IsEnabled" /> attached property for an object.</summary>
      <param name="element">The object from which the property value is read.</param>
      <returns>The object's <see cref="P:System.Windows.Controls.ToolTipService.IsEnabled" /> property value.</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetIsOpen(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.ToolTipService.IsOpen" /> attached property for an object.</summary>
      <param name="element">The object from which the property value is read.</param>
      <returns>The object's <see cref="P:System.Windows.Controls.ToolTipService.IsOpen" /> property value.</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetPlacement(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.ToolTipService.Placement" /> attached property for an object.</summary>
      <param name="element">The object from which the property value is read.</param>
      <returns>The object's <see cref="P:System.Windows.Controls.ToolTipService.Placement" /> property value.</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetPlacementRectangle(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.ToolTipService.PlacementRectangle" /> attached property for an object.</summary>
      <param name="element">The object from which the property value is read.</param>
      <returns>The object's <see cref="P:System.Windows.Controls.ToolTipService.PlacementRectangle" /> property value.</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetPlacementTarget(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.ToolTipService.PlacementTarget" /> attached property for an object.</summary>
      <param name="element">The object from which the property value is read.</param>
      <returns>The object's <see cref="P:System.Windows.Controls.ToolTipService.PlacementTarget" /> property value.</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetShowDuration(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.ToolTipService.ShowDuration" /> attached property for an object.</summary>
      <param name="element">The object from which the property value is read.</param>
      <returns>The object's <see cref="P:System.Windows.Controls.ToolTipService.ShowDuration" /> property value.</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetShowOnDisabled(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.ToolTipService.ShowOnDisabled" /> attached property for an object.</summary>
      <param name="element">The object from which the property value is read.</param>
      <returns>The object's <see cref="P:System.Windows.Controls.ToolTipService.ShowOnDisabled" /> property value.</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetToolTip(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.ToolTipService.ToolTip" /> attached property for an object.</summary>
      <param name="element">The object from which the property value is read.</param>
      <returns>The object's <see cref="P:System.Windows.Controls.ToolTipService.ToolTip" /> property value.</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetVerticalOffset(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.ToolTipService.VerticalOffset" /> attached property for an object.</summary>
      <param name="element">The object from which the property value is read.</param>
      <returns>The object's <see cref="P:System.Windows.Controls.ToolTipService.VerticalOffset" /> property value.</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.HasDropShadow">
      <summary>Gets or sets whether the tooltip displays a drop shadow effect.</summary>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.HasDropShadowProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolTipService.HasDropShadow" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.HorizontalOffset">
      <summary>Gets or sets the offset from the left of the area that is specified for the tooltip by the <see cref="P:System.Windows.Controls.ToolTipService.PlacementRectangle" /> and <see cref="P:System.Windows.Controls.ToolTipService.PlacementTarget" /> properties.</summary>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.HorizontalOffsetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolTipService.HorizontalOffset" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.InitialShowDelay">
      <summary>Gets or sets the length of time before a tooltip opens.</summary>
      <exception cref="T:System.ArgumentException">The value of the <see cref="P:System.Windows.Controls.ToolTipService.InitialShowDelay" /> property is less than zero (0).</exception>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.InitialShowDelayProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolTipService.InitialShowDelay" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.IsEnabled">
      <summary>Gets or sets whether a tooltip appears.</summary>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.IsEnabledProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolTipService.IsEnabled" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.IsOpen">
      <summary>Gets whether a tooltip is currently visible.</summary>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.IsOpenProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolTipService.IsOpen" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.Placement">
      <summary>Gets or sets the orientation of the tooltip when it opens, and specifies how the tooltip behaves when it overlaps screen boundaries.</summary>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.PlacementProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolTipService.Placement" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.PlacementRectangle">
      <summary>Gets or sets the rectangular area relative to which the tooltip is positioned.</summary>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.PlacementRectangleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolTipService.PlacementRectangle" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.PlacementTarget">
      <summary>Gets or sets the object relative to which the tooltip is positioned.</summary>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.PlacementTargetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolTipService.PlacementTarget" /> attached property.</summary>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.RemoveToolTipClosingHandler(System.Windows.DependencyObject,System.Windows.Controls.ToolTipEventHandler)">
      <summary>Removes a handler for the <see cref="E:System.Windows.Controls.ToolTipService.ToolTipClosing" /> attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</param>
      <param name="handler">The event handler to be removed.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.RemoveToolTipOpeningHandler(System.Windows.DependencyObject,System.Windows.Controls.ToolTipEventHandler)">
      <summary>Removes a handler for the <see cref="E:System.Windows.Controls.ToolTipService.ToolTipOpening" /> attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</param>
      <param name="handler">The event handler to be removed.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetBetweenShowDelay(System.Windows.DependencyObject,System.Int32)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.ToolTipService.BetweenShowDelay" /> attached property for an object.</summary>
      <param name="element">The object to which the attached property is written.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetHasDropShadow(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.ToolTipService.HasDropShadow" /> attached property for an object.</summary>
      <param name="element">The object to which the attached property is written.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetHorizontalOffset(System.Windows.DependencyObject,System.Double)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.ToolTipService.HorizontalOffset" /> attached property for an object.</summary>
      <param name="element">The object to which the attached property is written.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetInitialShowDelay(System.Windows.DependencyObject,System.Int32)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.ToolTipService.InitialShowDelay" /> attached property for an object.</summary>
      <param name="element">The object to which the attached property is written.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetIsEnabled(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.ToolTipService.IsEnabled" /> attached property for an object.</summary>
      <param name="element">The object to which the attached property is written.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetPlacement(System.Windows.DependencyObject,System.Windows.Controls.Primitives.PlacementMode)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.ToolTipService.Placement" /> attached property for an object.</summary>
      <param name="element">The object to which the attached property is written.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetPlacementRectangle(System.Windows.DependencyObject,System.Windows.Rect)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.ToolTipService.PlacementRectangle" /> attached property for an object.</summary>
      <param name="element">The object to which the attached property is written.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetPlacementTarget(System.Windows.DependencyObject,System.Windows.UIElement)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.ToolTipService.PlacementTarget" /> attached property for an object.</summary>
      <param name="element">The object to which the attached property is written.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetShowDuration(System.Windows.DependencyObject,System.Int32)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.ToolTipService.ShowDuration" /> attached property for an object.</summary>
      <param name="element">The object to which the attached property is written.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetShowOnDisabled(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.ToolTipService.ShowOnDisabled" /> attached property for an object.</summary>
      <param name="element">The object to which the attached property is written.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetToolTip(System.Windows.DependencyObject,System.Object)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.ToolTipService.ToolTip" /> attached property for an object.</summary>
      <param name="element">The object to which the attached property is written.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetVerticalOffset(System.Windows.DependencyObject,System.Double)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.ToolTipService.VerticalOffset" /> attached property for an object.</summary>
      <param name="element">The object to which the attached property is written.</param>
      <param name="value">The desired value.</param>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.ShowDuration">
      <summary>Gets or sets the amount of time that a tooltip remains visible.</summary>
      <exception cref="T:System.ArgumentException">The value of the <see cref="P:System.Windows.Controls.ToolTipService.InitialShowDelay" /> property is less than zero (0).</exception>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.ShowDurationProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolTipService.ShowDuration" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.ShowOnDisabled">
      <summary>Gets or sets whether a tooltip appears for an object that is not enabled.</summary>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.ShowOnDisabledProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolTipService.ShowOnDisabled" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.ToolTip">
      <summary>Gets or sets the content of a tooltip.</summary>
    </member>
    <member name="E:System.Windows.Controls.ToolTipService.ToolTipClosing">
      <summary>Occurs when the <see cref="T:System.Windows.Controls.ToolTip" /> closes.</summary>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.ToolTipClosingEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.ToolTipService.ToolTipClosing" /> event that is exposed by objects that use the <see cref="T:System.Windows.Controls.ToolTipService" /> service to display tooltips.</summary>
    </member>
    <member name="E:System.Windows.Controls.ToolTipService.ToolTipOpening">
      <summary>Occurs when the <see cref="T:System.Windows.Controls.ToolTip" /> opens.</summary>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.ToolTipOpeningEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.ToolTipService.ToolTipOpening" /> event that is exposed by objects that use the <see cref="T:System.Windows.Controls.ToolTipService" /> service to display tooltips.</summary>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.ToolTipProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolTipService.ToolTip" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.VerticalOffset">
      <summary>Gets or sets the distance from the top of the area that is specified for the tooltip by the <see cref="P:System.Windows.Controls.ToolTipService.PlacementRectangle" /> and <see cref="P:System.Windows.Controls.ToolTipService.PlacementTarget" /> properties.</summary>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.VerticalOffsetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolTipService.VerticalOffset" /> attached property.</summary>
    </member>
    <member name="T:System.Windows.Controls.TreeView">
      <summary>Represents a control that displays hierarchical data in a tree structure that has items that can expand and collapse.</summary>
    </member>
    <member name="M:System.Windows.Controls.TreeView.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.TreeView" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.TreeView.ExpandSubtree(System.Windows.Controls.TreeViewItem)">
      <summary>Expands the specified <see cref="T:System.Windows.Controls.TreeViewItem" /> control and all its child <see cref="T:System.Windows.Controls.TreeViewItem" /> elements.</summary>
      <param name="container">The <see cref="T:System.Windows.Controls.TreeViewItem" /> to expand.</param>
      <returns>
        <see langword="true" /> if the specified <see cref="T:System.Windows.Controls.TreeViewItem" /> and all its child elements were expanded; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.TreeView.GetContainerForItemOverride">
      <summary>Creates a <see cref="T:System.Windows.Controls.TreeViewItem" /> to use to display content.</summary>
      <returns>A new <see cref="T:System.Windows.Controls.TreeViewItem" /> to use as a container for content.</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeView.HandlesScrolling">
      <summary>Gets whether the <see cref="T:System.Windows.Controls.TreeView" /> can scroll.</summary>
      <returns>Always returns <see langword="true" /> because the control has a <see cref="T:System.Windows.Controls.ScrollViewer" /> in its style.</returns>
    </member>
    <member name="M:System.Windows.Controls.TreeView.IsItemItsOwnContainerOverride(System.Object)">
      <summary>Determines whether the specified item is its own container or can be its own container.</summary>
      <param name="item">The object to evaluate.</param>
      <returns>
        <see langword="true" /> if <paramref name="item" /> is a <see cref="T:System.Windows.Controls.TreeViewItem" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnCreateAutomationPeer">
      <summary>Defines an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for the <see cref="T:System.Windows.Controls.TreeView" /> control.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer" /> for the <see cref="T:System.Windows.Controls.TreeView" /> control.</returns>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnGotFocus(System.Windows.RoutedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.UIElement.GotFocus" /> routed event.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides class handling for an <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" /> event when the keyboard focus changes for a <see cref="T:System.Windows.Controls.TreeView" />.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>Provides class handling for an <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> event that occurs when there is a change in the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.KeyDown" /> event for a <see cref="T:System.Windows.Controls.TreeView" />.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnSelectedItemChanged(System.Windows.RoutedPropertyChangedEventArgs{System.Object})">
      <summary>Raises the <see cref="E:System.Windows.Controls.TreeView.SelectedItemChanged" /> event when the <see cref="P:System.Windows.Controls.TreeView.SelectedItem" /> property value changes.</summary>
      <param name="e">Provides the item that was previously selected and the item that is currently selected for the <see cref="E:System.Windows.Controls.TreeView.SelectedItemChanged" /> event.</param>
    </member>
    <member name="P:System.Windows.Controls.TreeView.SelectedItem">
      <summary>Gets the selected item in a <see cref="T:System.Windows.Controls.TreeView" />.</summary>
      <returns>The selected object in the <see cref="T:System.Windows.Controls.TreeView" />, or <see langword="null" /> if no item is selected. The default value is <see langword="null" />.</returns>
    </member>
    <member name="E:System.Windows.Controls.TreeView.SelectedItemChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.TreeView.SelectedItem" /> changes.</summary>
    </member>
    <member name="F:System.Windows.Controls.TreeView.SelectedItemChangedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.TreeView.SelectedItemChanged" /> routed event.</summary>
    </member>
    <member name="F:System.Windows.Controls.TreeView.SelectedItemProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TreeView.SelectedItem" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.TreeView.SelectedValue">
      <summary>Gets the value of the property that is the specified by <see cref="P:System.Windows.Controls.TreeView.SelectedValuePath" /> for the <see cref="P:System.Windows.Controls.TreeView.SelectedItem" />.</summary>
      <returns>The value of the property that is specified by the <see cref="P:System.Windows.Controls.TreeView.SelectedValuePath" /> for the <see cref="P:System.Windows.Controls.TreeView.SelectedItem" />, or <see langword="null" /> if no item is selected. The default value is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeView.SelectedValuePath">
      <summary>Gets or sets the path that is used to get the <see cref="P:System.Windows.Controls.TreeView.SelectedValue" /> of the <see cref="P:System.Windows.Controls.TreeView.SelectedItem" /> in a <see cref="T:System.Windows.Controls.TreeView" />.</summary>
      <returns>A string that contains the path that is used to get the <see cref="P:System.Windows.Controls.TreeView.SelectedValue" />. The default value is <see langword="String.Empty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.TreeView.SelectedValuePathProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TreeView.SelectedValuePath" /> dependency property.</summary>
    </member>
    <member name="F:System.Windows.Controls.TreeView.SelectedValueProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TreeView.SelectedValue" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Controls.TreeViewItem">
      <summary>Implements a selectable item in a <see cref="T:System.Windows.Controls.TreeView" /> control.</summary>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.TreeViewItem" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges the content of the <see cref="T:System.Windows.Controls.TreeViewItem" />.</summary>
      <param name="arrangeSize">The final area within the parent that the <see cref="T:System.Windows.Controls.TreeViewItem" /> should use to arrange itself and its children.</param>
      <returns>The actual size used by the <see cref="T:System.Windows.Controls.TreeViewItem" />.</returns>
    </member>
    <member name="E:System.Windows.Controls.TreeViewItem.Collapsed">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.TreeViewItem.IsExpanded" /> property changes from <see langword="true" /> to <see langword="false" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.TreeViewItem.CollapsedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.TreeViewItem.Collapsed" /> routed event.</summary>
    </member>
    <member name="E:System.Windows.Controls.TreeViewItem.Expanded">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.TreeViewItem.IsExpanded" /> property changes from <see langword="false" /> to <see langword="true" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.TreeViewItem.ExpandedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.TreeViewItem.Expanded" /> routed event.</summary>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.ExpandSubtree">
      <summary>Expands the <see cref="T:System.Windows.Controls.TreeViewItem" /> control and all its child <see cref="T:System.Windows.Controls.TreeViewItem" /> elements.</summary>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.GetContainerForItemOverride">
      <summary>Creates a new <see cref="T:System.Windows.Controls.TreeViewItem" /> to use to display the object.</summary>
      <returns>A new <see cref="T:System.Windows.Controls.TreeViewItem" /> to use to display the object.</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeViewItem.IsExpanded">
      <summary>Gets or sets whether the nested items in a <see cref="T:System.Windows.Controls.TreeViewItem" /> are expanded or collapsed.</summary>
      <returns>
        <see langword="true" /> if the nested items of a <see cref="T:System.Windows.Controls.TreeViewItem" /> are visible; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.TreeViewItem.IsExpandedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TreeViewItem.IsExpanded" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.IsItemItsOwnContainerOverride(System.Object)">
      <summary>Determines whether an object is a <see cref="T:System.Windows.Controls.TreeViewItem" />.</summary>
      <param name="item">The object to evaluate.</param>
      <returns>
        <see langword="true" /> if <paramref name="item" /> is a <see cref="T:System.Windows.Controls.TreeViewItem" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeViewItem.IsSelected">
      <summary>Gets or sets whether a <see cref="T:System.Windows.Controls.TreeViewItem" /> control is selected.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.TreeViewItem" /> is selected; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.TreeViewItem.IsSelectedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TreeViewItem.IsSelected" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.TreeViewItem.IsSelectionActive">
      <summary>Gets a value that indicates whether the containing <see cref="T:System.Windows.Controls.TreeView" /> has keyboard focus.</summary>
      <returns>
        <see langword="true" /> if the containing <see cref="T:System.Windows.Controls.TreeView" /> has keyboard focus; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.TreeViewItem.IsSelectionActiveProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TreeViewItem.IsSelectionActive" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnCollapsed(System.Windows.RoutedEventArgs)">
      <summary>Raises a <see cref="E:System.Windows.Controls.TreeViewItem.Collapsed" /> event when the <see cref="P:System.Windows.Controls.TreeViewItem.IsExpanded" /> property changes from <see langword="true" /> to <see langword="false" />.</summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnCreateAutomationPeer">
      <summary>Defines an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for the <see cref="T:System.Windows.Controls.TreeViewItem" />.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" /> object for the <see cref="T:System.Windows.Controls.TreeViewItem" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnExpanded(System.Windows.RoutedEventArgs)">
      <summary>Raises an <see cref="E:System.Windows.Controls.TreeViewItem.Expanded" /> event when the <see cref="P:System.Windows.Controls.TreeViewItem.IsExpanded" /> property changes from <see langword="false" /> to <see langword="true" />.</summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnGotFocus(System.Windows.RoutedEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.GotFocus" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> event that occurs when there is a change in the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Provides class handling for a <see cref="E:System.Windows.UIElement.KeyDown" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Provides class handling for a <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnSelected(System.Windows.RoutedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.TreeViewItem.Selected" /> routed event when the <see cref="P:System.Windows.Controls.TreeViewItem.IsSelected" /> property changes from <see langword="false" /> to <see langword="true" />.</summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnUnselected(System.Windows.RoutedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.TreeViewItem.Unselected" /> routed event when the <see cref="P:System.Windows.Controls.TreeViewItem.IsSelected" /> property changes from <see langword="true" /> to <see langword="false" />.</summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnVisualParentChanged(System.Windows.DependencyObject)">
      <summary>Responds to a change in the visual parent of a <see cref="T:System.Windows.Controls.TreeViewItem" />.</summary>
      <param name="oldParent">The previous visual parent.</param>
    </member>
    <member name="E:System.Windows.Controls.TreeViewItem.Selected">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.TreeViewItem.IsSelected" /> property of a <see cref="T:System.Windows.Controls.TreeViewItem" /> changes from <see langword="false" /> to <see langword="true" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.TreeViewItem.SelectedEvent">
      <summary>Identified by the <see cref="E:System.Windows.Controls.TreeViewItem.Selected" /> routed event.</summary>
    </member>
    <member name="P:System.Windows.Controls.TreeViewItem.System#Windows#Controls#Primitives#IHierarchicalVirtualizationAndScrollInfo#Constraints">
      <summary>Gets or sets an object that represents the viewport and cache sizes of the <see cref="T:System.Windows.Controls.TreeViewItem" />.</summary>
      <returns>An object that represents the viewport and cache sizes of the <see cref="T:System.Windows.Controls.TreeViewItem" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeViewItem.System#Windows#Controls#Primitives#IHierarchicalVirtualizationAndScrollInfo#HeaderDesiredSizes">
      <summary>Gets an object that represents the desired size of the <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" />, in pixels and in logical units.</summary>
      <returns>An object that represents the desired size of the <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" />, in pixels and in logical units.</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeViewItem.System#Windows#Controls#Primitives#IHierarchicalVirtualizationAndScrollInfo#InBackgroundLayout">
      <summary>Gets a value that indicates whether the control's layout pass occurs at a lower priority.</summary>
      <returns>
        <see langword="true" /> if the control's layout pass occurs at a lower priority; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeViewItem.System#Windows#Controls#Primitives#IHierarchicalVirtualizationAndScrollInfo#ItemDesiredSizes">
      <summary>Gets or sets an object that represents the desired size of the control's items, in pixels and in logical units.</summary>
      <returns>An object that represents the desired size of the control's items, in pixels and in logical units.</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeViewItem.System#Windows#Controls#Primitives#IHierarchicalVirtualizationAndScrollInfo#ItemsHost">
      <summary>Gets the <see cref="T:System.Windows.Controls.Panel" /> that displays the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> of the <see cref="T:System.Windows.Controls.TreeViewItem" />.</summary>
      <returns>The <see cref="T:System.Windows.Controls.Panel" /> that displays the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> of the <see cref="T:System.Windows.Controls.TreeViewItem" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeViewItem.System#Windows#Controls#Primitives#IHierarchicalVirtualizationAndScrollInfo#MustDisableVirtualization">
      <summary>Gets or sets a value that indicates whether the owning <see cref="T:System.Windows.Controls.ItemsControl" /> should virtualize its items.</summary>
      <returns>
        <see langword="true" /> if the owning <see cref="T:System.Windows.Controls.ItemsControl" /> should virtualize its items; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="E:System.Windows.Controls.TreeViewItem.Unselected">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.TreeViewItem.IsSelected" /> property of a <see cref="T:System.Windows.Controls.TreeViewItem" /> changes from <see langword="true" /> to <see langword="false" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.TreeViewItem.UnselectedEvent">
      <summary>Identified by the <see cref="E:System.Windows.Controls.TreeViewItem.Unselected" /> routed event.</summary>
    </member>
    <member name="T:System.Windows.Controls.UIElementCollection">
      <summary>Represents an ordered collection of <see cref="T:System.Windows.UIElement" /> child elements.</summary>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.#ctor(System.Windows.UIElement,System.Windows.FrameworkElement)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.UIElementCollection" /> class.</summary>
      <param name="visualParent">The <see cref="T:System.Windows.UIElement" /> parent of the collection.</param>
      <param name="logicalParent">The logical parent of the elements in the collection.</param>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.Add(System.Windows.UIElement)">
      <summary>Adds the specified element to the <see cref="T:System.Windows.Controls.UIElementCollection" />.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> to add.</param>
      <returns>The index position of the added element.</returns>
    </member>
    <member name="P:System.Windows.Controls.UIElementCollection.Capacity">
      <summary>Gets or sets the number of elements that the <see cref="T:System.Windows.Controls.UIElementCollection" /> can contain.</summary>
      <returns>The total number of elements the collection can contain.</returns>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.Clear">
      <summary>Removes all elements from a <see cref="T:System.Windows.Controls.UIElementCollection" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.ClearLogicalParent(System.Windows.UIElement)">
      <summary>Clears the logical parent of an element when the element leaves a <see cref="T:System.Windows.Controls.UIElementCollection" />.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> whose logical parent is being cleared.</param>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.Contains(System.Windows.UIElement)">
      <summary>Determines whether a specified element is in the <see cref="T:System.Windows.Controls.UIElementCollection" />.</summary>
      <param name="element">The element to find.</param>
      <returns>
        <see langword="true" /> if the specified <see cref="T:System.Windows.UIElement" /> is found in the collection; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies a <see cref="T:System.Windows.UIElement" /> from a <see cref="T:System.Windows.Controls.UIElementCollection" /> to an array, starting at a specified index position.</summary>
      <param name="array">An array into which the collection is copied.</param>
      <param name="index">The index position of the element where copying begins.</param>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.CopyTo(System.Windows.UIElement[],System.Int32)">
      <summary>Copies a <see cref="T:System.Windows.UIElement" /> from a <see cref="T:System.Windows.Controls.UIElementCollection" /> to an array, starting at a specified index position.</summary>
      <param name="array">An array of <see cref="T:System.Windows.UIElement" /> objects.</param>
      <param name="index">The index position of the element where copying begins.</param>
    </member>
    <member name="P:System.Windows.Controls.UIElementCollection.Count">
      <summary>Gets the actual number of elements in the collection.</summary>
      <returns>The actual number of elements in the collection.</returns>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate the <see cref="T:System.Windows.Controls.UIElementCollection" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can list the members of this collection.</returns>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.IndexOf(System.Windows.UIElement)">
      <summary>Returns the index position of a specified element in a <see cref="T:System.Windows.Controls.UIElementCollection" />.</summary>
      <param name="element">The element whose index position is required.</param>
      <returns>The index position of the element.  -1 if the element is not in the collection.</returns>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.Insert(System.Int32,System.Windows.UIElement)">
      <summary>Inserts an element into a <see cref="T:System.Windows.Controls.UIElementCollection" /> at the specified index position.</summary>
      <param name="index">The index position where you want to insert the element.</param>
      <param name="element">The element to insert into the <see cref="T:System.Windows.Controls.UIElementCollection" />.</param>
    </member>
    <member name="P:System.Windows.Controls.UIElementCollection.IsSynchronized">
      <summary>Gets a value that indicates whether access to the <see cref="T:System.Collections.ICollection" /> interface is synchronized (thread-safe).</summary>
      <returns>
        <see langword="true" /> if access to the collection is synchronized; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.UIElementCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Windows.UIElement" /> stored at the zero-based index position of the <see cref="T:System.Windows.Controls.UIElementCollection" />.</summary>
      <param name="index">The index position of the <see cref="T:System.Windows.UIElement" />.</param>
      <returns>A <see cref="T:System.Windows.UIElement" /> at the specified <paramref name="index" /> position.</returns>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.Remove(System.Windows.UIElement)">
      <summary>Removes the specified element from a <see cref="T:System.Windows.Controls.UIElementCollection" />.</summary>
      <param name="element">The element to remove from the collection.</param>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Windows.UIElement" /> at the specified index.</summary>
      <param name="index">The index of the <see cref="T:System.Windows.UIElement" /> that you want to remove.</param>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.RemoveRange(System.Int32,System.Int32)">
      <summary>Removes a range of elements from a <see cref="T:System.Windows.Controls.UIElementCollection" />.</summary>
      <param name="index">The index position of the element where removal begins.</param>
      <param name="count">The number of elements to remove.</param>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.SetLogicalParent(System.Windows.UIElement)">
      <summary>Sets the logical parent of an element in a <see cref="T:System.Windows.Controls.UIElementCollection" />.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> whose logical parent is set.</param>
    </member>
    <member name="P:System.Windows.Controls.UIElementCollection.SyncRoot">
      <summary>Gets an object that you can use to synchronize access to the <see cref="T:System.Collections.ICollection" /> interface.</summary>
      <returns>
        <see cref="T:System.Object" /> that you can use to synchronize access to the <see cref="T:System.Collections.ICollection" /> interface.</returns>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.System#Collections#IList#Add(System.Object)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <param name="value">The object to add.</param>
      <returns>The position into which the new element was inserted.</returns>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.System#Collections#IList#Contains(System.Object)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <param name="value">The object to locate in the list.</param>
      <returns>
        <see langword="true" /> if the object was found in the list; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <param name="value">The object to locate in the list.</param>
      <returns>The index of <paramref name="value" /> if found in the list; otherwise, -1.</returns>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index">The zero-based index at which <paramref name="value" /> should be inserted.</param>
      <param name="value">The object to insert to the list.</param>
    </member>
    <member name="P:System.Windows.Controls.UIElementCollection.System#Collections#IList#IsFixedSize">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>
        <see langword="true" /> if the list has a fixed size; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.UIElementCollection.System#Collections#IList#IsReadOnly">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>
        <see langword="true" /> if the list is read-only; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.UIElementCollection.System#Collections#IList#Item(System.Int32)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
      <param name="index">The zero-based index of the element to get or set.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.System#Collections#IList#Remove(System.Object)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="value">The object to remove from the list.</param>
    </member>
    <member name="T:System.Windows.Controls.UndoAction">
      <summary>How the undo stack caused or is affected by a text change.</summary>
    </member>
    <member name="F:System.Windows.Controls.UndoAction.Clear">
      <summary>This change will clear the undo stack</summary>
    </member>
    <member name="F:System.Windows.Controls.UndoAction.Create">
      <summary>This change will create a new undo unit</summary>
    </member>
    <member name="F:System.Windows.Controls.UndoAction.Merge">
      <summary>This change will merge into the previous undo unit</summary>
    </member>
    <member name="F:System.Windows.Controls.UndoAction.None">
      <summary>This change will not affect the undo stack at all</summary>
    </member>
    <member name="F:System.Windows.Controls.UndoAction.Redo">
      <summary>This change is the result of a call to Redo()</summary>
    </member>
    <member name="F:System.Windows.Controls.UndoAction.Undo">
      <summary>This change is the result of a call to Undo()</summary>
    </member>
    <member name="T:System.Windows.Controls.UserControl">
      <summary>Provides a simple way to create a control.</summary>
    </member>
    <member name="M:System.Windows.Controls.UserControl.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.UserControl" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.UserControl.OnCreateAutomationPeer">
      <summary>Creates and returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for this <see cref="T:System.Windows.Controls.UserControl" />.</summary>
      <returns>A new <see cref="T:System.Windows.Automation.Peers.UserControlAutomationPeer" /> for this <see cref="T:System.Windows.Controls.UserControl" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.Validation">
      <summary>Provides methods and attached properties that support data validation.</summary>
    </member>
    <member name="M:System.Windows.Controls.Validation.AddErrorHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Controls.ValidationErrorEventArgs})">
      <summary>Adds an event handler for the <see cref="E:System.Windows.Controls.Validation.Error" /> attached event to the specified object.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> object to add <paramref name="handler" /> to.</param>
      <param name="handler">The handler to add.</param>
    </member>
    <member name="M:System.Windows.Controls.Validation.ClearInvalid(System.Windows.Data.BindingExpressionBase)">
      <summary>Removes all <see cref="T:System.Windows.Controls.ValidationError" /> objects from the specified <see cref="T:System.Windows.Data.BindingExpressionBase" /> object.</summary>
      <param name="bindingExpression">The object to turn valid.</param>
      <exception cref="T:System.ArgumentNullException">If <paramref name="bindingExpression" /> is <see langword="null" />.</exception>
    </member>
    <member name="E:System.Windows.Controls.Validation.Error">
      <summary>Occurs when the bound element runs into a validation error, but only for bindings with the <see cref="P:System.Windows.Data.Binding.NotifyOnValidationError" /> value set to <see langword="true" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Validation.ErrorEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.Validation.Error" /> attached event.</summary>
    </member>
    <member name="P:System.Windows.Controls.Validation.Errors">
      <summary>Gets the collection of all active <see cref="T:System.Windows.Controls.ValidationError" /> objects on the bound element.</summary>
    </member>
    <member name="F:System.Windows.Controls.Validation.ErrorsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Validation.Errors" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Validation.ErrorTemplate">
      <summary>Gets or sets the <see cref="T:System.Windows.Controls.ControlTemplate" /> used to generate validation error feedback on the adorner layer.</summary>
    </member>
    <member name="F:System.Windows.Controls.Validation.ErrorTemplateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Validation.ErrorTemplate" /> attached property.</summary>
    </member>
    <member name="M:System.Windows.Controls.Validation.GetErrors(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.Validation.Errors" /> attached property of the specified element.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> object to read the value from.</param>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyObservableCollection`1" /> of <see cref="T:System.Windows.Controls.ValidationError" /> objects.</returns>
      <exception cref="T:System.ArgumentNullException">If <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.Validation.GetErrorTemplate(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.Validation.ErrorTemplate" /> attached property of the specified element.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> object to read the value from.</param>
      <returns>The <see cref="T:System.Windows.Controls.ControlTemplate" /> used to generate validation error feedback on the adorner layer.</returns>
      <exception cref="T:System.ArgumentNullException">If <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.Validation.HasError" /> attached property of the specified element.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> object to read the value from.</param>
      <returns>The value of the <see cref="P:System.Windows.Controls.Validation.HasError" /> attached property of the specified element.</returns>
      <exception cref="T:System.ArgumentNullException">If <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.Validation.GetValidationAdornerSite(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" /> attached property for the specified element.</summary>
      <param name="element">The element from which to get the <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" />.</param>
      <returns>The value of the <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.Validation.GetValidationAdornerSiteFor(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" /> attached property for the specified element.</summary>
      <param name="element">The element from which to get the <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" />.</param>
      <returns>The value of the <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.Validation.HasError">
      <summary>Gets a value that indicates whether any binding on the binding target element has a <see cref="T:System.Windows.Controls.ValidationError" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Validation.HasErrorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Validation.HasError" /> attached property.</summary>
    </member>
    <member name="M:System.Windows.Controls.Validation.MarkInvalid(System.Windows.Data.BindingExpressionBase,System.Windows.Controls.ValidationError)">
      <summary>Marks the specified <see cref="T:System.Windows.Data.BindingExpression" /> object as invalid with the specified <see cref="T:System.Windows.Controls.ValidationError" /> object.</summary>
      <param name="bindingExpression">The <see cref="T:System.Windows.Data.BindingExpression" /> object to mark as invalid.</param>
      <param name="validationError">The <see cref="T:System.Windows.Controls.ValidationError" /> object to use.</param>
      <exception cref="T:System.ArgumentNullException">If <paramref name="validationError" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.Validation.RemoveErrorHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Controls.ValidationErrorEventArgs})">
      <summary>Adds an event handler for the <see cref="E:System.Windows.Controls.Validation.Error" /> attached event from the specified object.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> object to remove <paramref name="handler" /> from.</param>
      <param name="handler">The handler to remove.</param>
    </member>
    <member name="M:System.Windows.Controls.Validation.SetErrorTemplate(System.Windows.DependencyObject,System.Windows.Controls.ControlTemplate)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.Validation.ErrorTemplate" /> attached property to the specified element.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> object to set <paramref name="value" /> on.</param>
      <param name="value">The <see cref="T:System.Windows.Controls.ControlTemplate" /> to use to generate validation error feedback on the adorner layer.</param>
      <exception cref="T:System.ArgumentNullException">If <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.Validation.SetValidationAdornerSite(System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary>Sets the <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" /> attached property to the specified value on the specified element.</summary>
      <param name="element">The element on which to set the <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" />.</param>
      <param name="value">The <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" /> of the specified element.</param>
    </member>
    <member name="M:System.Windows.Controls.Validation.SetValidationAdornerSiteFor(System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary>Sets the <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" /> attached property to the specified value on the specified element.</summary>
      <param name="element">The element on which to set the <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" />.</param>
      <param name="value">The <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" /> of the specified element.</param>
    </member>
    <member name="P:System.Windows.Controls.Validation.ValidationAdornerSite">
      <summary>Gets or sets the element that appears to indicate that a validation error occurred on the bound element where this property is set.</summary>
    </member>
    <member name="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor">
      <summary>Gets or sets the element for which this element appears to indicate that an error occurred.</summary>
    </member>
    <member name="F:System.Windows.Controls.Validation.ValidationAdornerSiteForProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" /> attached property.</summary>
    </member>
    <member name="F:System.Windows.Controls.Validation.ValidationAdornerSiteProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" /> attached property.</summary>
    </member>
    <member name="T:System.Windows.Controls.ValidationError">
      <summary>Represents a validation error that is created either by the binding engine when a <see cref="T:System.Windows.Controls.ValidationRule" /> reports a validation error, or through the <see cref="M:System.Windows.Controls.Validation.MarkInvalid(System.Windows.Data.BindingExpressionBase,System.Windows.Controls.ValidationError)" /> method explicitly.</summary>
    </member>
    <member name="M:System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ValidationError" /> class with the specified parameters.</summary>
      <param name="ruleInError">The rule that detected validation error.</param>
      <param name="bindingInError">The <see cref="T:System.Windows.Data.BindingExpression" /> or <see cref="T:System.Windows.Data.MultiBindingExpression" /> object with the validation error.</param>
    </member>
    <member name="M:System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object,System.Object,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ValidationError" /> class with the specified parameters.</summary>
      <param name="ruleInError">The rule that detected validation error.</param>
      <param name="bindingInError">The <see cref="T:System.Windows.Data.BindingExpression" /> or <see cref="T:System.Windows.Data.MultiBindingExpression" /> object with the validation error.</param>
      <param name="errorContent">Information about the error.</param>
      <param name="exception">The exception that caused the validation failure. This parameter is optional and can be set to <see langword="null" />.</param>
    </member>
    <member name="P:System.Windows.Controls.ValidationError.BindingInError">
      <summary>Gets the <see cref="T:System.Windows.Data.BindingExpression" /> or <see cref="T:System.Windows.Data.MultiBindingExpression" /> object of this <see cref="T:System.Windows.Controls.ValidationError" />. The object is either marked invalid explicitly or has a failed validation rule.</summary>
      <returns>The <see cref="T:System.Windows.Data.BindingExpression" /> or <see cref="T:System.Windows.Data.MultiBindingExpression" /> object of this <see cref="T:System.Windows.Controls.ValidationError" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationError.ErrorContent">
      <summary>Gets or sets an object that provides additional context for this <see cref="T:System.Windows.Controls.ValidationError" />, such as a string describing the error.</summary>
      <returns>An object that provides additional context for this <see cref="T:System.Windows.Controls.ValidationError" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationError.Exception">
      <summary>Gets or sets the <see cref="T:System.Exception" /> object that was the cause of this <see cref="T:System.Windows.Controls.ValidationError" />, if the error is the result of an exception.</summary>
      <returns>The <see cref="T:System.Exception" /> object, if the error is the result of an exception.</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationError.RuleInError">
      <summary>Gets or sets the <see cref="T:System.Windows.Controls.ValidationRule" /> object that was the cause of this <see cref="T:System.Windows.Controls.ValidationError" />, if the error is the result of a validation rule.</summary>
      <returns>The <see cref="T:System.Windows.Controls.ValidationRule" /> object, if the error is the result of a validation rule.</returns>
    </member>
    <member name="T:System.Windows.Controls.ValidationErrorEventAction">
      <summary>Describes whether a <see cref="T:System.Windows.Controls.ValidationError" /> object has been added or cleared.</summary>
    </member>
    <member name="F:System.Windows.Controls.ValidationErrorEventAction.Added">
      <summary>A new <see cref="T:System.Windows.Controls.ValidationError" /> object has been detected.</summary>
    </member>
    <member name="F:System.Windows.Controls.ValidationErrorEventAction.Removed">
      <summary>An existing <see cref="T:System.Windows.Controls.ValidationError" /> object has been cleared.</summary>
    </member>
    <member name="T:System.Windows.Controls.ValidationErrorEventArgs">
      <summary>Provides information for the <see cref="E:System.Windows.Controls.Validation.Error" /> attached event.</summary>
    </member>
    <member name="P:System.Windows.Controls.ValidationErrorEventArgs.Action">
      <summary>Gets a value that indicates whether the error is a new error or an existing error that has now been cleared.</summary>
      <returns>A <see cref="T:System.Windows.Controls.ValidationErrorEventAction" /> value that indicates whether the error is a new error or an existing error that has now been cleared.</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationErrorEventArgs.Error">
      <summary>Gets the error that caused this <see cref="E:System.Windows.Controls.Validation.Error" /> event.</summary>
      <returns>The <see cref="T:System.Windows.Controls.ValidationError" /> object that caused this <see cref="E:System.Windows.Controls.Validation.Error" /> event.</returns>
    </member>
    <member name="M:System.Windows.Controls.ValidationErrorEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>Invokes the specified handler in a type-specific way on the specified object.</summary>
      <param name="genericHandler">The generic handler to call in a type-specific way.</param>
      <param name="genericTarget">The object to invoke the handler on.</param>
    </member>
    <member name="T:System.Windows.Controls.ValidationResult">
      <summary>Represents the result returned by the <see cref="T:System.Windows.Controls.ValidationRule" />.<see cref="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo)" /> method that indicates whether the checked value passed the <see cref="T:System.Windows.Controls.ValidationRule" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.ValidationResult.#ctor(System.Boolean,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ValidationResult" /> class.</summary>
      <param name="isValid">Whether or not the value checked against the <see cref="T:System.Windows.Controls.ValidationRule" /> is valid.</param>
      <param name="errorContent">Information about the invalidity.</param>
    </member>
    <member name="M:System.Windows.Controls.ValidationResult.Equals(System.Object)">
      <summary>Compares the specified instance and the current instance of <see cref="T:System.Windows.Controls.ValidationResult" /> for value equality.</summary>
      <param name="obj">The <see cref="T:System.Windows.Controls.ValidationResult" /> instance to compare.</param>
      <returns>
        <see langword="true" /> if <paramref name="obj" /> and this instance of <see cref="T:System.Windows.Controls.ValidationResult" />.have the same values.</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationResult.ErrorContent">
      <summary>Gets an object that provides additional information about the invalidity.</summary>
      <returns>An object that provides additional information about the invalidity.</returns>
    </member>
    <member name="M:System.Windows.Controls.ValidationResult.GetHashCode">
      <summary>Returns the hash code for this <see cref="T:System.Windows.Controls.ValidationResult" />.</summary>
      <returns>The hash code for this <see cref="T:System.Windows.Controls.ValidationResult" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationResult.IsValid">
      <summary>Gets a value that indicates whether the value checked against the <see cref="T:System.Windows.Controls.ValidationRule" /> is valid.</summary>
      <returns>
        <see langword="true" /> if the value is valid; otherwise, <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.ValidationResult.op_Equality(System.Windows.Controls.ValidationResult,System.Windows.Controls.ValidationResult)">
      <summary>Compares two <see cref="T:System.Windows.Controls.ValidationResult" /> objects for value equality.</summary>
      <param name="left">The first instance to compare.</param>
      <param name="right">The second instance to compare.</param>
      <returns>
        <see langword="true" /> if the two objects are equal; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.ValidationResult.op_Inequality(System.Windows.Controls.ValidationResult,System.Windows.Controls.ValidationResult)">
      <summary>Compares two <see cref="T:System.Windows.Controls.ValidationResult" /> objects for value inequality.</summary>
      <param name="left">The first instance to compare.</param>
      <param name="right">The second instance to compare.</param>
      <returns>
        <see langword="true" /> if the values are not equal; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationResult.ValidResult">
      <summary>Gets a valid instance of <see cref="T:System.Windows.Controls.ValidationResult" />.</summary>
      <returns>A valid instance of <see cref="T:System.Windows.Controls.ValidationResult" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.ValidationRule">
      <summary>Provides a way to create a custom rule in order to check the validity of user input.</summary>
    </member>
    <member name="M:System.Windows.Controls.ValidationRule.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ValidationRule" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.ValidationRule.#ctor(System.Windows.Controls.ValidationStep,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ValidationRule" /> class with the specified validation step and a value that indicates whether the validation rule runs when the target is updated.</summary>
      <param name="validationStep">One of the enumeration values that specifies when the validation rule runs.</param>
      <param name="validatesOnTargetUpdated">
        <see langword="true" /> to have the validation rule run when the target of the <see cref="T:System.Windows.Data.Binding" /> is updated; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo)">
      <summary>When overridden in a derived class, performs validation checks on a value.</summary>
      <param name="value">The value from the binding target to check.</param>
      <param name="cultureInfo">The culture to use in this rule.</param>
      <returns>A <see cref="T:System.Windows.Controls.ValidationResult" /> object.</returns>
    </member>
    <member name="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo,System.Windows.Data.BindingExpressionBase)">
      <summary>Performs validation checks on a value.</summary>
      <param name="value">The value from the binding target to check.</param>
      <param name="cultureInfo">The culture to use in this rule.</param>
      <param name="owner">The binding expression that uses the validation rule.</param>
      <returns>A <see cref="T:System.Windows.Controls.ValidationResult" /> object.</returns>
    </member>
    <member name="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo,System.Windows.Data.BindingGroup)">
      <summary>Performs validation checks on a value.</summary>
      <param name="value">The value from the binding target to check.</param>
      <param name="cultureInfo">The culture to use in this rule.</param>
      <param name="owner">The binding group that uses the validation rule.</param>
      <returns>A <see cref="T:System.Windows.Controls.ValidationResult" /> object.</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationRule.ValidatesOnTargetUpdated">
      <summary>Gets or sets a value that indicates whether the validation rule runs when the target of the <see cref="T:System.Windows.Data.Binding" /> is updated.</summary>
      <returns>
        <see langword="true" /> if the validation rule runs when the target of the <see cref="T:System.Windows.Data.Binding" /> is updated; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationRule.ValidationStep">
      <summary>Gets or sets when the validation rule runs.</summary>
      <returns>One of the enumeration values.  The default is <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.ValidationStep">
      <summary>Specifies when a <see cref="T:System.Windows.Controls.ValidationRule" /> runs.</summary>
    </member>
    <member name="F:System.Windows.Controls.ValidationStep.CommittedValue">
      <summary>Runs the <see cref="T:System.Windows.Controls.ValidationRule" /> after the value has been committed to the source.</summary>
    </member>
    <member name="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue">
      <summary>Runs the <see cref="T:System.Windows.Controls.ValidationRule" /> after the value is converted.</summary>
    </member>
    <member name="F:System.Windows.Controls.ValidationStep.RawProposedValue">
      <summary>Runs the <see cref="T:System.Windows.Controls.ValidationRule" /> before any conversion occurs.</summary>
    </member>
    <member name="F:System.Windows.Controls.ValidationStep.UpdatedValue">
      <summary>Runs the <see cref="T:System.Windows.Controls.ValidationRule" /> after the source is updated.</summary>
    </member>
    <member name="T:System.Windows.Controls.ViewBase">
      <summary>Represents the base class for views that define the appearance of data in a <see cref="T:System.Windows.Controls.ListView" /> control.</summary>
    </member>
    <member name="M:System.Windows.Controls.ViewBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ViewBase" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.ViewBase.ClearItem(System.Windows.Controls.ListViewItem)">
      <summary>Removes all bindings and styling that are set for an item.</summary>
      <param name="item">The <see cref="T:System.Windows.Controls.ListViewItem" /> to remove settings from.</param>
    </member>
    <member name="P:System.Windows.Controls.ViewBase.DefaultStyleKey">
      <summary>Gets the object that is associated with the style for the view mode.</summary>
      <returns>The style to use for the view mode. The default value is the style for the <see cref="T:System.Windows.Controls.ListBox" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.ViewBase.GetAutomationPeer(System.Windows.Controls.ListView)">
      <summary>Is called when a <see cref="T:System.Windows.Controls.ListView" /> control creates a <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" /> for its <see cref="P:System.Windows.Controls.ListView.View" />.</summary>
      <param name="parent">The <see cref="T:System.Windows.Controls.ListView" /> control to use to create the <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" />.</param>
      <returns>The <see cref="T:System.Windows.Automation.Peers.IViewAutomationPeer" /> interface that implements the <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" /> for a custom <see cref="P:System.Windows.Controls.ListView.View" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.ViewBase.ItemContainerDefaultStyleKey">
      <summary>Gets the style to use for the items in the view mode.</summary>
      <returns>The style of a <see cref="T:System.Windows.Controls.ListViewItem" />. The default value is the style for the <see cref="T:System.Windows.Controls.ListBoxItem" /> control.</returns>
    </member>
    <member name="M:System.Windows.Controls.ViewBase.PrepareItem(System.Windows.Controls.ListViewItem)">
      <summary>Prepares an item in the view for display, by setting bindings and styles.</summary>
      <param name="item">The item to prepare for display.</param>
    </member>
    <member name="T:System.Windows.Controls.Viewbox">
      <summary>Defines a content decorator that can stretch and scale a single child to fill the available space.</summary>
    </member>
    <member name="M:System.Windows.Controls.Viewbox.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Viewbox" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.Viewbox.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges the content of a <see cref="T:System.Windows.Controls.Viewbox" /> element.</summary>
      <param name="arrangeSize">The <see cref="T:System.Windows.Size" /> this element uses to arrange its child elements.</param>
      <returns>
        <see cref="T:System.Windows.Size" /> that represents the arranged size of this <see cref="T:System.Windows.Controls.Viewbox" /> element and its child elements.</returns>
    </member>
    <member name="P:System.Windows.Controls.Viewbox.Child">
      <summary>Gets or sets the single child of a <see cref="T:System.Windows.Controls.Viewbox" /> element.</summary>
      <returns>The single child of a <see cref="T:System.Windows.Controls.Viewbox" /> element. This property has no default value.</returns>
    </member>
    <member name="M:System.Windows.Controls.Viewbox.GetVisualChild(System.Int32)">
      <summary>Gets a <see cref="T:System.Windows.Media.Visual" /> child at the specified <paramref name="index" /> position.</summary>
      <param name="index">The index position of the wanted <see cref="T:System.Windows.Media.Visual" /> child.</param>
      <returns>A <see cref="T:System.Windows.Media.Visual" /> child of the parent <see cref="T:System.Windows.Controls.Viewbox" /> element.</returns>
    </member>
    <member name="P:System.Windows.Controls.Viewbox.LogicalChildren">
      <summary>Gets an enumerator that can iterate the logical children of this <see cref="T:System.Windows.Controls.Viewbox" /> element.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" />. This property has no default value.</returns>
    </member>
    <member name="M:System.Windows.Controls.Viewbox.MeasureOverride(System.Windows.Size)">
      <summary>Measures the child elements of a <see cref="T:System.Windows.Controls.Viewbox" /> prior to arranging them during the <see cref="M:System.Windows.Controls.WrapPanel.ArrangeOverride(System.Windows.Size)" /> pass.</summary>
      <param name="constraint">A <see cref="T:System.Windows.Size" /> limit that <see cref="T:System.Windows.Controls.Viewbox" /> cannot exceed.</param>
      <returns>The <see cref="T:System.Windows.Size" /> that represents the element size you want.</returns>
    </member>
    <member name="P:System.Windows.Controls.Viewbox.Stretch">
      <summary>Gets or sets the <see cref="T:System.Windows.Controls.Viewbox" /><see cref="T:System.Windows.Media.Stretch" /> mode, which determines how content fits into the available space.</summary>
      <returns>A <see cref="T:System.Windows.Media.Stretch" /> that determines how content fits in the available space. The default is <see cref="F:System.Windows.Media.Stretch.Uniform" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.Viewbox.StretchDirection">
      <summary>Gets or sets the <see cref="T:System.Windows.Controls.StretchDirection" />, which determines how scaling is applied to the contents of a <see cref="T:System.Windows.Controls.Viewbox" />.</summary>
      <returns>A <see cref="T:System.Windows.Controls.StretchDirection" /> that determines how scaling is applied to the contents of a <see cref="T:System.Windows.Controls.Viewbox" />. The default is <see cref="F:System.Windows.Controls.StretchDirection.Both" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Viewbox.StretchDirectionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Viewbox.StretchDirection" /> dependency property.</summary>
    </member>
    <member name="F:System.Windows.Controls.Viewbox.StretchProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Viewbox.Stretch" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Viewbox.VisualChildrenCount">
      <summary>Gets the number of child <see cref="T:System.Windows.Media.Visual" /> objects in this instance of <see cref="T:System.Windows.Controls.Viewbox" />.</summary>
      <returns>The number of <see cref="T:System.Windows.Media.Visual" /> children.</returns>
    </member>
    <member name="T:System.Windows.Controls.Viewport3D">
      <summary>Renders the contained 3-D content within the 2-D layout bounds of the <see cref="T:System.Windows.Controls.Viewport3D" /> element.</summary>
    </member>
    <member name="M:System.Windows.Controls.Viewport3D.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Viewport3D" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.Viewport3D.ArrangeOverride(System.Windows.Size)">
      <summary>Causes the <see cref="T:System.Windows.Controls.Viewport3D" /> to arrange its visual content to fit a specified size.</summary>
      <param name="finalSize">Size that <see cref="T:System.Windows.Controls.Viewport3D" /> will assume.</param>
      <returns>The final size of the arranged <see cref="T:System.Windows.Controls.Viewport3D" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.Viewport3D.Camera">
      <summary>Gets or sets a camera object that projects the 3-D contents of the <see cref="T:System.Windows.Controls.Viewport3D" /> to the 2-D surface of the <see cref="T:System.Windows.Controls.Viewport3D" />.</summary>
      <returns>The camera that projects the 3-D contents to the 2-D surface.</returns>
    </member>
    <member name="F:System.Windows.Controls.Viewport3D.CameraProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Viewport3D.Camera" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Viewport3D.Children">
      <summary>Gets a collection of the <see cref="T:System.Windows.Media.Media3D.Visual3D" /> children of the <see cref="T:System.Windows.Controls.Viewport3D" />.</summary>
      <returns>A collection of the <see cref="T:System.Windows.Media.Media3D.Visual3D" /> children of the <see cref="T:System.Windows.Controls.Viewport3D" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Viewport3D.ChildrenProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Viewport3D.Children" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.Viewport3D.GetVisualChild(System.Int32)">
      <summary>Gets the <see cref="T:System.Windows.Media.Visual" /> at a specified position in the <see cref="P:System.Windows.Controls.Viewport3D.Children" /> collection of the <see cref="T:System.Windows.Controls.Viewport3D" />.</summary>
      <param name="index">Position of the element in the collection.</param>
      <returns>Visual at the specified position in the <see cref="P:System.Windows.Controls.Viewport3D.Children" /> collection.</returns>
    </member>
    <member name="M:System.Windows.Controls.Viewport3D.OnCreateAutomationPeer">
      <summary>Creates and returns a <see cref="T:System.Windows.Automation.Peers.Viewport3DAutomationPeer" /> object for this <see cref="T:System.Windows.Controls.Viewport3D" />.</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.Viewport3DAutomationPeer" /> object for this <see cref="T:System.Windows.Controls.Viewport3D" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.Viewport3D.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="value">An object to add as a child.</param>
    </member>
    <member name="M:System.Windows.Controls.Viewport3D.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="text">A string to add to the object.</param>
    </member>
    <member name="P:System.Windows.Controls.Viewport3D.VisualChildrenCount">
      <summary>Gets an integer that represents the number of <see cref="T:System.Windows.Media.Visual" /> objects in the <see cref="P:System.Windows.Media.Media3D.ModelVisual3D.Children" /> collection of the <see cref="T:System.Windows.Media.Media3D.Visual3D" />.</summary>
      <returns>Integer that represents the number of Visuals in the Children collection of the <see cref="T:System.Windows.Media.Media3D.Visual3D" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.VirtualizationCacheLength">
      <summary>Represents the measurements for the <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> attached property.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizationCacheLength.#ctor(System.Double)">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> class with a uniform cache length for each side of the viewport.</summary>
      <param name="cacheBeforeAndAfterViewport">The size of the cache before and after the viewport.</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizationCacheLength.#ctor(System.Double,System.Double)">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> class with the specified cache lengths for each side of the viewport.</summary>
      <param name="cacheBeforeViewport">The size of the cache before the viewport.</param>
      <param name="cacheAfterViewport">The size of the cache after the viewport.</param>
    </member>
    <member name="P:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport">
      <summary>Gets the size of the cache before the viewport when the <see cref="T:System.Windows.Controls.VirtualizingPanel" /> is virtualizing.</summary>
      <returns>The size of the cache after the viewport when the <see cref="T:System.Windows.Controls.VirtualizingPanel" /> is virtualizing.</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport">
      <summary>Gets the size of the cache after the viewport when the <see cref="T:System.Windows.Controls.VirtualizingPanel" /> is virtualizing.</summary>
      <returns>The size of the cache after the viewport when the <see cref="T:System.Windows.Controls.VirtualizingPanel" /> is virtualizing.</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizationCacheLength.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />.</summary>
      <param name="oCompare">The object to compare with the current <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />.</param>
      <returns>
        <see langword="true" /> if the specified object is equal to the current <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizationCacheLength.Equals(System.Windows.Controls.VirtualizationCacheLength)">
      <summary>Determines whether the specified <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> is equal to the current <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />.</summary>
      <param name="cacheLength">The object to compare with the current <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />.</param>
      <returns>
        <see langword="true" /> if the specified object is equal to the current <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizationCacheLength.GetHashCode">
      <summary>Gets a hash code for the current <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />.</summary>
      <returns>A hash code for the current <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizationCacheLength.op_Equality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)">
      <summary>Determines whether the two specified <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> objects are equal.</summary>
      <param name="cl1">The first object to compare.</param>
      <param name="cl2">The second object to compare.</param>
      <returns>
        <see langword="true" /> if the specified <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> are equal; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizationCacheLength.op_Inequality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)">
      <summary>Determines whether the two specified <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> objects are equal.</summary>
      <param name="cl1">The first object to compare.</param>
      <param name="cl2">The second object to compare.</param>
      <returns>
        <see langword="true" /> if the specified <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> are equal; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizationCacheLength.ToString">
      <summary>Returns a string that represents the current <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />.</summary>
      <returns>A string that represents the current <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.VirtualizationCacheLengthConverter">
      <summary>Converts objects to and from a <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizationCacheLengthConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.VirtualizationCacheLengthConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizationCacheLengthConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether the <see cref="T:System.Windows.Controls.VirtualizationCacheLengthConverter" /> can convert an object of the specified type to a <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />, using the specified context.</summary>
      <param name="typeDescriptorContext">An object that provides a format context.</param>
      <param name="sourceType">The type to convert from.</param>
      <returns>true if the <see cref="T:System.Windows.Controls.VirtualizationCacheLengthConverter" /> can convert the specified type to a <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizationCacheLengthConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether the <see cref="T:System.Windows.Controls.VirtualizationCacheLengthConverter" /> can convert a <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> to the specified type.</summary>
      <param name="typeDescriptorContext">An object that provides a format context.</param>
      <param name="destinationType">The type to convert to.</param>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.VirtualizationCacheLengthConverter" /> can convert a <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> to the specified type; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizationCacheLengthConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the specified object to a <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />.</summary>
      <param name="typeDescriptorContext">An object that provides a format context.</param>
      <param name="cultureInfo">An object that provides the culture information that is used during conversion.</param>
      <param name="source">The object to convert to a <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />.</param>
      <returns>The converted object.</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="source" /> is <see langword="null" />.  
-or-  
<paramref name="source" /> cannot be converted to a <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.VirtualizationCacheLengthConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the specified <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> to an object of the specified type.</summary>
      <param name="typeDescriptorContext">An object that provides a format context.</param>
      <param name="cultureInfo">An object that provides the culture information that is used during conversion.</param>
      <param name="value">A <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> to convert to another type.</param>
      <param name="destinationType">The type to convert to.</param>
      <returns>The converted object.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> is <paramref name="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> is <see langword="null" />.  
-or-  
<paramref name="value" /> is not a <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />.</exception>
    </member>
    <member name="T:System.Windows.Controls.VirtualizationCacheLengthUnit">
      <summary>Specifies the type of unit that is used by the <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> attached property.</summary>
    </member>
    <member name="F:System.Windows.Controls.VirtualizationCacheLengthUnit.Item">
      <summary>The <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> is measured in terms of the items that are displayed in the panel.</summary>
    </member>
    <member name="F:System.Windows.Controls.VirtualizationCacheLengthUnit.Page">
      <summary>The <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> is measured in terms of a page, which is equal to the size of the panel's viewport.</summary>
    </member>
    <member name="F:System.Windows.Controls.VirtualizationCacheLengthUnit.Pixel">
      <summary>The <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> is measured in terms of device-independent units (1/96th inch per unit).</summary>
    </member>
    <member name="T:System.Windows.Controls.VirtualizationMode">
      <summary>Specifies the method the <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> uses to manage virtualizing its child items.</summary>
    </member>
    <member name="F:System.Windows.Controls.VirtualizationMode.Recycling">
      <summary>Reuse the item containers.</summary>
    </member>
    <member name="F:System.Windows.Controls.VirtualizationMode.Standard">
      <summary>Create and discard the item containers.</summary>
    </member>
    <member name="T:System.Windows.Controls.VirtualizingPanel">
      <summary>Provides a framework for <see cref="T:System.Windows.Controls.Panel" /> elements that virtualize their child data collection. This is an abstract class.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.VirtualizingPanel" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.AddInternalChild(System.Windows.UIElement)">
      <summary>Adds the specified <see cref="T:System.Windows.UIElement" /> to the <see cref="P:System.Windows.Controls.Panel.InternalChildren" /> collection of a <see cref="T:System.Windows.Controls.VirtualizingPanel" /> element.</summary>
      <param name="child">The <see cref="T:System.Windows.UIElement" /> child to add to the collection.</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.BringIndexIntoView(System.Int32)">
      <summary>When implemented in a derived class, generates the item at the specified index location and makes it visible.</summary>
      <param name="index">The index position of the item that is generated and made visible.</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.BringIndexIntoViewPublic(System.Int32)">
      <summary>Generates the item at the specified index location and makes it visible.</summary>
      <param name="index">The index position of the item that is generated and made visible.</param>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingPanel.CacheLength">
      <summary>Gets or sets the size of the cache before and after the viewport when the <see cref="T:System.Windows.Controls.VirtualizingPanel" /> is virtualizing.</summary>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingPanel.CacheLengthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingPanel.CacheLengthUnit">
      <summary>Gets or sets the type of unit that is used by the <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> property.</summary>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingPanel.CacheLengthUnitProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLengthUnit" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingPanel.CanHierarchicallyScrollAndVirtualize">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.VirtualizingPanel" /> can virtualize items that are grouped or organized in a hierarchy.</summary>
      <returns>A value that indicates whether the <see cref="T:System.Windows.Controls.VirtualizingPanel" /> can virtualize items that are grouped or organized in a hierarchy.</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingPanel.CanHierarchicallyScrollAndVirtualizeCore">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.VirtualizingPanel" /> can virtualize items that are grouped or organized in a hierarchy.</summary>
      <returns>
        <see langword="false" /> in all cases.</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.GetCacheLength(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> property.</summary>
      <param name="element">The element to get the <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> attached property from.</param>
      <returns>The size of the cache before and after the viewport when the <see cref="T:System.Windows.Controls.VirtualizingPanel" /> is virtualizing.</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.GetCacheLengthUnit(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLengthUnit" /> property.</summary>
      <param name="element">The element to get the <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLengthUnit" /> attached property from.</param>
      <returns>The type of unit that is used by the <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> property.</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.GetIsContainerVirtualizable(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.VirtualizingPanel.IsContainerVirtualizable" /> property.</summary>
      <param name="element">The element to get the <see cref="P:System.Windows.Controls.VirtualizingPanel.IsContainerVirtualizable" /> attached property from.</param>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.VirtualizingPanel" /> should virtualize an item; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.GetIsVirtualizing(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.VirtualizingPanel.IsVirtualizing" /> attached property.</summary>
      <param name="element">The object from which the attached property value is read.</param>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.VirtualizingPanel" /> is virtualizing its content; otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.GetIsVirtualizingWhenGrouping(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.VirtualizingPanel.IsVirtualizingWhenGrouping" /> property.</summary>
      <param name="element">The element to get the <see cref="P:System.Windows.Controls.VirtualizingPanel.IsVirtualizingWhenGrouping" /> attached property from.</param>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.VirtualizingPanel" /> virtualizes the grouped items in its collection; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.GetItemOffset(System.Windows.UIElement)">
      <summary>Returns the position of the specified item, relative to the <see cref="T:System.Windows.Controls.VirtualizingPanel" />.</summary>
      <param name="child">The element whose position to find.</param>
      <returns>The position of the specified item, relative to the <see cref="T:System.Windows.Controls.VirtualizingPanel" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.GetItemOffsetCore(System.Windows.UIElement)">
      <summary>Returns the position of the specified item, relative to the <see cref="T:System.Windows.Controls.VirtualizingPanel" />.</summary>
      <param name="child">The element whose position to find.</param>
      <returns>0 in all cases.</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.GetScrollUnit(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.VirtualizingPanel.ScrollUnit" /> property.</summary>
      <param name="element">The element to get the <see cref="P:System.Windows.Controls.VirtualizingPanel.ScrollUnit" /> attached property from.</param>
      <returns>A value that indicates whether scrolling is measured as items in the collection or as pixels.</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.GetVirtualizationMode(System.Windows.DependencyObject)">
      <summary>Returns the <see cref="P:System.Windows.Controls.VirtualizingPanel.VirtualizationMode" /> attached property for the specified object.</summary>
      <param name="element">The object from which the <see cref="P:System.Windows.Controls.VirtualizingPanel.VirtualizationMode" /> property is read.</param>
      <returns>One of the enumeration values that specifies whether the object uses container recycling.</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.InsertInternalChild(System.Int32,System.Windows.UIElement)">
      <summary>Adds the specified <see cref="T:System.Windows.UIElement" /> to the <see cref="P:System.Windows.Controls.Panel.InternalChildren" /> collection of a <see cref="T:System.Windows.Controls.VirtualizingPanel" /> element at the specified index position.</summary>
      <param name="index">The index position within the collection at which the child element is inserted.</param>
      <param name="child">The <see cref="T:System.Windows.UIElement" /> child to add to the collection.</param>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingPanel.IsContainerVirtualizable">
      <summary>Get or sets a value that indicates whether this <see cref="T:System.Windows.Controls.VirtualizingPanel" /> should virtualize an item.</summary>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingPanel.IsContainerVirtualizableProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.VirtualizingPanel.IsContainerVirtualizable" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingPanel.IsVirtualizing">
      <summary>Gets or sets a value that indicates that this <see cref="T:System.Windows.Controls.VirtualizingPanel" /> is virtualizing its child collection.</summary>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingPanel.IsVirtualizingProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.VirtualizingPanel.IsVirtualizing" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingPanel.IsVirtualizingWhenGrouping">
      <summary>Gets or sets a value that indicates whether this <see cref="T:System.Windows.Controls.VirtualizingPanel" /> virtualizes the items in its collection when it displays groups.</summary>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingPanel.IsVirtualizingWhenGroupingProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.VirtualizingPanel.IsVirtualizingWhenGrouping" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingPanel.ItemContainerGenerator">
      <summary>Gets a value that identifies the <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> for this <see cref="T:System.Windows.Controls.VirtualizingPanel" />.</summary>
      <returns>The <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> for this <see cref="T:System.Windows.Controls.VirtualizingPanel" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.OnClearChildren">
      <summary>Called when the collection of child elements is cleared by the base <see cref="T:System.Windows.Controls.Panel" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.OnItemsChanged(System.Object,System.Windows.Controls.Primitives.ItemsChangedEventArgs)">
      <summary>Called when the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection that is associated with the <see cref="T:System.Windows.Controls.ItemsControl" /> for this <see cref="T:System.Windows.Controls.Panel" /> changes.</summary>
      <param name="sender">The <see cref="T:System.Object" /> that raised the event.</param>
      <param name="args">Provides data for the <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.RemoveInternalChildRange(System.Int32,System.Int32)">
      <summary>Removes child elements from the <see cref="P:System.Windows.Controls.Panel.InternalChildren" /> collection.</summary>
      <param name="index">The beginning index position within the collection at which the first child element is removed.</param>
      <param name="range">The total number of child elements to remove from the collection.</param>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingPanel.ScrollUnit">
      <summary>Gets a value that indicates whether scrolling is measured as items in the collection or as pixels.</summary>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingPanel.ScrollUnitProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.VirtualizingPanel.ScrollUnit" /> attached property.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.SetCacheLength(System.Windows.DependencyObject,System.Windows.Controls.VirtualizationCacheLength)">
      <summary>Sets the <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> attached property.</summary>
      <param name="element">The object to set the property on.</param>
      <param name="value">The size of the cache before and after the viewport when the <see cref="T:System.Windows.Controls.VirtualizingPanel" /> is virtualizing.</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.SetCacheLengthUnit(System.Windows.DependencyObject,System.Windows.Controls.VirtualizationCacheLengthUnit)">
      <summary>Sets the <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLengthUnit" /> attached property.</summary>
      <param name="element">The object to set the property on.</param>
      <param name="value">The type of unit that is used by the <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.SetIsContainerVirtualizable(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the <see cref="P:System.Windows.Controls.VirtualizingPanel.IsContainerVirtualizable" /> attached property.</summary>
      <param name="element">The object to set the property on.</param>
      <param name="value">
        <see langword="true" /> to indicate that the <see cref="T:System.Windows.Controls.VirtualizingPanel" /> should virtualize an item; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.SetIsVirtualizing(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="F:System.Windows.Controls.VirtualizingStackPanel.IsVirtualizingProperty" /> attached property.</summary>
      <param name="element">The object to which the attached property value is set.</param>
      <param name="value">
        <see langword="true" /> if the <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> is virtualizing; otherwise <see langword="false" />.</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.SetIsVirtualizingWhenGrouping(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the <see cref="P:System.Windows.Controls.VirtualizingPanel.IsVirtualizingWhenGrouping" /> attached property.</summary>
      <param name="element">The object to set the property on.</param>
      <param name="value">
        <see langword="true" /> to specify that the <see cref="T:System.Windows.Controls.VirtualizingPanel" /> virtualizes the grouped items in its collection; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.SetScrollUnit(System.Windows.DependencyObject,System.Windows.Controls.ScrollUnit)">
      <summary>Sets the <see cref="P:System.Windows.Controls.VirtualizingPanel.ScrollUnit" /> attached property.</summary>
      <param name="element">The object to set the property on.</param>
      <param name="value">A value that indicates whether scrolling is measured as items in the collection or as pixels.</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.SetVirtualizationMode(System.Windows.DependencyObject,System.Windows.Controls.VirtualizationMode)">
      <summary>Sets the <see cref="P:System.Windows.Controls.VirtualizingPanel.VirtualizationMode" /> attached property on the specified object.</summary>
      <param name="element">The element on which to set the <see cref="P:System.Windows.Controls.VirtualizingPanel.VirtualizationMode" /> property.</param>
      <param name="value">One of the enumeration values that specifies whether <paramref name="element" /> uses container recycling.</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.ShouldItemsChangeAffectLayout(System.Boolean,System.Windows.Controls.Primitives.ItemsChangedEventArgs)">
      <summary>Returns a value that indicates whether a changed item in an <see cref="T:System.Windows.Controls.ItemsControl" /> affects the layout for this panel.</summary>
      <param name="areItemChangesLocal">
        <see langword="true" /> if the changed item is a direct child of this <see cref="T:System.Windows.Controls.VirtualizingPanel" />; <see langword="false" /> if the changed item is an indirect descendant of the <see cref="T:System.Windows.Controls.VirtualizingPanel" />.</param>
      <param name="args">Contains data regarding the changed item.</param>
      <returns>
        <see langword="true" /> if the changed item in an <see cref="T:System.Windows.Controls.ItemsControl" /> affects the layout for this panel; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.ShouldItemsChangeAffectLayoutCore(System.Boolean,System.Windows.Controls.Primitives.ItemsChangedEventArgs)">
      <summary>Returns a value that indicates whether a changed item in an <see cref="T:System.Windows.Controls.ItemsControl" /> affects the layout for this panel.</summary>
      <param name="areItemChangesLocal">
        <see langword="true" /> if the changed item is a direct child of this <see cref="T:System.Windows.Controls.VirtualizingPanel" />; <see langword="false" /> if the changed item is an indirect descendant of the <see cref="T:System.Windows.Controls.VirtualizingPanel" />.</param>
      <param name="args">Contains data regarding the changed item.</param>
      <returns>
        <see langword="true" /> if the changed item in an <see cref="T:System.Windows.Controls.ItemsControl" /> affects the layout for this panel; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingPanel.VirtualizationMode">
      <summary>Gets or sets how a panel in an <see cref="T:System.Windows.Controls.ItemsControl" /> virtualizes its child items.</summary>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingPanel.VirtualizationModeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.VirtualizingPanel.VirtualizationMode" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Controls.VirtualizingStackPanel">
      <summary>Arranges and virtualizes content on a single line that is oriented either horizontally or vertically.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.AddCleanUpVirtualizedItemHandler(System.Windows.DependencyObject,System.Windows.Controls.CleanUpVirtualizedItemEventHandler)">
      <summary>Adds an event handler for the <see cref="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem" /> attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.DependencyObject" /> that is listening for this event.</param>
      <param name="handler">The event handler that is to be added.</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges the content of a <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> element.</summary>
      <param name="arrangeSize">The <see cref="T:System.Windows.Size" /> that this element should use to arrange its child elements.</param>
      <returns>The <see cref="T:System.Windows.Size" /> that represents the arranged size of this <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> element and its child elements.</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.BringIndexIntoView(System.Int32)">
      <summary>Generates the item at the specified index position and brings it into view.</summary>
      <param name="index">The position of the item to generate and make visible.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> position does not exist in the child collection.</exception>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.CanHierarchicallyScrollAndVirtualizeCore">
      <summary>Gets value that indicates whether the <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> can virtualize items that are grouped or organized in a hierarchy.</summary>
      <returns>
        <see langword="true" /> in all cases.</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.CanHorizontallyScroll">
      <summary>Gets or sets a value that indicates whether a <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> can scroll in the horizontal dimension.</summary>
      <returns>
        <see langword="true" /> if content can scroll in the horizontal dimension; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.CanVerticallyScroll">
      <summary>Gets or sets a value that indicates whether content can scroll in the vertical dimension.</summary>
      <returns>
        <see langword="true" /> if content can scroll in the vertical dimension; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem">
      <summary>Occurs when an item is being re-virtualized by the <see cref="T:System.Windows.Controls.ItemsControl" /> that is associated with this instance of <see cref="T:System.Windows.Controls.VirtualizingStackPanel" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItemEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem" /> attached event.</summary>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.ExtentHeight">
      <summary>Gets a value that contains the vertical size of the extent.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the vertical size of the extent. The default is 0.0.</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.ExtentWidth">
      <summary>Gets a value that contains the horizontal size of the extent.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the horizontal size of the extent. The default is 0.0.</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.GetItemOffsetCore(System.Windows.UIElement)">
      <summary>Returns the position of the specified item, relative to the <see cref="T:System.Windows.Controls.VirtualizingStackPanel" />.</summary>
      <param name="child">The element whose position to find.</param>
      <returns>The position of the specified item, relative to the <see cref="T:System.Windows.Controls.VirtualizingStackPanel" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.HasLogicalOrientation">
      <summary>Gets a value that indicates if this <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> has a vertical or horizontal orientation.</summary>
      <returns>This property always returns <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.HorizontalOffset">
      <summary>Gets a value that contains the horizontal offset of the scrolled content.</summary>
      <returns>
        <see cref="T:System.Double" /> that represents the horizontal offset of the scrolled content. The default is 0.0.</returns>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingStackPanel.IsVirtualizingProperty">
      <summary>Identifies the <see langword="VirtualizingPanel.IsVirtualizing" /> attached property.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.LineDown">
      <summary>Scrolls content downward by one logical unit.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.LineLeft">
      <summary>Scrolls content to the left by one logical unit.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.LineRight">
      <summary>Scrolls content to the right by one logical unit.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.LineUp">
      <summary>Scrolls content upward by one logical unit.</summary>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.LogicalOrientation">
      <summary>Gets a value that represents the <see cref="T:System.Windows.Controls.Orientation" /> of the <see cref="T:System.Windows.Controls.VirtualizingStackPanel" />.</summary>
      <returns>An <see cref="T:System.Windows.Controls.Orientation" /> value.</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.MakeVisible(System.Windows.Media.Visual,System.Windows.Rect)">
      <summary>Scrolls to the specified coordinates and makes that portion of a <see cref="T:System.Windows.Media.Visual" /> visible.</summary>
      <param name="visual">The <see cref="T:System.Windows.Media.Visual" /> that becomes visible.</param>
      <param name="rectangle">A <see cref="T:System.Windows.Rect" /> that represents the coordinate space within a <see cref="T:System.Windows.Media.Visual" />.</param>
      <returns>A <see cref="T:System.Windows.Rect" /> that is visible.</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.MeasureOverride(System.Windows.Size)">
      <summary>Measures the child elements of a <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> in anticipation of arranging them during the <see cref="M:System.Windows.Controls.VirtualizingStackPanel.ArrangeOverride(System.Windows.Size)" /> pass.</summary>
      <param name="constraint">An upper limit <see cref="T:System.Windows.Size" /> that should not be exceeded.</param>
      <returns>The <see cref="T:System.Windows.Size" /> that represents the desired size of the element.</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelDown">
      <summary>Scrolls content logically downward in response to a downward click of the mouse wheel button.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelLeft">
      <summary>Scrolls content logically to the left in response to a left click of the mouse wheel button.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelRight">
      <summary>Scrolls content logically to the right in response to a right click of the mouse wheel button.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelUp">
      <summary>Scrolls content logically upward in response to an upward click of the mouse wheel button.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.OnCleanUpVirtualizedItem(System.Windows.Controls.CleanUpVirtualizedItemEventArgs)">
      <summary>Called when an item that is hosted by the <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> is re-virtualized.</summary>
      <param name="e">Data about the event.</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.OnClearChildren">
      <summary>Called when the collection of child elements is cleared by the base <see cref="T:System.Windows.Controls.Panel" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.OnItemsChanged(System.Object,System.Windows.Controls.Primitives.ItemsChangedEventArgs)">
      <summary>Called when the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection that is associated with the <see cref="T:System.Windows.Controls.ItemsControl" /> for this <see cref="T:System.Windows.Controls.Panel" /> changes.</summary>
      <param name="sender">The <see cref="T:System.Object" /> that raised the event.</param>
      <param name="args">Provides data for the <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.OnViewportOffsetChanged(System.Windows.Vector,System.Windows.Vector)">
      <summary>Called when the offset of the viewport changes as a user scrolls through content.</summary>
      <param name="oldViewportOffset">The old offset of the viewport.</param>
      <param name="newViewportOffset">The new offset of the viewport</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.OnViewportSizeChanged(System.Windows.Size,System.Windows.Size)">
      <summary>Called when the size of the viewport changes.</summary>
      <param name="oldViewportSize">The old size of the viewport.</param>
      <param name="newViewportSize">The new size of the viewport.</param>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.Orientation">
      <summary>Gets or sets a value that describes the horizontal or vertical orientation of stacked content.</summary>
      <returns>The <see cref="T:System.Windows.Controls.Orientation" /> of child content. The default is <see cref="F:System.Windows.Controls.Orientation.Vertical" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingStackPanel.OrientationProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.VirtualizingStackPanel.Orientation" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.PageDown">
      <summary>Scrolls content downward by one page.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.PageLeft">
      <summary>Scrolls content to the left by one page.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.PageRight">
      <summary>Scrolls content to the right by one page.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.PageUp">
      <summary>Scrolls content upward by one page.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.RemoveCleanUpVirtualizedItemHandler(System.Windows.DependencyObject,System.Windows.Controls.CleanUpVirtualizedItemEventHandler)">
      <summary>Removes an event handler for the <see cref="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem" /> attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.DependencyObject" /> from which the handler is being removed.</param>
      <param name="handler">Specifies the event handler that is to be removed.</param>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.ScrollOwner">
      <summary>Gets or sets a value that identifies the container that controls scrolling behavior in this <see cref="T:System.Windows.Controls.VirtualizingStackPanel" />.</summary>
      <returns>The <see cref="T:System.Windows.Controls.ScrollViewer" /> that owns scrolling for this <see cref="T:System.Windows.Controls.VirtualizingStackPanel" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.SetHorizontalOffset(System.Double)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.VirtualizingStackPanel.HorizontalOffset" /> property.</summary>
      <param name="offset">The value of the <see cref="P:System.Windows.Controls.VirtualizingStackPanel.HorizontalOffset" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.SetVerticalOffset(System.Double)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.VirtualizingStackPanel.VerticalOffset" /> property.</summary>
      <param name="offset">The value of the <see cref="P:System.Windows.Controls.VirtualizingStackPanel.VerticalOffset" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.ShouldItemsChangeAffectLayoutCore(System.Boolean,System.Windows.Controls.Primitives.ItemsChangedEventArgs)">
      <summary>Returns a value that indicates whether a changed item in an <see cref="T:System.Windows.Controls.ItemsControl" /> affects the layout for this panel.</summary>
      <param name="areItemChangesLocal">
        <see langword="true" /> if the changed item is a direct child of this <see cref="T:System.Windows.Controls.VirtualizingPanel" />; <see langword="false" /> if the changed item is an indirect descendant of the <see cref="T:System.Windows.Controls.VirtualizingPanel" />.</param>
      <param name="args">Contains data regarding the changed item.</param>
      <returns>
        <see langword="true" /> if the changed item in an <see cref="T:System.Windows.Controls.ItemsControl" /> affects the layout for this panel; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.VerticalOffset">
      <summary>Gets a value that contains the vertical offset of the scrolled content.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the vertical offset of the scrolled content. The default is 0.0.</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.ViewportHeight">
      <summary>Gets a value that contains the vertical size of the viewport of the content.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the vertical size of the viewport of the content. The default is 0.0.</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.ViewportWidth">
      <summary>Gets a value that contains the horizontal size of the viewport of the content.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the vertical size of the viewport of the content. The default is 0.0.</returns>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingStackPanel.VirtualizationModeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.VirtualizingStackPanel.VirtualizationMode" /> attached property.</summary>
    </member>
    <member name="T:System.Windows.Controls.WebBrowser">
      <summary>Hosts and navigates between HTML documents. Enables interoperability between WPF managed code and HTML script.</summary>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.WebBrowser" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.WebBrowser.CanGoBack">
      <summary>Gets a value that indicates whether there is a document to navigate back to.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that indicates whether there is a document to navigate back to.</returns>
    </member>
    <member name="P:System.Windows.Controls.WebBrowser.CanGoForward">
      <summary>Gets a value that indicates whether there is a document to navigate forward to.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that indicates whether there is a document to navigate forward to.</returns>
    </member>
    <member name="P:System.Windows.Controls.WebBrowser.Document">
      <summary>Gets the Document object that represents the hosted HTML page.</summary>
      <returns>A Document object.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Windows.Controls.WebBrowser" /> instance is no longer valid.</exception>
      <exception cref="T:System.InvalidOperationException">A reference to the underlying native <c>WebBrowser</c> could not be retrieved.</exception>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.GoBack">
      <summary>Navigate back to the previous document, if there is one.</summary>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Windows.Controls.WebBrowser" /> instance is no longer valid.</exception>
      <exception cref="T:System.InvalidOperationException">A reference to the underlying native <c>WebBrowser</c> could not be retrieved.</exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">There is no document to navigate back to.</exception>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.GoForward">
      <summary>Navigate forward to the next HTML document, if there is one.</summary>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Windows.Controls.WebBrowser" /> instance is no longer valid.</exception>
      <exception cref="T:System.InvalidOperationException">A reference to the underlying native <c>WebBrowser</c> could not be retrieved.</exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">There is no document to navigate forward to.</exception>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.InvokeScript(System.String)">
      <summary>Executes a script function that is implemented by the currently loaded document.</summary>
      <param name="scriptName">The name of the script function to execute.</param>
      <returns>The object returned by the Active Scripting call.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Windows.Controls.WebBrowser" /> instance is no longer valid.</exception>
      <exception cref="T:System.InvalidOperationException">A reference to the underlying native <c>WebBrowser</c> could not be retrieved.</exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">The script function does not exist.</exception>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.InvokeScript(System.String,System.Object[])">
      <summary>Executes a script function that is defined in the currently loaded document.</summary>
      <param name="scriptName">The name of the script function to execute.</param>
      <param name="args">The parameters to pass to the script function.</param>
      <returns>The object returned by the Active Scripting call.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Windows.Controls.WebBrowser" /> instance is no longer valid.</exception>
      <exception cref="T:System.InvalidOperationException">A reference to the underlying native <c>WebBrowser</c> could not be retrieved.</exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">The script function does not exist.</exception>
    </member>
    <member name="E:System.Windows.Controls.WebBrowser.LoadCompleted">
      <summary>Occurs when the document being navigated to has finished downloading.</summary>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.Navigate(System.String)">
      <summary>Navigates asynchronously to the document at the specified URL.</summary>
      <param name="source">The URL to navigate to.</param>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.Navigate(System.String,System.String,System.Byte[],System.String)">
      <summary>Navigates asynchronously to the document at the specified URL and specify the target frame to load the document's content into. Additional HTTP POST data and HTTP headers can be sent to the server as part of the navigation request.</summary>
      <param name="source">The URL to navigate to.</param>
      <param name="targetFrameName">The name of the frame to display the document's content in.</param>
      <param name="postData">HTTP POST data to send to the server when the source is requested.</param>
      <param name="additionalHeaders">HTTP headers to send to the server when the source is requested.</param>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.Navigate(System.Uri)">
      <summary>Navigate asynchronously to the document at the specified <see cref="T:System.Uri" />.</summary>
      <param name="source">The <see cref="T:System.Uri" /> to navigate to.</param>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Windows.Controls.WebBrowser" /> instance is no longer valid.</exception>
      <exception cref="T:System.InvalidOperationException">A reference to the underlying native <c>WebBrowser</c> could not be retrieved.</exception>
      <exception cref="T:System.Security.SecurityException">Navigation from an application that is running in partial trust to a <see cref="T:System.Uri" /> that is not located at the site of origin.</exception>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.Navigate(System.Uri,System.String,System.Byte[],System.String)">
      <summary>Navigate asynchronously to the document at the specified <see cref="T:System.Uri" /> and specify the target frame to load the document's content into. Additional HTTP POST data and HTTP headers can be sent to the server as part of the navigation request.</summary>
      <param name="source">The <see cref="T:System.Uri" /> to navigate to.</param>
      <param name="targetFrameName">The name of the frame to display the document's content in.</param>
      <param name="postData">HTTP POST data to send to the server when the source is requested.</param>
      <param name="additionalHeaders">HTTP headers to send to the server when the source is requested.</param>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Windows.Controls.WebBrowser" /> instance is no longer valid.</exception>
      <exception cref="T:System.InvalidOperationException">A reference to the underlying native <c>WebBrowser</c> could not be retrieved.</exception>
      <exception cref="T:System.Security.SecurityException">Navigation from an application that is running in partial trust:  

To a <see cref="T:System.Uri" /> that is not located at the site of origin, or  

<paramref name="targetFrameName" /> name is not <see langword="null" /> or empty.</exception>
    </member>
    <member name="E:System.Windows.Controls.WebBrowser.Navigated">
      <summary>Occurs when the document being navigated to is located and has started downloading.</summary>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.NavigateToStream(System.IO.Stream)">
      <summary>Navigate asynchronously to a <see cref="T:System.IO.Stream" /> that contains the content for a document.</summary>
      <param name="stream">The <see cref="T:System.IO.Stream" /> that contains the content for a document.</param>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Windows.Controls.WebBrowser" /> instance is no longer valid.</exception>
      <exception cref="T:System.InvalidOperationException">A reference to the underlying native <c>WebBrowser</c> could not be retrieved.</exception>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.NavigateToString(System.String)">
      <summary>Navigate asynchronously to a <see cref="T:System.String" /> that contains the content for a document.</summary>
      <param name="text">The <see cref="T:System.String" /> that contains the content for a document.</param>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Windows.Controls.WebBrowser" /> instance is no longer valid.</exception>
      <exception cref="T:System.InvalidOperationException">A reference to the underlying native <c>WebBrowser</c> could not be retrieved.</exception>
    </member>
    <member name="E:System.Windows.Controls.WebBrowser.Navigating">
      <summary>Occurs just before navigation to a document.</summary>
    </member>
    <member name="P:System.Windows.Controls.WebBrowser.ObjectForScripting">
      <summary>Gets or sets an instance of a public class, implemented by the host application, that can be accessed by script from a hosted document.</summary>
      <returns>The <see cref="T:System.Object" /> that is an instance of a <see langword="public" /> class, implemented by the host application, that can be accessed by script from a hosted document.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Controls.WebBrowser.ObjectForScripting" /> is set with an instance of type that is not <see langword="COMVisible" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.Refresh">
      <summary>Reloads the current page.</summary>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Windows.Controls.WebBrowser" /> instance is no longer valid.</exception>
      <exception cref="T:System.InvalidOperationException">A reference to the underlying native <c>WebBrowser</c> could not be retrieved.</exception>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.Refresh(System.Boolean)">
      <summary>Reloads the current page with optional cache validation.</summary>
      <param name="noCache">Specifies whether to refresh without cache validation.</param>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Windows.Controls.WebBrowser" /> instance is no longer valid.</exception>
      <exception cref="T:System.InvalidOperationException">A reference to the underlying native <c>WebBrowser</c> could not be retrieved.</exception>
    </member>
    <member name="P:System.Windows.Controls.WebBrowser.Source">
      <summary>Gets or sets the <see cref="T:System.Uri" /> of the current document hosted in the <see cref="T:System.Windows.Controls.WebBrowser" />.</summary>
      <returns>The <see cref="T:System.Uri" /> for the current HTML document.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Windows.Controls.WebBrowser" /> instance is no longer valid.</exception>
      <exception cref="T:System.InvalidOperationException">A reference to the underlying native <c>WebBrowser</c> could not be retrieved.</exception>
      <exception cref="T:System.Security.SecurityException">Navigation from an application that is running in partial trust to a <see cref="T:System.Uri" /> that is not located at the site of origin.</exception>
    </member>
    <member name="T:System.Windows.Controls.WrapPanel">
      <summary>Positions child elements in sequential position from left to right, breaking content to the next line at the edge of the containing box. Subsequent ordering happens sequentially from top to bottom or from right to left, depending on the value of the <see cref="P:System.Windows.Controls.WrapPanel.Orientation" /> property.</summary>
    </member>
    <member name="M:System.Windows.Controls.WrapPanel.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.WrapPanel" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.WrapPanel.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges the content of a <see cref="T:System.Windows.Controls.WrapPanel" /> element.</summary>
      <param name="finalSize">The <see cref="T:System.Windows.Size" /> that this element should use to arrange its child elements.</param>
      <returns>The <see cref="T:System.Windows.Size" /> that represents the arranged size of this <see cref="T:System.Windows.Controls.WrapPanel" /> element and its children.</returns>
    </member>
    <member name="P:System.Windows.Controls.WrapPanel.ItemHeight">
      <summary>Gets or sets a value that specifies the height of all items that are contained within a <see cref="T:System.Windows.Controls.WrapPanel" />.</summary>
      <returns>The <see cref="T:System.Double" /> that represents the uniform height of all items that are contained within the <see cref="T:System.Windows.Controls.WrapPanel" />. The default value is <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.WrapPanel.ItemHeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.WrapPanel.ItemHeight" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.WrapPanel.ItemWidth">
      <summary>Gets or sets a value that specifies the width of all items that are contained within a <see cref="T:System.Windows.Controls.WrapPanel" />.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the uniform width of all items that are contained within the <see cref="T:System.Windows.Controls.WrapPanel" />. The default value is <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.WrapPanel.ItemWidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.WrapPanel.ItemWidth" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.WrapPanel.MeasureOverride(System.Windows.Size)">
      <summary>Measures the child elements of a <see cref="T:System.Windows.Controls.WrapPanel" /> in anticipation of arranging them during the <see cref="M:System.Windows.Controls.WrapPanel.ArrangeOverride(System.Windows.Size)" /> pass.</summary>
      <param name="constraint">An upper limit <see cref="T:System.Windows.Size" /> that should not be exceeded.</param>
      <returns>The <see cref="T:System.Windows.Size" /> that represents the desired size of the element.</returns>
    </member>
    <member name="P:System.Windows.Controls.WrapPanel.Orientation">
      <summary>Gets or sets a value that specifies the dimension in which child content is arranged.</summary>
      <returns>An <see cref="T:System.Windows.Controls.Orientation" /> value that represents the physical orientation of content within the <see cref="T:System.Windows.Controls.WrapPanel" /> as horizontal or vertical. The default value is <see cref="F:System.Windows.Controls.Orientation.Horizontal" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.WrapPanel.OrientationProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.WrapPanel.Orientation" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.CornerRadius">
      <summary>Represents the radii of a rectangle's corners.</summary>
    </member>
    <member name="M:System.Windows.CornerRadius.#ctor(System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.CornerRadius" /> class with a specified uniform radius value for every corner or the rectangle.</summary>
      <param name="uniformRadius">The radius value applied to every corner of the rectangle.</param>
    </member>
    <member name="M:System.Windows.CornerRadius.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.CornerRadius" /> class with the specified radius values for each corner of the rectangle.</summary>
      <param name="topLeft">The radius of the top-left corner.</param>
      <param name="topRight">The radius of the top-right corner.</param>
      <param name="bottomRight">The radius of the bottom-right corner.</param>
      <param name="bottomLeft">The radius of the bottom-left corner.</param>
    </member>
    <member name="P:System.Windows.CornerRadius.BottomLeft">
      <summary>Gets or sets the radius of the bottom-left corner.</summary>
      <returns>The radius of the bottom-left corner. The default is 0.</returns>
    </member>
    <member name="P:System.Windows.CornerRadius.BottomRight">
      <summary>Gets or sets the radius of the bottom-right corner.</summary>
      <returns>The radius of the bottom-right corner. The default is 0.</returns>
    </member>
    <member name="M:System.Windows.CornerRadius.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is a <see cref="T:System.Windows.CornerRadius" /> and whether it contains the same corner radius values as this <see cref="T:System.Windows.CornerRadius" />.</summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare.</param>
      <returns>
        <see langword="true" /> if <paramref name="obj" /> is a <see cref="T:System.Windows.CornerRadius" /> and contains the same corner radius values as this <see cref="T:System.Windows.CornerRadius" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.CornerRadius.Equals(System.Windows.CornerRadius)">
      <summary>Compares two <see cref="T:System.Windows.CornerRadius" /> structures for equality.</summary>
      <param name="cornerRadius">The <see cref="T:System.Windows.CornerRadius" /> to compare to this <see cref="T:System.Windows.CornerRadius" />.</param>
      <returns>
        <see langword="true" /> if <paramref name="cornerRadius" /> contains the same corner radius values as this <see cref="T:System.Windows.CornerRadius" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.CornerRadius.GetHashCode">
      <summary>Returns the hash code for this <see cref="T:System.Windows.CornerRadius" />.</summary>
      <returns>The hash code for this <see cref="T:System.Windows.CornerRadius" /> structure.</returns>
    </member>
    <member name="M:System.Windows.CornerRadius.op_Equality(System.Windows.CornerRadius,System.Windows.CornerRadius)">
      <summary>Compares two <see cref="T:System.Windows.CornerRadius" /> structures for equality.</summary>
      <param name="cr1">The first <see cref="T:System.Windows.CornerRadius" /> to compare.</param>
      <param name="cr2">The second <see cref="T:System.Windows.CornerRadius" /> to compare.</param>
      <returns>
        <see langword="true" /> if <paramref name="cr1" /> and <paramref name="cr2" /> have equal values for all corners (same values for <see cref="P:System.Windows.CornerRadius.TopLeft" />, <see cref="P:System.Windows.CornerRadius.TopRight" />, <see cref="P:System.Windows.CornerRadius.BottomLeft" />, <see cref="P:System.Windows.CornerRadius.BottomRight" />); <see langword="false" /> if <paramref name="cr1" /> and <paramref name="cr2" /> have different values for one or more corners.</returns>
    </member>
    <member name="M:System.Windows.CornerRadius.op_Inequality(System.Windows.CornerRadius,System.Windows.CornerRadius)">
      <summary>Compares two <see cref="T:System.Windows.CornerRadius" /> structures for inequality.</summary>
      <param name="cr1">The first <see cref="T:System.Windows.CornerRadius" /> to compare.</param>
      <param name="cr2">The second <see cref="T:System.Windows.CornerRadius" /> to compare.</param>
      <returns>
        <see langword="true" /> if <paramref name="cr1" /> and <paramref name="cr2" /> have different values for one or more corners (different values for <see cref="P:System.Windows.CornerRadius.TopLeft" />, <see cref="P:System.Windows.CornerRadius.TopRight" />, <see cref="P:System.Windows.CornerRadius.BottomLeft" />, <see cref="P:System.Windows.CornerRadius.BottomRight" />); <see langword="false" /> if <paramref name="cr1" /> and <paramref name="cr2" /> have identical corners.</returns>
    </member>
    <member name="P:System.Windows.CornerRadius.TopLeft">
      <summary>Gets or sets the radius of the top-left corner.</summary>
      <returns>The radius of the top-left corner. The default is 0.</returns>
    </member>
    <member name="P:System.Windows.CornerRadius.TopRight">
      <summary>Gets or sets the radius of the top-right corner.</summary>
      <returns>The radius of the top-right corner. The default is 0.</returns>
    </member>
    <member name="M:System.Windows.CornerRadius.ToString">
      <summary>Returns the string representation of the <see cref="T:System.Windows.CornerRadius" />.</summary>
      <returns>A string representation of the <see cref="T:System.Windows.CornerRadius" />.</returns>
    </member>
    <member name="T:System.Windows.CornerRadiusConverter">
      <summary>Converts instances of other types to and from a <see cref="T:System.Windows.CornerRadius" />.</summary>
    </member>
    <member name="M:System.Windows.CornerRadiusConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.CornerRadiusConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.CornerRadiusConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Indicates whether an object can be converted from a given type to a <see cref="T:System.Windows.CornerRadius" />.</summary>
      <param name="typeDescriptorContext">Describes the context information of a type.</param>
      <param name="sourceType">The source <see cref="T:System.Type" /> that is being queried for conversion support.</param>
      <returns>
        <see langword="true" /> if <paramref name="sourceType" /> is of type <see cref="T:System.String" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.CornerRadiusConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether <see cref="T:System.Windows.CornerRadius" /> values can be converted to the specified type.</summary>
      <param name="typeDescriptorContext">Describes the context information of a type.</param>
      <param name="destinationType">The desired type this <see cref="T:System.Windows.CornerRadius" /> is being evaluated to be converted to.</param>
      <returns>
        <see langword="true" /> if <paramref name="destinationType" /> is of type <see cref="T:System.String" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.CornerRadiusConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the specified object to a <see cref="T:System.Windows.CornerRadius" />.</summary>
      <param name="typeDescriptorContext">Describes the context information of a type.</param>
      <param name="cultureInfo">Describes the <see cref="T:System.Globalization.CultureInfo" /> of the type being converted.</param>
      <param name="source">The object being converted.</param>
      <returns>The <see cref="T:System.Windows.CornerRadius" /> created from converting <paramref name="source" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> is not <see langword="null" /> and is not a valid type which can be converted to a <see cref="T:System.Windows.CornerRadius" />.</exception>
    </member>
    <member name="M:System.Windows.CornerRadiusConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the specified <see cref="T:System.Windows.CornerRadius" /> to the specified type.</summary>
      <param name="typeDescriptorContext">Describes the context information of a type.</param>
      <param name="cultureInfo">Describes the <see cref="T:System.Globalization.CultureInfo" /> of the type being converted.</param>
      <param name="value">The <see cref="T:System.Windows.CornerRadius" /> to convert.</param>
      <param name="destinationType">The type to convert the <see cref="T:System.Windows.CornerRadius" /> to.</param>
      <returns>The object created from converting this <see cref="T:System.Windows.CornerRadius" /> (a string).</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not <see langword="null" /> and is not a <see cref="T:System.Windows.Media.Brush" />, or if <paramref name="destinationType" /> is not one of the valid destination types.</exception>
    </member>
    <member name="T:System.Windows.Data.Binding">
      <summary>Provides high-level access to the definition of a binding, which connects the properties of binding target objects (typically, WPF elements), and any data source (for example, a database, an XML file, or any object that contains data).</summary>
    </member>
    <member name="M:System.Windows.Data.Binding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.Binding" /> class.</summary>
    </member>
    <member name="M:System.Windows.Data.Binding.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.Binding" /> class with an initial path.</summary>
      <param name="path">The initial <see cref="P:System.Windows.Data.Binding.Path" /> for the binding.</param>
    </member>
    <member name="M:System.Windows.Data.Binding.AddSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
      <summary>Adds a handler for the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to the event.</param>
      <param name="handler">The handler to add.</param>
    </member>
    <member name="M:System.Windows.Data.Binding.AddTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
      <summary>Adds a handler for the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to the event.</param>
      <param name="handler">The handler to add.</param>
    </member>
    <member name="P:System.Windows.Data.Binding.AsyncState">
      <summary>Gets or sets opaque data passed to the asynchronous data dispatcher.</summary>
      <returns>Data passed to the asynchronous data dispatcher.</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.BindsDirectlyToSource">
      <summary>Gets or sets a value that indicates whether to evaluate the <see cref="P:System.Windows.Data.Binding.Path" /> relative to the data item or the <see cref="T:System.Windows.Data.DataSourceProvider" /> object.</summary>
      <returns>
        <see langword="false" /> to evaluate the path relative to the data item itself; otherwise, <see langword="true" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.Converter">
      <summary>Gets or sets the converter to use.</summary>
      <returns>A value of type <see cref="T:System.Windows.Data.IValueConverter" />. The default is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.ConverterCulture">
      <summary>Gets or sets the culture in which to evaluate the converter.</summary>
      <returns>The default is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.ConverterParameter">
      <summary>Gets or sets the parameter to pass to the <see cref="P:System.Windows.Data.Binding.Converter" />.</summary>
      <returns>The parameter to pass to the <see cref="P:System.Windows.Data.Binding.Converter" />. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Data.Binding.DoNothing">
      <summary>Used as a returned value to instruct the binding engine not to perform any action.</summary>
    </member>
    <member name="P:System.Windows.Data.Binding.ElementName">
      <summary>Gets or sets the name of the element to use as the binding source object.</summary>
      <returns>The value of the <see langword="Name" /> property or x:Name Directive of the element of interest. You can refer to elements in code only if they are registered to the appropriate <see cref="T:System.Windows.NameScope" /> through <see langword="RegisterName" />. For more information, see WPF XAML Namescopes.  
 The default is <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)">
      <summary>Returns an XML namespace manager object used by the binding attached to the specified object.</summary>
      <param name="target">The object from which to get namespace information.</param>
      <returns>A returned object used for viewing XML namespaces that relate to the binding on the passed object element. This object should be cast as <see cref="T:System.Xml.XmlNamespaceManager" />.</returns>
      <exception cref="T:System.ArgumentNullException">The <paramref name="target" /> parameter cannot be <see langword="null" />.</exception>
    </member>
    <member name="F:System.Windows.Data.Binding.IndexerName">
      <summary>Used as the <see cref="P:System.ComponentModel.PropertyChangedEventArgs.PropertyName" /> of <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> to indicate that an indexer property has changed.</summary>
    </member>
    <member name="P:System.Windows.Data.Binding.IsAsync">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Data.Binding" /> should get and set values asynchronously.</summary>
      <returns>The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.Mode">
      <summary>Gets or sets a value that indicates the direction of the data flow in the binding.</summary>
      <returns>One of the <see cref="T:System.Windows.Data.BindingMode" /> values. The default is <see cref="F:System.Windows.Data.BindingMode.Default" />, which returns the default binding mode value of the target dependency property. However, the default value varies for each dependency property. In general, user-editable control properties, such as those of text boxes and check boxes, default to two-way bindings, whereas most other properties default to one-way bindings.  
 A programmatic way to determine whether a dependency property binds one-way or two-way by default is to get the property metadata of the property using <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> and then check the Boolean value of the <see cref="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault" /> property.</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.NotifyOnSourceUpdated">
      <summary>Gets or sets a value that indicates whether to raise the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> event when a value is transferred from the binding target to the binding source.</summary>
      <returns>
        <see langword="true" /> if the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> event should be raised when the binding source value is updated; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.NotifyOnTargetUpdated">
      <summary>Gets or sets a value that indicates whether to raise the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> event when a value is transferred from the binding source to the binding target.</summary>
      <returns>
        <see langword="true" /> if the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> event should be raised when the binding target value is updated; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.NotifyOnValidationError">
      <summary>Gets or sets a value that indicates whether to raise the <see cref="E:System.Windows.Controls.Validation.Error" /> attached event on the bound object.</summary>
      <returns>
        <see langword="true" /> if the <see cref="E:System.Windows.Controls.Validation.Error" /> attached event should be raised on the bound object when there is a validation error during source updates; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.Path">
      <summary>Gets or sets the path to the binding source property.</summary>
      <returns>The path to the binding source. The default is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.RelativeSource">
      <summary>Gets or sets the binding source by specifying its location relative to the position of the binding target.</summary>
      <returns>A <see cref="T:System.Windows.Data.RelativeSource" /> object specifying the relative location of the binding source to use. The default is <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Data.Binding.RemoveSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
      <summary>Removes a handler for the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to the event.</param>
      <param name="handler">The handler to remove.</param>
    </member>
    <member name="M:System.Windows.Data.Binding.RemoveTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
      <summary>Removes a handler for the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to the event.</param>
      <param name="handler">The handler to remove.</param>
    </member>
    <member name="M:System.Windows.Data.Binding.SetXmlNamespaceManager(System.Windows.DependencyObject,System.Xml.XmlNamespaceManager)">
      <summary>Sets a namespace manager object used by the binding attached to the provided element.</summary>
      <param name="target">The object from which to get namespace information.</param>
      <param name="value">The <see cref="T:System.Xml.XmlNamespaceManager" /> to use for namespace evaluation in the passed element.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Data.Binding.ShouldSerializePath">
      <summary>Indicates whether the <see cref="P:System.Windows.Data.Binding.Path" /> property should be persisted.</summary>
      <returns>
        <see langword="true" /> if the property value has changed from its default; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Data.Binding.ShouldSerializeSource">
      <summary>Indicates whether the <see cref="P:System.Windows.Data.Binding.Source" /> property should be persisted.</summary>
      <returns>
        <see langword="true" /> if the property value has changed from its default; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Data.Binding.ShouldSerializeValidationRules">
      <summary>Indicates whether the <see cref="P:System.Windows.Data.Binding.ValidationRules" /> property should be persisted.</summary>
      <returns>
        <see langword="true" /> if the property value has changed from its default; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.Source">
      <summary>Gets or sets the object to use as the binding source.</summary>
      <returns>The object to use as the binding source.</returns>
    </member>
    <member name="E:System.Windows.Data.Binding.SourceUpdated">
      <summary>Occurs when a value is transferred from the binding target to the binding source, but only for bindings with the <see cref="P:System.Windows.Data.Binding.NotifyOnSourceUpdated" /> value set to <see langword="true" />.</summary>
    </member>
    <member name="F:System.Windows.Data.Binding.SourceUpdatedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> attached event.</summary>
    </member>
    <member name="E:System.Windows.Data.Binding.TargetUpdated">
      <summary>Occurs when a value is transferred from the binding source to the binding target, but only for bindings with the <see cref="P:System.Windows.Data.Binding.NotifyOnTargetUpdated" /> value set to <see langword="true" />.</summary>
    </member>
    <member name="F:System.Windows.Data.Binding.TargetUpdatedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> attached event.</summary>
    </member>
    <member name="P:System.Windows.Data.Binding.UpdateSourceExceptionFilter">
      <summary>Gets or sets a handler you can use to provide custom logic for handling exceptions that the binding engine encounters during the update of the binding source value. This is only applicable if you have associated an <see cref="T:System.Windows.Controls.ExceptionValidationRule" /> with your binding.</summary>
      <returns>A method that provides custom logic for handling exceptions that the binding engine encounters during the update of the binding source value.</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.UpdateSourceTrigger">
      <summary>Gets or sets a value that determines the timing of binding source updates.</summary>
      <returns>One of the <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> values. The default is <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" />, which returns the default <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> value of the target dependency property. However, the default value for most dependency properties is <see cref="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged" />, while the <see cref="P:System.Windows.Controls.TextBox.Text" /> property has a default value of <see cref="F:System.Windows.Data.UpdateSourceTrigger.LostFocus" />.  
 A programmatic way to determine the default <see cref="P:System.Windows.Data.Binding.UpdateSourceTrigger" /> value of a dependency property is to get the property metadata of the property using <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> and then check the value of the <see cref="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger" /> property.</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.ValidatesOnDataErrors">
      <summary>Gets or sets a value that indicates whether to include the <see cref="T:System.Windows.Controls.DataErrorValidationRule" />.</summary>
      <returns>
        <see langword="true" /> to include the <see cref="T:System.Windows.Controls.DataErrorValidationRule" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.ValidatesOnExceptions">
      <summary>Gets or sets a value that indicates whether to include the <see cref="T:System.Windows.Controls.ExceptionValidationRule" />.</summary>
      <returns>
        <see langword="true" /> to include the <see cref="T:System.Windows.Controls.ExceptionValidationRule" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors">
      <summary>Gets or sets a value that indicates whether to include the <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />.</summary>
      <returns>
        <see langword="true" /> to include the <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.ValidationRules">
      <summary>Gets a collection of rules that check the validity of the user input.</summary>
      <returns>A collection of <see cref="T:System.Windows.Controls.ValidationRule" /> objects.</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.XmlNamespaceManager">
      <summary>Gets or sets the <see cref="T:System.Xml.XmlNamespaceManager" /> used to perform namespace-aware <see langword="XPath" /> queries in XML bindings.</summary>
    </member>
    <member name="F:System.Windows.Data.Binding.XmlNamespaceManagerProperty">
      <summary>Identifies the <see cref="P:System.Windows.Data.Binding.XmlNamespaceManager" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Data.Binding.XPath">
      <summary>Gets or sets an <see langword="XPath" /> query that returns the value on the XML binding source to use.</summary>
      <returns>The <see langword="XPath" /> query. The default is <see langword="null" />.</returns>
    </member>
    <member name="T:System.Windows.Data.BindingBase">
      <summary>Defines the common characteristics of the <see cref="T:System.Windows.Data.Binding" />, <see cref="T:System.Windows.Data.PriorityBinding" />, and <see cref="T:System.Windows.Data.MultiBinding" /> classes.</summary>
    </member>
    <member name="P:System.Windows.Data.BindingBase.BindingGroupName">
      <summary>Gets or sets the name of the <see cref="T:System.Windows.Data.BindingGroup" /> to which this binding belongs.</summary>
      <returns>The name of the <see cref="T:System.Windows.Data.BindingGroup" /> to which this binding belongs.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingBase.Delay">
      <summary>Gets or sets the amount of time, in milliseconds, to wait before updating the binding source after the value on the target changes.</summary>
      <returns>The amount of time, in milliseconds, to wait before updating the binding source.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingBase.FallbackValue">
      <summary>Gets or sets the value to use when the binding is unable to return a value.</summary>
      <returns>The default value is <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</returns>
    </member>
    <member name="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)">
      <summary>Returns an object that should be set on the property where this binding and extension are applied.</summary>
      <param name="serviceProvider">The object that can provide services for the markup extension. May be <see langword="null" />;</param>
      <returns>The value to set on the binding target property.</returns>
    </member>
    <member name="M:System.Windows.Data.BindingBase.ShouldSerializeFallbackValue">
      <summary>Returns a value that indicates whether serialization processes should serialize the effective value of the <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> property on instances of this class.</summary>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> property value should be serialized; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue">
      <summary>Returns a value that indicates whether the <see cref="P:System.Windows.Data.BindingBase.TargetNullValue" /> property should be serialized.</summary>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.Data.BindingBase.TargetNullValue" /> property should be serialized; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingBase.StringFormat">
      <summary>Gets or sets a string that specifies how to format the binding if it displays the bound value as a string.</summary>
      <returns>A string that specifies how to format the binding if it displays the bound value as a string.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingBase.TargetNullValue">
      <summary>Gets or sets the value that is used in the target when the value of the source is <see langword="null" />.</summary>
      <returns>The value that is used in the target when the value of the source is <see langword="null" />.</returns>
    </member>
    <member name="T:System.Windows.Data.BindingExpression">
      <summary>Contains information about a single instance of a <see cref="T:System.Windows.Data.Binding" />.</summary>
    </member>
    <member name="P:System.Windows.Data.BindingExpression.DataItem">
      <summary>Gets the binding source object that this <see cref="T:System.Windows.Data.BindingExpression" /> uses.</summary>
      <returns>The binding source object that this <see cref="T:System.Windows.Data.BindingExpression" /> uses.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpression.ParentBinding">
      <summary>Returns the <see cref="T:System.Windows.Data.Binding" /> object of the current <see cref="T:System.Windows.Data.BindingExpression" />.</summary>
      <returns>The <see cref="T:System.Windows.Data.Binding" /> object of the current binding expression.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpression.ResolvedSource">
      <summary>Gets the binding source object for this <see cref="T:System.Windows.Data.BindingExpression" />.</summary>
      <returns>The binding source object for this <see cref="T:System.Windows.Data.BindingExpression" />.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpression.ResolvedSourcePropertyName">
      <summary>Gets the name of the binding source property for this <see cref="T:System.Windows.Data.BindingExpression" />.</summary>
      <returns>The name of the binding source property for this <see cref="T:System.Windows.Data.BindingExpression" />.</returns>
    </member>
    <member name="M:System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="managerType">The type of the <see cref="T:System.Windows.WeakEventManager" /> calling this method. This only recognizes manager objects of type <see cref="T:System.Collections.Specialized.CollectionChangedEventManager" />.</param>
      <param name="sender">Object that originated the event.</param>
      <param name="e">Event data.</param>
      <returns>
        <see langword="true" /> if the listener handled the event; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Data.BindingExpression.UpdateSource">
      <summary>Sends the current binding target value to the binding source property in <see cref="F:System.Windows.Data.BindingMode.TwoWay" /> or <see cref="F:System.Windows.Data.BindingMode.OneWayToSource" /> bindings.</summary>
      <exception cref="T:System.InvalidOperationException">The binding has been detached from its target.</exception>
    </member>
    <member name="M:System.Windows.Data.BindingExpression.UpdateTarget">
      <summary>Forces a data transfer from the binding source property to the binding target property.</summary>
      <exception cref="T:System.InvalidOperationException">The binding has been detached from its target.</exception>
    </member>
    <member name="T:System.Windows.Data.BindingExpressionBase">
      <summary>Represents the base class for <see cref="T:System.Windows.Data.BindingExpression" />, <see cref="T:System.Windows.Data.PriorityBindingExpression" />, and <see cref="T:System.Windows.Data.MultiBindingExpression" />.</summary>
    </member>
    <member name="P:System.Windows.Data.BindingExpressionBase.BindingGroup">
      <summary>Gets the <see cref="T:System.Windows.Data.BindingGroup" /> that this binding expression belongs to.</summary>
      <returns>The <see cref="T:System.Windows.Data.BindingGroup" /> that this binding expression belongs to. This property returns <see langword="null" /> if the <see cref="T:System.Windows.Data.BindingExpressionBase" /> is not part of a  <see cref="T:System.Windows.Data.BindingGroup" />.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpressionBase.HasError">
      <summary>Gets a value that indicates whether the parent binding has a failed validation rule.</summary>
      <returns>
        <see langword="true" /> if the parent binding has a failed validation rule; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpressionBase.HasValidationError">
      <summary>Gets a value that indicates whether the parent binding has a failed validation rule.</summary>
      <returns>
        <see langword="true" /> if the parent binding has a failed validation rule; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpressionBase.IsDirty">
      <summary>Gets or sets a value that indicates whether the target of the binding has a value that has not been written to the source.</summary>
      <returns>
        <see langword="true" /> if the target has a value that has not been written to the source; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpressionBase.ParentBindingBase">
      <summary>Gets the <see cref="T:System.Windows.Data.BindingBase" /> object from which this <see cref="T:System.Windows.Data.BindingExpressionBase" /> object is created.</summary>
      <returns>The <see cref="T:System.Windows.Data.BindingBase" /> object from which this <see cref="T:System.Windows.Data.BindingExpressionBase" /> object is created.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpressionBase.Status">
      <summary>Gets the status of the binding expression.</summary>
      <returns>A <see cref="T:System.Windows.Data.BindingStatus" /> value that describes the status of the binding expression.</returns>
    </member>
    <member name="M:System.Windows.Data.BindingExpressionBase.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="managerType">The type of the <see cref="T:System.Windows.WeakEventManager" /> calling this method. This only recognizes manager objects of type <see cref="T:System.Collections.Specialized.CollectionChangedEventManager" />.</param>
      <param name="sender">Object that originated the event.</param>
      <param name="e">Event data.</param>
      <returns>
        <see langword="true" /> if the listener handled the event; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpressionBase.Target">
      <summary>Gets the element that is the binding target object of this binding expression.</summary>
      <returns>The element that is the binding target object of this binding expression.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpressionBase.TargetProperty">
      <summary>Gets the binding target property of this binding expression.</summary>
      <returns>The binding target property of this binding expression.</returns>
    </member>
    <member name="M:System.Windows.Data.BindingExpressionBase.UpdateSource">
      <summary>Sends the current binding target value to the binding source in <see cref="F:System.Windows.Data.BindingMode.TwoWay" /> or <see cref="F:System.Windows.Data.BindingMode.OneWayToSource" /> bindings.</summary>
    </member>
    <member name="M:System.Windows.Data.BindingExpressionBase.UpdateTarget">
      <summary>Forces a data transfer from the binding source to the binding target.</summary>
    </member>
    <member name="M:System.Windows.Data.BindingExpressionBase.ValidateWithoutUpdate">
      <summary>Runs any <see cref="T:System.Windows.Controls.ValidationRule" /> objects on the associated <see cref="T:System.Windows.Data.Binding" /> that have the <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /> property set to <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" /> or <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" />. This method does not update the source.</summary>
      <returns>
        <see langword="true" /> if the validation rules succeed; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpressionBase.ValidationError">
      <summary>Gets the <see cref="T:System.Windows.Controls.ValidationError" /> that caused this instance of <see cref="T:System.Windows.Data.BindingExpressionBase" /> to be invalid.</summary>
      <returns>The <see cref="T:System.Windows.Controls.ValidationError" /> that caused this instance of <see cref="T:System.Windows.Data.BindingExpressionBase" /> to be invalid.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpressionBase.ValidationErrors">
      <summary>Gets a collection of <see cref="T:System.Windows.Controls.ValidationError" /> objects that caused this instance of <see cref="T:System.Windows.Data.BindingExpressionBase" /> to be invalid.</summary>
      <returns>A collection of <see cref="T:System.Windows.Controls.ValidationError" /> objects that caused this instance of <see cref="T:System.Windows.Data.BindingExpressionBase" /> to be invalid.  The value is <see langword="null" /> if there are no errors.</returns>
    </member>
    <member name="T:System.Windows.Data.BindingGroup">
      <summary>Contains a collection of bindings and <see cref="T:System.Windows.Controls.ValidationRule" /> objects that are used to validate an object.</summary>
    </member>
    <member name="M:System.Windows.Data.BindingGroup.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.BindingGroup" /> class.</summary>
    </member>
    <member name="M:System.Windows.Data.BindingGroup.BeginEdit">
      <summary>Begins an edit transaction on the sources in the <see cref="T:System.Windows.Data.BindingGroup" />.</summary>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.BindingExpressions">
      <summary>Gets a collection of <see cref="T:System.Windows.Data.BindingExpression" /> objects that contains information for each Binding in the <see cref="T:System.Windows.Data.BindingGroup" />.</summary>
      <returns>A collection of <see cref="T:System.Windows.Data.BindingExpression" /> objects that contains information for each binding in the <see cref="T:System.Windows.Data.BindingGroup" />.</returns>
    </member>
    <member name="M:System.Windows.Data.BindingGroup.CancelEdit">
      <summary>Ends the edit transaction and discards the pending changes.</summary>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.CanRestoreValues">
      <summary>Gets whether each source in the binding can discard pending changes and restore the original values.</summary>
      <returns>
        <see langword="true" /> if each source in the binding can discard pending changes and restore the original values; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Data.BindingGroup.CommitEdit">
      <summary>Runs all the <see cref="T:System.Windows.Controls.ValidationRule" /> objects and updates the binding sources if all validation rules succeed.</summary>
      <returns>
        <see langword="true" /> if every <see cref="T:System.Windows.Controls.ValidationRule" /> succeeds and the values are committed to the sources; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)">
      <summary>Returns the proposed value for the specified property and item.</summary>
      <param name="item">The object that contains the specified property.</param>
      <param name="propertyName">The property whose proposed value to get.</param>
      <returns>The proposed property value.</returns>
      <exception cref="T:System.InvalidOperationException">There is not a binding for the specified item and property.</exception>
      <exception cref="T:System.Windows.Data.ValueUnavailableException">The value of the specified property is not available, due to a conversion error or because an earlier validation rule failed.</exception>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.HasValidationError">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Data.BindingGroup" /> has a failed validation rule.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Data.BindingGroup" /> has a failed validation rule; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.IsDirty">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Data.BindingGroup" /> contains a proposed value that has not been written to the source.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Data.BindingGroup" /> contains a proposed value that has not been written to the source; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.Items">
      <summary>Gets the sources that are used by the Binding objects in the <see cref="T:System.Windows.Data.BindingGroup" />.</summary>
      <returns>The sources that are used by the Binding objects in the <see cref="T:System.Windows.Data.BindingGroup" />.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.Name">
      <summary>Gets or sets the name that identifies the <see cref="T:System.Windows.Data.BindingGroup" />, which can be used to include and exclude Binding objects in the <see cref="T:System.Windows.Data.BindingGroup" />.</summary>
      <returns>The name that identifies the <see cref="T:System.Windows.Data.BindingGroup" />.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.NotifyOnValidationError">
      <summary>Gets or sets whether the <see cref="E:System.Windows.Controls.Validation.Error" /> event occurs when the state of a <see cref="T:System.Windows.Controls.ValidationRule" /> changes.</summary>
      <returns>
        <see langword="true" /> if the <see cref="E:System.Windows.Controls.Validation.Error" /> event occurs when the state of a <see cref="T:System.Windows.Controls.ValidationRule" /> changes; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.Owner">
      <summary>Gets the object that this <see cref="T:System.Windows.Data.BindingGroup" /> is assigned to.</summary>
      <returns>The object that this <see cref="T:System.Windows.Data.BindingGroup" /> is assigned to.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.SharesProposedValues">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Data.BindingGroup" /> reuses target values that have not been committed to the source.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Data.BindingGroup" /> reuses target values that have not been committed to the source; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)">
      <summary>Attempts to get the proposed value for the specified property and item.</summary>
      <param name="item">The object that contains the specified property.</param>
      <param name="propertyName">The property whose proposed value to get.</param>
      <param name="value">When this method returns, contains an object that represents the proposed property value. This parameter is passed uninitialized.</param>
      <returns>
        <see langword="true" /> if value is the proposed value for the specified property; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Data.BindingGroup.UpdateSources">
      <summary>Runs the converter on the binding and the <see cref="T:System.Windows.Controls.ValidationRule" /> objects that have the <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /> property set to <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" />, <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" />, or <see cref="F:System.Windows.Controls.ValidationStep.UpdatedValue" /> and saves the values of the targets to the source objects if all the validation rules succeed.</summary>
      <returns>
        <see langword="true" /> if all validation rules succeed; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError">
      <summary>Gets or sets a value that indicates whether to include the <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />.</summary>
      <returns>
        <see langword="true" /> to include the <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Data.BindingGroup.ValidateWithoutUpdate">
      <summary>Runs the converter on the binding and the <see cref="T:System.Windows.Controls.ValidationRule" /> objects that have the <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /> property set to <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" /> or <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" />.</summary>
      <returns>
        <see langword="true" /> if the validation rules succeed; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.ValidationErrors">
      <summary>Gets a collection of <see cref="T:System.Windows.Controls.ValidationError" /> objects that caused the <see cref="T:System.Windows.Data.BindingGroup" /> to be invalid.</summary>
      <returns>A collection of <see cref="T:System.Windows.Controls.ValidationError" /> objects that caused <see cref="T:System.Windows.Data.BindingGroup" /> to be invalid.  The value is <see langword="null" /> if there are no errors.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.ValidationRules">
      <summary>Gets a collection of <see cref="T:System.Windows.Controls.ValidationRule" /> objects that validate the source objects in the <see cref="T:System.Windows.Data.BindingGroup" />.</summary>
      <returns>A collection of <see cref="T:System.Windows.Controls.ValidationRule" /> objects that validate the source objects in the <see cref="T:System.Windows.Data.BindingGroup" />.</returns>
    </member>
    <member name="T:System.Windows.Data.BindingListCollectionView">
      <summary>Represents the <see cref="T:System.Windows.Data.CollectionView" /> for collections that implement <see cref="T:System.ComponentModel.IBindingList" />, such as Microsoft ActiveX Data Objects (ADO) data views.</summary>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.#ctor(System.ComponentModel.IBindingList)">
      <summary>Initializes an instance of <see cref="T:System.Windows.Data.BindingListCollectionView" /> over the given list.</summary>
      <param name="list">The underlying <see cref="T:System.ComponentModel.IBindingList" />.</param>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.AddNew">
      <summary>Starts an add transaction and returns the pending new item.</summary>
      <returns>The pending new item.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CanAddNew">
      <summary>Gets a value that indicates whether a new item can be added to the collection.</summary>
      <returns>
        <see langword="true" /> if a new item can be added to the collection; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CanCancelEdit">
      <summary>Gets a value that indicates whether the collection view can discard pending changes and restore the original values of an edited object.</summary>
      <returns>
        <see langword="true" /> if the collection view can discard pending changes and restore the original values of an edited object; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.CancelEdit">
      <summary>Ends the edit transaction and, if possible, restores the original value to the item.</summary>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.CancelNew">
      <summary>Ends the add transaction and discards the pending new item.</summary>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CanChangeLiveFiltering">
      <summary>Gets a value that indicates whether this view supports turning filtering data in real time on or off.</summary>
      <returns>
        <see langword="false" /> in all cases.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CanChangeLiveGrouping">
      <summary>Gets a value that indicates whether this view supports turning grouping data in real time on or off.</summary>
      <returns>
        <see langword="true" /> in all cases.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CanChangeLiveSorting">
      <summary>Gets a value that indicates whether this view supports turning sorting data in real time on or off.</summary>
      <returns>
        <see langword="false" /> in all cases.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CanCustomFilter">
      <summary>Gets a value that indicates whether the view supports custom filtering.</summary>
      <returns>
        <see langword="true" /> if the view supports custom filtering; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CanFilter">
      <summary>Gets a value that indicates whether the view supports callback-based filtering.</summary>
      <returns>This property always returns <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CanGroup">
      <summary>Gets a value that indicates whether the view supports grouping.</summary>
      <returns>For a default instance of <see cref="T:System.Windows.Data.BindingListCollectionView" /> this property always returns <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CanRemove">
      <summary>Gets a value that indicates whether an item can be removed from the collection.</summary>
      <returns>
        <see langword="true" /> if an item can be removed from the collection; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CanSort">
      <summary>Gets a value that indicates whether the collection supports sorting.</summary>
      <returns>For a default instance of <see cref="T:System.Windows.Data.BindingListCollectionView" /> this property always returns <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.CommitEdit">
      <summary>Ends the edit transaction and saves the pending changes.</summary>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.CommitNew">
      <summary>Ends the add transaction and saves the pending new item.</summary>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.Contains(System.Object)">
      <summary>Returns a value that indicates whether a given item belongs to the collection view.</summary>
      <param name="item">The object to check.</param>
      <returns>
        <see langword="true" /> if the item belongs to the collection view; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.Count">
      <summary>Gets the estimated number of records in the collection.</summary>
      <returns>One of the following:  
  Value  

  Meaning  

  -1  

  Could not determine the count of the collection. This might be returned by a "virtualizing" view, where the view deliberately does not account for all items in the underlying collection because the view is attempting to increase efficiency and minimize dependence on always having the entire collection available.  

  any other integer  

  The count of the collection.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CurrentAddItem">
      <summary>Gets the item that is being added during the current add transaction.</summary>
      <returns>The item that is being added if <see cref="P:System.Windows.Data.BindingListCollectionView.IsAddingNew" /> is <see langword="true" />; otherwise, <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CurrentEditItem">
      <summary>Gets the item in the collection that is being edited.</summary>
      <returns>The item in the collection that is being edited if <see cref="P:System.Windows.Data.ListCollectionView.IsEditingItem" /> is <see langword="true" />; otherwise, <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CustomFilter">
      <summary>Gets or sets a custom filter.</summary>
      <returns>A string that specifies how the items are filtered.</returns>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.DetachFromSourceCollection">
      <summary>Detaches the underlying collection from this collection view to enable the collection view to be garbage collected.</summary>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.EditItem(System.Object)">
      <summary>Begins an edit transaction of the specified item.</summary>
      <param name="item">The item to edit.</param>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.GetItemAt(System.Int32)">
      <summary>Retrieves the item at the specified position in the view.</summary>
      <param name="index">The zero-based index at which the item is located.</param>
      <returns>The item at the specified position in the view.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="index" /> is out of range.</exception>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.GroupBySelector">
      <summary>Gets or sets a delegate to select the <see cref="T:System.ComponentModel.GroupDescription" /> as a function of the parent group and its level.</summary>
      <returns>A method that provides the logic for the selection of the <see cref="T:System.ComponentModel.GroupDescription" /> as a function of the parent group and its level. The default is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.GroupDescriptions">
      <summary>Gets a collection of <see cref="T:System.ComponentModel.GroupDescription" /> objects that describe how the items in the collection are grouped in the view.</summary>
      <returns>A collection of <see cref="T:System.ComponentModel.GroupDescription" /> objects that describe how the items in the collection are grouped in the view.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.Groups">
      <summary>Gets the top-level groups.</summary>
      <returns>A read-only collection of the top-level groups, or <see langword="null" /> if there are no groups.</returns>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.IndexOf(System.Object)">
      <summary>Returns the index at which the given item belongs in the collection view.</summary>
      <param name="item">The object to look for in the collection.</param>
      <returns>The index of the item in the collection, or <c>-1</c> if the item does not exist in the collection view.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.IsAddingNew">
      <summary>Gets a value that indicates whether an add transaction is in progress.</summary>
      <returns>
        <see langword="true" /> if an add transaction is in progress; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.IsDataInGroupOrder">
      <summary>Gets or sets a value that indicates whether the list of items (after applying the sort and filters, if any) is already in the correct order for grouping.</summary>
      <returns>
        <see langword="true" /> if the list of items is already in the correct order for grouping; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.IsEditingItem">
      <summary>Gets a value that indicates whether an edit transaction is in progress.</summary>
      <returns>
        <see langword="true" /> if an edit transaction is in progress; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.IsEmpty">
      <summary>Returns a value that indicates whether the resulting (filtered) view is empty.</summary>
      <returns>
        <see langword="true" /> if the resulting view is empty; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.IsLiveFiltering">
      <summary>Gets or sets a value that indicates whether filtering data in real time is enabled.</summary>
      <returns>
        <see langword="true" /> if filtering data in real time is enabled; <see langword="false" /> if live filtering is not enabled; <see langword="null" /> if it cannot be determined whether the collection view implements live filtering.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Data.BindingListCollectionView.IsLiveFiltering" /> cannot be set.</exception>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.IsLiveGrouping">
      <summary>Gets or sets a value that indicates whether grouping data in real time is enabled.</summary>
      <returns>
        <see langword="true" /> if grouping data in real time is enabled; <see langword="false" /> if live grouping is not enabled; <see langword="null" /> if it cannot be determined whether the collection view implements live grouping.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Windows.Data.BindingListCollectionView.IsLiveGrouping" /> cannot be set to <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.IsLiveSorting">
      <summary>Gets or sets a value that indicates whether sorting data in real time is enabled.</summary>
      <returns>
        <see langword="true" /> if sorting data in real time is enabled; <see langword="false" /> if live sorting is not enabled; <see langword="null" /> if it cannot be determined whether the collection view implements live sorting.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Data.BindingListCollectionView.IsLiveSorting" /> cannot be set.</exception>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.ItemProperties">
      <summary>Gets a collection of objects that describes the properties of the items in the collection.</summary>
      <returns>A collection of objects that describes the properties of the items in the collection.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.LiveFilteringProperties">
      <summary>Gets a collection of strings that specify the properties that participate in filtering data in real time.</summary>
      <returns>A collection of strings that specify the properties that participate in filtering data in real time.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.LiveGroupingProperties">
      <summary>Gets a collection of strings that specify the properties that participate in grouping data in real time.</summary>
      <returns>A collection of strings that specify the properties that participate in grouping data in real time.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.LiveSortingProperties">
      <summary>Gets a collection of strings that specify the properties that participate in sorting data in real time.</summary>
      <returns>A collection of strings that specify the properties that participate in sorting data in real time.</returns>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.MoveCurrentToPosition(System.Int32)">
      <summary>Sets the item at the specified index to be the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> in the view.</summary>
      <param name="position">The index to set the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> to.</param>
      <returns>
        <see langword="true" /> if the resulting <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> is an item within the view; otherwise, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the index is out of range.</exception>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.NewItemPlaceholderPosition">
      <summary>Gets or sets the position of the new item placeholder in the <see cref="T:System.Windows.Data.BindingListCollectionView" />.</summary>
      <returns>One of the enumeration values that specifies the position of the new item placeholder in the <see cref="T:System.Windows.Data.BindingListCollectionView" />.</returns>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.PassesFilter(System.Object)">
      <summary>Returns a value that indicates whether the specified item in the underlying collection belongs to the view.</summary>
      <param name="item">The item to check.</param>
      <returns>
        <see langword="true" /> if the specified item belongs to the view or if there is not filter set on the collection view; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.Remove(System.Object)">
      <summary>Removes the specified item from the collection.</summary>
      <param name="item">The item to remove.</param>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.RemoveAt(System.Int32)">
      <summary>Removes the item at the specified position from the collection.</summary>
      <param name="index">The zero-based index of the item to remove.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than 0 or greater than the number of items in the collection view.</exception>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.SortDescriptions">
      <summary>Gets a collection of <see cref="T:System.ComponentModel.SortDescription" /> objects that describes how the items in the collection are sorted in the view.</summary>
      <returns>A collection of <see cref="T:System.ComponentModel.SortDescription" /> objects that describe how the items in the collection are sorted in the view.</returns>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.System#Collections#IComparer#Compare(System.Object,System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="o1">First object to compare.</param>
      <param name="o2">Second object to compare.</param>
      <returns>Less than zero means <paramref name="o1" /> is less than <paramref name="o2" />, a value of zero means they are equal, and over zero means <paramref name="o1" /> is greater than <paramref name="o2" />.</returns>
    </member>
    <member name="T:System.Windows.Data.BindingMode">
      <summary>Describes the direction of the data flow in a binding.</summary>
    </member>
    <member name="F:System.Windows.Data.BindingMode.Default">
      <summary>Uses the default <see cref="P:System.Windows.Data.Binding.Mode" /> value of the binding target. The default value varies for each dependency property. In general, user-editable control properties, such as those of text boxes and check boxes, default to two-way bindings, whereas most other properties default to one-way bindings. A programmatic way to determine whether a dependency property binds one-way or two-way by default is to get the property metadata of the property using <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> and then check the Boolean value of the <see cref="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault" /> property.</summary>
    </member>
    <member name="F:System.Windows.Data.BindingMode.OneTime">
      <summary>Updates the binding target when the application starts or when the data context changes. This type of binding is appropriate if you are using data where either a snapshot of the current state is appropriate to use or the data is truly static. This type of binding is also useful if you want to initialize your target property with some value from a source property and the data context is not known in advance. This is essentially a simpler form of <see cref="F:System.Windows.Data.BindingMode.OneWay" /> binding that provides better performance in cases where the source value does not change.</summary>
    </member>
    <member name="F:System.Windows.Data.BindingMode.OneWay">
      <summary>Updates the binding target (target) property when the binding source (source) changes. This type of binding is appropriate if the control being bound is implicitly read-only. For instance, you may bind to a source such as a stock ticker. Or perhaps your target property has no control interface provided for making changes, such as a data-bound background color of a table. If there is no need to monitor the changes of the target property, using the <see cref="F:System.Windows.Data.BindingMode.OneWay" /> binding mode avoids the overhead of the <see cref="F:System.Windows.Data.BindingMode.TwoWay" /> binding mode.</summary>
    </member>
    <member name="F:System.Windows.Data.BindingMode.OneWayToSource">
      <summary>Updates the source property when the target property changes.</summary>
    </member>
    <member name="F:System.Windows.Data.BindingMode.TwoWay">
      <summary>Causes changes to either the source property or the target property to automatically update the other. This type of binding is appropriate for editable forms or other fully-interactive UI scenarios.</summary>
    </member>
    <member name="T:System.Windows.Data.BindingOperations">
      <summary>Provides static methods to manipulate bindings, including <see cref="T:System.Windows.Data.Binding" />, <see cref="T:System.Windows.Data.MultiBinding" />, and <see cref="T:System.Windows.Data.PriorityBinding" /> objects.</summary>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.AccessCollection(System.Collections.IEnumerable,System.Action,System.Boolean)">
      <summary>Provides access to a collection by using the synchronization mechanism that the application specified when it called EnableCollectionSynchronization.</summary>
      <param name="collection">The collection to access.</param>
      <param name="accessMethod">The action to perform on the collection.</param>
      <param name="writeAccess">
        <see langword="true" /> if <paramref name="accessMethod" /> will write to the collection; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.ClearAllBindings(System.Windows.DependencyObject)">
      <summary>Removes all bindings, including bindings of type <see cref="T:System.Windows.Data.Binding" />, <see cref="T:System.Windows.Data.MultiBinding" />, and <see cref="T:System.Windows.Data.PriorityBinding" />, from the specified <see cref="T:System.Windows.DependencyObject" />.</summary>
      <param name="target">The object from which to remove bindings.</param>
      <exception cref="T:System.ArgumentNullException">If <paramref name="target" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.ClearBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>Removes the binding from a property if there is one.</summary>
      <param name="target">The object from which to remove the binding.</param>
      <param name="dp">The dependency property from which to remove the binding.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be <see langword="null" />.</exception>
    </member>
    <member name="E:System.Windows.Data.BindingOperations.CollectionRegistering">
      <summary>Occurs when the data-binding system notices a collection.</summary>
    </member>
    <member name="E:System.Windows.Data.BindingOperations.CollectionViewRegistering">
      <summary>Occurs when the data-binding system notices a collection view.</summary>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.DisableCollectionSynchronization(System.Collections.IEnumerable)">
      <summary>Remove the synchronization registered for the specified collection.</summary>
      <param name="collection">The collection to remove synchronized access from.</param>
    </member>
    <member name="P:System.Windows.Data.BindingOperations.DisconnectedSource">
      <summary>Gets an object that replaces the <see cref="P:System.Windows.FrameworkElement.DataContext" /> when an item container is removed from the visual tree.</summary>
      <returns>An object that replaces the <see cref="P:System.Windows.FrameworkElement.DataContext" /> when an item container is removed from the visual tree.</returns>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
      <summary>Enables a <see cref="T:System.Windows.Data.CollectionView" /> object to participate in synchronized access to a collection used on multiple threads by using a simple locking mechanism.</summary>
      <param name="collection">The collection that needs synchronized access.</param>
      <param name="lockObject">The object to lock when accessing the collection.</param>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
      <summary>Enables a <see cref="T:System.Windows.Data.CollectionView" /> object to participate in synchronized access to a collection used on multiple threads by using a mechanism other than a simple lock.</summary>
      <param name="collection">The collection that needs synchronized access.</param>
      <param name="context">An object that is passed to the callback.</param>
      <param name="synchronizationCallback">The callback that is invoked whenever access to the collection is required. You can use it to ensure that the collection is accessed by one thread at a time.</param>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>Retrieves the <see cref="T:System.Windows.Data.Binding" /> object that is set on the specified property.</summary>
      <param name="target">The object where <paramref name="dp" /> is.</param>
      <param name="dp">The binding target property from which to retrieve the binding.</param>
      <returns>The <see cref="T:System.Windows.Data.Binding" /> object set on the given property or <see langword="null" /> if no <see cref="T:System.Windows.Data.Binding" /> object has been set.</returns>
      <exception cref="T:System.ArgumentNullException">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be null.</exception>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>Retrieves the <see cref="T:System.Windows.Data.BindingBase" /> object that is set on the specified property.</summary>
      <param name="target">The object where <paramref name="dp" /> is.</param>
      <param name="dp">The binding target property from which to retrieve the <see cref="T:System.Windows.Data.BindingBase" /> object.</param>
      <returns>The <see cref="T:System.Windows.Data.BindingBase" /> object that is set on the given property or <see langword="null" /> if no binding object has been set.</returns>
      <exception cref="T:System.ArgumentNullException">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>Returns the <see cref="T:System.Windows.Data.BindingExpression" /> object associated with the specified binding target property on the specified object.</summary>
      <param name="target">The binding target object where <paramref name="dp" /> is.</param>
      <param name="dp">The binding target property from which to retrieve the <see cref="T:System.Windows.Data.BindingExpression" /> object.</param>
      <returns>The <see cref="T:System.Windows.Data.BindingExpression" /> object associated with the given property or <see langword="null" /> if none exists. If a <see cref="T:System.Windows.Data.PriorityBindingExpression" /> object is set on the property, the <see cref="P:System.Windows.Data.PriorityBindingExpression.ActiveBindingExpression" /> is returned.</returns>
      <exception cref="T:System.ArgumentNullException">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>Retrieves the <see cref="T:System.Windows.Data.BindingExpressionBase" /> object that is set on the specified property.</summary>
      <param name="target">The object where <paramref name="dp" /> is.</param>
      <param name="dp">The binding target property from which to retrieve the <see cref="T:System.Windows.Data.BindingExpressionBase" /> object.</param>
      <returns>The <see cref="T:System.Windows.Data.BindingExpressionBase" /> object that is set on the given property or <see langword="null" /> if no binding object has been set.</returns>
      <exception cref="T:System.ArgumentNullException">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be null.</exception>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>Retrieves the <see cref="T:System.Windows.Data.MultiBinding" /> object that is set on the specified property.</summary>
      <param name="target">The object where <paramref name="dp" /> is.</param>
      <param name="dp">The binding target property from which to retrieve the binding.</param>
      <returns>The <see cref="T:System.Windows.Data.MultiBinding" /> object set on the given property or <see langword="null" /> if no <see cref="T:System.Windows.Data.MultiBinding" /> object has been set.</returns>
      <exception cref="T:System.ArgumentNullException">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be null.</exception>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>Returns the <see cref="T:System.Windows.Data.MultiBindingExpression" /> object associated with the specified binding target property on the specified object.</summary>
      <param name="target">The binding target object where <paramref name="dp" /> is.</param>
      <param name="dp">The binding target property from which to retrieve the <see cref="T:System.Windows.Data.MultiBindingExpression" /> object.</param>
      <returns>The <see cref="T:System.Windows.Data.MultiBindingExpression" /> object associated with the given property or <see langword="null" /> if none exists.</returns>
      <exception cref="T:System.ArgumentNullException">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>Retrieves the <see cref="T:System.Windows.Data.PriorityBinding" /> object that is set on the specified property.</summary>
      <param name="target">The object where <paramref name="dp" /> is.</param>
      <param name="dp">The binding target property from which to retrieve the binding.</param>
      <returns>The <see cref="T:System.Windows.Data.PriorityBinding" /> object set on the given property or <see langword="null" /> if no <see cref="T:System.Windows.Data.PriorityBinding" /> object has been set.</returns>
      <exception cref="T:System.ArgumentNullException">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be null.</exception>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.GetPriorityBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>Returns the <see cref="T:System.Windows.Data.PriorityBindingExpression" /> object associated with the specified binding target property on the specified object.</summary>
      <param name="target">The binding target object where <paramref name="dp" /> is.</param>
      <param name="dp">The binding target property from which to retrieve the <see cref="T:System.Windows.Data.PriorityBindingExpression" /> object.</param>
      <returns>The <see cref="T:System.Windows.Data.PriorityBindingExpression" /> object associated with the given property or <see langword="null" /> if none exists.</returns>
      <exception cref="T:System.ArgumentNullException">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups(System.Windows.DependencyObject)">
      <summary>Gets all <see cref="T:System.Windows.Data.BindingGroup" /> objects that have invalid values or target values have not been updated the source.</summary>
      <param name="root">The root <see cref="T:System.Windows.UIElement" /> to get binding groups for.  This method returns <see cref="T:System.Windows.Data.BindingGroup" /> objects that are associated with this element or its descendant elements.</param>
      <returns>A collection of <see cref="T:System.Windows.Data.BindingGroup" /> objects that are associated with the specified element and have invalid values or target values have not been updated the source.</returns>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings(System.Windows.DependencyObject)">
      <summary>Gets all <see cref="T:System.Windows.Data.BindingExpressionBase" /> objects that have invalid values or target values have not been updated the source.</summary>
      <param name="root">The root <see cref="T:System.Windows.UIElement" /> to get binding groups for.  This method returns <see cref="T:System.Windows.Data.BindingExpressionBase" /> objects that are associated with this element or its descendant elements.</param>
      <returns>A collection of <see cref="T:System.Windows.Data.BindingExpressionBase" /> objects that are associated with the specified element and have invalid values or target values have not been updated the source.</returns>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.IsDataBound(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>Returns a value that indicates whether the specified property is currently data-bound.</summary>
      <param name="target">The object where <paramref name="dp" /> is.</param>
      <param name="dp">The dependency property to check.</param>
      <returns>
        <see langword="true" /> if the specified property is data-bound; otherwise, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">If <paramref name="target" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
      <summary>Creates and associates a new instance of <see cref="T:System.Windows.Data.BindingExpressionBase" /> with the specified binding target property.</summary>
      <param name="target">The binding target of the binding.</param>
      <param name="dp">The target property of the binding.</param>
      <param name="binding">The <see cref="T:System.Windows.Data.BindingBase" /> object that describes the binding.</param>
      <returns>The instance of <see cref="T:System.Windows.Data.BindingExpressionBase" /> created for and associated with the specified property. The <see cref="T:System.Windows.Data.BindingExpressionBase" /> class is the base class of <see cref="T:System.Windows.Data.BindingExpression" />, <see cref="T:System.Windows.Data.MultiBindingExpression" />, and <see cref="T:System.Windows.Data.PriorityBindingExpression" />.</returns>
      <exception cref="T:System.ArgumentNullException">The <paramref name="binding" /> parameter cannot be <see langword="null" />.</exception>
    </member>
    <member name="T:System.Windows.Data.BindingStatus">
      <summary>Describes the status of a binding.</summary>
    </member>
    <member name="F:System.Windows.Data.BindingStatus.Active">
      <summary>The binding has been successfully activated. This means that the binding has been attached to its binding target (target) property and has located the binding source (source), resolved the <see langword="Path" /> and/or <see langword="XPath" />, and begun transferring values.</summary>
    </member>
    <member name="F:System.Windows.Data.BindingStatus.AsyncRequestPending">
      <summary>The binding is waiting for an asynchronous operation to complete.</summary>
    </member>
    <member name="F:System.Windows.Data.BindingStatus.Detached">
      <summary>The binding has been detached from its target property.</summary>
    </member>
    <member name="F:System.Windows.Data.BindingStatus.Inactive">
      <summary>The binding has not been activated.</summary>
    </member>
    <member name="F:System.Windows.Data.BindingStatus.PathError">
      <summary>The binding was unable to resolve the source path.</summary>
    </member>
    <member name="F:System.Windows.Data.BindingStatus.Unattached">
      <summary>The binding has not yet been attached to its target property.</summary>
    </member>
    <member name="F:System.Windows.Data.BindingStatus.UpdateSourceError">
      <summary>The binding was unable to send the value to the source property.</summary>
    </member>
    <member name="F:System.Windows.Data.BindingStatus.UpdateTargetError">
      <summary>The binding could not successfully return a source value to update the target value. For more information, see <see cref="P:System.Windows.Data.BindingBase.FallbackValue" />.</summary>
    </member>
    <member name="T:System.Windows.Data.CollectionContainer">
      <summary>Holds an existing collection structure, such as an <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> or a <see cref="T:System.Data.DataSet" />, to be used inside a <see cref="T:System.Windows.Data.CompositeCollection" />.</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionContainer.#ctor">
      <summary>Initializes a new instance of a <see cref="T:System.Windows.Data.CollectionContainer" /> class.</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionContainer.Collection">
      <summary>Gets or sets the collection to add.</summary>
      <returns>The collection to add. The default is an empty collection.</returns>
    </member>
    <member name="E:System.Windows.Data.CollectionContainer.CollectionChanged">
      <summary>Occurs when the contained collection changes.</summary>
    </member>
    <member name="F:System.Windows.Data.CollectionContainer.CollectionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Data.CollectionContainer.Collection" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionContainer.OnContainedCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Data.CollectionContainer.CollectionChanged" /> event.</summary>
      <param name="args">The event data.</param>
    </member>
    <member name="M:System.Windows.Data.CollectionContainer.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>Handles events from the centralized event table.</summary>
      <param name="managerType">The type of the <see cref="T:System.Windows.WeakEventManager" /> calling this method. This only recognizes manager objects of type <see cref="T:System.Collections.Specialized.CollectionChangedEventManager" />.</param>
      <param name="sender">The object that originated the event.</param>
      <param name="e">The event data.</param>
      <returns>
        <see langword="true" /> if the listener handled the event; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionContainer.ShouldSerializeCollection">
      <summary>Indicates whether the <see cref="P:System.Windows.Data.CollectionContainer.Collection" /> property should be persisted.</summary>
      <returns>
        <see langword="true" /> if the property value has changed from its default; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="E:System.Windows.Data.CollectionContainer.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
      <summary>Occurs when the contained collection has changed.</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionContainer.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="managerType">The type of the <see cref="T:System.Windows.WeakEventManager" /> calling this method. This only recognizes manager objects of type <see cref="T:System.Collections.Specialized.CollectionChangedEventManager" />.</param>
      <param name="sender">Object that originated the event.</param>
      <param name="e">Event data.</param>
      <returns>
        <see langword="true" /> if the listener handled the event; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Data.CollectionRegisteringEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Data.BindingOperations.CollectionRegistering" /> event.</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionRegisteringEventArgs.Collection">
      <summary>Gets the collection to be registered for cross-thread access.</summary>
      <returns>The collection to be registered for cross-thread access.</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionRegisteringEventArgs.Parent">
      <summary>Gets the parent of the collection to register.</summary>
      <returns>The parent of the collection to register.</returns>
    </member>
    <member name="T:System.Windows.Data.CollectionSynchronizationCallback">
      <summary>Represent the method that synchronizes a collection for cross-thread access.</summary>
      <param name="collection">The collection to access on a thread other than the one that created it.</param>
      <param name="context">An object used to synchronize the collection.</param>
      <param name="accessMethod">A delegate to the method that performs the operation on the collection.</param>
      <param name="writeAccess">
        <see langword="true" /> if <paramref name="accessMethod" /> writes to the collection; otherwise, <see langword="false" />.</param>
    </member>
    <member name="T:System.Windows.Data.CollectionView">
      <summary>Represents a view for grouping, sorting, filtering, and navigating a data collection.</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionView.#ctor(System.Collections.IEnumerable)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.CollectionView" /> class that represents a view of the specified collection.</summary>
      <param name="collection">The underlying collection.</param>
    </member>
    <member name="P:System.Windows.Data.CollectionView.AllowsCrossThreadChanges">
      <summary>Gets a value that indicates whether a thread other than the one that created the <see cref="T:System.Windows.Data.CollectionView" /> can change the <see cref="P:System.Windows.Data.CollectionView.SourceCollection" />.</summary>
      <returns>
        <see langword="true" /> if a thread other than the one that created the <see cref="T:System.Windows.Data.CollectionView" /> can change the <see cref="P:System.Windows.Data.CollectionView.SourceCollection" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.CanFilter">
      <summary>Gets a value that indicates whether the view supports filtering.</summary>
      <returns>
        <see langword="true" /> if the view supports filtering; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.CanGroup">
      <summary>Gets a value that indicates whether the view supports grouping.</summary>
      <returns>
        <see langword="false" /> in all cases.</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.CanSort">
      <summary>Gets a value that indicates whether the view supports sorting.</summary>
      <returns>
        <see langword="false" /> in all cases.</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.ClearChangeLog">
      <summary>Clears any pending changes from the change log.</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionView.ClearPendingChanges">
      <summary>Clears unprocessed changed to the collection.</summary>
    </member>
    <member name="E:System.Windows.Data.CollectionView.CollectionChanged">
      <summary>Occurs when the view has changed.</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionView.Comparer">
      <summary>Returns an object that you can use to compare items in the view.</summary>
      <returns>An <see cref="T:System.Collections.IComparer" /> object that you can use to compare items in the view.</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.Contains(System.Object)">
      <summary>Returns a value that indicates whether the specified item belongs to the view.</summary>
      <param name="item">The object to check.</param>
      <returns>
        <see langword="true" /> if the item belongs to the view; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.Count">
      <summary>Gets the number of records in the view.</summary>
      <returns>The number of records in the view, or -1 if the number of records is unknown.</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.Culture">
      <summary>Gets or sets the culture information to use during sorting.</summary>
      <returns>The culture information to use during sorting.</returns>
    </member>
    <member name="E:System.Windows.Data.CollectionView.CurrentChanged">
      <summary>Occurs after the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> has changed.</summary>
    </member>
    <member name="E:System.Windows.Data.CollectionView.CurrentChanging">
      <summary>Occurs when the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> is changing.</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionView.CurrentItem">
      <summary>Gets the current item in the view.</summary>
      <returns>The current item of the view. By default, the first item of the collection starts as the current item.</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.CurrentPosition">
      <summary>Gets the ordinal position of the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> within the (optionally sorted and filtered) view.</summary>
      <returns>The ordinal position of the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> within the (optionally sorted and filtered) view.</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.DeferRefresh">
      <summary>Enters a defer cycle that you can use to merge changes to the view and delay automatic refresh.</summary>
      <returns>An <see cref="T:System.IDisposable" /> object that you can use to dispose of the calling object.</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.DetachFromSourceCollection">
      <summary>Removes the reference to the underlying collection from the <see cref="T:System.Windows.Data.CollectionView" />.</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionView.Filter">
      <summary>Gets or sets a method used to determine if an item is suitable for inclusion in the view.</summary>
      <returns>A delegate that represents the method used to determine if an item is suitable for inclusion in the view.</returns>
      <exception cref="T:System.NotSupportedException">The current implementation does not support filtering.</exception>
    </member>
    <member name="M:System.Windows.Data.CollectionView.GetEnumerator">
      <summary>Returns an object that you can use to enumerate the items in the view.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that you can use to enumerate the items in the view.</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.GetItemAt(System.Int32)">
      <summary>Retrieves the item at the specified zero-based index in the view.</summary>
      <param name="index">The zero-based index of the item to retrieve.</param>
      <returns>The item at the specified zero-based index in the view.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than 0.</exception>
    </member>
    <member name="P:System.Windows.Data.CollectionView.GroupDescriptions">
      <summary>Gets a collection of <see cref="T:System.ComponentModel.GroupDescription" /> objects that describes how the items in the collection are grouped in the view.</summary>
      <returns>
        <see langword="null" /> in all cases.</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.Groups">
      <summary>Gets a collection of the top-level groups that is constructed based on the <see cref="P:System.Windows.Data.CollectionView.GroupDescriptions" /> property.</summary>
      <returns>
        <see langword="null" /> in all cases.</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.IndexOf(System.Object)">
      <summary>Returns the index at which the specified item is located.</summary>
      <param name="item">The item to locate.</param>
      <returns>The index at which the specified item is located, or -1 if the item is unknown.</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.IsCurrentAfterLast">
      <summary>Gets a value that indicates whether the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> of the view is beyond the end of the collection.</summary>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> of the view is beyond the end of the collection; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.IsCurrentBeforeFirst">
      <summary>Gets a value that indicates whether the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> of the view is before the beginning of the collection.</summary>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> of the view is before the beginning of the collection; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.IsCurrentInSync">
      <summary>Gets a value that indicates whether the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> is at the <see cref="P:System.Windows.Data.CollectionView.CurrentPosition" />.</summary>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> is in the view and at the <see cref="P:System.Windows.Data.CollectionView.CurrentPosition" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.IsDynamic">
      <summary>Gets a value that indicates whether the underlying collection provides change notifications.</summary>
      <returns>
        <see langword="true" /> if the underlying collection provides change notifications; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.IsEmpty">
      <summary>Gets a value that indicates whether the resulting (filtered) view is empty.</summary>
      <returns>
        <see langword="true" /> if the resulting view is empty; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.IsInUse">
      <summary>Gets a value that indicates whether any object is subscribing to the events of this <see cref="T:System.Windows.Data.CollectionView" />.</summary>
      <returns>
        <see langword="true" /> if any object is subscribing to the events of this <see cref="T:System.Windows.Data.CollectionView" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.IsRefreshDeferred">
      <summary>Gets a value that indicates whether there is an outstanding <see cref="M:System.Windows.Data.CollectionView.DeferRefresh" /> in use.</summary>
      <returns>
        <see langword="true" /> if there is an outstanding <see cref="M:System.Windows.Data.CollectionView.DeferRefresh" /> in use; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.MoveCurrentTo(System.Object)">
      <summary>Sets the specified item to be the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> in the view.</summary>
      <param name="item">The item to set as the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" />.</param>
      <returns>
        <see langword="true" /> if the resulting <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> is within the view; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.MoveCurrentToFirst">
      <summary>Sets the first item in the view as the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" />.</summary>
      <returns>
        <see langword="true" /> if the resulting <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> is an item within the view; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.MoveCurrentToLast">
      <summary>Sets the last item in the view as the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" />.</summary>
      <returns>
        <see langword="true" /> if the resulting <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> is an item within the view; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.MoveCurrentToNext">
      <summary>Sets the item after the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> in the view as the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" />.</summary>
      <returns>
        <see langword="true" /> if the resulting <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> is an item within the view; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.MoveCurrentToPosition(System.Int32)">
      <summary>Sets the item at the specified index to be the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> in the view.</summary>
      <param name="position">The index to set the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> to.</param>
      <returns>
        <see langword="true" /> if the resulting <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> is an item within the view; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.MoveCurrentToPrevious">
      <summary>Sets the item before the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> in the view as the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" />.</summary>
      <returns>
        <see langword="true" /> if the resulting <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> is an item within the view; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.NeedsRefresh">
      <summary>Gets a value that indicates whether the view needs to be refreshed.</summary>
      <returns>
        <see langword="true" /> if the view needs to be refreshed; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.NewItemPlaceholder">
      <summary>Gets the object that is in the collection to represent a new item.</summary>
      <returns>The object that is in the collection to represent a new item.</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.OKToChangeCurrent">
      <summary>Returns a value that indicates whether the view can change which item is the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" />.</summary>
      <returns>
        <see langword="false" /> if a listener cancels the change; otherwise, <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.OnAllowsCrossThreadChangesChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Data.CollectionView.AllowsCrossThreadChanges" /> property changes.</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionView.OnBeginChangeLogging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>Called by the base class to notify the derived class that an <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> event has been posted to the message queue.</summary>
      <param name="args">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> object that is added to the change log.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="args" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Data.CollectionView.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Data.CollectionView.CollectionChanged" /> event.</summary>
      <param name="args">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> object to pass to the event handler.</param>
    </member>
    <member name="M:System.Windows.Data.CollectionView.OnCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Data.CollectionView.CollectionChanged" /> event.</summary>
      <param name="sender">The sender of the event.</param>
      <param name="args">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> object to pass to the event handler.</param>
    </member>
    <member name="M:System.Windows.Data.CollectionView.OnCurrentChanged">
      <summary>Raises the <see cref="E:System.Windows.Data.CollectionView.CurrentChanged" /> event.</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionView.OnCurrentChanging">
      <summary>Raises a <see cref="E:System.Windows.Data.CollectionView.CurrentChanging" /> event that is not cancelable.</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionView.OnCurrentChanging(System.ComponentModel.CurrentChangingEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Data.CollectionView.CurrentChanging" /> event with the specified arguments.</summary>
      <param name="args">Information about the event.</param>
    </member>
    <member name="M:System.Windows.Data.CollectionView.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Raises the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event using the specified arguments.</summary>
      <param name="e">Arguments of the event being raised.</param>
    </member>
    <member name="M:System.Windows.Data.CollectionView.PassesFilter(System.Object)">
      <summary>Returns a value that indicates whether the specified item in the underlying collection belongs to the view.</summary>
      <param name="item">The item to check.</param>
      <returns>
        <see langword="true" /> if the specified item belongs to the view or if there is not filter set on the collection view; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.ProcessCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>When overridden in a derived class, processes a single change on the UI thread.</summary>
      <param name="args">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> object to process.</param>
    </member>
    <member name="M:System.Windows.Data.CollectionView.ProcessPendingChanges">
      <summary>Ensures that all pending changes to the collection have been committed.</summary>
    </member>
    <member name="E:System.Windows.Data.CollectionView.PropertyChanged">
      <summary>Occurs when a property value has changed.</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionView.Refresh">
      <summary>Re-creates the view.</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionView.RefreshOrDefer">
      <summary>Refreshes the view or specifies that the view needs to be refreshed when the defer cycle completes.</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionView.RefreshOverride">
      <summary>Re-creates the view.</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionView.SetCurrent(System.Object,System.Int32)">
      <summary>Sets the specified item and index as the values of the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> and <see cref="P:System.Windows.Data.CollectionView.CurrentPosition" /> properties.</summary>
      <param name="newItem">The item to set as the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" />.</param>
      <param name="newPosition">The value to set as the <see cref="P:System.Windows.Data.CollectionView.CurrentPosition" /> property value.</param>
    </member>
    <member name="M:System.Windows.Data.CollectionView.SetCurrent(System.Object,System.Int32,System.Int32)">
      <summary>Sets the specified item and index as the values of the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> and <see cref="P:System.Windows.Data.CollectionView.CurrentPosition" /> properties. This method can be called from a constructor of a derived class.</summary>
      <param name="newItem">The item to set as the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" />.</param>
      <param name="newPosition">The value to set as the <see cref="P:System.Windows.Data.CollectionView.CurrentPosition" /> property value.</param>
      <param name="count">The number of items in the <see cref="T:System.Windows.Data.CollectionView" />.</param>
    </member>
    <member name="P:System.Windows.Data.CollectionView.SortDescriptions">
      <summary>Gets a collection of <see cref="T:System.ComponentModel.SortDescription" /> structures that describes how the items in the collection are sorted in the view.</summary>
      <returns>An empty <see cref="T:System.ComponentModel.SortDescriptionCollection" /> in all cases.</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.SourceCollection">
      <summary>Returns the underlying unfiltered collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> object that is the underlying collection.</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an <see cref="T:System.Collections.IEnumerator" /> object that you can use to enumerate the items in the view.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that you can use to enumerate the items in the view.</returns>
    </member>
    <member name="E:System.Windows.Data.CollectionView.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
      <summary>Occurs when the view has changed.</summary>
    </member>
    <member name="E:System.Windows.Data.CollectionView.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionView.UpdatedOutsideDispatcher">
      <summary>Gets a value that indicates whether it has been necessary to update the change log because a <see cref="E:System.Windows.Data.CollectionView.CollectionChanged" /> notification has been received on a different thread without first entering the user interface (UI) thread dispatcher.</summary>
      <returns>
        <see langword="true" /> if it has been necessary to update the change log because a <see cref="E:System.Windows.Data.CollectionView.CollectionChanged" /> notification has been received on a different thread without first entering the user interface (UI) thread dispatcher; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Data.CollectionViewGroup">
      <summary>Represents a group created by a <see cref="T:System.Windows.Data.CollectionView" /> object based on the <see cref="P:System.Windows.Data.CollectionView.GroupDescriptions" />.</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionViewGroup.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.CollectionViewGroup" /> class with the name of the group.</summary>
      <param name="name">The name of this group.</param>
    </member>
    <member name="P:System.Windows.Data.CollectionViewGroup.IsBottomLevel">
      <summary>Gets a value that indicates whether this group has any subgroups.</summary>
      <returns>
        <see langword="true" /> if this group is at the bottom level and does not have any subgroups; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewGroup.ItemCount">
      <summary>Gets the number of items in the subtree under this group.</summary>
      <returns>The number of items (leaves) in the subtree under this group.</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewGroup.Items">
      <summary>Gets the immediate items contained in this group.</summary>
      <returns>A read-only collection of the immediate items in this group. This is either a collection of subgroups or a collection of items if this group does not have any subgroups.</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewGroup.Name">
      <summary>Gets the name of this group.</summary>
      <returns>The name of this group which is the common value of the property used to divide items into groups.</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionViewGroup.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Data.CollectionViewGroup.PropertyChanged" /> event using the provided arguments.</summary>
      <param name="e">Arguments of the event being raised.</param>
    </member>
    <member name="E:System.Windows.Data.CollectionViewGroup.PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionViewGroup.ProtectedItemCount">
      <summary>Gets or sets the number of items in the subtree under this group.</summary>
      <returns>The number of items (leaves) in the subtree under this group</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewGroup.ProtectedItems">
      <summary>Gets the immediate items contained in this group.</summary>
      <returns>A collection of immediate items in this group. This is either a collection of subgroups or a collection of items if this group does not have any subgroups.</returns>
    </member>
    <member name="E:System.Windows.Data.CollectionViewGroup.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="T:System.Windows.Data.CollectionViewRegisteringEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Data.BindingOperations.CollectionViewRegistering" /> event.</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionViewRegisteringEventArgs.CollectionView">
      <summary>Gets the collection view to be registered for cross-thread access.</summary>
      <returns>The collection view to be registered for cross-thread access.</returns>
    </member>
    <member name="T:System.Windows.Data.CollectionViewSource">
      <summary>The Extensible Application Markup Language (XAML) proxy of a <see cref="T:System.Windows.Data.CollectionView" /> class.</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.CollectionViewSource" /> class.</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.CanChangeLiveFiltering">
      <summary>Gets a value that indicates whether the collection view supports turning filtering data in real time on or off.</summary>
      <returns>
        <see langword="true" /> if the collection view supports turning live filtering on or off; otherwise, <see langword="false" />. The registered default is <see langword="false" />. For more information about what can influence the value, see Dependency Property Value Precedence.</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.CanChangeLiveFilteringProperty">
      <summary>Identifies the <see cref="P:System.Windows.Data.CollectionViewSource.CanChangeLiveFiltering" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.CanChangeLiveGrouping">
      <summary>Gets a value that indicates whether the collection view supports turning grouping data in real time on or off.</summary>
      <returns>
        <see langword="true" /> if the collection view supports turning live grouping on or off; otherwise, <see langword="false" />.The registered default is <see langword="false" />. For more information about what can influence the value, see Dependency Property Value Precedence.</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.CanChangeLiveGroupingProperty">
      <summary>Identifies the <see cref="P:System.Windows.Data.CollectionViewSource.CanChangeLiveGrouping" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.CanChangeLiveSorting">
      <summary>Gets a value that indicates whether the collection view supports turning sorting data in real time on or off.</summary>
      <returns>
        <see langword="true" /> if the collection view supports turning live sorting on or off; otherwise, <see langword="false" />. The registered default is <see langword="false" />. For more information about what can influence the value, see Dependency Property Value Precedence.</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.CanChangeLiveSortingProperty">
      <summary>Identifies the <see cref="P:System.Windows.Data.CollectionViewSource.CanChangeLiveSorting" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.CollectionViewType">
      <summary>Gets or sets the desired view type.</summary>
      <returns>The desired view type.</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.CollectionViewTypeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Data.CollectionViewSource.CollectionViewType" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.Culture">
      <summary>Gets or sets the culture that is used for operations such as sorting and comparisons.</summary>
      <returns>The culture that is used for operations such as sorting and comparisons.</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.DeferRefresh">
      <summary>Enters a defer cycle that you can use to merge changes to the view and delay automatic refresh.</summary>
      <returns>An <see cref="T:System.IDisposable" /> object that you can use to dispose of the calling object.</returns>
    </member>
    <member name="E:System.Windows.Data.CollectionViewSource.Filter">
      <summary>Provides filtering logic.</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.GetDefaultView(System.Object)">
      <summary>Returns the default view for the given source.</summary>
      <param name="source">An object reference to the binding source.</param>
      <returns>Returns an <see cref="T:System.ComponentModel.ICollectionView" /> object that is the default view for the given source collection.</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.GroupDescriptions">
      <summary>Gets or sets a collection of <see cref="T:System.ComponentModel.GroupDescription" /> objects that describes how the items in the collection are grouped in the view.</summary>
      <returns>An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> of <see cref="T:System.ComponentModel.GroupDescription" /> objects that describes how the items in the collection are grouped in the view.</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.IsDefaultView(System.ComponentModel.ICollectionView)">
      <summary>Returns a value that indicates whether the given view is the default view for the <see cref="P:System.Windows.Data.CollectionViewSource.Source" /> collection.</summary>
      <param name="view">The view object to check.</param>
      <returns>
        <see langword="true" /> if the given view is the default view for the <see cref="P:System.Windows.Data.CollectionViewSource.Source" /> collection or if the given view is <see langword="null" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.IsLiveFiltering">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Data.CollectionViewSource" /> is filtering data in real time.</summary>
      <returns>
        <see langword="true" /> if filtering data in real time is enabled; <see langword="false" /> if live filtering is not enabled; <see langword="null" /> if it cannot be determined whether the collection view implements live filtering. The registered default is <see langword="false" />. For more information about what can influence the value, see Dependency Property Value Precedence.</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.IsLiveFilteringProperty">
      <summary>Identifies the <see cref="P:System.Windows.Data.CollectionViewSource.IsLiveFiltering" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.IsLiveFilteringRequested">
      <summary>Gets or sets a value that indicates whether <see cref="T:System.Windows.Data.CollectionViewSource" /> should filter the data in real time if it can.</summary>
      <returns>
        <see langword="true" /> if live filtering has been requested; otherwise, <see langword="false" />. The registered default is <see langword="false" />. For more information about what can influence the value, see Dependency Property Value Precedence.</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.IsLiveFilteringRequestedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Data.CollectionViewSource.IsLiveFilteringRequested" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.IsLiveGrouping">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Data.CollectionViewSource" /> groups data in real time.</summary>
      <returns>
        <see langword="true" /> if grouping data in real time is enable; <see langword="false" /> if live grouping is not enabled; <see langword="null" /> if it cannot be determined whether the collection view implements live grouping. The registered default is <see langword="false" />. For more information about what can influence the value, see Dependency Property Value Precedence.</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.IsLiveGroupingProperty">
      <summary>Identifies the <see cref="P:System.Windows.Data.CollectionViewSource.IsLiveGrouping" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.IsLiveGroupingRequested">
      <summary>Gets or sets a value that indicates whether <see cref="T:System.Windows.Data.CollectionViewSource" /> should group the data in real time if it can.</summary>
      <returns>
        <see langword="true" /> if live grouping has been requested; otherwise, <see langword="false" />. The registered default is <see langword="false" />. For more information about what can influence the value, see Dependency Property Value Precedence.</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.IsLiveGroupingRequestedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Data.CollectionViewSource.IsLiveGroupingRequested" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.IsLiveSorting">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Data.CollectionViewSource" /> sorts data in real time.</summary>
      <returns>
        <see langword="true" /> if sorting data in real time is enable; <see langword="false" /> if live sorting is not enabled; <see langword="null" /> if it cannot be determined whether the collection view implements live sorting. The registered default is <see langword="false" />. For more information about what can influence the value, see Dependency Property Value Precedence.</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.IsLiveSortingProperty">
      <summary>Identifies the <see cref="P:System.Windows.Data.CollectionViewSource.IsLiveSorting" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.IsLiveSortingRequested">
      <summary>Gets or sets a value that indicates whether <see cref="T:System.Windows.Data.CollectionViewSource" /> should sort the data in real time if it can.</summary>
      <returns>
        <see langword="true" /> if live sorting has been requested; otherwise, <see langword="false" />. The registered default is <see langword="false" />. For more information about what can influence the value, see Dependency Property Value Precedence.</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.IsLiveSortingRequestedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Data.CollectionViewSource.IsLiveSortingRequested" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.LiveFilteringProperties">
      <summary>Gets a collection of strings that specify the properties that participate in filtering data in real time.</summary>
      <returns>A collection of strings that specify the properties that participate in filtering data in real time.</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.LiveGroupingProperties">
      <summary>Gets a collection of strings that specify the properties that participate in grouping data in real time.</summary>
      <returns>A collection of strings that specify the properties that participate in grouping data in real time.</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.LiveSortingProperties">
      <summary>Gets a collection of strings that specify the properties that participate in sorting data in real time.</summary>
      <returns>A collection of strings that specify the properties that participate in sorting data in real time.</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.OnCollectionViewTypeChanged(System.Type,System.Type)">
      <summary>Invoked when the <see cref="P:System.Windows.Data.CollectionViewSource.CollectionViewType" /> property changes.</summary>
      <param name="oldCollectionViewType">The old value of the <see cref="P:System.Windows.Data.CollectionViewSource.CollectionViewType" /> property.</param>
      <param name="newCollectionViewType">The new value of the <see cref="P:System.Windows.Data.CollectionViewSource.CollectionViewType" /> property.</param>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.OnSourceChanged(System.Object,System.Object)">
      <summary>Invoked when the <see cref="P:System.Windows.Data.CollectionViewSource.Source" /> property changes.</summary>
      <param name="oldSource">The old value of the <see cref="P:System.Windows.Data.CollectionViewSource.Source" /> property.</param>
      <param name="newSource">The new value of the <see cref="P:System.Windows.Data.CollectionViewSource.Source" /> property.</param>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>Handles events from the centralized event table.</summary>
      <param name="managerType">The type of the <see cref="T:System.Windows.WeakEventManager" /> calling this method. This only recognizes manager objects of type <see cref="T:System.Windows.Data.DataChangedEventManager" />.</param>
      <param name="sender">Object that originated the event.</param>
      <param name="e">Event data.</param>
      <returns>
        <see langword="true" /> if the listener handled the event; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.SortDescriptions">
      <summary>Gets or sets a collection of <see cref="T:System.ComponentModel.SortDescription" /> objects that describes how the items in the collection are sorted in the view.</summary>
      <returns>A collection of <see cref="T:System.ComponentModel.SortDescription" /> objects that describes how the items in the collection are sorted in the view.</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.Source">
      <summary>Gets or sets the collection object from which to create this view.</summary>
      <returns>The default value is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.SourceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Data.CollectionViewSource.Source" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary>Signals the object that initialization is starting.</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.System#ComponentModel#ISupportInitialize#EndInit">
      <summary>Signals the object that initialization is complete.</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>Receives events from the centralized event manager.</summary>
      <param name="managerType">The type of the <see cref="T:System.Windows.WeakEventManager" /> calling this method. This only recognizes manager objects of type <see cref="T:System.Windows.Data.DataChangedEventManager" />.</param>
      <param name="sender">Object that originated the event.</param>
      <param name="e">Event data.</param>
      <returns>
        <see langword="true" /> if the listener handled the event; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.View">
      <summary>Gets the view object that is currently associated with this instance of <see cref="T:System.Windows.Data.CollectionViewSource" />.</summary>
      <returns>The view object that is currently associated with this instance of <see cref="T:System.Windows.Data.CollectionViewSource" />.</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.ViewProperty">
      <summary>Identifies the <see cref="P:System.Windows.Data.CollectionViewSource.CollectionViewType" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Data.CompositeCollection">
      <summary>Enables multiple collections and items to be displayed as a single list.</summary>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Data.CompositeCollection" /> class that is empty and has default initial capacity.</summary>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.#ctor(System.Int32)">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Data.CompositeCollection" /> class that is empty and has a specified initial capacity.</summary>
      <param name="capacity">The number of items that the new list is initially capable of storing.</param>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.Add(System.Object)">
      <summary>Adds the specified item to this collection.</summary>
      <param name="newItem">New item to add to the collection.</param>
      <returns>Zero-based index where the new item is added.</returns>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.Clear">
      <summary>Clears the collection.</summary>
    </member>
    <member name="E:System.Windows.Data.CompositeCollection.CollectionChanged">
      <summary>Occurs when the collection changes, either by adding or removing an item.</summary>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.Contains(System.Object)">
      <summary>Checks to see if a given item is in this collection.</summary>
      <param name="containItem">The item to check.</param>
      <returns>
        <see langword="true" /> if the collection contains the given item; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.CopyTo(System.Array,System.Int32)">
      <summary>Makes a shallow copy of object references from this collection to the given array.</summary>
      <param name="array">The array that is the destination of the copy operation.</param>
      <param name="index">Zero-based index in the target array at which the copying starts.</param>
    </member>
    <member name="P:System.Windows.Data.CompositeCollection.Count">
      <summary>Gets the number of items stored in this collection.</summary>
      <returns>The number of items stored in this collection.</returns>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.IndexOf(System.Object)">
      <summary>Returns the index in this collection where the given item is found.</summary>
      <param name="indexItem">The item to retrieve the index for.</param>
      <returns>If the item appears in the collection, then the zero-based index in the collection where the given item is found; otherwise, <c>-1</c>.</returns>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.Insert(System.Int32,System.Object)">
      <summary>Inserts an item in the collection at a given index. All items after the given position are moved down by one.</summary>
      <param name="insertIndex">The index to insert the item at.</param>
      <param name="insertItem">The item reference to add to the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">If index is out of range.</exception>
    </member>
    <member name="P:System.Windows.Data.CompositeCollection.Item(System.Int32)">
      <summary>Indexer property that retrieves or replaces the item at the given zero-based offset in the collection.</summary>
      <param name="itemIndex">The zero-based offset of the item to retrieve or replace.</param>
      <returns>The item at the specified zero-based offset.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">If the index is out of range.</exception>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>Handles events from the centralized event table.</summary>
      <param name="managerType">The type of the <see cref="T:System.Windows.WeakEventManager" /> calling this method. This only recognizes manager objects of type <see cref="T:System.Collections.Specialized.CollectionChangedEventManager" />.</param>
      <param name="sender">Object that originated the event.</param>
      <param name="e">Event data.</param>
      <returns>
        <see langword="true" /> if the listener handled the event; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.Remove(System.Object)">
      <summary>Removes the given item reference from the collection. All remaining items move up by one.</summary>
      <param name="removeItem">The item to remove.</param>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.RemoveAt(System.Int32)">
      <summary>Removes an item from the collection at the given index. All remaining items move up by one.</summary>
      <param name="removeIndex">The index at which to remove an item.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">If index is out of range.</exception>
    </member>
    <member name="P:System.Windows.Data.CompositeCollection.System#Collections#ICollection#IsSynchronized">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>true if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Data.CompositeCollection.System#Collections#ICollection#SyncRoot">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator.</summary>
      <returns>An IEnumerator object.</returns>
    </member>
    <member name="P:System.Windows.Data.CompositeCollection.System#Collections#IList#IsFixedSize">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Collections.IList" /> has a fixed size; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.CompositeCollection.System#Collections#IList#IsReadOnly">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Collections.IList" /> is read-only; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="E:System.Windows.Data.CompositeCollection.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
      <summary>Occurs when the collection has changed.</summary>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.System#ComponentModel#ICollectionViewFactory#CreateView">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>The view created.</returns>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="managerType">The type of the <see cref="T:System.Windows.WeakEventManager" /> calling this method. This only recognizes manager objects of type <see cref="T:System.Collections.Specialized.CollectionChangedEventManager" />.</param>
      <param name="sender">Object that originated the event.</param>
      <param name="e">Event data.</param>
      <returns>
        <see langword="true" /> if the listener handled the event; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Data.DataChangedEventManager">
      <summary>Provides a <see cref="T:System.Windows.WeakEventManager" /> implementation so that you can use the "weak event listener" pattern to attach listeners for the <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged" /> event.</summary>
    </member>
    <member name="M:System.Windows.Data.DataChangedEventManager.AddHandler(System.Windows.Data.DataSourceProvider,System.EventHandler{System.EventArgs})">
      <summary>Adds the specified event handler, which is called when specified source raises the <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> event.</summary>
      <param name="source">The source object that the raises the <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged" /> event.</param>
      <param name="handler">The delegate that handles the <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged" /> event.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handler" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Data.DataChangedEventManager.AddListener(System.Windows.Data.DataSourceProvider,System.Windows.IWeakEventListener)">
      <summary>Adds the specified listener to the <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged" /> event of the specified source.</summary>
      <param name="source">The object with the event.</param>
      <param name="listener">The object to add as a listener.</param>
    </member>
    <member name="M:System.Windows.Data.DataChangedEventManager.NewListenerList">
      <summary>Returns a new object to contain listeners to the <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged" /> event.</summary>
      <returns>A new object to contain listeners to the <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged" /> event.</returns>
    </member>
    <member name="M:System.Windows.Data.DataChangedEventManager.RemoveHandler(System.Windows.Data.DataSourceProvider,System.EventHandler{System.EventArgs})">
      <summary>Removes the specified event handler from the specified source.</summary>
      <param name="source">The source object that the raises the <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged" /> event.</param>
      <param name="handler">The delegate that handles the <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged" /> event.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handler" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Data.DataChangedEventManager.RemoveListener(System.Windows.Data.DataSourceProvider,System.Windows.IWeakEventListener)">
      <summary>Removes the specified listener from the <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged" /> event of the specified source.</summary>
      <param name="source">The object with the event.</param>
      <param name="listener">The listener to remove.</param>
    </member>
    <member name="M:System.Windows.Data.DataChangedEventManager.StartListening(System.Object)">
      <summary>Begins listening for the <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged" /> event on the specified source.</summary>
      <param name="source">The object with the event.</param>
    </member>
    <member name="M:System.Windows.Data.DataChangedEventManager.StopListening(System.Object)">
      <summary>Stops listening for the <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged" /> event on the specified source.</summary>
      <param name="source">The source object to stop listening for.</param>
    </member>
    <member name="T:System.Windows.Data.DataTransferEventArgs">
      <summary>Encapsulates arguments for data transfer events.</summary>
    </member>
    <member name="M:System.Windows.Data.DataTransferEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>Invokes the specified handler in a type-specific way on the specified object.</summary>
      <param name="genericHandler">The generic handler to call in a type-specific way.</param>
      <param name="genericTarget">The object to invoke the handler on.</param>
    </member>
    <member name="P:System.Windows.Data.DataTransferEventArgs.Property">
      <summary>Gets the specific binding target property that is involved in the data transfer event.</summary>
      <returns>The property that changed.</returns>
    </member>
    <member name="P:System.Windows.Data.DataTransferEventArgs.TargetObject">
      <summary>Gets the binding target object of the binding that raised the event.</summary>
      <returns>The target object of the binding that raised the event.</returns>
    </member>
    <member name="T:System.Windows.Data.FilterEventArgs">
      <summary>Provides information and event data that is associated with the <see cref="E:System.Windows.Data.CollectionViewSource.Filter" /> event.</summary>
    </member>
    <member name="P:System.Windows.Data.FilterEventArgs.Accepted">
      <summary>Gets or sets a value that indicates whether the item passes the filter.</summary>
      <returns>
        <see langword="true" /> if the item passes the filter; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Data.FilterEventArgs.Item">
      <summary>Gets the object that the filter should test.</summary>
      <returns>The object that the filter should test. The default is <see langword="null" />.</returns>
    </member>
    <member name="T:System.Windows.Data.FilterEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Data.CollectionViewSource.Filter" /> event.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Data.GroupDescriptionSelectorCallback">
      <summary>Represents a method that is used to provide custom logic to select the <see cref="T:System.ComponentModel.GroupDescription" /> based on the parent group and its level.</summary>
      <param name="group">The parent group.</param>
      <param name="level">The level of <paramref name="group" />.</param>
      <returns>The <see cref="T:System.ComponentModel.GroupDescription" /> chosen based on the parent group and its level.</returns>
    </member>
    <member name="T:System.Windows.Data.IMultiValueConverter">
      <summary>Provides a way to apply custom logic in a <see cref="T:System.Windows.Data.MultiBinding" />.</summary>
    </member>
    <member name="M:System.Windows.Data.IMultiValueConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts source values to a value for the binding target. The data binding engine calls this method when it propagates the values from source bindings to the binding target.</summary>
      <param name="values">The array of values that the source bindings in the <see cref="T:System.Windows.Data.MultiBinding" /> produces. The value <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> indicates that the source binding has no value to provide for conversion.</param>
      <param name="targetType">The type of the binding target property.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
      <returns>A converted value.  
 If the method returns <see langword="null" />, the valid <see langword="null" /> value is used.  
 A return value of <see cref="T:System.Windows.DependencyProperty" />.<see cref="F:System.Windows.DependencyProperty.UnsetValue" /> indicates that the converter did not produce a value, and that the binding will use the <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> if it is available, or else will use the default value.  
 A return value of <see cref="T:System.Windows.Data.Binding" />.<see cref="F:System.Windows.Data.Binding.DoNothing" /> indicates that the binding does not transfer the value or use the <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> or the default value.</returns>
    </member>
    <member name="M:System.Windows.Data.IMultiValueConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a binding target value to the source binding values.</summary>
      <param name="value">The value that the binding target produces.</param>
      <param name="targetTypes">The array of types to convert to. The array length indicates the number and types of values that are suggested for the method to return.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
      <returns>An array of values that have been converted from the target value back to the source values.</returns>
    </member>
    <member name="T:System.Windows.Data.IValueConverter">
      <summary>Provides a way to apply custom logic to a binding.</summary>
    </member>
    <member name="M:System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a value.</summary>
      <param name="value">The value produced by the binding source.</param>
      <param name="targetType">The type of the binding target property.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
      <returns>A converted value. If the method returns <see langword="null" />, the valid null value is used.</returns>
    </member>
    <member name="M:System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a value.</summary>
      <param name="value">The value that is produced by the binding target.</param>
      <param name="targetType">The type to convert to.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
      <returns>A converted value. If the method returns <see langword="null" />, the valid null value is used.</returns>
    </member>
    <member name="T:System.Windows.Data.ListCollectionView">
      <summary>Represents the collection view for collections that implement <see cref="T:System.Collections.IList" />.</summary>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.#ctor(System.Collections.IList)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.ListCollectionView" /> class, using a supplied collection that implements <see cref="T:System.Collections.IList" />.</summary>
      <param name="list">The underlying collection, which must implement <see cref="T:System.Collections.IList" />.</param>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.ActiveComparer">
      <summary>Gets or sets the current active comparer that is used in sorting.</summary>
      <returns>An <see cref="T:System.Collections.IComparer" /> object that is the active comparer.</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.ActiveFilter">
      <summary>Gets or sets the current active <see cref="P:System.Windows.Data.CollectionView.Filter" /> callback.</summary>
      <returns>The active <see cref="P:System.Windows.Data.CollectionView.Filter" /> callback.</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.AddNew">
      <summary>Starts an add transaction and returns the pending new item.</summary>
      <returns>The pending new item.</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.AddNewItem(System.Object)">
      <summary>Adds the specified object to the collection.</summary>
      <param name="newItem">The object to add to the collection.</param>
      <returns>The object that was added to the collection.</returns>
      <exception cref="T:System.InvalidOperationException">An object cannot be added to the <see cref="T:System.Windows.Data.ListCollectionView" /> by using the <see cref="M:System.Windows.Data.ListCollectionView.AddNewItem(System.Object)" /> method.</exception>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CanAddNew">
      <summary>Gets a value that indicates whether a new item can be added to the collection.</summary>
      <returns>
        <see langword="true" /> if a new item can be added to the collection; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CanAddNewItem">
      <summary>Gets a value that indicates whether a specified object can be added to the collection.</summary>
      <returns>
        <see langword="true" /> if a specified object can be added to the collection; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CanCancelEdit">
      <summary>Gets a value that indicates whether the collection view can discard pending changes and restore the original values of an edited object.</summary>
      <returns>
        <see langword="true" /> if the collection view can discard pending changes and restore the original values of an edited object; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.CancelEdit">
      <summary>Ends the edit transaction, and if possible, restores the original value to the item.</summary>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.CancelNew">
      <summary>Ends the add transaction and discards the pending new item.</summary>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CanChangeLiveFiltering">
      <summary>Gets a value that indicates whether the collection view supports turning filtering data in real time on or off.</summary>
      <returns>
        <see langword="true" /> in all cases.</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CanChangeLiveGrouping">
      <summary>Gets a value that indicates whether the collection view supports turning grouping data in real time on or off.</summary>
      <returns>
        <see langword="true" /> in all cases.</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CanChangeLiveSorting">
      <summary>Gets a value that indicates whether the collection view supports turning sorting data in real time on or off.</summary>
      <returns>
        <see langword="true" /> in all cases.</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CanFilter">
      <summary>Gets a value that indicates whether the view supports callback-based filtering.</summary>
      <returns>For a default instance of <see cref="T:System.Windows.Data.ListCollectionView" />, this property always returns <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CanGroup">
      <summary>Gets a value that indicates whether the collection view supports grouping.</summary>
      <returns>
        <see langword="true" /> if the collection view supports grouping; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CanRemove">
      <summary>Gets a value that indicates whether an item can be removed from the collection.</summary>
      <returns>
        <see langword="true" /> if an item can be removed from the collection; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CanSort">
      <summary>Gets a value that indicates whether the collection view supports sorting.</summary>
      <returns>For a default instance of <see cref="T:System.Windows.Data.ListCollectionView" />, this property always returns <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.CommitEdit">
      <summary>Ends the edit transaction and saves the pending changes.</summary>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.CommitNew">
      <summary>Ends the add transaction and saves the pending new item.</summary>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.Compare(System.Object,System.Object)">
      <summary>Compares two objects and returns a value that indicates whether one is less than, equal to, or greater than the other.</summary>
      <param name="o1">The first object to compare.</param>
      <param name="o2">The second object to compare.</param>
      <returns>Less than zero if <paramref name="o1" /> is less than <paramref name="o2" />, zero if <paramref name="o1" /> and <paramref name="o2" /> are equal, or greater than zero if <paramref name="o1" /> is greater than <paramref name="o2" />.</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.Contains(System.Object)">
      <summary>Returns a value that indicates whether a given item belongs to the collection view.</summary>
      <param name="item">The object to check.</param>
      <returns>
        <see langword="true" /> if the item belongs to the collection view; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.Count">
      <summary>Gets the estimated number of records.</summary>
      <returns>One of the following:  
  Value  

  Meaning  

  -1  

  Could not determine the count of the collection. This might be returned by a "virtualizing" view, where the view deliberately does not account for all items in the underlying collection because the view is trying to increase efficiency and minimize dependence on always having the whole collection available.  

  any other integer  

  The count of the collection.</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CurrentAddItem">
      <summary>Gets the item that is being added during the current add transaction.</summary>
      <returns>The item that is being added if <see cref="P:System.Windows.Data.ListCollectionView.IsAddingNew" /> is <see langword="true" />; otherwise, <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CurrentEditItem">
      <summary>Gets the item in the collection that is being edited.</summary>
      <returns>The item in the collection that is being edited if <see cref="P:System.Windows.Data.ListCollectionView.IsEditingItem" /> is <see langword="true" />; otherwise, <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CustomSort">
      <summary>Gets or sets a custom object that implements <see cref="T:System.Collections.IComparer" /> to sort items in the view.</summary>
      <returns>The sort criteria as an implementation of <see cref="T:System.Collections.IComparer" />.</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.EditItem(System.Object)">
      <summary>Begins an edit transaction of the specified item.</summary>
      <param name="item">The item to edit.</param>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.Filter">
      <summary>Gets or sets a method that is used to determine whether an item is suitable for inclusion in the view.</summary>
      <returns>A delegate that represents the method that is used to determine whether an item is suitable for inclusion in the view.</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.GetEnumerator">
      <summary>Returns an object that you can use to enumerate the items in the view.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that you can use to enumerate the items in the view.</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.GetItemAt(System.Int32)">
      <summary>Retrieves the item at the specified position in the view.</summary>
      <param name="index">The zero-based index at which the item is located.</param>
      <returns>The item at the specified position in the view.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="index" /> is out of range.</exception>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.GroupBySelector">
      <summary>Gets or sets a delegate to select the <see cref="T:System.ComponentModel.GroupDescription" /> as a function of the parent group and its level.</summary>
      <returns>A method that provides the logic for the selection of the <see cref="T:System.ComponentModel.GroupDescription" /> as a function of the parent group and its level. The default value is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.GroupDescriptions">
      <summary>Gets a collection of <see cref="T:System.ComponentModel.GroupDescription" /> objects that describe how the items in the collection are grouped in the view.</summary>
      <returns>A collection of <see cref="T:System.ComponentModel.GroupDescription" /> objects that describe how the items in the collection are grouped in the view.</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.Groups">
      <summary>Gets the top-level groups.</summary>
      <returns>A read-only collection of the top-level groups, or <see langword="null" /> if there are no groups.</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.IndexOf(System.Object)">
      <summary>Returns the index where the given data item belongs in the collection, or -1 if the index of that item is unknown.</summary>
      <param name="item">The object to check for in the collection.</param>
      <returns>The index of the item in the collection, or <c>-1</c> if the item does not exist in the collection.</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.InternalContains(System.Object)">
      <summary>Return a value that indicates whether the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" /> contains the item.</summary>
      <param name="item">The item to locate.</param>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" /> contains the item; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.InternalCount">
      <summary>Gets the number of records in the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</summary>
      <returns>The number of records in the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.InternalGetEnumerator">
      <summary>Returns an enumerator for the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</summary>
      <returns>An enumerator for the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.InternalIndexOf(System.Object)">
      <summary>Returns the index of the specified item in the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</summary>
      <param name="item">The item to return an index for.</param>
      <returns>The index of the specified item in the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.InternalItemAt(System.Int32)">
      <summary>Returns the item at the given index in the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</summary>
      <param name="index">The index at which the item is located.</param>
      <returns>The item at the specified zero-based index in the view.</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.InternalList">
      <summary>Gets the filtered and sorted list of items.</summary>
      <returns>The <see cref="T:System.Collections.IList" /> on which filtering and sorting have been applied.</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.IsAddingNew">
      <summary>Gets a value that indicates whether an add transaction is in progress.</summary>
      <returns>
        <see langword="true" /> if an add transaction is in progress; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.IsDataInGroupOrder">
      <summary>Gets or sets a value that indicates whether the list of items (after applying the sort and filters, if any) is already in the correct order for grouping.</summary>
      <returns>
        <see langword="true" /> if the list of items is already in the correct order for grouping; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.IsEditingItem">
      <summary>Gets a value that indicates whether an edit transaction is in progress.</summary>
      <returns>
        <see langword="true" /> if an edit transaction is in progress; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.IsEmpty">
      <summary>Returns a value that indicates whether the resulting (filtered) view is empty.</summary>
      <returns>
        <see langword="true" /> if the resulting view is empty; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.IsGrouping">
      <summary>Gets a value that indicates whether there are groups in the view.</summary>
      <returns>
        <see langword="true" /> if there are groups in the view; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.IsLiveFiltering">
      <summary>Gets or sets a value that indicates whether filtering data in real time is enabled.</summary>
      <returns>
        <see langword="true" /> if filtering data in real time is enabled; <see langword="false" /> if live filtering is not enabled; <see langword="null" /> if it cannot be determined whether the collection view implements live filtering.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Windows.Data.ListCollectionView.IsLiveFiltering" /> cannot be set to <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.IsLiveGrouping">
      <summary>Gets or sets a value that indicates whether grouping data in real time is enabled.</summary>
      <returns>
        <see langword="true" /> if grouping data in real time is enabled; <see langword="false" /> if live grouping is not enabled; <see langword="null" /> if it cannot be determined whether the collection view implements live grouping.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Windows.Data.ListCollectionView.IsLiveGrouping" /> cannot be set to <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.IsLiveSorting">
      <summary>Gets or sets a value that indicates whether sorting in real time is enabled.</summary>
      <returns>
        <see langword="true" /> if sorting data in real time is enabled; <see langword="false" /> if live sorting is not enabled; <see langword="null" /> if it cannot be determined whether the collection view implements live sorting.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Windows.Data.ListCollectionView.IsLiveFiltering" /> cannot be set to <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.ItemProperties">
      <summary>Gets a collection of objects that describes the properties of the items in the collection.</summary>
      <returns>A collection of objects that describes the properties of the items in the collection.</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.LiveFilteringProperties">
      <summary>Gets a collection of strings that specify the properties that participate in filtering data in real time.</summary>
      <returns>A collection of strings that specify the properties that participate in filtering data in real time.</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.LiveGroupingProperties">
      <summary>Gets a collection of strings that specify the properties that participate in grouping data in real time.</summary>
      <returns>A collection of strings that specify the properties that participate in grouping data in real time.</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.LiveSortingProperties">
      <summary>Gets a collection of strings that specify the properties that participate in sorting data in real time.</summary>
      <returns>A collection of strings that specify the properties that participate in sorting data in real time.</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.MoveCurrentToPosition(System.Int32)">
      <summary>Sets the item at the specified index to be the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> in the view.</summary>
      <param name="position">The index to set the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> to.</param>
      <returns>
        <see langword="true" /> if the resulting <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> is an item within the view; otherwise, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the index is out of range.</exception>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.NewItemPlaceholderPosition">
      <summary>Gets or sets the position of the new item placeholder in the <see cref="T:System.Windows.Data.ListCollectionView" />.</summary>
      <returns>One of the enumeration values that specifies the position of the new item placeholder in the <see cref="T:System.Windows.Data.ListCollectionView" />.</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.OnAllowsCrossThreadChangesChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Data.CollectionView.AllowsCrossThreadChanges" /> property changes.</summary>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.OnBeginChangeLogging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>Called by the base class to notify the derived class that a <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> event has been posted to the message queue.</summary>
      <param name="args">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> object that is added to the change log.</param>
      <exception cref="T:System.ArgumentNullException">If <paramref name="args" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.PassesFilter(System.Object)">
      <summary>Returns a value that indicates whether the specified item in the underlying collection belongs to the view.</summary>
      <param name="item">The item to check.</param>
      <returns>
        <see langword="true" /> if the specified item belongs to the view or if there is not filter set on the collection view; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.ProcessCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>Handles <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> events.</summary>
      <param name="args">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> object to process.</param>
      <exception cref="T:System.ArgumentNullException">If <paramref name="args" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.RefreshOverride">
      <summary>Recreates the view.</summary>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.Remove(System.Object)">
      <summary>Removes the specified item from the collection.</summary>
      <param name="item">The item to remove.</param>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.RemoveAt(System.Int32)">
      <summary>Removes the item at the specified position from the collection.</summary>
      <param name="index">The zero-based index of the item to remove.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than 0 or greater than the number of items in the collection view.</exception>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.SortDescriptions">
      <summary>Gets a collection of <see cref="T:System.ComponentModel.SortDescription" /> objects that describes how the items in the collection are sorted in the view.</summary>
      <returns>A collection of <see cref="T:System.ComponentModel.SortDescription" /> objects that describe how the items in the collection are sorted in the view.</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.System#Collections#IComparer#Compare(System.Object,System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="o1">The first object to compare.</param>
      <param name="o2">The second object to compare.</param>
      <returns>A value that is less than zero means <paramref name="o1" /> is less than <paramref name="o2;" /> a value of zero means the objects are equal; and a value that is over zero means <paramref name="o1" /> is greater than <paramref name="o2" />.</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.UsesLocalArray">
      <summary>Gets a value that indicates whether a private copy of the data is needed for sorting and filtering.</summary>
      <returns>
        <see langword="true" /> if a private copy of the data is needed for sorting and filtering; otherwise, <see langword="false" />. The default implementation returns <see langword="true" /> if there is an <see cref="P:System.Windows.Data.ListCollectionView.ActiveFilter" /> or <see cref="P:System.Windows.Data.ListCollectionView.ActiveComparer" />, or both.</returns>
    </member>
    <member name="T:System.Windows.Data.MultiBinding">
      <summary>Describes a collection of <see cref="T:System.Windows.Data.Binding" /> objects attached to a single binding target property.</summary>
    </member>
    <member name="M:System.Windows.Data.MultiBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.MultiBinding" /> class.</summary>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.Bindings">
      <summary>Gets the collection of <see cref="T:System.Windows.Data.Binding" /> objects within this <see cref="T:System.Windows.Data.MultiBinding" /> instance.</summary>
      <returns>A collection of <see cref="T:System.Windows.Data.Binding" /> objects. <see cref="T:System.Windows.Data.MultiBinding" /> currently supports only objects of type <see cref="T:System.Windows.Data.Binding" /> and not <see cref="T:System.Windows.Data.MultiBinding" /> or <see cref="T:System.Windows.Data.PriorityBinding" />. Adding a <see cref="T:System.Windows.Data.Binding" /> child to a <see cref="T:System.Windows.Data.MultiBinding" /> object implicitly adds the child to the <see cref="T:System.Windows.Data.BindingBase" /> collection for the <see cref="T:System.Windows.Data.MultiBinding" /> object.</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.Converter">
      <summary>Gets or sets the converter to use to convert the source values to or from the target value.</summary>
      <returns>A value of type <see cref="T:System.Windows.Data.IMultiValueConverter" /> that indicates the converter to use. The default value is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.ConverterCulture">
      <summary>Gets or sets the <see cref="T:System.Globalization.CultureInfo" /> object that applies to any converter assigned to bindings wrapped by the <see cref="T:System.Windows.Data.MultiBinding" /> or on the <see cref="T:System.Windows.Data.MultiBinding" /> itself.</summary>
      <returns>A valid <see cref="T:System.Globalization.CultureInfo" />.</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.ConverterParameter">
      <summary>Gets or sets an optional parameter to pass to a converter as additional information.</summary>
      <returns>A parameter to pass to a converter. The default value is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.Mode">
      <summary>Gets or sets a value that indicates the direction of the data flow of this binding.</summary>
      <returns>One of the <see cref="T:System.Windows.Data.BindingMode" /> values. The default value is <see cref="F:System.Windows.Data.BindingMode.Default" />, which returns the default binding mode value of the target dependency property. However, the default value varies for each dependency property. In general, user-editable control properties, such as <see cref="P:System.Windows.Controls.TextBox.Text" />, default to two-way bindings, whereas most other properties default to one-way bindings.  
 A programmatic way to determine whether a dependency property binds one-way or two-way by default is to get the property metadata of the property using <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> and then check the Boolean value of the <see cref="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault" /> property.</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.NotifyOnSourceUpdated">
      <summary>Gets or sets a value that indicates whether to raise the <see cref="E:System.Windows.FrameworkElement.SourceUpdated" /> event when a value is transferred from the binding target to the binding source.</summary>
      <returns>
        <see langword="true" /> if the <see cref="E:System.Windows.FrameworkElement.SourceUpdated" /> event will be raised when the binding source value is updated; otherwise, <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.NotifyOnTargetUpdated">
      <summary>Gets or sets a value that indicates whether to raise the <see cref="E:System.Windows.FrameworkElement.TargetUpdated" /> event when a value is transferred from the binding source to the binding target.</summary>
      <returns>
        <see langword="true" /> if the <see cref="E:System.Windows.FrameworkElement.TargetUpdated" /> event will be raised when the binding target value is updated; otherwise, <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.NotifyOnValidationError">
      <summary>Gets or sets a value that indicates whether to raise the <see cref="E:System.Windows.Controls.Validation.Error" /> attached event on the bound element.</summary>
      <returns>
        <see langword="true" /> if the <see cref="E:System.Windows.Controls.Validation.Error" /> attached event will be raised on the bound element when there is a validation error during source updates; otherwise, <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Data.MultiBinding.ShouldSerializeBindings">
      <summary>Indicates whether the <see cref="P:System.Windows.Data.MultiBinding.Bindings" /> property should be persisted.</summary>
      <returns>
        <see langword="true" /> if the property value has changed from its default; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Data.MultiBinding.ShouldSerializeValidationRules">
      <summary>Indicates whether the <see cref="P:System.Windows.Data.MultiBinding.ValidationRules" /> property should be persisted.</summary>
      <returns>
        <see langword="true" /> if the property value has changed from its default; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>Adds a child object.</summary>
      <param name="value">The child object to add.</param>
    </member>
    <member name="M:System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>Adds the text content of a node to the object.</summary>
      <param name="text">The text to add to the object.</param>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.UpdateSourceExceptionFilter">
      <summary>Gets or sets a handler you can use to provide custom logic for handling exceptions that the binding engine encounters during the update of the binding source value. This is only applicable if you have associated the <see cref="T:System.Windows.Controls.ExceptionValidationRule" /> with your <see cref="T:System.Windows.Data.MultiBinding" /> object.</summary>
      <returns>A method that provides custom logic for handling exceptions that the binding engine encounters during the update of the binding source value.</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.UpdateSourceTrigger">
      <summary>Gets or sets a value that determines the timing of binding source updates.</summary>
      <returns>One of the <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> values. The default value is <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" />, which returns the default <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> value of the target dependency property. However, the default value for most dependency properties is <see cref="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged" />, while the <see cref="P:System.Windows.Controls.TextBox.Text" /> property has a default value of <see cref="F:System.Windows.Data.UpdateSourceTrigger.LostFocus" />.  
 A programmatic way to determine the default <see cref="P:System.Windows.Data.Binding.UpdateSourceTrigger" /> value of a dependency property is to get the property metadata of the property using <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> and then check the value of the <see cref="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger" /> property.</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.ValidatesOnDataErrors">
      <summary>Gets or sets a value that indicates whether to include the <see cref="T:System.Windows.Controls.DataErrorValidationRule" />.</summary>
      <returns>
        <see langword="true" /> to include the <see cref="T:System.Windows.Controls.DataErrorValidationRule" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.ValidatesOnExceptions">
      <summary>Gets or sets a value that indicates whether to include the <see cref="T:System.Windows.Controls.ExceptionValidationRule" />.</summary>
      <returns>
        <see langword="true" /> to include the <see cref="T:System.Windows.Controls.ExceptionValidationRule" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.ValidatesOnNotifyDataErrors">
      <summary>Gets or sets a value that indicates whether to include the <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />.</summary>
      <returns>
        <see langword="true" /> to include the <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.ValidationRules">
      <summary>Gets the collection of <see cref="T:System.Windows.Controls.ValidationRule" /> objects for this instance of <see cref="T:System.Windows.Data.MultiBinding" />.</summary>
      <returns>The collection of <see cref="T:System.Windows.Controls.ValidationRule" /> objects for this instance of <see cref="T:System.Windows.Data.MultiBinding" />.</returns>
    </member>
    <member name="T:System.Windows.Data.MultiBindingExpression">
      <summary>Contains instance information about a single instance of a <see cref="T:System.Windows.Data.MultiBinding" />.</summary>
    </member>
    <member name="P:System.Windows.Data.MultiBindingExpression.BindingExpressions">
      <summary>Gets the collection of <see cref="T:System.Windows.Data.BindingExpression" /> objects in this instance of <see cref="T:System.Windows.Data.MultiBindingExpression" />.</summary>
      <returns>A read-only collection of the <see cref="T:System.Windows.Data.BindingExpression" /> objects. Even though the return type is a collection of <see cref="T:System.Windows.Data.BindingExpressionBase" /> objects the returned collection would only contain <see cref="T:System.Windows.Data.BindingExpression" /> objects because the <see cref="T:System.Windows.Data.MultiBinding" /> class currently only supports <see cref="T:System.Windows.Data.Binding" /> objects.</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBindingExpression.HasError">
      <summary>Returns a value that indicates whether any of the inner <see cref="T:System.Windows.Data.Binding" /> objects or the <see cref="T:System.Windows.Data.MultiBinding" /> itself has a failing validation rule.</summary>
      <returns>
        <see langword="true" /> if at least one of the inner <see cref="T:System.Windows.Data.Binding" /> objects or the <see cref="T:System.Windows.Data.MultiBinding" /> itself has a failing validation rule; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBindingExpression.HasValidationError">
      <summary>Gets a value that indicates whether the parent binding has a failed validation rule.</summary>
      <returns>
        <see langword="true" /> if the parent binding has a failed validation rule; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBindingExpression.ParentMultiBinding">
      <summary>Gets the <see cref="T:System.Windows.Data.MultiBinding" /> object from which this <see cref="T:System.Windows.Data.MultiBindingExpression" /> is created.</summary>
      <returns>The <see cref="T:System.Windows.Data.MultiBinding" /> object from which this <see cref="T:System.Windows.Data.MultiBindingExpression" /> is created.</returns>
    </member>
    <member name="M:System.Windows.Data.MultiBindingExpression.UpdateSource">
      <summary>Sends the current binding target value to the binding source properties in <see cref="F:System.Windows.Data.BindingMode.TwoWay" /> or <see cref="F:System.Windows.Data.BindingMode.OneWayToSource" /> bindings.</summary>
    </member>
    <member name="M:System.Windows.Data.MultiBindingExpression.UpdateTarget">
      <summary>Forces a data transfer from the binding source properties to the binding target property.</summary>
    </member>
    <member name="P:System.Windows.Data.MultiBindingExpression.ValidationError">
      <summary>Gets the <see cref="T:System.Windows.Controls.ValidationError" /> object that caused this instance of <see cref="T:System.Windows.Data.MultiBindingExpression" /> to be invalid.</summary>
      <returns>The <see cref="T:System.Windows.Controls.ValidationError" /> object that caused this instance of <see cref="T:System.Windows.Data.MultiBindingExpression" /> to be invalid.</returns>
    </member>
    <member name="T:System.Windows.Data.ObjectDataProvider">
      <summary>Wraps and creates an object that you can use as a binding source.</summary>
    </member>
    <member name="M:System.Windows.Data.ObjectDataProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.ObjectDataProvider" /> class.</summary>
    </member>
    <member name="M:System.Windows.Data.ObjectDataProvider.BeginQuery">
      <summary>Starts to create the requested object, either immediately or on a background thread, based on the value of the <see cref="P:System.Windows.Data.ObjectDataProvider.IsAsynchronous" /> property.</summary>
    </member>
    <member name="P:System.Windows.Data.ObjectDataProvider.ConstructorParameters">
      <summary>Gets the list of parameters to pass to the constructor.</summary>
      <returns>The list of parameters to pass to the constructor. The default value is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Data.ObjectDataProvider.IsAsynchronous">
      <summary>Gets or sets a value that indicates whether to perform object creation in a worker thread or in the active context.</summary>
      <returns>
        <see langword="true" /> to perform object creation in a worker thread; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.ObjectDataProvider.MethodName">
      <summary>Gets or sets the name of the method to call.</summary>
      <returns>The name of the method to call. The default value is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Data.ObjectDataProvider.MethodParameters">
      <summary>Gets the list of parameters to pass to the method.</summary>
      <returns>The list of parameters to pass to the method. The default is an empty list.</returns>
    </member>
    <member name="P:System.Windows.Data.ObjectDataProvider.ObjectInstance">
      <summary>Gets or sets the object used as the binding source.</summary>
      <returns>The instance of the object constructed from <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectType" /> and <see cref="P:System.Windows.Data.ObjectDataProvider.ConstructorParameters" />, or the <see cref="T:System.Windows.Data.DataSourceProvider" /> of which the <see cref="P:System.Windows.Data.DataSourceProvider.Data" /> is used as the <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectInstance" />.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Data.ObjectDataProvider" /> is assigned both an <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectType" /> and an <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectInstance" />; only one is allowed.</exception>
    </member>
    <member name="P:System.Windows.Data.ObjectDataProvider.ObjectType">
      <summary>Gets or sets the type of object to create an instance of.</summary>
      <returns>This property is <see langword="null" /> when the <see cref="T:System.Windows.Data.ObjectDataProvider" /> is uninitialized or explicitly set to null. If <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectInstance" /> is assigned, <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectType" /> returns the type of the object or null if the object is null. The default value is <see langword="null" />.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Data.ObjectDataProvider" /> is assigned both an <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectType" /> and an <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectInstance" />; only one is allowed.</exception>
    </member>
    <member name="M:System.Windows.Data.ObjectDataProvider.ShouldSerializeConstructorParameters">
      <summary>Indicates whether the <see cref="P:System.Windows.Data.ObjectDataProvider.ConstructorParameters" /> property should be persisted.</summary>
      <returns>
        <see langword="true" /> if the property value has changed from its default; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Data.ObjectDataProvider.ShouldSerializeMethodParameters">
      <summary>Indicates whether the <see cref="P:System.Windows.Data.ObjectDataProvider.MethodParameters" /> property should be persisted.</summary>
      <returns>
        <see langword="true" /> if the property value has changed from its default; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Data.ObjectDataProvider.ShouldSerializeObjectInstance">
      <summary>Indicates whether the <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectInstance" /> property should be persisted.</summary>
      <returns>
        <see langword="true" /> if the property value has changed from its default; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Data.ObjectDataProvider.ShouldSerializeObjectType">
      <summary>Indicates whether the <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectType" /> property should be persisted.</summary>
      <returns>
        <see langword="true" /> if the property value has changed from its default; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Data.PriorityBinding">
      <summary>Describes a collection of <see cref="T:System.Windows.Data.Binding" /> objects that is attached to a single binding target property, which receives its value from the first binding in the collection that produces a value successfully.</summary>
    </member>
    <member name="M:System.Windows.Data.PriorityBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.PriorityBinding" /> class.</summary>
    </member>
    <member name="P:System.Windows.Data.PriorityBinding.Bindings">
      <summary>Gets the collection of <see cref="T:System.Windows.Data.Binding" /> objects that is established for this instance of <see cref="T:System.Windows.Data.PriorityBinding" />.</summary>
      <returns>A collection of <see cref="T:System.Windows.Data.Binding" /> objects. <see cref="T:System.Windows.Data.PriorityBinding" /> currently supports only objects of type <see cref="T:System.Windows.Data.Binding" /> and not <see cref="T:System.Windows.Data.MultiBinding" /> or <see cref="T:System.Windows.Data.PriorityBinding" />. Adding a <see cref="T:System.Windows.Data.Binding" /> child to a <see cref="T:System.Windows.Data.PriorityBinding" /> object implicitly adds the child to the <see cref="T:System.Windows.Data.BindingBase" /> collection for the <see cref="T:System.Windows.Data.MultiBinding" /> object. The default is an empty collection.</returns>
    </member>
    <member name="M:System.Windows.Data.PriorityBinding.ShouldSerializeBindings">
      <summary>Returns a value that indicates whether serialization processes should serialize the effective value of the <see cref="P:System.Windows.Data.PriorityBinding.Bindings" /> property on instances of this class.</summary>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.Data.PriorityBinding.Bindings" /> property value should be serialized; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Data.PriorityBinding.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="value">An object to add as a child.</param>
    </member>
    <member name="M:System.Windows.Data.PriorityBinding.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="text">A string to add to the object.</param>
    </member>
    <member name="T:System.Windows.Data.PriorityBindingExpression">
      <summary>Contains instance information about a single instance of a <see cref="T:System.Windows.Data.PriorityBinding" />.</summary>
    </member>
    <member name="P:System.Windows.Data.PriorityBindingExpression.ActiveBindingExpression">
      <summary>Gets the active <see cref="T:System.Windows.Data.BindingExpression" /> object.</summary>
      <returns>The active <see cref="T:System.Windows.Data.BindingExpression" /> object; or <see langword="null" />, if no <see cref="T:System.Windows.Data.BindingExpression" /> object is active. Although the return type is <see cref="T:System.Windows.Data.BindingExpressionBase" />, the returned object is only a <see cref="T:System.Windows.Data.BindingExpression" /> object because the <see cref="T:System.Windows.Data.PriorityBinding" /> class currently supports only <see cref="T:System.Windows.Data.Binding" /> objects.</returns>
    </member>
    <member name="P:System.Windows.Data.PriorityBindingExpression.BindingExpressions">
      <summary>Gets the collection of <see cref="T:System.Windows.Data.BindingExpression" /> objects inside this instance of <see cref="T:System.Windows.Data.PriorityBindingExpression" />.</summary>
      <returns>A read-only collection of the <see cref="T:System.Windows.Data.BindingExpression" /> objects. Although the return type is a collection of <see cref="T:System.Windows.Data.BindingExpressionBase" /> objects, the returned collection only contains <see cref="T:System.Windows.Data.BindingExpression" /> objects because the <see cref="T:System.Windows.Data.PriorityBinding" /> class currently supports only <see cref="T:System.Windows.Data.Binding" /> objects.</returns>
    </member>
    <member name="P:System.Windows.Data.PriorityBindingExpression.HasValidationError">
      <summary>Gets a value that indicates whether the parent binding has a failed validation rule.</summary>
      <returns>
        <see langword="true" /> if the parent binding has a failed validation rule; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.PriorityBindingExpression.ParentPriorityBinding">
      <summary>Gets the <see cref="T:System.Windows.Data.PriorityBinding" /> object from which this <see cref="T:System.Windows.Data.PriorityBindingExpression" /> is created.</summary>
      <returns>The <see cref="T:System.Windows.Data.PriorityBinding" /> object from which this <see cref="T:System.Windows.Data.PriorityBindingExpression" /> is created.</returns>
    </member>
    <member name="M:System.Windows.Data.PriorityBindingExpression.UpdateSource">
      <summary>Updates the source on the active binding.</summary>
    </member>
    <member name="M:System.Windows.Data.PriorityBindingExpression.UpdateTarget">
      <summary>Updates the target on the active binding.</summary>
    </member>
    <member name="T:System.Windows.Data.PropertyGroupDescription">
      <summary>Describes the grouping of items using a property name as the criteria.</summary>
    </member>
    <member name="M:System.Windows.Data.PropertyGroupDescription.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.PropertyGroupDescription" /> class.</summary>
    </member>
    <member name="M:System.Windows.Data.PropertyGroupDescription.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.PropertyGroupDescription" /> class with the specified property name.</summary>
      <param name="propertyName">The name of the property that specifies which group an item belongs to.</param>
    </member>
    <member name="M:System.Windows.Data.PropertyGroupDescription.#ctor(System.String,System.Windows.Data.IValueConverter)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.PropertyGroupDescription" /> class with the specified property name and converter.</summary>
      <param name="propertyName">The name of the property that specifies which group an item belongs to. If this is <see langword="null" />, the item itself is passed to the value converter.</param>
      <param name="converter">An <see cref="T:System.Windows.Data.IValueConverter" /> object to apply to the property value or the item to produce the final value that is used to determine which group(s) an item belongs to. The converter may return a collection, which indicates the items can appear in more than one group.</param>
    </member>
    <member name="M:System.Windows.Data.PropertyGroupDescription.#ctor(System.String,System.Windows.Data.IValueConverter,System.StringComparison)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.PropertyGroupDescription" /> class with the specified parameters.</summary>
      <param name="propertyName">The name of the property that specifies which group an item belongs to. If this is <see langword="null" />, the item itself is passed to the value converter.</param>
      <param name="converter">An <see cref="T:System.Windows.Data.IValueConverter" /> object to apply to the property value or the item to produce the final value that is used to determine which group(s) an item belongs to. The converter may return a collection, which indicates the items can appear in more than one group.</param>
      <param name="stringComparison">A <see cref="T:System.StringComparison" /> value that specifies the comparison between the value of an item and the name of a group.</param>
    </member>
    <member name="P:System.Windows.Data.PropertyGroupDescription.CompareNameAscending">
      <summary>Gets an <see cref="T:System.Collections.IComparer" /> value that orders groups in ascending order of name.</summary>
      <returns>An <see cref="T:System.Collections.IComparer" /> value that orders groups in ascending order of name.</returns>
    </member>
    <member name="P:System.Windows.Data.PropertyGroupDescription.CompareNameDescending">
      <summary>Gets an <see cref="T:System.Collections.IComparer" /> value that orders groups in descending order of name.</summary>
      <returns>An <see cref="T:System.Collections.IComparer" /> value that orders groups in descending order of name.</returns>
    </member>
    <member name="P:System.Windows.Data.PropertyGroupDescription.Converter">
      <summary>Gets or sets a converter to apply to the property value or the item to produce the final value that is used to determine which group(s) an item belongs to.</summary>
      <returns>The default value is <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Data.PropertyGroupDescription.GroupNameFromItem(System.Object,System.Int32,System.Globalization.CultureInfo)">
      <summary>Returns the group name(s) for the given item.</summary>
      <param name="item">The item to return group names for.</param>
      <param name="level">The level of grouping.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to supply to the converter.</param>
      <returns>The group name(s) for the given item.</returns>
    </member>
    <member name="M:System.Windows.Data.PropertyGroupDescription.NamesMatch(System.Object,System.Object)">
      <summary>Returns a value that indicates whether the group name and the item name match so that the item belongs to the group.</summary>
      <param name="groupName">The name of the group to check.</param>
      <param name="itemName">The name of the item to check.</param>
      <returns>
        <see langword="true" /> if the names match and the item belongs to the group; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.PropertyGroupDescription.PropertyName">
      <summary>Gets or sets the name of the property that is used to determine which group(s) an item belongs to.</summary>
      <returns>The default value is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Data.PropertyGroupDescription.StringComparison">
      <summary>Gets or sets a <see cref="T:System.StringComparison" /> value that specifies the comparison between the value of an item (as determined by <see cref="P:System.Windows.Data.PropertyGroupDescription.PropertyName" /> and <see cref="P:System.Windows.Data.PropertyGroupDescription.Converter" />) and the name of a group.</summary>
      <returns>The default value is <see cref="T:System.StringComparison" />.<see langword="Ordinal" />.</returns>
    </member>
    <member name="T:System.Windows.Data.RelativeSource">
      <summary>Implements a markup extension that describes the location of the binding source relative to the position of the binding target.</summary>
    </member>
    <member name="M:System.Windows.Data.RelativeSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.RelativeSource" /> class.</summary>
    </member>
    <member name="M:System.Windows.Data.RelativeSource.#ctor(System.Windows.Data.RelativeSourceMode)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.RelativeSource" /> class with an initial mode.</summary>
      <param name="mode">One of the <see cref="T:System.Windows.Data.RelativeSourceMode" /> values.</param>
    </member>
    <member name="M:System.Windows.Data.RelativeSource.#ctor(System.Windows.Data.RelativeSourceMode,System.Type,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.RelativeSource" /> class with an initial mode and additional tree-walking qualifiers for finding the desired relative source.</summary>
      <param name="mode">One of the <see cref="T:System.Windows.Data.RelativeSourceMode" /> values. For this signature to be relevant, this should be <see cref="F:System.Windows.Data.RelativeSourceMode.FindAncestor" />.</param>
      <param name="ancestorType">The <see cref="T:System.Type" /> of ancestor to look for.</param>
      <param name="ancestorLevel">The ordinal position of the desired ancestor among all ancestors of the given type.</param>
    </member>
    <member name="P:System.Windows.Data.RelativeSource.AncestorLevel">
      <summary>Gets or sets the level of ancestor to look for, in <see cref="F:System.Windows.Data.RelativeSourceMode.FindAncestor" /> mode. Use 1 to indicate the one nearest to the binding target element.</summary>
      <returns>The ancestor level. Use 1 to indicate the one nearest to the binding target element.</returns>
    </member>
    <member name="P:System.Windows.Data.RelativeSource.AncestorType">
      <summary>Gets or sets the type of ancestor to look for.</summary>
      <returns>The type of ancestor. The default value is <see langword="null" />.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Data.RelativeSource" /> is not in the <see cref="F:System.Windows.Data.RelativeSourceMode.FindAncestor" /> mode.</exception>
    </member>
    <member name="P:System.Windows.Data.RelativeSource.Mode">
      <summary>Gets or sets a <see cref="T:System.Windows.Data.RelativeSourceMode" /> value that describes the location of the binding source relative to the position of the binding target.</summary>
      <returns>One of the <see cref="T:System.Windows.Data.RelativeSourceMode" /> values. The default value is <see langword="null" />.</returns>
      <exception cref="T:System.InvalidOperationException">This property is immutable after initialization. Instead of changing the <see cref="P:System.Windows.Data.RelativeSource.Mode" /> on this instance, create a new <see cref="T:System.Windows.Data.RelativeSource" /> or use a different static instance.</exception>
    </member>
    <member name="P:System.Windows.Data.RelativeSource.PreviousData">
      <summary>Gets a static value that is used to return a <see cref="T:System.Windows.Data.RelativeSource" /> constructed for the <see cref="F:System.Windows.Data.RelativeSourceMode.PreviousData" /> mode.</summary>
      <returns>A static <see cref="T:System.Windows.Data.RelativeSource" />.</returns>
    </member>
    <member name="M:System.Windows.Data.RelativeSource.ProvideValue(System.IServiceProvider)">
      <summary>Returns an object that should be set as the value on the target object's property for this markup extension. For <see cref="T:System.Windows.Data.RelativeSource" />, this is another <see cref="T:System.Windows.Data.RelativeSource" />, using the appropriate source for the specified mode.</summary>
      <param name="serviceProvider">An object that can provide services for the markup extension. In this implementation, this parameter can be <see langword="null" />.</param>
      <returns>Another <see cref="T:System.Windows.Data.RelativeSource" />.</returns>
    </member>
    <member name="P:System.Windows.Data.RelativeSource.Self">
      <summary>Gets a static value that is used to return a <see cref="T:System.Windows.Data.RelativeSource" /> constructed for the <see cref="F:System.Windows.Data.RelativeSourceMode.Self" /> mode.</summary>
      <returns>A static <see cref="T:System.Windows.Data.RelativeSource" />.</returns>
    </member>
    <member name="M:System.Windows.Data.RelativeSource.ShouldSerializeAncestorLevel">
      <summary>Indicates whether the <see cref="P:System.Windows.Data.RelativeSource.AncestorLevel" /> property should be persisted.</summary>
      <returns>
        <see langword="true" /> if the property value has changed from its default; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Data.RelativeSource.ShouldSerializeAncestorType">
      <summary>Indicates whether the <see cref="P:System.Windows.Data.RelativeSource.AncestorType" /> property should be persisted.</summary>
      <returns>
        <see langword="true" /> if the property value has changed from its default; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Data.RelativeSource.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Windows.Data.RelativeSource.System#ComponentModel#ISupportInitialize#EndInit">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:System.Windows.Data.RelativeSource.TemplatedParent">
      <summary>Gets a static value that is used to return a <see cref="T:System.Windows.Data.RelativeSource" /> constructed for the <see cref="F:System.Windows.Data.RelativeSourceMode.TemplatedParent" /> mode.</summary>
      <returns>A static <see cref="T:System.Windows.Data.RelativeSource" />.</returns>
    </member>
    <member name="T:System.Windows.Data.RelativeSourceMode">
      <summary>Describes the location of the binding source relative to the position of the binding target.</summary>
    </member>
    <member name="F:System.Windows.Data.RelativeSourceMode.FindAncestor">
      <summary>Refers to the ancestor in the parent chain of the data-bound element. You can use this to bind to an ancestor of a specific type or its subclasses. This is the mode you use if you want to specify <see cref="P:System.Windows.Data.RelativeSource.AncestorType" /> and/or <see cref="P:System.Windows.Data.RelativeSource.AncestorLevel" />.</summary>
    </member>
    <member name="F:System.Windows.Data.RelativeSourceMode.PreviousData">
      <summary>Allows you to bind the previous data item (not that control that contains the data item) in the list of data items being displayed.</summary>
    </member>
    <member name="F:System.Windows.Data.RelativeSourceMode.Self">
      <summary>Refers to the element on which you are setting the binding and allows you to bind one property of that element to another property on the same element.</summary>
    </member>
    <member name="F:System.Windows.Data.RelativeSourceMode.TemplatedParent">
      <summary>Refers to the element to which the template (in which the data-bound element exists) is applied. This is similar to setting a <see cref="T:System.Windows.TemplateBindingExtension" /> and is only applicable if the <see cref="T:System.Windows.Data.Binding" /> is within a template.</summary>
    </member>
    <member name="T:System.Windows.Data.UpdateSourceExceptionFilterCallback">
      <summary>Represents the method that handles exceptions that are thrown during the update of the binding source value. This must be used with the <see cref="T:System.Windows.Controls.ExceptionValidationRule" />.</summary>
      <param name="bindExpression">The object with the exception.</param>
      <param name="exception">The exception encountered.</param>
      <returns>An object that is typically one of the following:  
  Value  

  Description  

 <see langword="null" /> To ignore any exceptions. The default behavior (if there is no <see cref="T:System.Windows.Data.UpdateSourceExceptionFilterCallback" />) is to create a <see cref="T:System.Windows.Controls.ValidationError" /> with the exception and adds it to the <see cref="P:System.Windows.Controls.Validation.Errors" /> collection of the bound element.  

  Any object  

  To create a <see cref="T:System.Windows.Controls.ValidationError" /> object with the <see cref="P:System.Windows.Controls.ValidationError.ErrorContent" /> set to that object.  

 The <see cref="T:System.Windows.Controls.ValidationError" /> object is added to <see cref="P:System.Windows.Controls.Validation.Errors" /> collection of the bound element.  

  A <see cref="T:System.Windows.Controls.ValidationError" /> object  

  To set the <see cref="T:System.Windows.Data.BindingExpression" /> or <see cref="T:System.Windows.Data.MultiBindingExpression" /> object as the <see cref="P:System.Windows.Controls.ValidationError.BindingInError" />. The <see cref="T:System.Windows.Controls.ValidationError" /> object is added to <see cref="P:System.Windows.Controls.Validation.Errors" /> collection of the bound element.</returns>
    </member>
    <member name="T:System.Windows.Data.UpdateSourceTrigger">
      <summary>Describes the timing of binding source updates.</summary>
    </member>
    <member name="F:System.Windows.Data.UpdateSourceTrigger.Default">
      <summary>The default <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> value of the binding target property. The default value for most dependency properties is <see cref="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged" />, while the <see cref="P:System.Windows.Controls.TextBox.Text" /> property has a default value of <see cref="F:System.Windows.Data.UpdateSourceTrigger.LostFocus" />.</summary>
    </member>
    <member name="F:System.Windows.Data.UpdateSourceTrigger.Explicit">
      <summary>Updates the binding source only when you call the <see cref="M:System.Windows.Data.BindingExpression.UpdateSource" /> method.</summary>
    </member>
    <member name="F:System.Windows.Data.UpdateSourceTrigger.LostFocus">
      <summary>Updates the binding source whenever the binding target element loses focus.</summary>
    </member>
    <member name="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged">
      <summary>Updates the binding source immediately whenever the binding target property changes.</summary>
    </member>
    <member name="T:System.Windows.Data.ValueConversionAttribute">
      <summary>Represents an attribute that allows the author of a value converter to specify the data types involved in the implementation of the converter.</summary>
    </member>
    <member name="M:System.Windows.Data.ValueConversionAttribute.#ctor(System.Type,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.ValueConversionAttribute" /> class with the specified source type and target type.</summary>
      <param name="sourceType">The type this converter converts.</param>
      <param name="targetType">The type this converter converts to.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="targetType" /> parameter cannot be <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Data.ValueConversionAttribute.GetHashCode">
      <summary>Returns the hash code for this instance of <see cref="T:System.Windows.Data.ValueConversionAttribute" />.</summary>
      <returns>The hash code for this instance of <see cref="T:System.Windows.Data.ValueConversionAttribute" />.</returns>
    </member>
    <member name="P:System.Windows.Data.ValueConversionAttribute.ParameterType">
      <summary>Gets or sets the type of the optional value converter parameter object.</summary>
      <returns>The type of the optional value converter parameter object.</returns>
    </member>
    <member name="P:System.Windows.Data.ValueConversionAttribute.SourceType">
      <summary>Gets the type this converter converts.</summary>
      <returns>The type this converter converts.</returns>
    </member>
    <member name="P:System.Windows.Data.ValueConversionAttribute.TargetType">
      <summary>Gets the type this converter converts to.</summary>
      <returns>The type this converter converts to.</returns>
    </member>
    <member name="P:System.Windows.Data.ValueConversionAttribute.TypeId">
      <summary>Gets the unique identifier of this <see cref="T:System.Windows.Data.ValueConversionAttribute" /> instance.</summary>
      <returns>The unique identifier of this <see cref="T:System.Windows.Data.ValueConversionAttribute" /> instance.</returns>
    </member>
    <member name="T:System.Windows.Data.ValueUnavailableException">
      <summary>The exception that is thrown by the <see cref="M:System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)" /> method when the value is not available.</summary>
    </member>
    <member name="M:System.Windows.Data.ValueUnavailableException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.ValueUnavailableException" /> class.</summary>
    </member>
    <member name="M:System.Windows.Data.ValueUnavailableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.ValueUnavailableException" /> class with serialized data.</summary>
      <param name="info">The object that holds the serialized object data.</param>
      <param name="context">The contextual information about the source or destination.</param>
    </member>
    <member name="M:System.Windows.Data.ValueUnavailableException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.ValueUnavailableException" /> class with the specified message.</summary>
      <param name="message">The message that describes the error.</param>
    </member>
    <member name="M:System.Windows.Data.ValueUnavailableException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.ValueUnavailableException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not a null reference (<see langword="Nothing" /> in Visual Basic), the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</param>
    </member>
    <member name="T:System.Windows.Data.XmlDataProvider">
      <summary>Enables declarative access to XML data for data binding.</summary>
    </member>
    <member name="M:System.Windows.Data.XmlDataProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.XmlDataProvider" /> class.</summary>
    </member>
    <member name="P:System.Windows.Data.XmlDataProvider.BaseUri">
      <summary>This type or member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <returns>The base URI.</returns>
    </member>
    <member name="M:System.Windows.Data.XmlDataProvider.BeginQuery">
      <summary>Prepares the loading of either the inline XML or the external XML file to produce a collection of XML nodes.</summary>
    </member>
    <member name="P:System.Windows.Data.XmlDataProvider.Document">
      <summary>Gets or sets the <see cref="T:System.Xml.XmlDocument" /> to use as the binding source.</summary>
      <returns>The <see cref="T:System.Xml.XmlDocument" /> to use as the binding source. The default value is <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Data.XmlDataProvider.EndInit">
      <summary>Indicates that the initialization of this element has completed; this causes a <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" /> if no other <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /> is outstanding.</summary>
    </member>
    <member name="P:System.Windows.Data.XmlDataProvider.IsAsynchronous">
      <summary>Gets or sets a value that indicates whether node collection creation will be performed in a worker thread or in the active context.</summary>
      <returns>
        <see langword="true" /> to perform node collection creation in a worker thread; otherwise, <see langword="false" />. The default value is <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Data.XmlDataProvider.ShouldSerializeSource">
      <summary>Indicates whether the <see cref="P:System.Windows.Data.XmlDataProvider.Source" /> property should be persisted.</summary>
      <returns>
        <see langword="true" /> if the property value has changed from its default; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Data.XmlDataProvider.ShouldSerializeXmlSerializer">
      <summary>Indicates whether the <see cref="P:System.Windows.Data.XmlDataProvider.XmlSerializer" /> property should be persisted.</summary>
      <returns>
        <see langword="true" /> if the property value has changed from its default; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Data.XmlDataProvider.ShouldSerializeXPath">
      <summary>Indicates whether the <see cref="P:System.Windows.Data.XmlDataProvider.XPath" /> property should be persisted.</summary>
      <returns>
        <see langword="true" /> if the property value has changed from its default; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.XmlDataProvider.Source">
      <summary>Gets or sets the <see cref="T:System.Uri" /> of the XML data file to use as the binding source.</summary>
      <returns>The <see cref="T:System.Uri" /> of the XML data file to use as the binding source. The default value is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Data.XmlDataProvider.System#Windows#Markup#IUriContext#BaseUri">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>The base URI.</returns>
    </member>
    <member name="P:System.Windows.Data.XmlDataProvider.XmlNamespaceManager">
      <summary>Gets or sets the <see cref="T:System.Xml.XmlNamespaceManager" /> used to run <see cref="P:System.Windows.Data.XmlDataProvider.XPath" /> queries.</summary>
      <returns>The <see cref="T:System.Xml.XmlNamespaceManager" /> used to run <see cref="P:System.Windows.Data.XmlDataProvider.XPath" /> queries. The default value is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Data.XmlDataProvider.XmlSerializer">
      <summary>Gets the inline XML content.</summary>
      <returns>The inline XML content.</returns>
    </member>
    <member name="P:System.Windows.Data.XmlDataProvider.XPath">
      <summary>Gets or sets the <see langword="XPath" /> query used to generate the data collection.</summary>
      <returns>The <see langword="XPath" /> query used to generate the data collection. The default is an empty string.</returns>
    </member>
    <member name="T:System.Windows.Data.XmlNamespaceMapping">
      <summary>Declares a mapping between a uniform resource identifier (URI) and a prefix.</summary>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMapping.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> class.</summary>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMapping.#ctor(System.String,System.Uri)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> class with the specified prefix and uniform resource identifier (URI).</summary>
      <param name="prefix">The prefix to use in Extensible Application Markup Language (XAML).</param>
      <param name="uri">The <see cref="T:System.Uri" /> of the namespace to create the mapping for.</param>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMapping.Equals(System.Object)">
      <summary>Returns a value that indicates whether this <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> is equivalent to the specified instance.</summary>
      <param name="obj">The instance to compare for equality.</param>
      <returns>
        <see langword="true" /> if the two instances are the same; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMapping.GetHashCode">
      <summary>Returns the hash code for this <see cref="T:System.Windows.Data.XmlNamespaceMapping" />.</summary>
      <returns>The hash code for this <see cref="T:System.Windows.Data.XmlNamespaceMapping" />.</returns>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMapping.op_Equality(System.Windows.Data.XmlNamespaceMapping,System.Windows.Data.XmlNamespaceMapping)">
      <summary>Performs equality comparison by value.</summary>
      <param name="mappingA">The first <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> object to compare.</param>
      <param name="mappingB">The second <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> object to compare.</param>
      <returns>
        <see langword="true" /> if the two <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> objects are the same; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMapping.op_Inequality(System.Windows.Data.XmlNamespaceMapping,System.Windows.Data.XmlNamespaceMapping)">
      <summary>Performs inequality comparison by value.</summary>
      <param name="mappingA">The first <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> object to compare.</param>
      <param name="mappingB">The second <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> object to compare.</param>
      <returns>
        <see langword="true" /> if the two <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> objects are not the same; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Data.XmlNamespaceMapping.Prefix">
      <summary>Gets or sets the prefix to use in Extensible Application Markup Language (XAML).</summary>
      <returns>The prefix to associate with the URI. The default is an empty string("").</returns>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMapping.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMapping.System#ComponentModel#ISupportInitialize#EndInit">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:System.Windows.Data.XmlNamespaceMapping.Uri">
      <summary>Gets or sets the <see cref="T:System.Uri" /> of the namespace for which to create a mapping.</summary>
      <returns>The URI of the namespace. The default is <see langword="null" />.</returns>
    </member>
    <member name="T:System.Windows.Data.XmlNamespaceMappingCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> objects.</summary>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.XmlNamespaceMappingCollection" /> class.</summary>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.Add(System.Windows.Data.XmlNamespaceMapping)">
      <summary>Adds a <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> object to this collection.</summary>
      <param name="mapping">The <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> object to add. This cannot be <see langword="null" />.</param>
      <exception cref="T:System.ArgumentNullException">If <paramref name="mapping" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">If the <see cref="P:System.Windows.Data.XmlNamespaceMapping.Uri" /> of the <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> object is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.AddChild(System.Object)">
      <summary>Adds a <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> object to this collection.</summary>
      <param name="value">The <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> object to add. This cannot be <see langword="null" />.</param>
      <exception cref="T:System.ArgumentException">If <paramref name="mapping" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.AddText(System.String)">
      <summary>Adds a text string as a child of this <see cref="T:System.Windows.Data.XmlNamespaceMappingCollection" /> object.</summary>
      <param name="text">The text string to add as a child.</param>
      <exception cref="T:System.ArgumentNullException">If <paramref name="text" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.Clear">
      <summary>Removes all <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> objects in this collection.</summary>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.Contains(System.Windows.Data.XmlNamespaceMapping)">
      <summary>Returns a value that indicates whether this collection contains the specified <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> object.</summary>
      <param name="mapping">The <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> object of interest. This cannot be <see langword="null" />.</param>
      <returns>
        <see langword="true" /> if this collection contains the specified <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> object; otherwise, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">If <paramref name="mapping" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">If the <see cref="P:System.Windows.Data.XmlNamespaceMapping.Uri" /> of the <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> object is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.CopyTo(System.Windows.Data.XmlNamespaceMapping[],System.Int32)">
      <summary>Copies the items of the collection to the specified array, starting at the specified index.</summary>
      <param name="array">The array that is the destination of the items copied from the collection.</param>
      <param name="arrayIndex">The zero-based index in array at which copying starts.</param>
      <exception cref="T:System.ArgumentNullException">If <paramref name="array" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">If the number of items exceed the length of the array.</exception>
    </member>
    <member name="P:System.Windows.Data.XmlNamespaceMappingCollection.Count">
      <summary>Gets the number of <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> objects in the collection.</summary>
      <returns>The number of <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> objects in the collection.</returns>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.GetEnumerator">
      <summary>Returns an <see cref="T:System.Collections.IEnumerator" /> object that you can use to enumerate the items in this collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that you can use to enumerate the items in this collection.</returns>
    </member>
    <member name="P:System.Windows.Data.XmlNamespaceMappingCollection.IsReadOnly">
      <summary>Gets a value that indicates whether this collection is read-only.</summary>
      <returns>This always returns <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.ProtectedGetEnumerator">
      <summary>Returns a generic <see cref="T:System.Collections.Generic.IEnumerator`1" /> object.</summary>
      <returns>A generic <see cref="T:System.Collections.Generic.IEnumerator`1" /> object.</returns>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.Remove(System.Windows.Data.XmlNamespaceMapping)">
      <summary>Removes the specified <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> object from this collection.</summary>
      <param name="mapping">The <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> object to remove. This cannot be <see langword="null" />.</param>
      <returns>
        <see langword="true" /> if the specified <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> object has been successfully removed; otherwise, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">If <paramref name="mapping" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">If the <see cref="P:System.Windows.Data.XmlNamespaceMapping.Uri" /> of the <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> object is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.System#Collections#Generic#IEnumerable{System#Windows#Data#XmlNamespaceMapping}#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Markup.IAddChild.AddChild(System.Object)" />.</summary>
      <param name="value">The child <see cref="T:System.Object" /> to add.</param>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Markup.IAddChild.AddText(System.String)" />.</summary>
      <param name="text">The text to add to the <see cref="T:System.Object" />.</param>
    </member>
    <member name="T:System.Windows.DataTemplate">
      <summary>Describes the visual structure of a data object.</summary>
    </member>
    <member name="M:System.Windows.DataTemplate.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.DataTemplate" /> class.</summary>
    </member>
    <member name="M:System.Windows.DataTemplate.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.DataTemplate" /> class with the specified <see cref="P:System.Windows.DataTemplate.DataType" /> property.</summary>
      <param name="dataType">If the template is intended for object data, this is the Type name of the data object.</param>
    </member>
    <member name="P:System.Windows.DataTemplate.DataTemplateKey">
      <summary>Gets the default key of the <see cref="T:System.Windows.DataTemplate" />.</summary>
      <returns>The default key of the <see cref="T:System.Windows.DataTemplate" />.</returns>
    </member>
    <member name="P:System.Windows.DataTemplate.DataType">
      <summary>Gets or sets the type for which this <see cref="T:System.Windows.DataTemplate" /> is intended.</summary>
      <returns>The default value is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.DataTemplate.Triggers">
      <summary>Gets a collection of triggers that apply property values or perform actions based on one or more conditions.</summary>
      <returns>A collection of trigger objects. The default value is <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.DataTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)">
      <summary>Checks the templated parent against a set of rules.</summary>
      <param name="templatedParent">The element this template is applied to.</param>
    </member>
    <member name="T:System.Windows.DataTemplateKey">
      <summary>Represents the resource key for the <see cref="T:System.Windows.DataTemplate" /> class.</summary>
    </member>
    <member name="M:System.Windows.DataTemplateKey.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.DataTemplateKey" /> class.</summary>
    </member>
    <member name="M:System.Windows.DataTemplateKey.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.DataTemplateKey" /> class with the specified type.</summary>
      <param name="dataType">The type for which this template is designed. This is either a <see cref="T:System.Type" /> (to indicate that the <see cref="T:System.Windows.DataTemplate" /> is used to display items of the given type), or a string (to indicate that the <see cref="T:System.Windows.DataTemplate" /> is used to display <see cref="T:System.Xml.XmlNode" /> elements with the given tag name).</param>
    </member>
    <member name="T:System.Windows.DataTrigger">
      <summary>Represents a trigger that applies property values or performs actions when the bound data meets a specified condition.</summary>
    </member>
    <member name="M:System.Windows.DataTrigger.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.DataTrigger" /> class.</summary>
    </member>
    <member name="P:System.Windows.DataTrigger.Binding">
      <summary>Gets or sets the binding that produces the property value of the data object.</summary>
      <returns>The default value is <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.DataTrigger.ReceiveMarkupExtension(System.Object,System.Windows.Markup.XamlSetMarkupExtensionEventArgs)">
      <summary>Handles cases where a markup extension provides a value for a property of a <see cref="T:System.Windows.DataTrigger" /> object.</summary>
      <param name="targetObject">The object where the markup extension sets the value.</param>
      <param name="eventArgs">Data that is relevant for markup extension processing.</param>
    </member>
    <member name="P:System.Windows.DataTrigger.Setters">
      <summary>Gets a collection of <see cref="T:System.Windows.Setter" /> objects, which describe the property values to apply when the data item meets the specified condition.</summary>
      <returns>The default value is <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.DataTrigger.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>Adds a child object.</summary>
      <param name="value">The child object to add.</param>
    </member>
    <member name="M:System.Windows.DataTrigger.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>Adds the text content of a node to the object.</summary>
      <param name="text">The text to add to the object.</param>
    </member>
    <member name="P:System.Windows.DataTrigger.Value">
      <summary>Gets or sets the value to be compared with the property value of the data object.</summary>
      <returns>The default value is <see langword="null" />. See also the Exceptions section.</returns>
      <exception cref="T:System.ArgumentException">Expressions are not supported. Bindings are not supported.</exception>
    </member>
    <member name="T:System.Windows.DeferrableContent">
      <summary>Represents deferrable content that is held within BAML as a stream.</summary>
    </member>
    <member name="T:System.Windows.DeferrableContentConverter">
      <summary>Converts a stream to a <see cref="T:System.Windows.DeferrableContent" /> instance.</summary>
    </member>
    <member name="M:System.Windows.DeferrableContentConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.DeferrableContentConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.DeferrableContentConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns whether this converter can convert the specified object to a <see cref="T:System.Windows.DeferrableContent" /> object.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="sourceType">A <see cref="T:System.Type" /> that represents the type you want to convert from.</param>
      <returns>
        <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DeferrableContentConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the specified stream to a new <see cref="T:System.Windows.DeferrableContent" /> object.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</param>
      <param name="value">The source stream to convert.</param>
      <returns>A new <see cref="T:System.Windows.DeferrableContent" /> object.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="context" /> is not able to provide the necessary XAML schema context for BAML.  
-or-  
<see cref="T:System.Windows.Markup.IProvideValueTarget" /> service interpretation of <paramref name="context" /> determines that the target object is not a <see cref="T:System.Windows.ResourceDictionary" />.  
-or-  
<paramref name="value" /> is not a valid byte stream.</exception>
    </member>
    <member name="T:System.Windows.DependencyPropertyHelper">
      <summary>Provides a single helper method (<see cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />) that reports the property system source for the effective value of a dependency property.</summary>
    </member>
    <member name="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>Returns a structure that reports various metadata and property system characteristics of a specified dependency property on a particular <see cref="T:System.Windows.DependencyObject" />.</summary>
      <param name="dependencyObject">The element that contains the <paramref name="dependencyProperty" /> to report information for.</param>
      <param name="dependencyProperty">The identifier for the dependency property to report information for.</param>
      <returns>A <see cref="T:System.Windows.ValueSource" /> structure that reports the specific information.</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyHelper.IsTemplatedValueDynamic(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>Indicates whether a specified element belongs to an instance of a template that defines a value for the specified property that may change at runtime based on changes elsewhere.</summary>
      <param name="elementInTemplate">An element that belongs to a template instance.</param>
      <param name="dependencyProperty">A dependency property.</param>
      <returns>
        <see langword="true" /> if <paramref name="elementInTemplate" /> belongs to an instance of a template that defines a value for the specified property that may change at runtime based on changes elsewhere; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Diagnostics.ResourceDictionaryDiagnostics">
      <summary>Enables enumeration of generic and themed <see cref="T:System.Windows.ResourceDictionary" /> instances, and provides      a notification infrastructure for listening to the loading and unloading of <see cref="T:System.Windows.ResourceDictionary" /> instances.</summary>
    </member>
    <member name="P:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.GenericResourceDictionaries">
      <summary>Gets all instances of generic <see cref="T:System.Windows.ResourceDictionary" /> objects loaded by the application when a managed debugger is attached.</summary>
      <returns>
        <see cref="P:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.GenericResourceDictionaries" /> property</returns>
    </member>
    <member name="E:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.GenericResourceDictionaryLoaded">
      <summary>Occurs when a managed debugger is attached and a generic <see cref="T:System.Windows.ResourceDictionary" /> object is loaded         by the application.</summary>
    </member>
    <member name="M:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.GetApplicationOwners(System.Windows.ResourceDictionary)">
      <summary>Gets the application owners of a specified resource dictionary.</summary>
      <param name="dictionary">A resource dictionary.</param>
      <returns>The application owners of <paramref name="dictionary" />. If there are no application owners, the method returns <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.GetFrameworkContentElementOwners(System.Windows.ResourceDictionary)">
      <summary>Gets the framework content owners of a specified resource dictionary.</summary>
      <param name="dictionary">A resource dictionary.</param>
      <returns>The framework content owners of <paramref name="dictionary" />. If there are no framework content owners, the method returns <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.GetFrameworkElementOwners(System.Windows.ResourceDictionary)">
      <summary>Gets the framework element owners of a specified resource dictionary.</summary>
      <param name="dictionary">A resource dictionary.</param>
      <returns>The framework element owners of <paramref name="dictionary" />. If there are no framework element owners, the method returns <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.GetResourceDictionariesForSource(System.Uri)">
      <summary>Finds the resource dictionaries created from a given source URI.</summary>
      <param name="uri">The source URI.</param>
      <returns>The resource dictionaries created from <paramref name="uri" />. The method returns <see langword="null" /> if Visual Diagnostics is not enabled, the <see langword="ENABLE_XAML_DIAGNOSTICS_SOURCE_INFO" /> environment variable is not set or is set to <see langword="false" />, or no resource dictionaries were created from <paramref name="uri" />.</returns>
    </member>
    <member name="E:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.StaticResourceResolved">
      <summary>Occurs when a static resource reference is resolved.</summary>
    </member>
    <member name="P:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.ThemedResourceDictionaries">
      <summary>Gets all instances of themed <see cref="T:System.Windows.ResourceDictionary" /> objects loaded by the application when a managed debugger is attached.</summary>
      <returns>
        <see cref="P:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.ThemedResourceDictionaries" />
      </returns>
    </member>
    <member name="E:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.ThemedResourceDictionaryLoaded">
      <summary>Occurs when a managed debugger is attached, and a themed <see cref="T:System.Windows.ResourceDictionary" /> object is loaded         by the application.</summary>
    </member>
    <member name="E:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.ThemedResourceDictionaryUnloaded">
      <summary>Occurs when a managed debugger is attached and a themed <see cref="T:System.Windows.ResourceDictionary" /> object is unloaded         from the application.</summary>
    </member>
    <member name="T:System.Windows.Diagnostics.ResourceDictionaryInfo">
      <summary>Represents information about a <see cref="T:System.Windows.ResourceDictionary" /> object.</summary>
    </member>
    <member name="P:System.Windows.Diagnostics.ResourceDictionaryInfo.Assembly">
      <summary>Gets the assembly that uses the <see cref="T:System.Windows.ResourceDictionary" /> object referenced by the <see cref="P:System.Windows.Diagnostics.ResourceDictionaryInfo.ResourceDictionaryAssembly" /> property.</summary>
    </member>
    <member name="P:System.Windows.Diagnostics.ResourceDictionaryInfo.ResourceDictionary">
      <summary>Gets the resource dictionary for which additional information is described by this <see cref="T:System.Windows.Diagnostics.ResourceDictionaryInfo" /> object instance.</summary>
    </member>
    <member name="P:System.Windows.Diagnostics.ResourceDictionaryInfo.ResourceDictionaryAssembly">
      <summary>Gets the name of the assembly from which the resource dictionary is loaded.</summary>
    </member>
    <member name="P:System.Windows.Diagnostics.ResourceDictionaryInfo.SourceUri">
      <summary>Gets the URI of the compiled BAML file embedded in the <see cref="P:System.Windows.Diagnostics.ResourceDictionaryInfo.ResourceDictionaryAssembly" /> property from which the resource dictionary is loaded.</summary>
    </member>
    <member name="T:System.Windows.Diagnostics.ResourceDictionaryLoadedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.GenericResourceDictionaryLoaded" /> and <see cref="E:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.ThemedResourceDictionaryLoaded" /> events.</summary>
    </member>
    <member name="P:System.Windows.Diagnostics.ResourceDictionaryLoadedEventArgs.ResourceDictionaryInfo">
      <summary>Gets data for the <see cref="E:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.GenericResourceDictionaryLoaded" /> and <see cref="E:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.ThemedResourceDictionaryLoaded" /> events .</summary>
      <returns>Data for the <see cref="E:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.GenericResourceDictionaryLoaded" /> and <see cref="E:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.ThemedResourceDictionaryLoaded" /> events.</returns>
    </member>
    <member name="T:System.Windows.Diagnostics.ResourceDictionaryUnloadedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.ThemedResourceDictionaryUnloaded" /> event.</summary>
    </member>
    <member name="P:System.Windows.Diagnostics.ResourceDictionaryUnloadedEventArgs.ResourceDictionaryInfo">
      <summary>Gets data for the <see cref="E:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.ThemedResourceDictionaryUnloaded" /> event.</summary>
      <returns>Data for the <see cref="E:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.ThemedResourceDictionaryUnloaded" /> event.</returns>
    </member>
    <member name="T:System.Windows.Diagnostics.StaticResourceResolvedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.StaticResourceResolved" /> event.</summary>
    </member>
    <member name="P:System.Windows.Diagnostics.StaticResourceResolvedEventArgs.ResourceDictionary">
      <summary>Gets the name of the resource dictionary.</summary>
      <returns>The name of the resource dictionary.</returns>
    </member>
    <member name="P:System.Windows.Diagnostics.StaticResourceResolvedEventArgs.ResourceKey">
      <summary>The key for the requested resource.</summary>
      <returns>The key for the requested resource.</returns>
    </member>
    <member name="P:System.Windows.Diagnostics.StaticResourceResolvedEventArgs.TargetObject">
      <summary>Gets the value to assign to the target property.</summary>
      <returns>The value to assign to the target property.</returns>
    </member>
    <member name="P:System.Windows.Diagnostics.StaticResourceResolvedEventArgs.TargetProperty">
      <summary>Gets the target property that the resource sets.</summary>
      <returns>The target property that the resource sets.</returns>
    </member>
    <member name="T:System.Windows.DialogResultConverter">
      <summary>Converts the <see cref="P:System.Windows.Window.DialogResult" /> property, which is a <see cref="T:System.Nullable`1" /> value of type <see cref="T:System.Boolean" />, to and from other types.</summary>
    </member>
    <member name="M:System.Windows.DialogResultConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.DialogResultConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.DialogResultConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
        <see cref="T:System.Windows.DialogResultConverter" /> does not support converting from other types to <see cref="P:System.Windows.Window.DialogResult" /> (a <see cref="T:System.Nullable`1" /> value of type <see cref="T:System.Boolean" />).</summary>
      <param name="typeDescriptorContext">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="sourceType">A <see cref="T:System.Type" /> that represents the type to convert from.</param>
      <returns>A <see cref="T:System.Boolean" /> that always returns <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DialogResultConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
        <see cref="T:System.Windows.DialogResultConverter" /> does not support converting from <see cref="P:System.Windows.Window.DialogResult" /> (a <see cref="T:System.Nullable`1" /> value of type <see cref="T:System.Boolean" />) to other types.</summary>
      <param name="typeDescriptorContext">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="destinationType">A <see cref="T:System.Type" /> that represents the type to convert to.</param>
      <returns>A <see cref="T:System.Boolean" /> that always returns <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DialogResultConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
        <see cref="T:System.Windows.DialogResultConverter" /> does not support converting from <see cref="P:System.Windows.Window.DialogResult" /> (a <see cref="T:System.Nullable`1" /> value of type <see cref="T:System.Boolean" />) to other types.</summary>
      <param name="typeDescriptorContext">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="cultureInfo">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture. If <see langword="null" /> is passed, the current culture is assumed.</param>
      <param name="source">The <see cref="T:System.Object" /> to convert.</param>
      <returns>Always raises <see cref="T:System.InvalidOperationException" />.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Windows.DialogResultConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" /> is called.</exception>
    </member>
    <member name="M:System.Windows.DialogResultConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
        <see cref="T:System.Windows.DialogResultConverter" /> does not support converting from other types to <see cref="P:System.Windows.Window.DialogResult" /> (a <see cref="T:System.Nullable`1" /> value of type <see cref="T:System.Boolean" />).</summary>
      <param name="typeDescriptorContext">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="cultureInfo">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture. If <see langword="null" /> is passed, the current culture is assumed.</param>
      <param name="value">The <see cref="T:System.Object" /> to convert.</param>
      <param name="destinationType">The <see cref="T:System.Type" /> to convert the value parameter to.</param>
      <returns>Always raises <see cref="T:System.InvalidOperationException" />.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Windows.DialogResultConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" /> is called.</exception>
    </member>
    <member name="T:System.Windows.Documents.Adorner">
      <summary>Abstract class that represents a <see cref="T:System.Windows.FrameworkElement" /> that decorates a <see cref="T:System.Windows.UIElement" />.</summary>
    </member>
    <member name="M:System.Windows.Documents.Adorner.#ctor(System.Windows.UIElement)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Adorner" /> class.</summary>
      <param name="adornedElement">The element to bind the adorner to.</param>
      <exception cref="T:System.ArgumentNullException">adornedElement is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Documents.Adorner.AdornedElement">
      <summary>Gets the <see cref="T:System.Windows.UIElement" /> that this adorner is bound to.</summary>
      <returns>The element that this adorner is bound to. The default value is <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.Adorner.GetDesiredTransform(System.Windows.Media.GeneralTransform)">
      <summary>Returns a <see cref="T:System.Windows.Media.Transform" /> for the adorner, based on the transform that is currently applied to the adorned element.</summary>
      <param name="transform">The transform that is currently applied to the adorned element.</param>
      <returns>A transform to apply to the adorner.</returns>
    </member>
    <member name="M:System.Windows.Documents.Adorner.GetLayoutClip(System.Windows.Size)">
      <summary>For a description of this member, see <see cref="M:System.Windows.UIElement.GetLayoutClip(System.Windows.Size)" />.</summary>
      <param name="layoutSlotSize">The available size provided by the element.</param>
      <returns>The potential clipping geometry.</returns>
    </member>
    <member name="P:System.Windows.Documents.Adorner.IsClipEnabled">
      <summary>Gets or sets a value that indicates whether clipping of the adorner is enabled.</summary>
      <returns>A <see langword="Boolean" /> value indicating whether clipping of the adorner is enabled.  
 If this property is <see langword="false" />, the adorner is not clipped.  
 If this property is <see langword="true" />, the adorner is clipped using the same clipping geometry as the adorned element.  
 The default value is <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.Adorner.MeasureOverride(System.Windows.Size)">
      <summary>Implements any custom measuring behavior for the adorner.</summary>
      <param name="constraint">A size to constrain the adorner to.</param>
      <returns>A <see cref="T:System.Windows.Size" /> object representing the amount of layout space needed by the adorner.</returns>
    </member>
    <member name="T:System.Windows.Documents.AdornerDecorator">
      <summary>Provides an <see cref="T:System.Windows.Documents.AdornerLayer" /> for the child elements in the visual tree.</summary>
    </member>
    <member name="M:System.Windows.Documents.AdornerDecorator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.AdornerDecorator" /> class.</summary>
    </member>
    <member name="P:System.Windows.Documents.AdornerDecorator.AdornerLayer">
      <summary>Gets the <see cref="T:System.Windows.Documents.AdornerLayer" /> associated with this <see cref="T:System.Windows.Documents.AdornerDecorator" />.</summary>
      <returns>The <see cref="T:System.Windows.Documents.AdornerLayer" /> associated with this adorner decorator.</returns>
    </member>
    <member name="M:System.Windows.Documents.AdornerDecorator.ArrangeOverride(System.Windows.Size)">
      <summary>Positions child elements and determines a size for the <see cref="T:System.Windows.Documents.AdornerDecorator" />.</summary>
      <param name="finalSize">The size reserved for this element by its parent.</param>
      <returns>The actual size needed by the element.  This return value is typically the same as the value passed to finalSize.</returns>
    </member>
    <member name="P:System.Windows.Documents.AdornerDecorator.Child">
      <summary>Gets or sets the single child of an <see cref="T:System.Windows.Documents.AdornerDecorator" />.</summary>
      <returns>The single child of an <see cref="T:System.Windows.Documents.AdornerDecorator" />. This property has no default value.</returns>
    </member>
    <member name="M:System.Windows.Documents.AdornerDecorator.GetVisualChild(System.Int32)">
      <summary>Gets a <see cref="T:System.Windows.Media.Visual" /> child at the specified <paramref name="index" /> position.</summary>
      <param name="index">The index position of the wanted <see cref="T:System.Windows.Media.Visual" /> child.</param>
      <returns>A <see cref="T:System.Windows.Media.Visual" /> child of the parent <see cref="T:System.Windows.Controls.Viewbox" /> element.</returns>
    </member>
    <member name="M:System.Windows.Documents.AdornerDecorator.MeasureOverride(System.Windows.Size)">
      <summary>Measures the size required for child elements and determines a size for the <see cref="T:System.Windows.Documents.AdornerDecorator" />.</summary>
      <param name="constraint">A size to constrain the <see cref="T:System.Windows.Documents.AdornerDecorator" /> to.</param>
      <returns>A <see cref="T:System.Windows.Size" /> object representing the amount of layout space needed by the <see cref="T:System.Windows.Documents.AdornerDecorator" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.AdornerDecorator.VisualChildrenCount">
      <summary>Gets the number of child <see cref="T:System.Windows.Media.Visual" /> objects in this instance of <see cref="T:System.Windows.Documents.AdornerDecorator" />.</summary>
      <returns>Either returns <c>2</c> (one for the <see cref="T:System.Windows.Documents.AdornerLayer" /> and one for the <see cref="P:System.Windows.Documents.AdornerDecorator.Child" />) or the property returns <c>0</c> if the <see cref="T:System.Windows.Documents.AdornerDecorator" /> has no child.</returns>
    </member>
    <member name="T:System.Windows.Documents.AdornerLayer">
      <summary>Represents a surface for rendering adorners.</summary>
    </member>
    <member name="M:System.Windows.Documents.AdornerLayer.Add(System.Windows.Documents.Adorner)">
      <summary>Adds an adorner to the adorner layer.</summary>
      <param name="adorner">The adorner to add.</param>
      <exception cref="T:System.ArgumentNullException">Raised when adorner is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.AdornerLayer.AdornerHitTest(System.Windows.Point)">
      <summary>Gets an <see cref="T:System.Windows.Media.AdornerHitTestResult" /> for a specified point.</summary>
      <param name="point">The point to hit test.</param>
      <returns>An <see cref="T:System.Windows.Media.AdornerHitTestResult" /> for the specified point.</returns>
    </member>
    <member name="M:System.Windows.Documents.AdornerLayer.ArrangeOverride(System.Windows.Size)">
      <summary>Positions child elements and determines a size for the <see cref="T:System.Windows.Documents.AdornerLayer" />.</summary>
      <param name="finalSize">The size reserved for this element by its parent.</param>
      <returns>The actual size needed by the element.  This return value is typically the same as the value passed to finalSize.</returns>
    </member>
    <member name="M:System.Windows.Documents.AdornerLayer.GetAdornerLayer(System.Windows.Media.Visual)">
      <summary>Returns the first adorner layer in the visual tree above a specified <see cref="T:System.Windows.Media.Visual" />.</summary>
      <param name="visual">The visual element for which to find an adorner layer.</param>
      <returns>An adorner layer for the specified visual, or null if no adorner layer can be found.</returns>
      <exception cref="T:System.ArgumentNullException">Raised when visual is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.AdornerLayer.GetAdorners(System.Windows.UIElement)">
      <summary>Returns an array of adorners that are bound to the specified <see cref="T:System.Windows.UIElement" />.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> to retrieve an array of adorners for.</param>
      <returns>An array of adorners that decorate the specified <see cref="T:System.Windows.UIElement" />, or null if there are no adorners bound to the specified element.</returns>
    </member>
    <member name="M:System.Windows.Documents.AdornerLayer.GetVisualChild(System.Int32)">
      <summary>Gets a <see cref="T:System.Windows.Media.Visual" /> child at the specified <paramref name="index" /> position.</summary>
      <param name="index">The index position of the wanted <see cref="T:System.Windows.Media.Visual" /> child.</param>
      <returns>A <see cref="T:System.Windows.Media.Visual" /> child of the parent <see cref="T:System.Windows.Documents.AdornerLayer" /> element.</returns>
    </member>
    <member name="P:System.Windows.Documents.AdornerLayer.LogicalChildren">
      <summary>Gets an enumerator that can iterate the logical child elements of this <see cref="T:System.Windows.Documents.AdornerLayer" /> element.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" />. This property has no default value.</returns>
    </member>
    <member name="M:System.Windows.Documents.AdornerLayer.MeasureOverride(System.Windows.Size)">
      <summary>Measures the size required for child elements and determines a size for the <see cref="T:System.Windows.Documents.AdornerLayer" />.</summary>
      <param name="constraint">Unused.</param>
      <returns>This method always returns a <see cref="T:System.Windows.Size" /> of (0,0).</returns>
    </member>
    <member name="M:System.Windows.Documents.AdornerLayer.Remove(System.Windows.Documents.Adorner)">
      <summary>Removes the specified <see cref="T:System.Windows.Documents.Adorner" /> from the adorner layer.</summary>
      <param name="adorner">The <see cref="T:System.Windows.Documents.Adorner" /> to remove.</param>
      <exception cref="T:System.ArgumentNullException">Raised when adorner is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.AdornerLayer.Update">
      <summary>Updates the layout and redraws all of the adorners in the adorner layer.</summary>
    </member>
    <member name="M:System.Windows.Documents.AdornerLayer.Update(System.Windows.UIElement)">
      <summary>Updates the layout and redraws all of the adorners in the adorner layer that are bound to the specified <see cref="T:System.Windows.UIElement" />.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> associated with the adorners to update.</param>
      <exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
      <exception cref="T:System.InvalidOperationException">Raised when the specified element cannot be found.</exception>
    </member>
    <member name="P:System.Windows.Documents.AdornerLayer.VisualChildrenCount">
      <summary>Gets the number of child <see cref="T:System.Windows.Media.Visual" /> objects in this instance of <see cref="T:System.Windows.Documents.AdornerLayer" />.</summary>
      <returns>The number of child <see cref="T:System.Windows.Media.Visual" /> objects in this instance of <see cref="T:System.Windows.Documents.AdornerLayer" />.</returns>
    </member>
    <member name="T:System.Windows.Documents.AnchoredBlock">
      <summary>An abstract class that provides a base for <see cref="T:System.Windows.Documents.Inline" /> elements that are used to anchor <see cref="T:System.Windows.Documents.Block" /> elements to flow content.</summary>
    </member>
    <member name="M:System.Windows.Documents.AnchoredBlock.#ctor(System.Windows.Documents.Block,System.Windows.Documents.TextPointer)">
      <summary>Initializes base class values when called by a derived class, taking a specified <see cref="T:System.Windows.Documents.Block" /> object as the initial contents of the new descendant of <see cref="T:System.Windows.Documents.AnchoredBlock" />, and a <see cref="T:System.Windows.Documents.TextPointer" /> specifying an insertion position for the new <see cref="T:System.Windows.Documents.AnchoredBlock" /> descendant.</summary>
      <param name="block">A <see cref="T:System.Windows.Documents.Block" /> object specifying the initial contents of the new element.  This parameter may be <see langword="null" />, in which case no <see cref="T:System.Windows.Documents.Block" /> is inserted.</param>
      <param name="insertionPosition">A <see cref="T:System.Windows.Documents.TextPointer" /> specifying an insertion position at which to insert the element after it is created, or <see langword="null" /> for no automatic insertion.</param>
    </member>
    <member name="P:System.Windows.Documents.AnchoredBlock.Blocks">
      <summary>Gets a <see cref="T:System.Windows.Documents.BlockCollection" /> containing the top-level <see cref="T:System.Windows.Documents.Block" /> elements that comprise the contents of the element.</summary>
      <returns>A <see cref="T:System.Windows.Documents.BlockCollection" /> containing the <see cref="T:System.Windows.Documents.Block" /> elements that comprise the contents of the element.  
 This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Documents.AnchoredBlock.BorderBrush">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.Brush" /> to use when painting the element's border.</summary>
      <returns>The brush used to apply to the element's border. The default value is a <see langword="null" /> brush.</returns>
    </member>
    <member name="F:System.Windows.Documents.AnchoredBlock.BorderBrushProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.AnchoredBlock.BorderBrush" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.AnchoredBlock.BorderThickness">
      <summary>Gets or sets the border thickness for the element.</summary>
      <returns>A <see cref="T:System.Windows.Thickness" /> structure specifying the amount of border to apply, in device independent pixels.  
 The default value is a uniform thickness of zero (0.0).</returns>
    </member>
    <member name="F:System.Windows.Documents.AnchoredBlock.BorderThicknessProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.AnchoredBlock.BorderThickness" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.AnchoredBlock.LineHeight">
      <summary>Gets or sets the height of each line of content.</summary>
      <returns>A double value specifying the height of line in device independent pixels.  <see cref="P:System.Windows.Documents.AnchoredBlock.LineHeight" /> must be equal to or greater than <c>0.0034</c> and equal to or less then <c>160000</c>.  
 A value of <see cref="F:System.Double.NaN" /> (equivalent to an attribute value of "<c>Auto</c>") causes the line height is determined automatically from the current font characteristics.  
 The default value is <see cref="F:System.Double.NaN" />.</returns>
      <exception cref="T:System.ArgumentException">Raised if an attempt is made to set <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> to a non-positive value.</exception>
    </member>
    <member name="F:System.Windows.Documents.AnchoredBlock.LineHeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.AnchoredBlock.LineHeight" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.AnchoredBlock.LineStackingStrategy">
      <summary>Gets or sets the mechanism by which a line box is determined for each line of text within the text element.</summary>
      <returns>The mechanism by which a line box is determined for each line of text within the text element. The default value is <see cref="F:System.Windows.LineStackingStrategy.MaxHeight" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.AnchoredBlock.LineStackingStrategyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.AnchoredBlock.LineStackingStrategy" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.AnchoredBlock.Margin">
      <summary>Gets or sets the margin thickness for the element.</summary>
      <returns>A <see cref="T:System.Windows.Thickness" /> structure specifying the amount of margin to apply, in device independent pixels.  
 The default value is a uniform thickness of zero (0.0).</returns>
    </member>
    <member name="F:System.Windows.Documents.AnchoredBlock.MarginProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.AnchoredBlock.Margin" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.AnchoredBlock.Padding">
      <summary>Gets or sets the padding thickness for the element.</summary>
      <returns>A <see cref="T:System.Windows.Thickness" /> structure specifying the amount of padding to apply, in device independent pixels.  
 The default value is a uniform thickness of zero (0.0).</returns>
    </member>
    <member name="F:System.Windows.Documents.AnchoredBlock.PaddingProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.AnchoredBlock.Padding" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Documents.AnchoredBlock.ShouldSerializeBlocks(System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>Returns a value that indicates whether or not the effective value of the <see cref="P:System.Windows.Documents.AnchoredBlock.Blocks" /> property should be serialized during serialization of an object deriving from <see cref="T:System.Windows.Documents.AnchoredBlock" />.</summary>
      <param name="manager">A serialization service manager object for this object.</param>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.Documents.AnchoredBlock.Blocks" /> property should be serialized; otherwise, <see langword="false" />.</returns>
      <exception cref="T:System.NullReferenceException">Raised when <paramref name="manager" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Documents.AnchoredBlock.TextAlignment">
      <summary>Gets or sets a value that indicates the horizontal alignment of text content.</summary>
      <returns>A member of the <see cref="T:System.Windows.TextAlignment" /> enumerations specifying the desired alignment.  
 The default value is <see cref="F:System.Windows.TextAlignment.Left" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.AnchoredBlock.TextAlignmentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.AnchoredBlock.TextAlignment" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Documents.Block">
      <summary>An abstract class that provides a base for all block-level flow content elements.</summary>
    </member>
    <member name="M:System.Windows.Documents.Block.#ctor">
      <summary>Initializes <see cref="T:System.Windows.Documents.Block" /> base class values when called by a derived class.</summary>
    </member>
    <member name="P:System.Windows.Documents.Block.BorderBrush">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.Brush" /> to use when painting the element's border.</summary>
      <returns>The brush used to apply to the element's border. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.BorderBrushProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Block.BorderBrush" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Block.BorderThickness">
      <summary>Gets or sets the border thickness for the element.</summary>
      <returns>A <see cref="T:System.Windows.Thickness" /> structure specifying the amount of border to apply, in device independent pixels. The default is a uniform thickness of zero (0.0).</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.BorderThicknessProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Block.BorderThickness" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Block.BreakColumnBefore">
      <summary>Gets or sets a value that indicates whether to automatically insert a column-break before this element in cases where the element participates in a column-based presentation.</summary>
      <returns>
        <see langword="true" /> to automatically insert a column-break before this element; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.BreakColumnBeforeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Block.BreakColumnBefore" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Block.BreakPageBefore">
      <summary>Gets or sets a value that indicates whether to automatically insert a page-break before this element.</summary>
      <returns>
        <see langword="true" /> to automatically insert a page-break before this element; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.BreakPageBeforeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Block.BreakPageBefore" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Block.ClearFloaters">
      <summary>Gets or sets the direction in which any <see cref="T:System.Windows.Documents.Floater" /> elements contained by a <see cref="T:System.Windows.Documents.Block" /> element should be repositioned.</summary>
      <returns>One of the <see cref="T:System.Windows.WrapDirection" /> values that specifies the direction in which to separate any <see cref="T:System.Windows.Documents.Floater" /> elements from other content contained in the <see cref="T:System.Windows.Documents.Block" /> element. The default is <see cref="F:System.Windows.WrapDirection.None" />, which indicates that floaters should be rendered in place.</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.ClearFloatersProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Block.ClearFloaters" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Block.FlowDirection">
      <summary>Gets or sets the relative direction for flow of content within a <see cref="T:System.Windows.Documents.Block" /> element.</summary>
      <returns>One of the <see cref="T:System.Windows.FlowDirection" /> values that specifies the relative flow direction. The default is <see cref="F:System.Windows.FlowDirection.LeftToRight" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.FlowDirectionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Block.FlowDirection" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Documents.Block.GetIsHyphenationEnabled(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> attached property on the specified dependency object.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.Block.GetLineHeight(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Block.LineHeight" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Documents.Block.LineHeight" /> property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Block.LineHeight" /> attached property on the specified dependency object.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.Block.GetLineStackingStrategy(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> attached property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> attached property on the specified dependency object.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.Block.GetTextAlignment(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Block.TextAlignment" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Documents.Block.TextAlignment" /> property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Block.TextAlignment" /> attached property on the specified dependency object.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Documents.Block.IsHyphenationEnabled">
      <summary>Gets or sets a value that indicates whether automatic hyphenation of words is enabled or disabled.</summary>
      <returns>
        <see langword="true" /> if automatic breaking and hyphenation of words is enabled; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.IsHyphenationEnabledProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Block.LineHeight">
      <summary>Gets or sets the height of each line of content.</summary>
      <returns>The height of each line in device independent pixels, in the range of 0.0034 to 160000, or <see cref="F:System.Double.NaN" /> to determine the height automatically. The default is <see cref="F:System.Double.NaN" />.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> is set to a non-positive value.</exception>
    </member>
    <member name="F:System.Windows.Documents.Block.LineHeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Block.LineHeight" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Block.LineStackingStrategy">
      <summary>Gets or sets how a line box is determined for each line of text within the block-level flow content element.</summary>
      <returns>One of the <see cref="T:System.Windows.LineStackingStrategy" /> values that specifies how a line box is determined for each line of text within the block-level flow content element. The default value is <see cref="F:System.Windows.LineStackingStrategy.MaxHeight" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.LineStackingStrategyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Block.Margin">
      <summary>Gets or sets the margin thickness for the element.</summary>
      <returns>A <see cref="T:System.Windows.Thickness" /> structure that specifies the amount of margin to apply, in device independent pixels. The default is a uniform thickness of zero (0.0).</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.MarginProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Block.Margin" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Block.NextBlock">
      <summary>Gets the sibling <see cref="T:System.Windows.Documents.Block" /> element that directly follows the current <see cref="T:System.Windows.Documents.Block" /> element.</summary>
      <returns>The sibling <see cref="T:System.Windows.Documents.Block" /> element that directly follows the current <see cref="T:System.Windows.Documents.Block" /> element, or <see langword="null" /> if no such element exists.</returns>
    </member>
    <member name="P:System.Windows.Documents.Block.Padding">
      <summary>Gets or sets the padding thickness for the element.</summary>
      <returns>A <see cref="T:System.Windows.Thickness" /> structure that specifies the amount of padding to apply, in device independent pixels. The default is a uniform thickness of zero (0.0).</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.PaddingProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Block.Padding" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Block.PreviousBlock">
      <summary>Gets the sibling <see cref="T:System.Windows.Documents.Block" /> element that directly precedes the current <see cref="T:System.Windows.Documents.Block" /> element.</summary>
      <returns>The sibling <see cref="T:System.Windows.Documents.Block" /> element that directly precedes the current <see cref="T:System.Windows.Documents.Block" /> element, or <see langword="null" /> if no such element exists.</returns>
    </member>
    <member name="M:System.Windows.Documents.Block.SetIsHyphenationEnabled(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> attached property on a specified dependency object.</summary>
      <param name="element">The dependency object on which to set the value of the <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.Block.SetLineHeight(System.Windows.DependencyObject,System.Double)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Block.LineHeight" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object on which to set the value of the <see cref="P:System.Windows.Documents.Block.LineHeight" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is negative.</exception>
    </member>
    <member name="M:System.Windows.Documents.Block.SetLineStackingStrategy(System.Windows.DependencyObject,System.Windows.LineStackingStrategy)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> attached property on a specified dependency object.</summary>
      <param name="element">The dependency object on which to set the value of the <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.Block.SetTextAlignment(System.Windows.DependencyObject,System.Windows.TextAlignment)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Block.TextAlignment" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object on which to set the value of the <see cref="P:System.Windows.Documents.Block.TextAlignment" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Documents.Block.SiblingBlocks">
      <summary>Gets a collection of <see cref="T:System.Windows.Documents.Block" /> elements that are siblings to the current <see cref="T:System.Windows.Documents.Block" /> element.</summary>
      <returns>A <see cref="T:System.Windows.Documents.BlockCollection" /> that contains the child <see cref="T:System.Windows.Documents.Block" /> elements that are directly hosted by the parent of the current <see cref="T:System.Windows.Documents.Block" /> element, or <see langword="null" /> if the current <see cref="T:System.Windows.Documents.Block" /> element has no parent.</returns>
    </member>
    <member name="P:System.Windows.Documents.Block.TextAlignment">
      <summary>Gets or sets the horizontal alignment of text content.</summary>
      <returns>One of the <see cref="T:System.Windows.TextAlignment" /> values that specifies the desired alignment. The default is <see cref="F:System.Windows.TextAlignment.Left" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.TextAlignmentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Block.TextAlignment" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Documents.BlockCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Documents.Block" /> elements. <see cref="T:System.Windows.Documents.BlockCollection" /> defines the allowable child content of the <see cref="T:System.Windows.Documents.FlowDocument" />, <see cref="T:System.Windows.Documents.Section" />, <see cref="T:System.Windows.Documents.ListItem" />, <see cref="T:System.Windows.Documents.TableCell" />, <see cref="T:System.Windows.Documents.Floater" />, and <see cref="T:System.Windows.Documents.Figure" /> elements.</summary>
    </member>
    <member name="P:System.Windows.Documents.BlockCollection.FirstBlock">
      <summary>Gets the first <see cref="T:System.Windows.Documents.Block" /> element within this instance of <see cref="T:System.Windows.Documents.BlockCollection" />.</summary>
      <returns>The first <see cref="T:System.Windows.Documents.Block" /> element in the <see cref="T:System.Windows.Documents.BlockCollection" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.BlockCollection.LastBlock">
      <summary>Gets the last <see cref="T:System.Windows.Documents.Block" /> element within this instance of <see cref="T:System.Windows.Documents.BlockCollection" />.</summary>
      <returns>The last <see cref="T:System.Windows.Documents.Block" /> element in the <see cref="T:System.Windows.Documents.BlockCollection" />.</returns>
    </member>
    <member name="T:System.Windows.Documents.BlockUIContainer">
      <summary>A block-level flow content element which enables <see cref="T:System.Windows.UIElement" /> elements (i.e. a <see cref="T:System.Windows.Controls.Button" />) to be embedded (hosted) in flow content.</summary>
    </member>
    <member name="M:System.Windows.Documents.BlockUIContainer.#ctor">
      <summary>Initializes a new, empty instance of the <see cref="T:System.Windows.Documents.BlockUIContainer" /> class.</summary>
    </member>
    <member name="M:System.Windows.Documents.BlockUIContainer.#ctor(System.Windows.UIElement)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.BlockUIContainer" /> class, taking a specified <see cref="T:System.Windows.UIElement" /> object as the initial contents of the new <see cref="T:System.Windows.Documents.BlockUIContainer" />.</summary>
      <param name="uiElement">An <see cref="T:System.Windows.UIElement" /> object specifying the initial contents of the new <see cref="T:System.Windows.Documents.BlockUIContainer" />.</param>
    </member>
    <member name="P:System.Windows.Documents.BlockUIContainer.Child">
      <summary>Gets or sets the <see cref="T:System.Windows.UIElement" /> hosted by the <see cref="T:System.Windows.Documents.BlockUIContainer" />.</summary>
      <returns>The <see cref="T:System.Windows.UIElement" /> hosted by the <see cref="T:System.Windows.Documents.BlockUIContainer" />.</returns>
    </member>
    <member name="T:System.Windows.Documents.Bold">
      <summary>An inline-level flow content element which causes content to render with a bold font weight.</summary>
    </member>
    <member name="M:System.Windows.Documents.Bold.#ctor">
      <summary>Initializes a new, empty instance of the <see cref="T:System.Windows.Documents.Bold" /> class.</summary>
    </member>
    <member name="M:System.Windows.Documents.Bold.#ctor(System.Windows.Documents.Inline)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Bold" /> class, taking a specified <see cref="T:System.Windows.Documents.Inline" /> object as the initial contents of the new <see cref="T:System.Windows.Documents.Bold" />.</summary>
      <param name="childInline">An <see cref="T:System.Windows.Documents.Inline" /> object specifying the initial contents of the new <see cref="T:System.Windows.Documents.Bold" />.</param>
    </member>
    <member name="M:System.Windows.Documents.Bold.#ctor(System.Windows.Documents.Inline,System.Windows.Documents.TextPointer)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Bold" /> class, taking a specified <see cref="T:System.Windows.Documents.Inline" /> object as the initial contents of the new <see cref="T:System.Windows.Documents.Bold" />, and a <see cref="T:System.Windows.Documents.TextPointer" /> specifying an insertion position for the new <see cref="T:System.Windows.Documents.Inline" /> element.</summary>
      <param name="childInline">An <see cref="T:System.Windows.Documents.Inline" /> object specifying the initial contents of the new <see cref="T:System.Windows.Documents.Bold" />.  This parameter may be <see langword="null" />, in which case no <see cref="T:System.Windows.Documents.Inline" /> is inserted.</param>
      <param name="insertionPosition">A <see cref="T:System.Windows.Documents.TextPointer" /> specifying an insertion position at which to insert the <see cref="T:System.Windows.Documents.Bold" /> element after it is created, or <see langword="null" /> for no automatic insertion.</param>
    </member>
    <member name="M:System.Windows.Documents.Bold.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Bold" /> class, taking two <see cref="T:System.Windows.Documents.TextPointer" /> objects that indicate the beginning and end of a selection of content to be contained by the new <see cref="T:System.Windows.Documents.Bold" />.</summary>
      <param name="start">A <see cref="T:System.Windows.Documents.TextPointer" /> indicating the beginning of a selection of content to be contained by the new <see cref="T:System.Windows.Documents.Bold" />.</param>
      <param name="end">A <see cref="T:System.Windows.Documents.TextPointer" /> indicating the end of a selection of content to be contained by the new <see cref="T:System.Windows.Documents.Bold" />.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="start" /> or <paramref name="end" /> is null.</exception>
      <exception cref="T:System.ArgumentException">Raised when <paramref name="start" /> and <paramref name="end" /> do not resolve to a range of content suitable for enclosure by a <see cref="T:System.Windows.Documents.Bold" /> element, for example, if <paramref name="start" /> and <paramref name="end" /> indicate positions in different paragraphs.</exception>
    </member>
    <member name="T:System.Windows.Documents.DocumentReference">
      <summary>Provides access to reference a <see cref="T:System.Windows.Documents.FixedDocument" />.</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentReference.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.DocumentReference" /> class.</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentReference.GetDocument(System.Boolean)">
      <summary>Synchronously loads and parses the document specified by the <see cref="P:System.Windows.Documents.DocumentReference.Source" /> property location.</summary>
      <param name="forceReload">
        <see langword="true" /> to force a new load of the <see cref="P:System.Windows.Documents.DocumentReference.Source" /> document, even if it was previously loaded.</param>
      <returns>The document that was loaded.</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentReference.SetDocument(System.Windows.Documents.FixedDocument)">
      <summary>Attaches a <see cref="T:System.Windows.Documents.FixedDocument" /> to the <see cref="T:System.Windows.Documents.DocumentReference" />.</summary>
      <param name="doc">The document that is attached.</param>
    </member>
    <member name="P:System.Windows.Documents.DocumentReference.Source">
      <summary>Gets or sets the uniform resource identifier (URI) for this document reference.</summary>
      <returns>A <see cref="T:System.Uri" /> representing the document reference.</returns>
    </member>
    <member name="F:System.Windows.Documents.DocumentReference.SourceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.DocumentReference.Source" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.DocumentReference.System#Windows#Markup#IUriContext#BaseUri">
      <summary>For a description of this member, see <see cref="P:System.Windows.Markup.IUriContext.BaseUri" />.</summary>
      <returns>The base URI of the current context.</returns>
    </member>
    <member name="T:System.Windows.Documents.DocumentReferenceCollection">
      <summary>Defines an ordered list of <see cref="T:System.Windows.Documents.DocumentReference" /> elements.</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentReferenceCollection.Add(System.Windows.Documents.DocumentReference)">
      <summary>Adds an element to the end of the collection.</summary>
      <param name="item">The element to add to the end of the collection.</param>
    </member>
    <member name="E:System.Windows.Documents.DocumentReferenceCollection.CollectionChanged">
      <summary>Occurs when an element is added or removed.</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentReferenceCollection.CopyTo(System.Windows.Documents.DocumentReference[],System.Int32)">
      <summary>Copies the whole collection to an array that starts at a given array index.</summary>
      <param name="array">The destination array to which the elements from the collection should be copied.</param>
      <param name="arrayIndex">The zero-based starting index within the array where the collection elements are to be copied.</param>
    </member>
    <member name="P:System.Windows.Documents.DocumentReferenceCollection.Count">
      <summary>Gets the number of elements that are in the collection.</summary>
      <returns>The number of items that the collection contains.</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentReferenceCollection.GetEnumerator">
      <summary>Returns an enumerator for iterating through the collection.</summary>
      <returns>An enumerator that you can use to iterate through the collection.</returns>
    </member>
    <member name="P:System.Windows.Documents.DocumentReferenceCollection.Item(System.Int32)">
      <summary>Gets the element that is at the specified index.</summary>
      <param name="index">The zero-based index of the element in the collection to get.</param>
      <returns>The collection element that is at the specified <paramref name="index" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentReferenceCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that iterates through a collection.  Use the type-safe <see cref="M:System.Windows.Documents.DocumentReferenceCollection.GetEnumerator" /> method instead.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.BlockElement">
      <summary>Do not use.</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.BlockElement.#ctor">
      <summary>Do not use.</summary>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.FigureStructure">
      <summary>Represents a drawing, chart, or diagram in a document.</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.FigureStructure.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.DocumentStructures.FigureStructure" /> class.</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.FigureStructure.Add(System.Windows.Documents.DocumentStructures.NamedElement)">
      <summary>Add a named element to the figure.</summary>
      <param name="element">The element to add.</param>
      <exception cref="T:System.ArgumentNullException">The element is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.FigureStructure.System#Collections#Generic#IEnumerable{System#Windows#Documents#DocumentStructures#NamedElement}#GetEnumerator">
      <summary>This method is not implemented.</summary>
      <returns>Always raises <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.FigureStructure.System#Collections#IEnumerable#GetEnumerator">
      <summary>This method has not been implemented.</summary>
      <returns>Always raises <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.FigureStructure.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <param name="value">The child <see cref="T:System.Object" /> to add.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not one of the types that can be a child of this class. See Remarks.</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.FigureStructure.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>Adds the text content of a node to the object.</summary>
      <param name="text">The text to add to the object.</param>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.ListItemStructure">
      <summary>Represents an item in a list or outline.</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListItemStructure.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.DocumentStructures.ListItemStructure" /> class.</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListItemStructure.Add(System.Windows.Documents.DocumentStructures.BlockElement)">
      <summary>Adds a block to a list item.</summary>
      <param name="element">The block to add.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Documents.DocumentStructures.ListItemStructure.Marker">
      <summary>Gets or sets the name of the numeral, character, or bullet symbol for the list item as it appears in the formatting markup of the document.</summary>
      <returns>A <see cref="T:System.String" /> marking list item.</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListItemStructure.System#Collections#Generic#IEnumerable{System#Windows#Documents#DocumentStructures#BlockElement}#GetEnumerator">
      <summary>This method has not been implemented.</summary>
      <returns>Always raises <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListItemStructure.System#Collections#IEnumerable#GetEnumerator">
      <summary>This method has not been implemented.</summary>
      <returns>Always raises <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListItemStructure.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="value">The child <see cref="T:System.Object" /> that is added.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not one of the types that can be a child of this class. See Remarks.</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListItemStructure.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>Not implemented.</summary>
      <param name="text">Not used.</param>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.ListStructure">
      <summary>Represents a list of items in a document.</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListStructure.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.DocumentStructures.ListStructure" /> class.</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListStructure.Add(System.Windows.Documents.DocumentStructures.ListItemStructure)">
      <summary>Adds a list item to the list.</summary>
      <param name="listItem">The list item to add.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="listItem" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListStructure.System#Collections#Generic#IEnumerable{System#Windows#Documents#DocumentStructures#ListItemStructure}#GetEnumerator">
      <summary>This method has not been implemented.</summary>
      <returns>Always raises <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListStructure.System#Collections#IEnumerable#GetEnumerator">
      <summary>This method has not been implemented.</summary>
      <returns>Always raises <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListStructure.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <param name="value">The child <see cref="T:System.Object" /> that is added.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not one of the types that can be a child of this class. See Remarks.</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListStructure.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>Adds the text content of a node to the object.</summary>
      <param name="text">The text to add to the object.</param>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.NamedElement">
      <summary>Identifies an element within the hierarchy of elements under a <see cref="T:System.Windows.Documents.FixedPage" />.</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.NamedElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.DocumentStructures.NamedElement" /> class.</summary>
    </member>
    <member name="P:System.Windows.Documents.DocumentStructures.NamedElement.NameReference">
      <summary>Gets or sets the name of the element in the <see cref="T:System.Windows.Documents.FixedPage" /> markup hierarchy that provides the content for the parent of the <see cref="T:System.Windows.Documents.DocumentStructures.NamedElement" />.</summary>
      <returns>The name of the element.</returns>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.ParagraphStructure">
      <summary>Represents a paragraph in a document.</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ParagraphStructure.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.DocumentStructures.ParagraphStructure" /> class.</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ParagraphStructure.Add(System.Windows.Documents.DocumentStructures.NamedElement)">
      <summary>Adds a named element to the paragraph.</summary>
      <param name="element">The element to add.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ParagraphStructure.System#Collections#Generic#IEnumerable{System#Windows#Documents#DocumentStructures#NamedElement}#GetEnumerator">
      <summary>This method has not been implemented.</summary>
      <returns>Always raises <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ParagraphStructure.System#Collections#IEnumerable#GetEnumerator">
      <summary>This method has not been implemented.</summary>
      <returns>Always raises <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ParagraphStructure.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <param name="value">The child <see cref="T:System.Object" /> that is added.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not one of the types that can be a child of this class. See Remarks.</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ParagraphStructure.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>Not implemented.</summary>
      <param name="text">Not used.</param>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.SectionStructure">
      <summary>Represents a section of content in a document.</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.SectionStructure.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.DocumentStructures.SectionStructure" /> class.</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.SectionStructure.Add(System.Windows.Documents.DocumentStructures.BlockElement)">
      <summary>Adds a block to the section.</summary>
      <param name="element">The block element to add.</param>
      <exception cref="T:System.ArgumentNullException">The element is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.SectionStructure.System#Collections#Generic#IEnumerable{System#Windows#Documents#DocumentStructures#BlockElement}#GetEnumerator">
      <summary>This method has not been implemented.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerator`1" />
      </returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.SectionStructure.System#Collections#IEnumerable#GetEnumerator">
      <summary>This method has not been implemented.</summary>
      <returns>System.Collections.IEnumerator</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.SectionStructure.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>Adds a child object.</summary>
      <param name="value">The child object to add.</param>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.SectionStructure.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>Adds the text content of a node to the object.</summary>
      <param name="text">The text to add to the object.</param>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.SemanticBasicElement">
      <summary>An XML element in the markup for XML Paper Specification (XPS) documents.</summary>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.StoryBreak">
      <summary>Identifies the start or end of story composed of one or more <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragment" /> elements.</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryBreak.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.DocumentStructures.StoryBreak" /> class.</summary>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.StoryFragment">
      <summary>Represents all or part of a story within an XPS document.</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragment.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragment" /> class.</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragment.Add(System.Windows.Documents.DocumentStructures.BlockElement)">
      <summary>Add a block to the story fragment.</summary>
      <param name="element">The block to add.</param>
      <exception cref="T:System.ArgumentNullException">The block passed is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Documents.DocumentStructures.StoryFragment.FragmentName">
      <summary>Gets or sets the name of the story fragment.</summary>
      <returns>A <see cref="T:System.String" /> representing the name of this fragment.</returns>
    </member>
    <member name="P:System.Windows.Documents.DocumentStructures.StoryFragment.FragmentType">
      <summary>Gets or sets the type of fragment.</summary>
      <returns>A <see cref="T:System.String" /> representing the type of fragment.</returns>
    </member>
    <member name="P:System.Windows.Documents.DocumentStructures.StoryFragment.StoryName">
      <summary>Gets or sets the name of the story.</summary>
      <returns>A <see cref="T:System.String" /> representing the name of the story.</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragment.System#Collections#Generic#IEnumerable{System#Windows#Documents#DocumentStructures#BlockElement}#GetEnumerator">
      <summary>This method has not been implemented.</summary>
      <returns>Always raises <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragment.System#Collections#IEnumerable#GetEnumerator">
      <summary>This method has not been implemented.</summary>
      <returns>Always raises <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragment.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <param name="value">The child <see cref="T:System.Object" /> that is added.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not one of the types that can be a child of this class. See Remarks.</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragment.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>Adds the text content of a node to the object.</summary>
      <param name="text">The text to add to the object.</param>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.StoryFragments">
      <summary>Represents a set of one or more <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragment" /> elements.</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragments.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragments" /> class.</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragments.Add(System.Windows.Documents.DocumentStructures.StoryFragment)">
      <summary>Adds a <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragment" /> to the <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragments" /> collection.</summary>
      <param name="storyFragment">The <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragment" /> to add.</param>
      <exception cref="T:System.ArgumentNullException">The <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragment" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragments.System#Collections#Generic#IEnumerable{System#Windows#Documents#DocumentStructures#StoryFragment}#GetEnumerator">
      <summary>This API is not implemented.</summary>
      <returns>This API is not implemented.</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragments.System#Collections#IEnumerable#GetEnumerator">
      <summary>This API is not implemented.</summary>
      <returns>This API is not implemented.</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragments.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>Adds a child object to the <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragments" />.</summary>
      <param name="value">The child object to add.</param>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragments.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>Adds the text content of a node to the object.</summary>
      <param name="text">The text to add to the object.</param>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.TableCellStructure">
      <summary>Represents a cell in a table.</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableCellStructure.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.DocumentStructures.TableCellStructure" /> class.</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableCellStructure.Add(System.Windows.Documents.DocumentStructures.BlockElement)">
      <summary>Adds a block element to the table cell.</summary>
      <param name="element">The element to add.</param>
      <exception cref="T:System.ArgumentNullException">The element is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Documents.DocumentStructures.TableCellStructure.ColumnSpan">
      <summary>Gets or sets the number of columns spanned by the cell.</summary>
      <returns>The number of columns that the cell spans. The default is 1.</returns>
    </member>
    <member name="P:System.Windows.Documents.DocumentStructures.TableCellStructure.RowSpan">
      <summary>Gets or sets the number of rows spanned by the cell.</summary>
      <returns>The number of rows that the cell spans. The default is 1.</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableCellStructure.System#Collections#Generic#IEnumerable{System#Windows#Documents#DocumentStructures#BlockElement}#GetEnumerator">
      <summary>This API is not implemented.</summary>
      <returns>This API is not implemented.</returns>
      <exception cref="T:System.NotSupportedException">In all cases.</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableCellStructure.System#Collections#IEnumerable#GetEnumerator">
      <summary>This API is not implemented.</summary>
      <returns>This API is not implemented.</returns>
      <exception cref="T:System.NotSupportedException">In all cases.</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableCellStructure.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>Adds a child object to the <see cref="T:System.Windows.Documents.DocumentStructures.TableCellStructure" />.</summary>
      <param name="value">The child object to add.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not one of the types that can be a child of this class. See Remarks.</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableCellStructure.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>Adds the text content of a node to the object.</summary>
      <param name="text">The text to add to the object.</param>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.TableRowGroupStructure">
      <summary>Represents a set of one or more rows in a table.</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowGroupStructure.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.DocumentStructures.TableRowGroupStructure" /> class.</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowGroupStructure.Add(System.Windows.Documents.DocumentStructures.TableRowStructure)">
      <summary>Adds a row to the table row group.</summary>
      <param name="tableRow">The row to add.</param>
      <exception cref="T:System.ArgumentNullException">The row is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowGroupStructure.System#Collections#Generic#IEnumerable{System#Windows#Documents#DocumentStructures#TableRowStructure}#GetEnumerator">
      <summary>This method has not been implemented.</summary>
      <returns>Always raises <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowGroupStructure.System#Collections#IEnumerable#GetEnumerator">
      <summary>This method has not been implemented.</summary>
      <returns>Always raises <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowGroupStructure.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <param name="value">The child <see cref="T:System.Object" /> that is added.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not one of the types that can be a child of this class. See Remarks.</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowGroupStructure.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>Adds the text content of a node to the object.</summary>
      <param name="text">The text to add to the object.</param>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.TableRowStructure">
      <summary>Represents a row of one or more cells in a table.</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowStructure.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.DocumentStructures.TableRowStructure" /> class.</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowStructure.Add(System.Windows.Documents.DocumentStructures.TableCellStructure)">
      <summary>Adds a cell to a table row.</summary>
      <param name="tableCell">The cell to add.</param>
      <exception cref="T:System.ArgumentNullException">The cell is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowStructure.System#Collections#Generic#IEnumerable{System#Windows#Documents#DocumentStructures#TableCellStructure}#GetEnumerator">
      <summary>This method has not been implemented.</summary>
      <returns>Always raises <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowStructure.System#Collections#IEnumerable#GetEnumerator">
      <summary>This method has not been implemented.</summary>
      <returns>Always raises <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowStructure.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <param name="value">The child <see cref="T:System.Object" /> that is added.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not one of the types that can be a child of this class. See Remarks.</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowStructure.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>Adds the text content of a node to the object.</summary>
      <param name="text">The text to add to the object.</param>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.TableStructure">
      <summary>Represents a table in a document.</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableStructure.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.DocumentStructures.TableStructure" /> class.</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableStructure.Add(System.Windows.Documents.DocumentStructures.TableRowGroupStructure)">
      <summary>Adds a group of rows to a table.</summary>
      <param name="tableRowGroup">The group of rows to add.</param>
      <exception cref="T:System.ArgumentNullException">The group of rows is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableStructure.System#Collections#Generic#IEnumerable{System#Windows#Documents#DocumentStructures#TableRowGroupStructure}#GetEnumerator">
      <summary>This method has not been implemented.</summary>
      <returns>Always raises <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableStructure.System#Collections#IEnumerable#GetEnumerator">
      <summary>This method has not been implemented.</summary>
      <returns>Always raises <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableStructure.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <param name="value">The child <see cref="T:System.Object" /> that is added.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not one of the types that can be a child of this class. See Remarks.</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableStructure.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>Adds the text content of a node to the object.</summary>
      <param name="text">The text to add to the object.</param>
    </member>
    <member name="T:System.Windows.Documents.EditingCommands">
      <summary>Provides a standard set of editing related commands.</summary>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.AlignCenter">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignCenter" /> command, which requests that the current paragraph or a selection of paragraphs be centered.</summary>
      <returns>The requested command.  The default key gesture for this command is <see langword="Ctrl" />+<see langword="E" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.AlignJustify">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignJustify" /> command, which requests that the current paragraph or a selection of paragraphs be justified.</summary>
      <returns>The requested command.  The default key gesture for this command is <see langword="Ctrl" />+<see langword="J" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.AlignLeft">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignLeft" /> command, which requests that a selection of content be aligned left.</summary>
      <returns>The requested command.  The default key gesture for this command is <see langword="Ctrl" />+<see langword="L" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.AlignRight">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignRight" /> command, which requests that a selection of content be aligned right.</summary>
      <returns>The requested command.  The default key gesture for this command is <see langword="Ctrl" />+<see langword="R" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.Backspace">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.Backspace" /> command, which requests that a backspace be entered at the current position or over the current selection.</summary>
      <returns>The requested command.  The default key gesture for this command is <see langword="Backspace" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.CorrectSpellingError">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" /> command, which requests that any misspelled word at the current position be corrected.</summary>
      <returns>The requested command.  This command has no default key gesture.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.DecreaseFontSize">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" /> command, which requests that the font size for the current selection be decreased by 1 point.</summary>
      <returns>The requested command.  The default key gesture for this command is <see langword="Ctrl" />+<see langword="OemOpenBrackets" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.DecreaseIndentation">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" /> command, which requests that indentation for the current paragraph be decreased by one tab stop.</summary>
      <returns>The requested command.  The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="T" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.Delete">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.Delete" /> command, which requests that the current selection be deleted.</summary>
      <returns>The requested command.  The default key gesture for this command is <see langword="Delete" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.DeleteNextWord">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.DeleteNextWord" /> command, which requests that the next word (relative to a current position) be deleted.</summary>
      <returns>The requested command.  The default key gesture for this command is <see langword="Ctrl" />+<see langword="Delete" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.DeletePreviousWord">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" /> command, which requests that the previous word (relative to a current position) be deleted.</summary>
      <returns>The requested command.  The default key gesture for this command is <see langword="Ctrl" />+<see langword="Backspace" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.EnterLineBreak">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.EnterLineBreak" /> command, which requests that a line break be inserted at the current position or over the current selection.</summary>
      <returns>The requested command.  The default key gesture for this command is <see langword="Shift" />+<see langword="Enter" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" /> command, which requests that a paragraph break be inserted at the current position or over the current selection.</summary>
      <returns>The requested command.  The default key gesture for this command is <see langword="Enter" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" /> command, which requests that any instances of misspelled words at the current position or in the current selection be ignored.</summary>
      <returns>The requested command.  This command has no default key gesture.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.IncreaseFontSize">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" /> command, which requests that the font size for the current selection be increased by 1 point.</summary>
      <returns>The requested command.  The default key gesture for this command is <see langword="Ctrl" />+<see langword="OemCloseBrackets" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.IncreaseIndentation">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" /> command, which requests that indentation for the current paragraph be increased by one tab stop.</summary>
      <returns>The requested command.  The default key gesture for this command is <see langword="Ctrl" />+<see langword="T" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveDownByLine">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" /> command, which requests that the caret move down by one line.</summary>
      <returns>The requested command.  The default key gesture for this command is <see langword="Down" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveDownByPage">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" /> command, which requests that the caret move down by one page.</summary>
      <returns>The requested command.  The default key gesture for this command is <see langword="PageDown" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" /> command, which requests that the caret move down by one paragraph.</summary>
      <returns>The requested command.  The default key gesture for this command is <see langword="Ctrl" />+<see langword="Down" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" /> command, which requests that the caret move one character left.</summary>
      <returns>The requested command.  The default key gesture for this command is <see langword="Left" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveLeftByWord">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" /> command, which requests that the caret move one word left.</summary>
      <returns>The requested command.  The default key gesture for this command is <see langword="Ctrl" />+<see langword="Left" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" /> command, which requests that the caret move one character right.</summary>
      <returns>The requested command.  The default key gesture for this command is <see langword="Right" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveRightByWord">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" /> command, which requests that the caret move right by one word.</summary>
      <returns>The requested command.  The default key gesture for this command is <see langword="Ctrl" />+<see langword="Right" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" /> command, which requests that the caret move to the very end of content.</summary>
      <returns>The requested command.  The default key gesture for this command is <see langword="Ctrl" />+<see langword="End" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" /> command, which requests that the caret move to the very beginning of content.</summary>
      <returns>The requested command.  The default key gesture for this command is <see langword="Ctrl" />+<see langword="Home" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveToLineEnd">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" /> command, which requests that the caret move to the end of the current line.</summary>
      <returns>The requested command.  The default key gesture for this command is <see langword="End" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveToLineStart">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" /> command, which requests that the caret move to the beginning of the current line.</summary>
      <returns>The requested command.  The default key gesture for this command is <see langword="Home" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveUpByLine">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" /> command, which requests that the caret move up by one line.</summary>
      <returns>The requested command.  The default key gesture for this command is <see langword="Up" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveUpByPage">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" /> command, which requests that the caret move up by one page.</summary>
      <returns>The requested command.  The default key gesture for this command is <see langword="PageUp" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" /> command, which requests that the caret move up by one paragraph.</summary>
      <returns>The requested command.  The default key gesture for this command is <see langword="Ctrl" />+<see langword="Up" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectDownByLine">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" /> command, which requests that the current selection be expanded down by one line.</summary>
      <returns>The requested command.  The default key gesture for this command is <see langword="Shift" />+<see langword="Down" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectDownByPage">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" /> command, which requests that the current selection be expanded down by one page.</summary>
      <returns>The requested command.  The default key gesture for this command is <see langword="Shift" />+<see langword="PageDown" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" /> command, which requests that the current selection be expanded down by one paragraph.</summary>
      <returns>The requested command.  The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Down" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" /> command, which requests that the current selection be expanded left by one character.</summary>
      <returns>The requested command.  The default key gesture for this command is <see langword="Shift" />+<see langword="Left" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectLeftByWord">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" /> command, which requests that the current selection be expanded left by one word.</summary>
      <returns>The requested command.  The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Left" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" /> command, which requests that the current selection be expanded right by one character.</summary>
      <returns>The requested command.  The default key gesture for this command is <see langword="Shift" />+<see langword="Right" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectRightByWord">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" /> command, which requests that the current selection be expanded right by one word.</summary>
      <returns>The requested command.  The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Right" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" /> command, which requests that the current selection be expanded to the very end of content.</summary>
      <returns>The requested command.  The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="End" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" /> command, which requests that the current selection be expanded to the very beginning of content.</summary>
      <returns>The requested command.  The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Home" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectToLineEnd">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" /> command, which requests that the current selection be expanded to the end of the current line.</summary>
      <returns>The requested command.  The default key gesture for this command is <see langword="Shift" />+<see langword="End" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectToLineStart">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineStart" /> command, which requests that the current selection be expanded to the beginning of the current line.</summary>
      <returns>The requested command.  The default key gesture for this command is <see langword="Shift" />+<see langword="Home" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectUpByLine">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" /> command, which requests that the current selection be expanded up by one line.</summary>
      <returns>The requested command.  The default key gesture for this command is <see langword="Shift" />+<see langword="Up" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectUpByPage">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" /> command, which requests that the current selection be expanded  up by one page.</summary>
      <returns>The requested command.  The default key gesture for this command is <see langword="Shift" />+<see langword="PageUp" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" /> command, which requests that the current selection be expanded up by one paragraph.</summary>
      <returns>The requested command.  The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Up" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.TabBackward">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.TabBackward" /> command.</summary>
      <returns>The requested command.  The default key gesture for this command is <see langword="Shift" />+<see langword="Tab" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.TabForward">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.TabForward" /> command.</summary>
      <returns>The requested command.  The default key gesture for this command is <see langword="Tab" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.ToggleBold">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleBold" /> command, which requests that <see cref="T:System.Windows.Documents.Bold" /> formatting be toggled on the current selection.</summary>
      <returns>The requested command.  The default key gesture for this command is <see langword="Ctrl" />+<see langword="B" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.ToggleBullets">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleBullets" /> command, which requests that unordered list (also referred to as bulleted list) formatting be toggled on the current selection.</summary>
      <returns>The requested command.  The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="L" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.ToggleInsert">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleInsert" /> command, which toggles the typing mode between Insert and Overtype.</summary>
      <returns>The requested command.  The default key gesture for this command is <see langword="Insert" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.ToggleItalic">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" /> command, which requests that <see cref="T:System.Windows.Documents.Italic" /> formatting be toggled on the current selection.</summary>
      <returns>The requested command.  The default key gesture for this command is <see langword="Ctrl" />+<see langword="I" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.ToggleNumbering">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleNumbering" /> command, which requests that ordered list (also referred to as numbered list) formatting be toggled on the current selection.</summary>
      <returns>The requested command.  The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="N" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.ToggleSubscript">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleSubscript" /> command, which requests that subscript formatting be toggled on the current selection.</summary>
      <returns>The requested command.  The default key gesture for this command is <see langword="Ctrl" />+<see langword="OemPlus" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.ToggleSuperscript">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" /> command, which requests that superscript formatting be toggled on the current selection.</summary>
      <returns>The requested command.  The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="OemPlus" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.ToggleUnderline">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" /> command, which requests that <see cref="T:System.Windows.Documents.Underline" /> formatting be toggled on the current selection.</summary>
      <returns>The requested command.  The default key gesture for this command is <see langword="Ctrl" />+<see langword="U" />.</returns>
    </member>
    <member name="T:System.Windows.Documents.Figure">
      <summary>An inline-level flow content element used to host a figure.  A figure is a portion of flow content with placement properties that can be customized independently from the primary content flow within a <see cref="T:System.Windows.Documents.FlowDocument" />.</summary>
    </member>
    <member name="M:System.Windows.Documents.Figure.#ctor">
      <summary>Initializes a new, empty instance of the <see cref="T:System.Windows.Documents.Figure" /> class.</summary>
    </member>
    <member name="M:System.Windows.Documents.Figure.#ctor(System.Windows.Documents.Block)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Figure" /> class, taking a specified <see cref="T:System.Windows.Documents.Block" /> object as the initial contents of the new <see cref="T:System.Windows.Documents.Figure" />.</summary>
      <param name="childBlock">A <see cref="T:System.Windows.Documents.Block" /> object specifying the initial contents of the new <see cref="T:System.Windows.Documents.Figure" />.</param>
    </member>
    <member name="M:System.Windows.Documents.Figure.#ctor(System.Windows.Documents.Block,System.Windows.Documents.TextPointer)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Figure" /> class, taking a specified <see cref="T:System.Windows.Documents.Block" /> object as the initial contents of the new <see cref="T:System.Windows.Documents.Figure" />, and a <see cref="T:System.Windows.Documents.TextPointer" /> specifying an insertion position for the new <see cref="T:System.Windows.Documents.Figure" /> element.</summary>
      <param name="childBlock">A <see cref="T:System.Windows.Documents.Block" /> object specifying the initial contents of the new <see cref="T:System.Windows.Documents.Figure" />.  This parameter may be <see langword="null" />, in which case no <see cref="T:System.Windows.Documents.Block" /> is inserted.</param>
      <param name="insertionPosition">A <see cref="T:System.Windows.Documents.TextPointer" /> specifying an insertion position at which to insert the <see cref="T:System.Windows.Documents.Figure" /> element after it is created, or <see langword="null" /> for no automatic insertion.</param>
    </member>
    <member name="P:System.Windows.Documents.Figure.CanDelayPlacement">
      <summary>Gets or sets a value that indicates whether this figure can delay its placement in the flow of content.</summary>
      <returns>
        <see langword="true" /> if this figure can delay placement; otherwise, <see langword="false" />.  The default value is <see langword="true" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Figure.CanDelayPlacementProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Figure.CanDelayPlacement" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Figure.Height">
      <summary>Gets or sets a value that indicates the height of a <see cref="T:System.Windows.Documents.Figure" /> element.</summary>
      <returns>A <see cref="T:System.Windows.FigureLength" /> structure specifying the height characteristics for the <see cref="T:System.Windows.Documents.Figure" />.  
 The default value is <see cref="T:System.Windows.FigureLength" />.<see cref="P:System.Windows.FigureLength.Value" /> = 1.0 and <see cref="T:System.Windows.FigureLength" />.<see cref="P:System.Windows.FigureLength.FigureUnitType" /> = <see cref="F:System.Windows.FigureUnitType.Auto" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Figure.HeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Figure.Height" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Figure.HorizontalAnchor">
      <summary>Gets or sets a value that indicates the position that content is anchored to in the horizontal direction.</summary>
      <returns>A member of the <see cref="T:System.Windows.FigureHorizontalAnchor" /> enumeration specifying a horizontal anchor location for the <see cref="T:System.Windows.Documents.Figure" />.  
 The default value is <see cref="F:System.Windows.FigureHorizontalAnchor.ColumnRight" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Figure.HorizontalAnchorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Figure.HorizontalAnchor" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Figure.HorizontalOffset">
      <summary>Gets or sets a value that indicates the distance that a <see cref="T:System.Windows.Documents.Figure" /> is offset from its baseline in the horizontal direction.</summary>
      <returns>The distance that a <see cref="T:System.Windows.Documents.Figure" /> is offset from its baseline in the horizontal direction, in device independent pixels.  
 The default value is 0.0.</returns>
    </member>
    <member name="F:System.Windows.Documents.Figure.HorizontalOffsetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Figure.HorizontalOffset" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Figure.VerticalAnchor">
      <summary>Gets or sets a value that indicates the position that content is anchored to in the vertical direction.</summary>
      <returns>A member of the <see cref="T:System.Windows.FigureVerticalAnchor" /> enumeration specifying a vertical anchor location for the <see cref="T:System.Windows.Documents.Figure" />.  
 The default value is <see cref="F:System.Windows.FigureVerticalAnchor.ParagraphTop" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Figure.VerticalAnchorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Figure.VerticalAnchor" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Figure.VerticalOffset">
      <summary>Gets or sets a value that indicates the distance that a <see cref="T:System.Windows.Documents.Figure" /> is offset from its baseline in the vertical direction.</summary>
      <returns>The distance that a <see cref="T:System.Windows.Documents.Figure" /> is offset from its baseline in the vertical direction, in device independent pixels.  
 The default value is 0.0.</returns>
    </member>
    <member name="F:System.Windows.Documents.Figure.VerticalOffsetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Figure.VerticalOffset" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Figure.Width">
      <summary>Gets or sets a value that indicates the width of a <see cref="T:System.Windows.Documents.Figure" /> element.</summary>
      <returns>A <see cref="T:System.Windows.FigureLength" /> structure specifying the width characteristics for the <see cref="T:System.Windows.Documents.Figure" />.  
 The default value is <see cref="T:System.Windows.FigureLength" />.<see cref="P:System.Windows.FigureLength.Value" /> = 1.0 and <see cref="T:System.Windows.FigureLength" />.<see cref="P:System.Windows.FigureLength.FigureUnitType" /> = <see cref="F:System.Windows.FigureUnitType.Auto" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Figure.WidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Figure.Width" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Figure.WrapDirection">
      <summary>Gets or sets a value that indicates the allowable ways in which content can flow around a <see cref="T:System.Windows.Documents.Figure" />.</summary>
      <returns>A member of the <see cref="T:System.Windows.WrapDirection" /> enumeration specifying the allowable ways in which content can flow around a <see cref="T:System.Windows.Documents.Figure" />.  
 The default value is <see cref="F:System.Windows.WrapDirection.Both" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Figure.WrapDirectionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Figure.WrapDirection" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Documents.FixedDocument">
      <summary>Hosts a portable, high fidelity, fixed-format document with read access for user text selection, keyboard navigation, and search.</summary>
    </member>
    <member name="M:System.Windows.Documents.FixedDocument.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.FixedDocument" /> class.</summary>
    </member>
    <member name="P:System.Windows.Documents.FixedDocument.DocumentPaginator">
      <summary>Gets the paginator for the <see cref="T:System.Windows.Documents.FixedDocument" /> that provides page-oriented services such as getting a particular page and repaginating in response to changes.</summary>
      <returns>An object of a class derived from <see cref="T:System.Windows.Documents.DocumentPaginator" /> that provides pagination services.</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedDocument.LogicalChildren">
      <summary>Gets an enumerator for accessing the document's <see cref="T:System.Windows.Documents.PageContent" /> child elements.</summary>
      <returns>An enumerator for accessing the document's <see cref="T:System.Windows.Documents.PageContent" /> child elements.</returns>
    </member>
    <member name="M:System.Windows.Documents.FixedDocument.OnCreateAutomationPeer">
      <summary>Creates an automation peer for the document.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" /> that exposes the <see cref="T:System.Windows.Documents.FixedDocument" /> to Microsoft UI Automation.</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedDocument.Pages">
      <summary>Gets a collection of the document's <see cref="T:System.Windows.Documents.PageContent" /> elements.</summary>
      <returns>A collection of the document's <see cref="T:System.Windows.Documents.PageContent" /> elements.</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedDocument.PrintTicket">
      <summary>Gets or sets the <see cref="T:System.Printing.PrintTicket" /> that is associated with this document.</summary>
      <returns>The <see cref="T:System.Printing.PrintTicket" /> for this document.</returns>
    </member>
    <member name="F:System.Windows.Documents.FixedDocument.PrintTicketProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FixedDocument.PrintTicket" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Documents.FixedDocument.System#IServiceProvider#GetService(System.Type)">
      <summary>Gets the service object of the specified type.</summary>
      <param name="serviceType">An object that specifies the type of service object to get.</param>
      <returns>A service object of type <paramref name="serviceType" />.  
 -or-  
 <see langword="null" /> if there is no service object of type <paramref name="serviceType" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.FixedDocument.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>Adds a child object.</summary>
      <param name="value">The child object to add.</param>
    </member>
    <member name="M:System.Windows.Documents.FixedDocument.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>Adds the text content of a node to the object.</summary>
      <param name="text">The text to add to the object.</param>
    </member>
    <member name="P:System.Windows.Documents.FixedDocument.System#Windows#Markup#IUriContext#BaseUri">
      <summary>Gets or sets the base URI of the current application context.</summary>
      <returns>The base URI of the application context.</returns>
    </member>
    <member name="T:System.Windows.Documents.FixedDocumentSequence">
      <summary>Hosts one or more <see cref="T:System.Windows.Documents.DocumentReference" /> elements that define a sequence of fixed documents.</summary>
    </member>
    <member name="M:System.Windows.Documents.FixedDocumentSequence.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> class.</summary>
    </member>
    <member name="P:System.Windows.Documents.FixedDocumentSequence.DocumentPaginator">
      <summary>Gets the paginator for the <see cref="T:System.Windows.Documents.FixedDocument" /> that provides page-oriented services such as getting a particular page and repaginating in response to changes.</summary>
      <returns>An object of a class derived from <see cref="T:System.Windows.Documents.DocumentPaginator" /> that provides pagination services</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedDocumentSequence.LogicalChildren">
      <summary>Gets an enumerator for accessing the document sequence's <see cref="T:System.Windows.Documents.DocumentReference" /> child elements.</summary>
      <returns>An enumerator for accessing the document sequence's <see cref="T:System.Windows.Documents.DocumentReference" /> child elements.</returns>
    </member>
    <member name="M:System.Windows.Documents.FixedDocumentSequence.OnCreateAutomationPeer">
      <summary>Creates an automation peer for the sequence.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" /> that exposes the <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> to Microsoft UI Automation.</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedDocumentSequence.PrintTicket">
      <summary>Gets or sets the <see cref="T:System.Printing.PrintTicket" /> that is associated with this document sequence.</summary>
      <returns>The <see cref="T:System.Printing.PrintTicket" /> for this sequence.</returns>
    </member>
    <member name="F:System.Windows.Documents.FixedDocumentSequence.PrintTicketProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FixedDocumentSequence.PrintTicket" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.FixedDocumentSequence.References">
      <summary>Gets a collection of the document sequence's <see cref="T:System.Windows.Documents.DocumentReference" /> child elements.</summary>
      <returns>A collection of the document sequence's <see cref="T:System.Windows.Documents.DocumentReference" /> child elements.</returns>
    </member>
    <member name="M:System.Windows.Documents.FixedDocumentSequence.System#IServiceProvider#GetService(System.Type)">
      <summary>Gets the service object of the specified type.</summary>
      <param name="serviceType">An object that specifies the type of service object to get.</param>
      <returns>A service object of type <paramref name="serviceType" />.  
 -or-  
 <see langword="null" /> if there is no service object of type <paramref name="serviceType" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.FixedDocumentSequence.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>Adds a child object.</summary>
      <param name="value">The child object to add.</param>
    </member>
    <member name="M:System.Windows.Documents.FixedDocumentSequence.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>Adds the text content of a node to the object.</summary>
      <param name="text">The text to add to the object.</param>
    </member>
    <member name="P:System.Windows.Documents.FixedDocumentSequence.System#Windows#Markup#IUriContext#BaseUri">
      <summary>Gets or sets the base URI of the current application context.</summary>
      <returns>The base URI of the application context.</returns>
    </member>
    <member name="T:System.Windows.Documents.FixedPage">
      <summary>Provides the content for a high fidelity, fixed-format page.</summary>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.FixedPage" /> class.</summary>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.Background">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> used for rendering the page background.</summary>
      <returns>The brush for rendering the page background.</returns>
    </member>
    <member name="F:System.Windows.Documents.FixedPage.BackgroundProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FixedPage.Background" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.BleedBox">
      <summary>Gets or sets a rectangle defining the overflow area for bleeds, registration marks, and crop marks.</summary>
      <returns>The <see cref="T:System.Windows.Rect" /> defining the overflow area.</returns>
    </member>
    <member name="F:System.Windows.Documents.FixedPage.BleedBoxProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FixedPage.BleedBox" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.Bottom">
      <summary>Gets or sets the distance between the bottom of the page and the bottom of the parent <see cref="T:System.Windows.Controls.Canvas" />.</summary>
    </member>
    <member name="F:System.Windows.Documents.FixedPage.BottomProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FixedPage.Bottom" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.Children">
      <summary>Gets a collection of the <see cref="T:System.Windows.Documents.FixedPage" /> child elements.</summary>
      <returns>The <see cref="T:System.Windows.Controls.UIElementCollection" /> of the child elements.</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.ContentBox">
      <summary>Gets or sets the bounding rectangle of the content area; that is, the area of the page within the margins, if any.</summary>
      <returns>The <see cref="T:System.Windows.Rect" /> that defines the content area.</returns>
    </member>
    <member name="F:System.Windows.Documents.FixedPage.ContentBoxProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FixedPage.ContentBox" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.GetBottom(System.Windows.UIElement)">
      <summary>Returns the distance between the bottom of an element and the bottom of its parent <see cref="T:System.Windows.Controls.Canvas" />.</summary>
      <param name="element">The element from which to get the bottom offset.</param>
      <returns>The distance between the bottom of an element and the bottom of its parent canvas.</returns>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.GetLeft(System.Windows.UIElement)">
      <summary>Returns the distance between the left side of an element and the left side of its parent <see cref="T:System.Windows.Controls.Canvas" />.</summary>
      <param name="element">The element from which to get the left offset.</param>
      <returns>The distance between the right side of an element and the right side of its parent canvas.</returns>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.GetNavigateUri(System.Windows.UIElement)">
      <summary>Returns the <see cref="P:System.Windows.Documents.FixedPage.NavigateUri" /> property for a given element.</summary>
      <param name="element">The element from which to get the property.</param>
      <returns>The <see cref="T:System.Uri" /> of <paramref name="element" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.GetRight(System.Windows.UIElement)">
      <summary>Returns the distance between the right side of an element and the right side of its parent <see cref="T:System.Windows.Controls.Canvas" />.</summary>
      <param name="element">The element from which to get the right offset.</param>
      <returns>The distance between the right side of an element and the right side of its parent canvas.</returns>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.GetTop(System.Windows.UIElement)">
      <summary>Returns the distance between the top of an element and the top of its parent <see cref="T:System.Windows.Controls.Canvas" />.</summary>
      <param name="element">The element from which to get the top offset.</param>
      <returns>The distance between the top of an element and the top of its parent canvas.</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.Left">
      <summary>Gets or sets the distance between the left edge of the page and the left edge of the parent <see cref="T:System.Windows.Controls.Canvas" />.</summary>
    </member>
    <member name="F:System.Windows.Documents.FixedPage.LeftProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FixedPage.Left" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.NavigateUri">
      <summary>Gets or sets the URI associated with the page.</summary>
    </member>
    <member name="F:System.Windows.Documents.FixedPage.NavigateUriProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FixedPage.NavigateUri" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.PrintTicket">
      <summary>Gets or sets the <see cref="T:System.Printing.PrintTicket" /> that is associated with the page.</summary>
      <returns>The <see cref="T:System.Printing.PrintTicket" /> for the page.</returns>
    </member>
    <member name="F:System.Windows.Documents.FixedPage.PrintTicketProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FixedPage.PrintTicket" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.Right">
      <summary>Gets or sets the distance between the right edge of the page and the right edge of the parent <see cref="T:System.Windows.Controls.Canvas" />.</summary>
    </member>
    <member name="F:System.Windows.Documents.FixedPage.RightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FixedPage.Right" /> attached property.</summary>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.SetBottom(System.Windows.UIElement,System.Double)">
      <summary>Sets the distance between the bottom of an element and the bottom of its parent <see cref="T:System.Windows.Controls.Canvas" />.</summary>
      <param name="element">The element on which to set the bottom offset.</param>
      <param name="length">The new distance between the bottom side of the element and the bottom side of its parent canvas.</param>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.SetLeft(System.Windows.UIElement,System.Double)">
      <summary>Sets the distance between the left side of an element and the left side of its parent <see cref="T:System.Windows.Controls.Canvas" />.</summary>
      <param name="element">The element on which to set the left offset.</param>
      <param name="length">The new distance between the left side of the element and the left side of its parent canvas.</param>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.SetNavigateUri(System.Windows.UIElement,System.Uri)">
      <summary>Sets the uniform resource identifier (URI) to navigate to when a hyperlink is clicked.</summary>
      <param name="element">The element on which to set the URI offset.</param>
      <param name="uri">The URI to navigate to when a hyperlink is clicked.</param>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.SetRight(System.Windows.UIElement,System.Double)">
      <summary>Sets the distance between the right side of an element and the right side of its parent <see cref="T:System.Windows.Controls.Canvas" />.</summary>
      <param name="element">The element on which to set the right offset.</param>
      <param name="length">The new distance between the right side of the element and the right side of its parent canvas.</param>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.SetTop(System.Windows.UIElement,System.Double)">
      <summary>Sets the distance between the top of an element and the top of its parent <see cref="T:System.Windows.Controls.Canvas" />.</summary>
      <param name="element">The element on which to set the top offset.</param>
      <param name="length">The new distance between the top side of the element and the top side of its parent canvas.</param>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>Adds a child object.</summary>
      <param name="value">The child object to add.</param>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>Adds the text content of a node to the object.</summary>
      <param name="text">The text to add to the object.</param>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.System#Windows#Markup#IUriContext#BaseUri">
      <summary>Gets or sets the base URI of the current application context.</summary>
      <returns>The base URI of the application context.</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.Top">
      <summary>Gets or sets the distance between the top of the page and the top of the parent <see cref="T:System.Windows.Controls.Canvas" />.</summary>
    </member>
    <member name="F:System.Windows.Documents.FixedPage.TopProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FixedPage.Top" /> attached property.</summary>
    </member>
    <member name="T:System.Windows.Documents.Floater">
      <summary>Provides an inline-level flow content element used to host a floater. A floater displays images and other content parallel to the main content flow in a <see cref="T:System.Windows.Documents.FlowDocument" />.</summary>
    </member>
    <member name="M:System.Windows.Documents.Floater.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Floater" /> class.</summary>
    </member>
    <member name="M:System.Windows.Documents.Floater.#ctor(System.Windows.Documents.Block)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Floater" /> class with the specified <see cref="T:System.Windows.Documents.Block" /> object as its initial content.</summary>
      <param name="childBlock">The initial content of the new <see cref="T:System.Windows.Documents.Floater" />.</param>
    </member>
    <member name="M:System.Windows.Documents.Floater.#ctor(System.Windows.Documents.Block,System.Windows.Documents.TextPointer)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Floater" /> class with the specified <see cref="T:System.Windows.Documents.Block" /> object as its initial content, and a <see cref="T:System.Windows.Documents.TextPointer" /> that specifies an insertion position for the new <see cref="T:System.Windows.Documents.Floater" />.</summary>
      <param name="childBlock">The initial content of the new <see cref="T:System.Windows.Documents.Floater" />. This parameter can be <see langword="null" />, in which case no <see cref="T:System.Windows.Documents.Block" /> is inserted.</param>
      <param name="insertionPosition">The position at which to insert the <see cref="T:System.Windows.Documents.Floater" /> element after it is created.</param>
    </member>
    <member name="P:System.Windows.Documents.Floater.HorizontalAlignment">
      <summary>Gets or sets a value that indicates the horizontal alignment for a <see cref="T:System.Windows.Documents.Floater" /> object.</summary>
      <returns>A member of the <see cref="T:System.Windows.HorizontalAlignment" /> enumeration specifying the horizontal alignment for the <see cref="T:System.Windows.Documents.Floater" />. The default is <see cref="F:System.Windows.HorizontalAlignment.Stretch" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Floater.HorizontalAlignmentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Floater.HorizontalAlignment" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Floater.Width">
      <summary>Gets or sets a value that indicates the width of a <see cref="T:System.Windows.Documents.Floater" /> object.</summary>
      <returns>The width of the <see cref="T:System.Windows.Documents.Floater" />, in device independent pixels. The default value is <see cref="F:System.Double.NaN" /> (equivalent to an attribute value of <c>Auto</c>), which indicates that the line height is determined automatically.</returns>
    </member>
    <member name="F:System.Windows.Documents.Floater.WidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Floater.Width" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Documents.FlowDocument">
      <summary>Hosts and formats flow content with advanced document features, such as pagination and columns.</summary>
    </member>
    <member name="M:System.Windows.Documents.FlowDocument.#ctor">
      <summary>Initializes a new, empty instance of the <see cref="T:System.Windows.Documents.FlowDocument" /> class.</summary>
    </member>
    <member name="M:System.Windows.Documents.FlowDocument.#ctor(System.Windows.Documents.Block)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.FlowDocument" /> class, adding a specified <see cref="T:System.Windows.Documents.Block" /> element as the initial content.</summary>
      <param name="block">An object deriving from the abstract <see cref="T:System.Windows.Documents.Block" /> class, to be added as the initial content.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="block" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.Background">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> used to fill the background of content area.</summary>
      <returns>The brush used to fill the background of the content area, or <see langword="null" /> to not use a background brush. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.BackgroundProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.Background" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.Blocks">
      <summary>Gets the top-level <see cref="T:System.Windows.Documents.Block" /> elements of the contents of the <see cref="T:System.Windows.Documents.FlowDocument" />.</summary>
      <returns>A <see cref="T:System.Windows.Documents.BlockCollection" /> containing the <see cref="T:System.Windows.Documents.Block" /> elements that make up the contents of the <see cref="T:System.Windows.Documents.FlowDocument" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.ColumnGap">
      <summary>Gets or sets the column gap value, which indicates the spacing between columns in a <see cref="T:System.Windows.Documents.FlowDocument" />.</summary>
      <returns>The column gap, in device independent pixels.  A value of <see cref="F:System.Double.NaN" /> (equivalent to an attribute value of "<c>Auto</c>") indicates that the column gap is equal to the <see cref="P:System.Windows.Documents.FlowDocument.LineHeight" /> property. The default is <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.ColumnGapProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.ColumnGap" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.ColumnRuleBrush">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> used to draw the rule between columns.</summary>
      <returns>A <see cref="T:System.Windows.Media.Brush" /> to use when drawing the rule line between columns, or <see langword="null" /> to not use a background brush. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.ColumnRuleBrushProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.ColumnRuleBrush" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.ColumnRuleWidth">
      <summary>Gets or sets the column rule width.</summary>
      <returns>The column rule width, in device independent pixels. The default is 0.0.</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.ColumnRuleWidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.ColumnRuleWidth" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.ColumnWidth">
      <summary>Gets or sets the minimum desired width of the columns in a <see cref="T:System.Windows.Documents.FlowDocument" />.</summary>
      <returns>The minimum desired column width, in device independent pixels. A value of <see cref="F:System.Double.NaN" /> causes only one column to be displayed, regardless of the page width.  The default is <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.ColumnWidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.ColumnWidth" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.ContentEnd">
      <summary>Gets a <see cref="T:System.Windows.Documents.TextPointer" /> that represents the end of the content in a <see cref="T:System.Windows.Documents.FlowDocument" />.</summary>
      <returns>A <see cref="T:System.Windows.Documents.TextPointer" /> representing the end of the contents in the <see cref="T:System.Windows.Documents.FlowDocument" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.ContentStart">
      <summary>Gets a <see cref="T:System.Windows.Documents.TextPointer" /> that represents the start of content within a <see cref="T:System.Windows.Documents.FlowDocument" />.</summary>
      <returns>A <see cref="T:System.Windows.Documents.TextPointerContext" /> representing the start of the contents in the <see cref="T:System.Windows.Documents.FlowDocument" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.FlowDirection">
      <summary>Gets or sets the relative direction for flow of content in a <see cref="T:System.Windows.Documents.FlowDocument" />.</summary>
      <returns>One of the <see cref="T:System.Windows.FlowDirection" /> values that specifies the relative flow direction. The default is <see cref="F:System.Windows.FlowDirection.LeftToRight" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.FlowDirectionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.FlowDirection" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.FontFamily">
      <summary>Gets or sets the preferred top-level font family for the <see cref="T:System.Windows.Documents.FlowDocument" />.</summary>
      <returns>A <see cref="T:System.Windows.Media.FontFamily" /> object specifying the preferred font family, or a primary preferred font family with one or more fallback font families. The default is the font determined by the <see cref="P:System.Windows.SystemFonts.MessageFontFamily" /> value.</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.FontFamilyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.FontFamily" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.FontSize">
      <summary>Gets or sets the top-level font size for the <see cref="T:System.Windows.Documents.FlowDocument" />.</summary>
      <returns>The desired font size to use, in device independent pixels).   The default is determined by the <see cref="P:System.Windows.SystemFonts.MessageFontSize" /> value.</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.FontSizeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.FontSize" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.FontStretch">
      <summary>Gets or sets the top-level font-stretching characteristics for the <see cref="T:System.Windows.Documents.FlowDocument" />.</summary>
      <returns>A member of the <see cref="T:System.Windows.FontStretch" /> class that specifies the desired font-stretching characteristics to use. The default is <see cref="P:System.Windows.FontStretches.Normal" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.FontStretchProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.FontStretch" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.FontStyle">
      <summary>Gets or sets the top-level font style for the <see cref="T:System.Windows.Documents.FlowDocument" />.</summary>
      <returns>A member of the <see cref="T:System.Windows.FontStyles" /> class that specifies the desired font style. The default is determined by the <see cref="P:System.Windows.SystemFonts.MessageFontStyle" /> value.</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.FontStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.FontStyle" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.FontWeight">
      <summary>Gets or sets the top-level font weight for the <see cref="T:System.Windows.Documents.FlowDocument" />.</summary>
      <returns>A member of the <see cref="T:System.Windows.FontWeights" /> class that specifies the desired font weight. The default is determined by the <see cref="P:System.Windows.SystemFonts.MessageFontWeight" /> value.</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.FontWeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.FontWeight" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.Foreground">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> to apply to the text contents of the <see cref="T:System.Windows.Documents.FlowDocument" />.</summary>
      <returns>The brush used to apply to the text contents. The default is <see cref="P:System.Windows.Media.Brushes.Black" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.ForegroundProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.Foreground" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.IsColumnWidthFlexible">
      <summary>Gets or sets a value that indicates whether the <see cref="P:System.Windows.Documents.FlowDocument.ColumnWidth" /> value is flexible or fixed.</summary>
      <returns>
        <see langword="true" /> if the column width is flexible; <see langword="false" /> if the column width is fixed. The default is <see langword="true" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.IsColumnWidthFlexibleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.IsColumnWidthFlexible" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.IsEnabledCore">
      <summary>Gets the value of the <see cref="P:System.Windows.ContentElement.IsEnabled" /> property for the <see cref="T:System.Windows.Documents.FlowDocument" />.</summary>
      <returns>The value of the <see cref="P:System.Windows.ContentElement.IsEnabled" /> property for the <see cref="T:System.Windows.Documents.FlowDocument" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.IsHyphenationEnabled">
      <summary>Gets or sets a value that indicates whether automatic hyphenation of words is enabled or disabled.</summary>
      <returns>
        <see langword="true" /> if automatic breaking and hyphenation of words is enabled; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.IsHyphenationEnabledProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.IsHyphenationEnabled" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabled">
      <summary>Gets or sets a value that indicates whether optimal paragraph layout is enabled or disabled.</summary>
      <returns>
        <see langword="true" /> if optimal paragraph layout is enabled; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabledProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabled" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.LineHeight">
      <summary>Gets or sets the height of each line of content.</summary>
      <returns>The height of each line, in device independent pixels, in the range 0.0034 to 160000. A value of <see cref="F:System.Double.NaN" /> (equivalent to an attribute value of "<c>Auto</c>") causes the line height to be determined automatically from the current font characteristics. The default is <see cref="F:System.Double.NaN" />.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> is set to a non-positive value.</exception>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.LineHeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.LineHeight" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.LineStackingStrategy">
      <summary>Gets or sets the mechanism by which a line box is determined for each line of text within the <see cref="T:System.Windows.Documents.FlowDocument" />.</summary>
      <returns>One of the <see cref="T:System.Windows.LineStackingStrategy" /> values that specifies the mechanism by which a line box is determined for each line of text in the <see cref="T:System.Windows.Documents.FlowDocument" />. The default is <see cref="F:System.Windows.LineStackingStrategy.MaxHeight" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.LineStackingStrategyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.LineStackingStrategy" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.LogicalChildren">
      <summary>Gets an enumerator that can iterate the logical children of the <see cref="T:System.Windows.Documents.FlowDocument" />.</summary>
      <returns>An enumerator for the logical children.</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.MaxPageHeight">
      <summary>Gets or sets the maximum height for pages in a <see cref="T:System.Windows.Documents.FlowDocument" />.</summary>
      <returns>The maximum height, in device independent pixels, for pages in the <see cref="T:System.Windows.Documents.FlowDocument" />. The default is <see cref="F:System.Double.PositiveInfinity" /> (no maximum page height).</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.MaxPageHeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.MaxPageHeight" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.MaxPageWidth">
      <summary>Gets or sets the maximum width for pages in a <see cref="T:System.Windows.Documents.FlowDocument" />.</summary>
      <returns>The maximum width, in device independent pixels, for pages in the <see cref="T:System.Windows.Documents.FlowDocument" />. The default is <see cref="F:System.Double.PositiveInfinity" /> (no maximum page width).</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.MaxPageWidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.MaxPageWidth" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.MinPageHeight">
      <summary>Gets or sets the minimum height for pages in a <see cref="T:System.Windows.Documents.FlowDocument" />.</summary>
      <returns>The minimum height, in device independent pixels, for pages in the <see cref="T:System.Windows.Documents.FlowDocument" />. The default is 0.0.</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.MinPageHeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.MinPageHeight" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.MinPageWidth">
      <summary>Gets or sets the minimum width for pages in a <see cref="T:System.Windows.Documents.FlowDocument" />.</summary>
      <returns>The minimum width, in device independent pixels, for pages in the <see cref="T:System.Windows.Documents.FlowDocument" />. The default is 0.0.</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.MinPageWidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.MinPageWidth" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Documents.FlowDocument.OnCreateAutomationPeer">
      <summary>When overridden in a derived class, provides specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementations to the Windows Presentation Foundation (WPF) infrastructure.</summary>
      <returns>The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</returns>
    </member>
    <member name="M:System.Windows.Documents.FlowDocument.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Called when one or more of the dependency properties that exist on the element have had their effective values changed.</summary>
      <param name="e">Arguments for the associated event.</param>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.PageHeight">
      <summary>Gets or sets the preferred height for pages in a <see cref="T:System.Windows.Documents.FlowDocument" />.</summary>
      <returns>The preferred height, in device independent pixels, for pages in the <see cref="T:System.Windows.Documents.FlowDocument" />. A value of <see cref="F:System.Double.NaN" /> (equivalent to an attribute value of "<c>Auto</c>") causes the page height to be determined automatically. The default is <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.PageHeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.PageHeight" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.PagePadding">
      <summary>Gets or sets a value that indicates the thickness of padding space between the boundaries of a page and the page's content.</summary>
      <returns>A <see cref="T:System.Windows.Thickness" /> structure that specifies the amount of padding to apply, in device independent pixels. The default is a uniform thickness of zero (0.0).</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.PagePaddingProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.PagePadding" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.PageWidth">
      <summary>Gets or sets the preferred width for pages in a <see cref="T:System.Windows.Documents.FlowDocument" />.</summary>
      <returns>The preferred width, in device independent pixels, for pages in the <see cref="T:System.Windows.Documents.FlowDocument" />. A value of <see cref="F:System.Double.NaN" /> (equivalent to an attribute value of "<c>Auto</c>") causes the page width to be determined automatically. The default is <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.PageWidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.PageWidth" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Documents.FlowDocument.SetDpi(System.Windows.DpiScale)">
      <summary>Sets the DPI for the FlowDocument, causing it to be remeasured and rerendered.</summary>
      <param name="dpiInfo">The DPI setting, from which a <see cref="T:System.Windows.Media.Visual" /> or <see cref="T:System.Windows.UIElement" /> is rendered.</param>
    </member>
    <member name="M:System.Windows.Documents.FlowDocument.System#IServiceProvider#GetService(System.Type)">
      <summary>Gets the service object of the specified type.</summary>
      <param name="serviceType">An object that specifies the type of service object to get.</param>
      <returns>A service object of type <paramref name="serviceType." />  
 -or-  
 <see langword="null" /> if there is no service object of type <paramref name="serviceType" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.System#Windows#Documents#IDocumentPaginatorSource#DocumentPaginator">
      <summary>Defines the source object that performs actual content pagination.</summary>
      <returns>The object that performs the actual content pagination.</returns>
    </member>
    <member name="M:System.Windows.Documents.FlowDocument.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>Adds a child object.</summary>
      <param name="value">The child object to add.</param>
    </member>
    <member name="M:System.Windows.Documents.FlowDocument.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>Adds the text content of a node to the object.</summary>
      <param name="text">The text to add to the object.</param>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.TextAlignment">
      <summary>Gets or sets a value that indicates the horizontal alignment of text content.</summary>
      <returns>One of the <see cref="T:System.Windows.TextAlignment" /> values that specifies the desired alignment. The default is <see cref="F:System.Windows.TextAlignment.Left" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.TextAlignmentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.TextAlignment" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.TextEffects">
      <summary>Gets or sets the effects to apply to the text of a <see cref="T:System.Windows.Documents.FlowDocument" />.</summary>
      <returns>A <see cref="T:System.Windows.Media.TextEffectCollection" /> containing one or more <see cref="T:System.Windows.Media.TextEffect" /> objects that define effects to apply to the text of the <see cref="T:System.Windows.Documents.FlowDocument" />. The default is <see langword="null" /> (no effects applied).</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.TextEffectsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.TextEffects" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.Typography">
      <summary>Gets the currently effective typography variations for the text contents of the <see cref="T:System.Windows.Documents.FlowDocument" />.</summary>
      <returns>A <see cref="T:System.Windows.Documents.Typography" /> object that specifies the currently effective typography variations. For a list of default typography values, see <see cref="T:System.Windows.Documents.Typography" />.</returns>
    </member>
    <member name="T:System.Windows.Documents.FrameworkRichTextComposition">
      <summary>Represents a composition related to text input. You can use this class to find the text position of the composition or the result string.</summary>
    </member>
    <member name="P:System.Windows.Documents.FrameworkRichTextComposition.CompositionEnd">
      <summary>Gets the end position of the current composition text.</summary>
      <returns>The end position of the current composition text.</returns>
    </member>
    <member name="P:System.Windows.Documents.FrameworkRichTextComposition.CompositionStart">
      <summary>Gets the start position of the current composition text.</summary>
      <returns>The start position of the current composition text.</returns>
    </member>
    <member name="P:System.Windows.Documents.FrameworkRichTextComposition.ResultEnd">
      <summary>Gets the end position of the result text of the text input.</summary>
      <returns>The end position of the result text of the text input.</returns>
    </member>
    <member name="P:System.Windows.Documents.FrameworkRichTextComposition.ResultStart">
      <summary>Gets the start position of the result text of the text input.</summary>
      <returns>The start position of the result text of the text input.</returns>
    </member>
    <member name="T:System.Windows.Documents.FrameworkTextComposition">
      <summary>Represents a composition during the text input events of a <see cref="T:System.Windows.Controls.TextBox" />.</summary>
    </member>
    <member name="M:System.Windows.Documents.FrameworkTextComposition.Complete">
      <summary>Finalizes the composition.</summary>
    </member>
    <member name="P:System.Windows.Documents.FrameworkTextComposition.CompositionLength">
      <summary>Gets the length of the current composition in Unicode symbols.</summary>
      <returns>The length of the current composition in Unicode symbols.</returns>
    </member>
    <member name="P:System.Windows.Documents.FrameworkTextComposition.CompositionOffset">
      <summary>Gets the position at which the composition text occurs in the <see cref="T:System.Windows.Controls.TextBox" />.</summary>
      <returns>The position at which the composition text occurs in the <see cref="T:System.Windows.Controls.TextBox" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.FrameworkTextComposition.ResultLength">
      <summary>Gets the length of the finalized text in Unicode symbols when the <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> event occurs.</summary>
      <returns>The length of the finalized text in Unicode symbols when the <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> event occurs.</returns>
    </member>
    <member name="P:System.Windows.Documents.FrameworkTextComposition.ResultOffset">
      <summary>Gets the offset of the finalized text when the <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> event occurs.</summary>
      <returns>The offset of the finalized text when the <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> event occurs.</returns>
    </member>
    <member name="T:System.Windows.Documents.GetPageRootCompletedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Documents.PageContent.GetPageRootCompleted" /> event.</summary>
    </member>
    <member name="P:System.Windows.Documents.GetPageRootCompletedEventArgs.Result">
      <summary>Gets the <see cref="T:System.Windows.Documents.FixedPage" /> content asynchronously requested by <see cref="M:System.Windows.Documents.PageContent.GetPageRootAsync(System.Boolean)" />.</summary>
      <returns>The root element of the visual tree for the <see cref="T:System.Windows.Documents.PageContent" /> requested by <see cref="M:System.Windows.Documents.PageContent.GetPageRootAsync(System.Boolean)" />.</returns>
    </member>
    <member name="T:System.Windows.Documents.GetPageRootCompletedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Documents.PageContent.GetPageRootCompleted" /> event of the <see cref="T:System.Windows.Documents.PageContent" /> class.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Documents.Glyphs">
      <summary>Represents the set of glyphs that are used for rendering fixed text.</summary>
    </member>
    <member name="M:System.Windows.Documents.Glyphs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Glyphs" /> class.</summary>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.BidiLevel">
      <summary>Gets or sets the bidirectional nesting level of <see cref="T:System.Windows.Documents.Glyphs" />.</summary>
      <returns>An <see cref="T:System.Int32" /> value that represents the bidirectional nesting level.</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.BidiLevelProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Glyphs.BidiLevel" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.CaretStops">
      <summary>Gets or sets the caret stops that correspond to the code points in the Unicode string representing the <see cref="T:System.Windows.Documents.Glyphs" />.</summary>
      <returns>A value of type <see cref="T:System.String" /> that represents whether the code points have caret stops.</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.CaretStopsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Glyphs.CaretStops" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.DeviceFontName">
      <summary>Gets or sets the specific device font for which the <see cref="T:System.Windows.Documents.Glyphs" /> object has been optimized.</summary>
      <returns>A <see cref="T:System.String" /> value that represents the name of the device font.</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.DeviceFontNameProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Glyphs.DeviceFontName" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.Fill">
      <summary>Gets the sets the <see cref="T:System.Windows.Media.Brush" /> that is used for the fill of the <see cref="T:System.Windows.Documents.Glyphs" /> class.</summary>
      <returns>A <see cref="T:System.Windows.Media.Brush" /> that is used for the fill of the <see cref="T:System.Windows.Documents.Glyphs" /> class.</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.FillProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Glyphs.Fill" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.FontRenderingEmSize">
      <summary>Gets or sets the em size used for rendering the <see cref="T:System.Windows.Documents.Glyphs" /> class.</summary>
      <returns>A <see cref="T:System.Double" /> value that represents the em size used for rendering.</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.FontRenderingEmSizeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Glyphs.FontRenderingEmSize" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.FontUri">
      <summary>Gets or sets the <see cref="T:System.Uri" /> that represents the location of the font used for rendering the <see cref="T:System.Windows.Documents.Glyphs" /> class.</summary>
      <returns>A <see cref="T:System.Uri" /> that represents the location of the font used for rendering the <see cref="T:System.Windows.Documents.Glyphs" /> class.</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.FontUriProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Glyphs.FontUri" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.Indices">
      <summary>Gets or sets a collection of glyph specifications that represents the <see cref="T:System.Windows.Documents.Glyphs" /> object.</summary>
      <returns>A collection of glyph specifications that represents the <see cref="T:System.Windows.Documents.Glyphs" /> object.</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.IndicesProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Glyphs.Indices" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.IsSideways">
      <summary>Determines whether to rotate the <see cref="T:System.Windows.Documents.Glyphs" /> object.</summary>
      <returns>
        <see langword="true" /> if the glyphs that make up the <see cref="T:System.Windows.Documents.Glyphs" /> object are rotated 90° counter-clockwise; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.IsSidewaysProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Glyphs.IsSideways" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.OriginX">
      <summary>Gets or sets the value of the x origin for the <see cref="T:System.Windows.Documents.Glyphs" /> object.</summary>
      <returns>The x origin for the <see cref="T:System.Windows.Documents.Glyphs" /> object.</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.OriginXProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Glyphs.OriginX" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.OriginY">
      <summary>Gets or sets the value of the y origin for the <see cref="T:System.Windows.Documents.Glyphs" /> object.</summary>
      <returns>The y origin for the <see cref="T:System.Windows.Documents.Glyphs" /> object.</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.OriginYProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Glyphs.OriginY" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.StyleSimulations">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.StyleSimulations" /> for the <see cref="T:System.Windows.Documents.Glyphs" /> class.</summary>
      <returns>The <see cref="T:System.Windows.Media.StyleSimulations" /> for the <see cref="T:System.Windows.Documents.Glyphs" /> class.</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.StyleSimulationsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Glyphs.StyleSimulations" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.System#Windows#Markup#IUriContext#BaseUri">
      <summary>For a description of this member, see <see cref="P:System.Windows.Markup.IUriContext.BaseUri" />.</summary>
      <returns>The base URI of the current context.</returns>
    </member>
    <member name="M:System.Windows.Documents.Glyphs.ToGlyphRun">
      <summary>Creates a <see cref="T:System.Windows.Media.GlyphRun" /> from the properties of the <see cref="T:System.Windows.Documents.Glyphs" /> object.</summary>
      <returns>A <see cref="T:System.Windows.Media.GlyphRun" /> that was created using the properties of the <see cref="T:System.Windows.Documents.Glyphs" /> object.</returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.UnicodeString">
      <summary>Gets or sets the <see cref="T:System.String" /> that represents the Unicode string for the <see cref="T:System.Windows.Documents.Glyphs" /> object.</summary>
      <returns>A Unicode string for the <see cref="T:System.Windows.Documents.Glyphs" /> object.</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.UnicodeStringProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Glyphs.UnicodeString" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Documents.Hyperlink">
      <summary>An inline-level flow content element that provides facilities for hosting hyperlinks within flow content.</summary>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.#ctor">
      <summary>Initializes a new, default instance of the <see cref="T:System.Windows.Documents.Hyperlink" /> class.</summary>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.#ctor(System.Windows.Documents.Inline)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Hyperlink" /> class, taking a specified <see cref="T:System.Windows.Documents.Inline" /> object as the initial contents of the new <see cref="T:System.Windows.Documents.Hyperlink" />.</summary>
      <param name="childInline">An <see cref="T:System.Windows.Documents.Inline" /> object specifying the initial contents of the new <see cref="T:System.Windows.Documents.Hyperlink" />.</param>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.#ctor(System.Windows.Documents.Inline,System.Windows.Documents.TextPointer)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Hyperlink" /> class, taking a specified <see cref="T:System.Windows.Documents.Inline" /> object as the initial contents of the new <see cref="T:System.Windows.Documents.Hyperlink" />, and a <see cref="T:System.Windows.Documents.TextPointer" /> specifying an insertion position for the new <see cref="T:System.Windows.Documents.Hyperlink" />.</summary>
      <param name="childInline">An <see cref="T:System.Windows.Documents.Inline" /> object specifying the initial contents of the new <see cref="T:System.Windows.Documents.Hyperlink" />.  This parameter may be <see langword="null" />, in which case no <see cref="T:System.Windows.Documents.Inline" /> is inserted.</param>
      <param name="insertionPosition">A <see cref="T:System.Windows.Documents.TextPointer" /> specifying an insertion position at which to insert the <see cref="T:System.Windows.Documents.Hyperlink" /> element after it is created, or <see langword="null" /> for no automatic insertion.</param>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Hyperlink" /> class, taking two <see cref="T:System.Windows.Documents.TextPointer" /> objects that indicate the beginning and end of a selection of content to be contained by the new <see cref="T:System.Windows.Documents.Hyperlink" />.</summary>
      <param name="start">A <see cref="T:System.Windows.Documents.TextPointer" /> indicating the beginning of a selection of content to be contained by the new <see cref="T:System.Windows.Documents.Hyperlink" />.</param>
      <param name="end">A <see cref="T:System.Windows.Documents.TextPointer" /> indicating the end of a selection of content to be contained by the new <see cref="T:System.Windows.Documents.Hyperlink" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="start" /> or <paramref name="end" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="start" /> and <paramref name="end" /> do not resolve to a range of content suitable for enclosure by a <see cref="T:System.Windows.Documents.Span" /> element; for example, if <paramref name="start" /> and <paramref name="end" /> indicate positions in different paragraphs.</exception>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.BaseUri">
      <summary>Gets or sets a base URI for the <see cref="T:System.Windows.Documents.Hyperlink" />.</summary>
      <returns>A base URI for the <see cref="T:System.Windows.Documents.Hyperlink" />.</returns>
    </member>
    <member name="E:System.Windows.Documents.Hyperlink.Click">
      <summary>Occurs when the left mouse button is clicked on a <see cref="T:System.Windows.Documents.Hyperlink" />.</summary>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.ClickEvent">
      <summary>Identifies the <see cref="E:System.Windows.Documents.Hyperlink.Click" /> routed event.</summary>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.Command">
      <summary>Gets or sets a command to associate with the <see cref="T:System.Windows.Documents.Hyperlink" />.</summary>
      <returns>A command to associate with the <see cref="T:System.Windows.Documents.Hyperlink" />. The default is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.CommandParameter">
      <summary>Gets or sets command parameters associated with the command specified by the <see cref="P:System.Windows.Documents.Hyperlink.Command" /> property.</summary>
      <returns>An object specifying parameters for the command specified by the <see cref="P:System.Windows.Documents.Hyperlink.Command" /> property. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.CommandParameterProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Hyperlink.CommandParameter" /> dependency property.</summary>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.CommandProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Hyperlink.Command" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.CommandTarget">
      <summary>Gets or sets a target element on which to execute the command specified by the <see cref="P:System.Windows.Documents.Hyperlink.Command" /> property.</summary>
      <returns>A target element on which to execute the command specified by the <see cref="P:System.Windows.Documents.Hyperlink.Command" /> property. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.CommandTargetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Hyperlink.CommandTarget" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.DoClick">
      <summary>Simulates the act of a user clicking the <see cref="T:System.Windows.Documents.Hyperlink" />.</summary>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.IsEnabledCore">
      <summary>Gets a value that indicates whether or not the <see cref="T:System.Windows.Documents.Hyperlink" /> is enabled.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Documents.Hyperlink" /> is enabled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.NavigateUri">
      <summary>Gets or sets a URI to navigate to when the <see cref="T:System.Windows.Documents.Hyperlink" /> is activated.</summary>
      <returns>The URI to navigate to when the <see cref="T:System.Windows.Documents.Hyperlink" /> is activated. The default is <see langword="null" />.  
 <see cref="T:System.Windows.Documents.Hyperlink" /> can navigate to the value of the <see cref="P:System.Windows.Documents.Hyperlink.NavigateUri" /> property only if either the direct or indirect parent of a <see cref="T:System.Windows.Documents.Hyperlink" /> is a navigation host, including <see cref="T:System.Windows.Navigation.NavigationWindow" />, <see cref="T:System.Windows.Controls.Frame" />, or any browser that can host XBAPs (which includes Internet Explorer 6 and later versions, and Firefox 2.0+). For more information, see the Navigation Hosts section in Navigation Overview.</returns>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.NavigateUriProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Hyperlink.NavigateUri" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.OnClick">
      <summary>Handles the <see cref="E:System.Windows.Documents.Hyperlink.Click" /> routed event.</summary>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.OnCreateAutomationPeer">
      <summary>Creates and returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> object for this <see cref="T:System.Windows.Documents.Hyperlink" />.</summary>
      <returns>An <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> object for this <see cref="T:System.Windows.Documents.Hyperlink" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Handles the <see cref="E:System.Windows.ContentElement.KeyDown" /> routed event.</summary>
      <param name="e">Arguments associated with the <see cref="E:System.Windows.ContentElement.KeyDown" /> event.</param>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Handles the <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" /> routed event.</summary>
      <param name="e">Arguments associated with the <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" /> event.</param>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Handles the <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" /> routed event.</summary>
      <param name="e">Arguments associated with the <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" /> event.</param>
    </member>
    <member name="E:System.Windows.Documents.Hyperlink.RequestNavigate">
      <summary>Occurs when navigation events are requested.</summary>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.RequestNavigateEvent">
      <summary>Identifies the <see cref="E:System.Windows.Documents.Hyperlink.RequestNavigate" /> routed event.</summary>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.System#Windows#Markup#IUriContext#BaseUri">
      <summary>Gets or sets a base URI for the <see cref="T:System.Windows.Documents.Hyperlink" />.</summary>
      <returns>A base URI for the <see cref="T:System.Windows.Documents.Hyperlink" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.TargetName">
      <summary>Gets or sets the name of a target window or frame for the <see cref="T:System.Windows.Documents.Hyperlink" />.</summary>
      <returns>A string specifying the name of a target window or frame for the <see cref="T:System.Windows.Documents.Hyperlink" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.TargetNameProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Hyperlink.TargetName" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Documents.Inline">
      <summary>An abstract class that provides a base for all inline flow content elements.</summary>
    </member>
    <member name="M:System.Windows.Documents.Inline.#ctor">
      <summary>Initializes base class values when called by a derived class.</summary>
    </member>
    <member name="P:System.Windows.Documents.Inline.BaselineAlignment">
      <summary>Gets or sets the baseline alignment for the <see cref="T:System.Windows.Documents.Inline" /> element.</summary>
      <returns>A member or the <see cref="T:System.Windows.BaselineAlignment" /> enumeration specifying the baseline alignment for the <see cref="T:System.Windows.Documents.Inline" /> element.  
 The default value is <see cref="T:System.Windows.BaselineAlignment" />.Baseline.</returns>
    </member>
    <member name="F:System.Windows.Documents.Inline.BaselineAlignmentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Inline.BaselineAlignment" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Inline.FlowDirection">
      <summary>Gets or sets a value that specifies the relative direction for flow of content within a <see cref="T:System.Windows.Documents.Inline" /> element.</summary>
      <returns>A member of the <see cref="T:System.Windows.FlowDirection" /> enumeration specifying the relative flow direction.  Getting this property returns the currently effective flow direction.  Setting this property causes the contents of the <see cref="T:System.Windows.Documents.Inline" /> element to re-flow in the indicated direction.  
 The default value is <see cref="F:System.Windows.FlowDirection.LeftToRight" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Inline.FlowDirectionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Inline.FlowDirection" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Inline.NextInline">
      <summary>Gets the next <see cref="T:System.Windows.Documents.Inline" /> element that is a peer to this element.</summary>
      <returns>An <see cref="T:System.Windows.Documents.Inline" /> object representing the next <see cref="T:System.Windows.Documents.Inline" /> element that is a peer to this element, or null if there is no next <see cref="T:System.Windows.Documents.Inline" /> element.  
 This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Documents.Inline.PreviousInline">
      <summary>Gets the previous <see cref="T:System.Windows.Documents.Inline" /> element that is a peer to this element.</summary>
      <returns>An <see cref="T:System.Windows.Documents.Inline" /> object representing the previous <see cref="T:System.Windows.Documents.Inline" /> element that is a peer to this element, or null if there is no previous <see cref="T:System.Windows.Documents.Inline" /> element.  
 This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Documents.Inline.SiblingInlines">
      <summary>Gets an <see cref="T:System.Windows.Documents.InlineCollection" /> that contains the <see cref="T:System.Windows.Documents.Inline" /> elements that are siblings (peers) to this element.</summary>
      <returns>An <see cref="T:System.Windows.Documents.InlineCollection" /> object that contains the <see cref="T:System.Windows.Documents.Inline" /> elements that are siblings to this element.  
 This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Documents.Inline.TextDecorations">
      <summary>Gets a <see cref="T:System.Windows.TextDecorationCollection" /> that contains text decorations to apply to this element.</summary>
      <returns>A <see cref="T:System.Windows.TextDecorationCollection" /> collection that contains text decorations to apply to this element.  
 The default value is null (no text decorations applied).</returns>
    </member>
    <member name="F:System.Windows.Documents.Inline.TextDecorationsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Inline.TextDecorations" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Documents.InlineCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Documents.Inline" /> elements. <see cref="T:System.Windows.Documents.InlineCollection" /> defines the allowable child content of the <see cref="T:System.Windows.Documents.Paragraph" />, <see cref="T:System.Windows.Documents.Span" />, and <see cref="T:System.Windows.Controls.TextBlock" /> elements.</summary>
    </member>
    <member name="M:System.Windows.Documents.InlineCollection.Add(System.String)">
      <summary>Adds an implicit <see cref="T:System.Windows.Documents.Run" /> element with the given text, supplied as a <see cref="T:System.String" />.</summary>
      <param name="text">Text set as the <see cref="P:System.Windows.Documents.Run.Text" /> property for the implicit <see cref="T:System.Windows.Documents.Run" />.</param>
    </member>
    <member name="M:System.Windows.Documents.InlineCollection.Add(System.Windows.UIElement)">
      <summary>Adds an implicit <see cref="T:System.Windows.Documents.InlineUIContainer" /> with the supplied <see cref="T:System.Windows.UIElement" /> already in it.</summary>
      <param name="uiElement">
        <see cref="T:System.Windows.UIElement" /> set as the <see cref="P:System.Windows.Documents.InlineUIContainer.Child" /> property for the implicit <see cref="T:System.Windows.Documents.InlineUIContainer" />.</param>
    </member>
    <member name="P:System.Windows.Documents.InlineCollection.FirstInline">
      <summary>Gets the first <see cref="T:System.Windows.Documents.Inline" /> element within this instance of <see cref="T:System.Windows.Documents.InlineCollection" />.</summary>
      <returns>The first <see cref="T:System.Windows.Documents.Inline" /> element within this instance of <see cref="T:System.Windows.Documents.InlineCollection" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.InlineCollection.LastInline">
      <summary>Gets the last <see cref="T:System.Windows.Documents.Inline" /> element within this instance of <see cref="T:System.Windows.Documents.InlineCollection" />.</summary>
      <returns>The last <see cref="T:System.Windows.Documents.Inline" /> element within this instance of <see cref="T:System.Windows.Documents.InlineCollection" />.</returns>
    </member>
    <member name="T:System.Windows.Documents.InlineUIContainer">
      <summary>An inline-level flow content element which enables <see cref="T:System.Windows.UIElement" /> elements (i.e. a <see cref="T:System.Windows.Controls.Button" />) to be embedded (hosted) in flow content.</summary>
    </member>
    <member name="M:System.Windows.Documents.InlineUIContainer.#ctor">
      <summary>Initializes a new, empty instance of the <see cref="T:System.Windows.Documents.InlineUIContainer" /> class.</summary>
    </member>
    <member name="M:System.Windows.Documents.InlineUIContainer.#ctor(System.Windows.UIElement)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.InlineUIContainer" /> class, taking a specified <see cref="T:System.Windows.UIElement" /> object as the initial contents of the new <see cref="T:System.Windows.Documents.InlineUIContainer" />.</summary>
      <param name="childUIElement">An <see cref="T:System.Windows.UIElement" /> object specifying the initial contents of the new <see cref="T:System.Windows.Documents.InlineUIContainer" />.</param>
    </member>
    <member name="M:System.Windows.Documents.InlineUIContainer.#ctor(System.Windows.UIElement,System.Windows.Documents.TextPointer)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.InlineUIContainer" /> class, taking a specified <see cref="T:System.Windows.UIElement" /> object as the initial contents of the new <see cref="T:System.Windows.Documents.InlineUIContainer" />, and a <see cref="T:System.Windows.Documents.TextPointer" /> specifying an insertion position for the new <see cref="T:System.Windows.Documents.InlineUIContainer" /> element.</summary>
      <param name="childUIElement">A <see cref="T:System.Windows.UIElement" /> object specifying the initial contents of the new <see cref="T:System.Windows.Documents.InlineUIContainer" />.  This parameter may be <see langword="null" />, in which case no <see cref="T:System.Windows.UIElement" /> is inserted.</param>
      <param name="insertionPosition">A <see cref="T:System.Windows.Documents.TextPointer" /> specifying an insertion position at which to insert the <see cref="T:System.Windows.Documents.InlineUIContainer" /> element after it is created, or <see langword="null" /> for no automatic insertion.</param>
    </member>
    <member name="P:System.Windows.Documents.InlineUIContainer.Child">
      <summary>Gets or sets the <see cref="T:System.Windows.UIElement" /> hosted by the <see cref="T:System.Windows.Documents.InlineUIContainer" />.</summary>
      <returns>The <see cref="T:System.Windows.UIElement" /> hosted by the <see cref="T:System.Windows.Documents.InlineUIContainer" />.</returns>
    </member>
    <member name="T:System.Windows.Documents.Italic">
      <summary>Provides an inline-level flow content element that causes content to render with an italic font style.</summary>
    </member>
    <member name="M:System.Windows.Documents.Italic.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Italic" /> class.</summary>
    </member>
    <member name="M:System.Windows.Documents.Italic.#ctor(System.Windows.Documents.Inline)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Italic" /> class with the specified <see cref="T:System.Windows.Documents.Inline" /> object as its initial content.</summary>
      <param name="childInline">The initial content of the new <see cref="T:System.Windows.Documents.Italic" />.</param>
    </member>
    <member name="M:System.Windows.Documents.Italic.#ctor(System.Windows.Documents.Inline,System.Windows.Documents.TextPointer)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Italic" /> class with the specified <see cref="T:System.Windows.Documents.Inline" /> object as its initial content, and a <see cref="T:System.Windows.Documents.TextPointer" /> that specifies an insertion position for the new <see cref="T:System.Windows.Documents.Inline" /> element.</summary>
      <param name="childInline">The initial content. This parameter can be <see langword="null" />, in which case no <see cref="T:System.Windows.Documents.Inline" /> is inserted.</param>
      <param name="insertionPosition">The insertion position at which to insert the <see cref="T:System.Windows.Documents.Italic" /> element after it is created.</param>
    </member>
    <member name="M:System.Windows.Documents.Italic.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Italic" /> class with the specified <see cref="T:System.Windows.Documents.TextPointer" /> objects that indicate the beginning and end of a content selection that the new <see cref="T:System.Windows.Documents.Italic" /> will contain.</summary>
      <param name="start">The beginning of a selection of content that the new <see cref="T:System.Windows.Documents.Italic" /> will contain.</param>
      <param name="end">The end of a selection of content that the new <see cref="T:System.Windows.Documents.Italic" /> will contain.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="start" /> or <paramref name="end" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="start" /> and <paramref name="end" /> do not resolve to a range of content suitable for enclosure by an <see cref="T:System.Windows.Documents.Italic" /> element; for example, if <paramref name="start" /> and <paramref name="end" /> indicate positions in different paragraphs.</exception>
    </member>
    <member name="T:System.Windows.Documents.LineBreak">
      <summary>An inline flow content element that causes a line break to occur in flow content.</summary>
    </member>
    <member name="M:System.Windows.Documents.LineBreak.#ctor">
      <summary>Initializes a new, default instance of the <see cref="T:System.Windows.Documents.LineBreak" /> class.</summary>
    </member>
    <member name="M:System.Windows.Documents.LineBreak.#ctor(System.Windows.Documents.TextPointer)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.LineBreak" /> class, and inserts the new <see cref="T:System.Windows.Documents.LineBreak" /> at a specified position.</summary>
      <param name="insertionPosition">A <see cref="T:System.Windows.Documents.TextPointer" /> specifying an insertion position at which to insert the <see cref="T:System.Windows.Documents.LineBreak" /> element after it is created, or <see langword="null" /> for no automatic insertion.</param>
    </member>
    <member name="T:System.Windows.Documents.LinkTarget">
      <summary>Represents an element on a page that can be linked to from other documents or other places in the same document.</summary>
    </member>
    <member name="M:System.Windows.Documents.LinkTarget.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.LinkTarget" /> class.</summary>
    </member>
    <member name="P:System.Windows.Documents.LinkTarget.Name">
      <summary>Gets or sets the name of the element that this <see cref="T:System.Windows.Documents.LinkTarget" /> identifies as a linkable element.</summary>
      <returns>A <see cref="T:System.String" /> that is identical to the <see cref="P:System.Windows.FrameworkElement.Name" /> property of the markup element that corresponds to this <see cref="T:System.Windows.Documents.LinkTarget" /> element.</returns>
    </member>
    <member name="T:System.Windows.Documents.LinkTargetCollection">
      <summary>Provides a collection of all of the <see cref="T:System.Windows.Documents.LinkTarget" /> elements in a <see cref="T:System.IO.Packaging.Package" />.</summary>
    </member>
    <member name="M:System.Windows.Documents.LinkTargetCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.LinkTargetCollection" /> class.</summary>
    </member>
    <member name="M:System.Windows.Documents.LinkTargetCollection.Add(System.Windows.Documents.LinkTarget)">
      <summary>Adds a specified <see cref="T:System.Windows.Documents.LinkTarget" /> to the collection.</summary>
      <param name="value">The link target that is added.</param>
      <returns>The zero-based index in the collection of the <paramref name="value" /> added.</returns>
    </member>
    <member name="M:System.Windows.Documents.LinkTargetCollection.Contains(System.Windows.Documents.LinkTarget)">
      <summary>Specifies a value that indicates whether a particular <see cref="T:System.Windows.Documents.LinkTarget" /> is in the collection.</summary>
      <param name="value">The link to test for.</param>
      <returns>
        <see langword="true" /> if <paramref name="value" /> is present; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.LinkTargetCollection.CopyTo(System.Windows.Documents.LinkTarget[],System.Int32)">
      <summary>Copies the items in the collection to the specified array beginning at the specified index.</summary>
      <param name="array">The target array.</param>
      <param name="index">The zero-based index of the array position where the first item is copied.</param>
    </member>
    <member name="M:System.Windows.Documents.LinkTargetCollection.IndexOf(System.Windows.Documents.LinkTarget)">
      <summary>Gets the index of the specified item.</summary>
      <param name="value">The object to locate in the collection.</param>
      <returns>The index of <paramref name="value" /> if found in the collection; otherwise, -1.</returns>
    </member>
    <member name="M:System.Windows.Documents.LinkTargetCollection.Insert(System.Int32,System.Windows.Documents.LinkTarget)">
      <summary>Inserts the specified item into the collection at the specified index.</summary>
      <param name="index">The point where the link target is inserted.</param>
      <param name="value">The target to insert.</param>
    </member>
    <member name="P:System.Windows.Documents.LinkTargetCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Windows.Documents.LinkTarget" /> at the specified index.</summary>
      <param name="index">The index of the target being written or read.</param>
      <returns>The <see cref="T:System.Windows.Documents.LinkTarget" /> at the specified index.</returns>
    </member>
    <member name="M:System.Windows.Documents.LinkTargetCollection.Remove(System.Windows.Documents.LinkTarget)">
      <summary>Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <param name="value">The link target to remove.</param>
    </member>
    <member name="T:System.Windows.Documents.List">
      <summary>A block-level flow content element that provides facilities for presenting content in an ordered or unordered list.</summary>
    </member>
    <member name="M:System.Windows.Documents.List.#ctor">
      <summary>Initializes a new, empty instance of the <see cref="T:System.Windows.Documents.List" /> class.</summary>
    </member>
    <member name="M:System.Windows.Documents.List.#ctor(System.Windows.Documents.ListItem)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.List" /> class, taking a specified <see cref="T:System.Windows.Documents.ListItem" /> object as the initial contents of the new <see cref="T:System.Windows.Documents.List" />.</summary>
      <param name="listItem">A <see cref="T:System.Windows.Documents.ListItem" /> object specifying the initial contents of the new <see cref="T:System.Windows.Documents.List" />.</param>
    </member>
    <member name="P:System.Windows.Documents.List.ListItems">
      <summary>Gets a <see cref="T:System.Windows.Documents.ListItemCollection" /> containing the <see cref="T:System.Windows.Documents.ListItem" /> elements that comprise the contents of the <see cref="T:System.Windows.Documents.List" />.</summary>
      <returns>A <see cref="T:System.Windows.Documents.ListItemCollection" /> containing the <see cref="T:System.Windows.Documents.ListItem" /> elements that comprise the contents of the <see cref="T:System.Windows.Documents.List" />.  
 This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Documents.List.MarkerOffset">
      <summary>Gets or sets the desired distance between the contents of each <see cref="T:System.Windows.Documents.ListItem" /> element, and the near edge of the list marker.</summary>
      <returns>A double value specifying the desired distance between list content and the near edge of list markers, in device independent pixels.  
 A value of <see cref="F:System.Double.NaN" /> (equivalent to an attribute value of "<c>Auto</c>") causes the marker offset to be determined automatically.  
 The default value is <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.List.MarkerOffsetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.List.MarkerOffset" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.List.MarkerStyle">
      <summary>Gets or sets the marker style for the <see cref="T:System.Windows.Documents.List" />.</summary>
      <returns>A member of the <see cref="T:System.Windows.TextMarkerStyle" /> enumeration specifying the marker style to use.  
 The default value is <see cref="F:System.Windows.TextMarkerStyle.Disc" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.List.MarkerStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.List.MarkerStyle" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.List.StartIndex">
      <summary>Gets or sets the starting index for labeling the items in an ordered list.</summary>
      <returns>The starting index for labeling items in an ordered list.  
 The default value is 1.</returns>
    </member>
    <member name="F:System.Windows.Documents.List.StartIndexProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.List.StartIndex" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Documents.ListItem">
      <summary>A flow content element that represents a particular content item in an ordered or unordered <see cref="T:System.Windows.Documents.List" />.</summary>
    </member>
    <member name="M:System.Windows.Documents.ListItem.#ctor">
      <summary>Initializes a new, empty instance of the <see cref="T:System.Windows.Documents.ListItem" /> class.</summary>
    </member>
    <member name="M:System.Windows.Documents.ListItem.#ctor(System.Windows.Documents.Paragraph)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.ListItem" /> class, taking a specified <see cref="T:System.Windows.Documents.Paragraph" /> object as the initial contents of the new <see cref="T:System.Windows.Documents.ListItem" />.</summary>
      <param name="paragraph">A <see cref="T:System.Windows.Documents.Paragraph" /> object specifying the initial contents of the new <see cref="T:System.Windows.Documents.ListItem" />.</param>
    </member>
    <member name="P:System.Windows.Documents.ListItem.Blocks">
      <summary>Gets a block collection that contains the top-level <see cref="T:System.Windows.Documents.Block" /> elements of the <see cref="T:System.Windows.Documents.ListItem" />.</summary>
      <returns>A block collection that contains the <see cref="T:System.Windows.Documents.Block" /> elements of the <see cref="T:System.Windows.Documents.ListItem" /></returns>
    </member>
    <member name="P:System.Windows.Documents.ListItem.BorderBrush">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.Brush" /> to use when painting the element's border.</summary>
      <returns>The brush used to apply to the element's border. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.ListItem.BorderBrushProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.ListItem.BorderBrush" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.ListItem.BorderThickness">
      <summary>Gets or sets the border thickness for the element.</summary>
      <returns>A <see cref="T:System.Windows.Thickness" /> structure that specifies the amount of border to apply, in device independent pixels. The default is a uniform thickness of zero (0.0).</returns>
    </member>
    <member name="F:System.Windows.Documents.ListItem.BorderThicknessProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.ListItem.BorderThickness" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.ListItem.FlowDirection">
      <summary>Gets or sets the relative direction for flow of content within a <see cref="T:System.Windows.Documents.ListItem" /> element.</summary>
      <returns>One of the <see cref="T:System.Windows.FlowDirection" /> values that specifies the relative flow direction.  The default is <see cref="F:System.Windows.FlowDirection.LeftToRight" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.ListItem.FlowDirectionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.ListItem.FlowDirection" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.ListItem.LineHeight">
      <summary>Gets or sets the height of each line of content.</summary>
      <returns>The height of each line in device independent pixels with a value range of 0.0034 to 160000.  A value of <see cref="F:System.Double.NaN" /> (equivalent to an attribute value of "<c>Auto</c>") causes the line height to be determined automatically from the current font characteristics.  The default is <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.ListItem.LineHeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.ListItem.LineHeight" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.ListItem.LineStackingStrategy">
      <summary>Gets or sets the mechanism by which a line box is determined for each line of text within the <see cref="T:System.Windows.Documents.ListItem" />.</summary>
      <returns>One of the <see cref="T:System.Windows.LineStackingStrategy" /> values that specifies the mechanism by which a line box is determined for each line of text within the <see cref="T:System.Windows.Documents.ListItem" />. The default is <see cref="F:System.Windows.LineStackingStrategy.MaxHeight" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.ListItem.LineStackingStrategyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.ListItem.LineStackingStrategy" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.ListItem.List">
      <summary>Gets the <see cref="T:System.Windows.Documents.List" /> that contains the <see cref="T:System.Windows.Documents.ListItem" />.</summary>
      <returns>The list that contains the <see cref="T:System.Windows.Documents.ListItem" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.ListItem.Margin">
      <summary>Gets or sets the margin thickness for the element.</summary>
      <returns>A <see cref="T:System.Windows.Thickness" /> structure that specifies the amount of margin to apply, in device independent pixels. The default is a uniform thickness of zero (0.0).</returns>
    </member>
    <member name="F:System.Windows.Documents.ListItem.MarginProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.ListItem.Margin" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.ListItem.NextListItem">
      <summary>Gets the next <see cref="T:System.Windows.Documents.ListItem" /> in the containing <see cref="T:System.Windows.Documents.List" />.</summary>
      <returns>The next <see cref="T:System.Windows.Documents.ListItem" /> in the <see cref="T:System.Windows.Documents.List" />, or <see langword="null" /> if there is no next <see cref="T:System.Windows.Documents.ListItem" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.ListItem.Padding">
      <summary>Gets or sets the padding thickness for the element.</summary>
      <returns>A <see cref="T:System.Windows.Thickness" /> structure that specifies the amount of padding to apply, in device independent pixels. The default is a uniform thickness of zero (0.0).</returns>
    </member>
    <member name="F:System.Windows.Documents.ListItem.PaddingProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.ListItem.Padding" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.ListItem.PreviousListItem">
      <summary>Gets the previous <see cref="T:System.Windows.Documents.ListItem" /> in the containing <see cref="T:System.Windows.Documents.List" />.</summary>
      <returns>The previous <see cref="T:System.Windows.Documents.ListItem" /> in the <see cref="T:System.Windows.Documents.List" />, or <see langword="null" /> if there is no previous <see cref="T:System.Windows.Documents.ListItem" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.ListItem.ShouldSerializeBlocks(System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>Returns a value that indicates whether the effective value of the <see cref="P:System.Windows.Documents.ListItem.Blocks" /> property should be serialized during serialization of the <see cref="T:System.Windows.Documents.ListItem" /> object.</summary>
      <param name="manager">A serialization service manager object for the object.</param>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.Documents.ListItem.Blocks" /> property should be serialized; otherwise, <see langword="false" />.</returns>
      <exception cref="T:System.NullReferenceException">
        <paramref name="manager" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Documents.ListItem.SiblingListItems">
      <summary>Gets a <see cref="T:System.Windows.Documents.ListItemCollection" /> that contains the <see cref="T:System.Windows.Documents.ListItem" /> elements that are siblings of the current <see cref="T:System.Windows.Documents.ListItem" /> element.</summary>
      <returns>A <see cref="T:System.Windows.Documents.ListItemCollection" /> that contains the child <see cref="T:System.Windows.Documents.ListItem" /> elements that are directly hosted by the parent of the current <see cref="T:System.Windows.Documents.ListItem" /> element, or <see langword="null" /> if the current <see cref="T:System.Windows.Documents.ListItem" /> element has no parent.</returns>
    </member>
    <member name="P:System.Windows.Documents.ListItem.TextAlignment">
      <summary>Gets or sets a value that indicates the horizontal alignment of text content.</summary>
      <returns>One of the <see cref="T:System.Windows.TextAlignment" /> values that specifies the desired alignment. The default is <see cref="F:System.Windows.TextAlignment.Left" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.ListItem.TextAlignmentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.ListItem.TextAlignment" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Documents.ListItemCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Documents.ListItem" /> elements. <see cref="T:System.Windows.Documents.ListItemCollection" /> defines the allowable child content of a <see cref="T:System.Windows.Documents.List" /> element.</summary>
    </member>
    <member name="P:System.Windows.Documents.ListItemCollection.FirstListItem">
      <summary>Gets the first <see cref="T:System.Windows.Documents.ListItem" /> element within this instance of <see cref="T:System.Windows.Documents.ListItemCollection" />.</summary>
      <returns>The first <see cref="T:System.Windows.Documents.ListItem" /> element within this instance of <see cref="T:System.Windows.Documents.ListItemCollection" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.ListItemCollection.LastListItem">
      <summary>Gets the last <see cref="T:System.Windows.Documents.ListItem" /> element within this instance of <see cref="T:System.Windows.Documents.ListItemCollection" />.</summary>
      <returns>The last <see cref="T:System.Windows.Documents.ListItem" /> element within this instance of <see cref="T:System.Windows.Documents.ListItemCollection" />.</returns>
    </member>
    <member name="T:System.Windows.Documents.LogicalDirection">
      <summary>Specifies a logical direction in which to perform certain text operations, such as inserting, retrieving, or navigating through text relative to a specified position (a <see cref="T:System.Windows.Documents.TextPointer" />).</summary>
    </member>
    <member name="F:System.Windows.Documents.LogicalDirection.Backward">
      <summary>Backward, or from right to left.</summary>
    </member>
    <member name="F:System.Windows.Documents.LogicalDirection.Forward">
      <summary>Forward, or from left to right.</summary>
    </member>
    <member name="T:System.Windows.Documents.PageContent">
      <summary>Provides information about the <see cref="T:System.Windows.Documents.FixedPage" /> elements within a <see cref="T:System.Windows.Documents.FixedDocument" />.</summary>
    </member>
    <member name="M:System.Windows.Documents.PageContent.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.PageContent" /> class.</summary>
    </member>
    <member name="P:System.Windows.Documents.PageContent.Child">
      <summary>Gets or sets the <see cref="T:System.Windows.Documents.FixedPage" /> associated with this <see cref="T:System.Windows.Documents.PageContent" />.</summary>
      <returns>The <see cref="T:System.Windows.Documents.FixedPage" /> associated with this <see cref="T:System.Windows.Documents.PageContent" />, or null when the <see cref="T:System.Windows.Documents.FixedPage" /> is set by the <see cref="P:System.Windows.Documents.PageContent.Source" /> property.</returns>
    </member>
    <member name="M:System.Windows.Documents.PageContent.GetPageRoot(System.Boolean)">
      <summary>Loads and returns the <see cref="T:System.Windows.Documents.FixedPage" /> content element.</summary>
      <param name="forceReload">
        <see langword="true" /> to always reload the <see cref="T:System.Windows.Documents.FixedPage" /> even if it has been previously loaded and cached; <see langword="false" /> to load the <see cref="T:System.Windows.Documents.FixedPage" /> only if there is no cached version.</param>
      <returns>The root element of the visual tree for this page.</returns>
    </member>
    <member name="M:System.Windows.Documents.PageContent.GetPageRootAsync(System.Boolean)">
      <summary>Asynchronously loads and returns the <see cref="T:System.Windows.Documents.FixedPage" /> content element.</summary>
      <param name="forceReload">
        <see langword="true" /> to always reload the <see cref="T:System.Windows.Documents.FixedPage" /> even if it has been previously loaded and cached; <see langword="false" /> to load the <see cref="T:System.Windows.Documents.FixedPage" /> only if there is no cached version.</param>
    </member>
    <member name="M:System.Windows.Documents.PageContent.GetPageRootAsyncCancel">
      <summary>Cancels any current <see cref="M:System.Windows.Documents.PageContent.GetPageRootAsync(System.Boolean)" /> operation in progress.</summary>
    </member>
    <member name="E:System.Windows.Documents.PageContent.GetPageRootCompleted">
      <summary>Occurs when <see cref="M:System.Windows.Documents.PageContent.GetPageRootAsync(System.Boolean)" /> has completed.</summary>
    </member>
    <member name="P:System.Windows.Documents.PageContent.LinkTargets">
      <summary>Gets a collection of <see cref="T:System.Windows.Documents.LinkTarget" /> elements that identify the hyperlink-addressable locations on the page.</summary>
      <returns>The <see cref="T:System.Windows.Documents.LinkTargetCollection" /> of <see cref="T:System.Windows.Documents.LinkTarget" /> elements that identify the hyperlink-addressable locations on the page.</returns>
    </member>
    <member name="M:System.Windows.Documents.PageContent.ShouldSerializeChild(System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>Gets a value indicating whether the value of the <see cref="P:System.Windows.Documents.PageContent.Child" /> property should be serialized when this <see cref="T:System.Windows.Documents.PageContent" /> is serialized.</summary>
      <param name="manager">The serialization services provider.</param>
      <returns>
        <see langword="true" /> if <paramref name="manager" /> is not <see langword="null" /> and it does not have an XmlWriter; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.PageContent.Source">
      <summary>Gets or sets the uniform resource identifier (URI) to the <see cref="T:System.Windows.Documents.FixedPage" /> content data stream.</summary>
      <returns>The <see cref="T:System.Uri" /> of the corresponding <see cref="T:System.Windows.Documents.FixedPage" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.PageContent.SourceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.PageContent.Source" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Documents.PageContent.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Markup.IAddChild.AddChild(System.Object)" />.</summary>
      <param name="value">The child <see cref="T:System.Object" /> to add.</param>
    </member>
    <member name="M:System.Windows.Documents.PageContent.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Markup.IAddChild.AddText(System.String)" />.</summary>
      <param name="text">The text to add to the object.</param>
    </member>
    <member name="P:System.Windows.Documents.PageContent.System#Windows#Markup#IUriContext#BaseUri">
      <summary>For a description of this member, see <see cref="P:System.Windows.Markup.IUriContext.BaseUri" />.</summary>
      <returns>The base URI of the current context.</returns>
    </member>
    <member name="T:System.Windows.Documents.PageContentCollection">
      <summary>Provides collection support for a collection of document pages.</summary>
    </member>
    <member name="M:System.Windows.Documents.PageContentCollection.Add(System.Windows.Documents.PageContent)">
      <summary>Adds a new page to the page collection.</summary>
      <param name="newPageContent">The new page to add to the collection.</param>
      <returns>The zero-based index within the collection where the page was added.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="newPageContent" /> was passed as <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">The page passed as <paramref name="newPageContent" /> already existed in the collection.</exception>
    </member>
    <member name="P:System.Windows.Documents.PageContentCollection.Count">
      <summary>Gets the number of elements contained in the page collection.</summary>
      <returns>The number of elements in the collection.</returns>
    </member>
    <member name="M:System.Windows.Documents.PageContentCollection.GetEnumerator">
      <summary>Returns an enumerator for iterating through the page collection.</summary>
      <returns>An enumerator that can be used to iterate through the collection.</returns>
    </member>
    <member name="P:System.Windows.Documents.PageContentCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Windows.Documents.PageContent" /> element at the specified index within the collection.</summary>
      <param name="pageIndex">The zero-based index of the page to get.</param>
      <returns>The page content element at the specified index within the collection.</returns>
    </member>
    <member name="M:System.Windows.Documents.PageContentCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.  Use the type-safe <see cref="M:System.Windows.Documents.PageContentCollection.GetEnumerator" /> method instead.</summary>
      <returns>The enumerator.</returns>
    </member>
    <member name="T:System.Windows.Documents.Paragraph">
      <summary>A block-level flow content element used to group content into a paragraph.</summary>
    </member>
    <member name="M:System.Windows.Documents.Paragraph.#ctor">
      <summary>Initializes a new, empty instance of the <see cref="T:System.Windows.Documents.Paragraph" /> class.</summary>
    </member>
    <member name="M:System.Windows.Documents.Paragraph.#ctor(System.Windows.Documents.Inline)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Paragraph" /> class, taking a specified <see cref="T:System.Windows.Documents.Inline" /> object as its initial contents.</summary>
      <param name="inline">An <see cref="T:System.Windows.Documents.Inline" /> object specifying the initial contents of the new <see cref="T:System.Windows.Documents.Paragraph" />.</param>
    </member>
    <member name="P:System.Windows.Documents.Paragraph.Inlines">
      <summary>Gets an <see cref="T:System.Windows.Documents.InlineCollection" /> containing the top-level <see cref="T:System.Windows.Documents.Inline" /> elements that comprise the contents of the <see cref="T:System.Windows.Documents.Paragraph" />.</summary>
      <returns>An <see cref="T:System.Windows.Documents.InlineCollection" /> containing the <see cref="T:System.Windows.Documents.Inline" /> elements that comprise the contents of the <see cref="T:System.Windows.Documents.Paragraph" />.  
 This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Documents.Paragraph.KeepTogether">
      <summary>Gets or sets a value that indicates whether the text of the paragraph may be broken by a page break or column break.</summary>
      <returns>
        <see langword="true" /> to prevent the text of the paragraph from being broken; otherwise, <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Paragraph.KeepTogetherProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Paragraph.KeepTogether" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Paragraph.KeepWithNext">
      <summary>Gets or sets a value that indicates whether a break may occur between this paragraph and the next paragraph.</summary>
      <returns>
        <see langword="true" /> to prevent a break from occurring between this paragraph and the next paragraph; otherwise, <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Paragraph.KeepWithNextProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Paragraph.KeepWithNext" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Paragraph.MinOrphanLines">
      <summary>Gets or sets a value that specifies the minimum number of lines that can be left before the break when a <see cref="T:System.Windows.Documents.Paragraph" /> is broken by a page break or column break.</summary>
      <returns>An integer specifying the minimum number of lines that can be left before the break when a <see cref="T:System.Windows.Documents.Paragraph" /> is broken by a page break or column break. A value of 0 indicates no minimum.  
 The default value is 0.</returns>
    </member>
    <member name="F:System.Windows.Documents.Paragraph.MinOrphanLinesProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Paragraph.MinOrphanLines" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Paragraph.MinWidowLines">
      <summary>Gets or sets a value that specifies the minimum number of lines that can be placed after the break when a <see cref="T:System.Windows.Documents.Paragraph" /> is broken by a page break or column break.</summary>
      <returns>An integer specifying the minimum number of lines that can be placed after the break when a <see cref="T:System.Windows.Documents.Paragraph" /> is broken by a page break or column break.  A value of 0 indicates no minimum.  
 The default value is 0.</returns>
    </member>
    <member name="F:System.Windows.Documents.Paragraph.MinWidowLinesProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Paragraph.MinWidowLines" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Documents.Paragraph.ShouldSerializeInlines(System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>Indicates whether the <see cref="P:System.Windows.Documents.Paragraph.Inlines" /> property should be persisted.</summary>
      <param name="manager">A serialization service manager object for this object.</param>
      <returns>
        <see langword="true" /> if the property value has changed from its default; otherwise, <see langword="false" />.</returns>
      <exception cref="T:System.NullReferenceException">
        <paramref name="manager" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Documents.Paragraph.TextDecorations">
      <summary>Gets or sets a <see cref="T:System.Windows.TextDecorationCollection" /> that contains text decorations to apply to this element.</summary>
      <returns>A <see cref="T:System.Windows.TextDecorationCollection" /> collection that contains text decorations to apply to this element. A value of <see langword="null" /> means no text decorations will be applied. The default value is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Paragraph.TextDecorationsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Paragraph.TextDecorations" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Paragraph.TextIndent">
      <summary>Gets or sets a value that indicates how far to indent the first line of a <see cref="T:System.Windows.Documents.Paragraph" />.</summary>
      <returns>A double value specifying the amount to indent the first line of the paragraph, in device independent pixels. The default value is 0.</returns>
    </member>
    <member name="F:System.Windows.Documents.Paragraph.TextIndentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Paragraph.TextIndent" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Documents.Run">
      <summary>An inline-level flow content element intended to contain a run of formatted or unformatted text.</summary>
    </member>
    <member name="M:System.Windows.Documents.Run.#ctor">
      <summary>Initializes a new, default instance of the <see cref="T:System.Windows.Documents.Run" /> class.</summary>
    </member>
    <member name="M:System.Windows.Documents.Run.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Run" /> class, taking a specified string as the initial contents of the text run.</summary>
      <param name="text">A string specifying the initial contents of the <see cref="T:System.Windows.Documents.Run" /> object.</param>
    </member>
    <member name="M:System.Windows.Documents.Run.#ctor(System.String,System.Windows.Documents.TextPointer)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Run" /> class, taking a specified string as the initial contents of the text run, and a <see cref="T:System.Windows.Documents.TextPointer" /> specifying an insertion position for the text run.</summary>
      <param name="text">A string specifying the initial contents of the <see cref="T:System.Windows.Documents.Run" /> object.</param>
      <param name="insertionPosition">A <see cref="T:System.Windows.Documents.TextPointer" /> specifying an insertion position at which to insert the text run after it is created, or <see langword="null" /> for no automatic insertion.</param>
    </member>
    <member name="M:System.Windows.Documents.Run.ShouldSerializeText(System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>Returns a value that indicates whether or not the effective value of the <see cref="P:System.Windows.Documents.Run.Text" /> property should be serialized during serialization of a <see cref="T:System.Windows.Documents.Run" /> object.</summary>
      <param name="manager">A serialization service manager object for this object.</param>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.Documents.Run.Text" /> property should be serialized; otherwise, <see langword="false" />.</returns>
      <exception cref="T:System.NullReferenceException">
        <paramref name="manager" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Documents.Run.Text">
      <summary>Gets or sets the unformatted text contents of this text <see cref="T:System.Windows.Documents.Run" />.</summary>
      <returns>A string that specifies the unformatted text contents of this text <see cref="T:System.Windows.Documents.Run" />. The default is <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Run.TextProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Run.Text" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Documents.Section">
      <summary>A block-level flow content element used for grouping other <see cref="T:System.Windows.Documents.Block" /> elements.</summary>
    </member>
    <member name="M:System.Windows.Documents.Section.#ctor">
      <summary>Initializes a new, empty instance of the <see cref="T:System.Windows.Documents.Section" /> class.</summary>
    </member>
    <member name="M:System.Windows.Documents.Section.#ctor(System.Windows.Documents.Block)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Section" /> class, taking a specified <see cref="T:System.Windows.Documents.Block" /> object as the initial contents of the new <see cref="T:System.Windows.Documents.Section" />.</summary>
      <param name="block">A <see cref="T:System.Windows.Documents.Block" /> object specifying the initial contents of the new <see cref="T:System.Windows.Documents.Section" />.</param>
    </member>
    <member name="P:System.Windows.Documents.Section.Blocks">
      <summary>Gets a <see cref="T:System.Windows.Documents.BlockCollection" /> containing the top-level <see cref="T:System.Windows.Documents.Block" /> elements that comprise the contents of the <see cref="T:System.Windows.Documents.Section" />.</summary>
      <returns>A <see cref="T:System.Windows.Documents.BlockCollection" /> containing the <see cref="T:System.Windows.Documents.Block" /> elements that comprise the contents of the <see cref="T:System.Windows.Documents.Section" />  
 This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Documents.Section.HasTrailingParagraphBreakOnPaste">
      <summary>Gets or sets a value that indicates whether or not a trailing paragraph break should be inserted after the last paragraph when placing the contents of a root <see cref="T:System.Windows.Documents.Section" /> element on the clipboard.</summary>
      <returns>
        <see langword="true" /> to indicate that a trailing paragraph break should be included; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.Section.ShouldSerializeBlocks(System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="manager">A serialization service manager object for this object.</param>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.Documents.Section.Blocks" /> property should be serialized; otherwise, <see langword="false" />.</returns>
      <exception cref="T:System.NullReferenceException">Raised when <paramref name="manager" /> is <see langword="null" />.</exception>
    </member>
    <member name="T:System.Windows.Documents.Serialization.ISerializerFactory">
      <summary>Provides a means for creating a software component that can serialize any part of a Windows Presentation Foundation (WPF) application's content to a manufacturer's proprietary format.</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.ISerializerFactory.CreateSerializerWriter(System.IO.Stream)">
      <summary>Initializes an object derived from the abstract <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" /> class for the specified <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream">The <see cref="T:System.IO.Stream" /> to which the returned object writes.</param>
      <returns>An object of a class derived from <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.ISerializerFactory.DefaultFileExtension">
      <summary>Gets the default extension for files of the manufacturer's proprietary format.</summary>
      <returns>A <see cref="T:System.String" /> representing the proprietary format's default file extension.</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.ISerializerFactory.DisplayName">
      <summary>Gets the public name of the manufacturer's serializing component.</summary>
      <returns>A <see cref="T:System.String" /> representing the public name of the serializing component.</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.ISerializerFactory.ManufacturerName">
      <summary>Gets the name of the serializing component's manufacturer.</summary>
      <returns>A <see cref="T:System.String" /> representing the manufacturer's name.</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.ISerializerFactory.ManufacturerWebsite">
      <summary>Gets the web address of the serializing component's manufacturer.</summary>
      <returns>A <see cref="T:System.Uri" /> representing the manufacturer's website.</returns>
    </member>
    <member name="T:System.Windows.Documents.Serialization.SerializerDescriptor">
      <summary>Provides information about installed plug-in serializers.</summary>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.AssemblyName">
      <summary>Gets the name of the assembly that contains the serializer.</summary>
      <returns>The name of the assembly (usually a DLL) that contains the plug-in serializer.</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.AssemblyPath">
      <summary>Gets the path to the assembly file that contains the serializer.</summary>
      <returns>The path to the assembly file that contains the plug-in serializer.</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.AssemblyVersion">
      <summary>Gets the version of the assembly that contains the serializer.</summary>
      <returns>The version of the assembly that contains the plug-in serializer.</returns>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerDescriptor.CreateFromFactoryInstance(System.Windows.Documents.Serialization.ISerializerFactory)">
      <summary>Creates a new <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor" /> through a given <see cref="T:System.Windows.Documents.Serialization.ISerializerFactory" /> implementation.</summary>
      <param name="factoryInstance">The source of data for the new <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor" />.</param>
      <returns>A new <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor" /> with its properties initialized with values from the given <see cref="T:System.Windows.Documents.Serialization.ISerializerFactory" /> implementation.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="factoryInstance" /> is null.</exception>
      <exception cref="T:System.ArgumentException">One or more of the following properties of the <paramref name="factoryInstance" /> is null: <see cref="P:System.Windows.Documents.Serialization.SerializerDescriptor.DisplayName" />, <see cref="P:System.Windows.Documents.Serialization.SerializerDescriptor.ManufacturerName" />, <see cref="P:System.Windows.Documents.Serialization.SerializerDescriptor.ManufacturerWebsite" />, and <see cref="P:System.Windows.Documents.Serialization.SerializerDescriptor.DefaultFileExtension" /></exception>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.DefaultFileExtension">
      <summary>Gets the default extension associated with files that the serializer outputs.</summary>
      <returns>The default extension associated with files that the serializer outputs.</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.DisplayName">
      <summary>Gets the public display name of the serializer.</summary>
      <returns>The public display name of the serializer.</returns>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerDescriptor.Equals(System.Object)">
      <summary>Tests two <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor" /> objects for equality.</summary>
      <param name="obj">The object to be compared with this <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor" />.</param>
      <returns>
        <see langword="true" /> if both are equal; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.FactoryInterfaceName">
      <summary>Gets the name of the <see cref="T:System.Windows.Documents.Serialization.ISerializerFactory" /> derived class that implements the serializer.</summary>
      <returns>The name of the <see cref="T:System.Windows.Documents.Serialization.ISerializerFactory" /> derived class that implements the serializer.</returns>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerDescriptor.GetHashCode">
      <summary>Gets the unique hash code value of the serializer.</summary>
      <returns>The unique hash code value of the serializer.</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.IsLoadable">
      <summary>Gets a value indicating whether the serializer can be loaded with the currently installed version of the .NET Framework.</summary>
      <returns>
        <see langword="true" /> if the serializer assembly can be loaded; otherwise, <see langword="false" />.  The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.ManufacturerName">
      <summary>Gets the name of the company that developed the serializer.</summary>
      <returns>The name of the company that developed the plug-in serializer.</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.ManufacturerWebsite">
      <summary>Gets the web address of the company that developed the serializer.</summary>
      <returns>The web address of the company that developed the serializer.</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.WinFXVersion">
      <summary>Gets the version of the .NET Framework required by the serializer.</summary>
      <returns>The version of the .NET Framework required by the plug-in serializer.</returns>
    </member>
    <member name="T:System.Windows.Documents.Serialization.SerializerProvider">
      <summary>Manages serialization plug-ins created, using <see cref="T:System.Windows.Documents.Serialization.ISerializerFactory" /> and <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor" />, by manufacturers who have their own proprietary serialization formats.</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Serialization.SerializerProvider" /> class.</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerProvider.CreateSerializerWriter(System.Windows.Documents.Serialization.SerializerDescriptor,System.IO.Stream)">
      <summary>Initializes an object derived from the abstract <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" /> class for the specified <see cref="T:System.IO.Stream" /> that will use the specified descriptor.</summary>
      <param name="serializerDescriptor">A <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor" /> that contains serialization information for the <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" />.</param>
      <param name="stream">The <see cref="T:System.IO.Stream" /> to which the returned object writes.</param>
      <returns>An object of a class derived from <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" />.</returns>
      <exception cref="T:System.ArgumentNullException">One of the parameters is null.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="serializerDescriptor" /> is specifying the wrong version.  
 -or-  
 It is not registered.  
 -or-  
 The assembly file cannot be found.  
 -or-  
 The assembly cannot be loaded.</exception>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerProvider.InstalledSerializers">
      <summary>Gets a collection of the installed plug-in serializers.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of the <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor" /> objects already registered.</returns>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerProvider.RegisterSerializer(System.Windows.Documents.Serialization.SerializerDescriptor,System.Boolean)">
      <summary>Registers a serializer plug-in.</summary>
      <param name="serializerDescriptor">The <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor" /> for the plug-in.</param>
      <param name="overwrite">
        <see langword="true" /> to overwrite an existing registration for the same plug-in; otherwise, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializerDescriptor" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="overwrite" /> is <see langword="false" /> and the plug-in is already registered.</exception>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerProvider.UnregisterSerializer(System.Windows.Documents.Serialization.SerializerDescriptor)">
      <summary>Deletes a serializer plug-in from the registry.</summary>
      <param name="serializerDescriptor">The <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor" /> for the plug-in.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializerDescriptor" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The plug-in is not registered. See Remarks.</exception>
    </member>
    <member name="T:System.Windows.Documents.Serialization.SerializerWriter">
      <summary>Defines the abstract methods and events that are required to implement a plug-in document output serializer.</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync">
      <summary>When overridden in a derived class, cancels an asynchronous write operation.</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator">
      <summary>When overridden in a derived class, returns a <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" /> that writes collated <see cref="T:System.Windows.Media.Visual" /> elements.</summary>
      <returns>A <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" /> that writes collated <see cref="T:System.Windows.Media.Visual" /> elements to the document output serialization <see cref="T:System.IO.Stream" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator(System.Printing.PrintTicket,System.Printing.PrintTicket)">
      <summary>When overridden in a derived class, returns a <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" /> that writes collated <see cref="T:System.Windows.Media.Visual" /> elements together with the given print tickets.</summary>
      <param name="documentSequencePT">The default print preferences for <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> content.</param>
      <param name="documentPT">The default print preferences for <see cref="T:System.Windows.Documents.FixedDocument" /> content.</param>
      <returns>A <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" /> that writes collated <see cref="T:System.Windows.Media.Visual" /> elements to the document output serialization <see cref="T:System.IO.Stream" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator)">
      <summary>When overridden in a derived class, synchronously writes the content of a given <see cref="T:System.Windows.Documents.DocumentPaginator" /> to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="documentPaginator">The document paginator that defines the content to write to the serialization <see cref="T:System.IO.Stream" />.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)">
      <summary>When overridden in a derived class, synchronously writes paginated content together with an associated <see cref="T:System.Printing.PrintTicket" /> to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="documentPaginator">The document paginator that defines the content to write to the serialization <see cref="T:System.IO.Stream" />.</param>
      <param name="printTicket">The default print preferences for the <paramref name="documentPaginator" /> content.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument)">
      <summary>When overridden in a derived class, synchronously writes a given <see cref="T:System.Windows.Documents.FixedDocument" /> to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="fixedDocument">The document to write to the serialization <see cref="T:System.IO.Stream" />.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)">
      <summary>When overridden in a derived class, synchronously writes a given <see cref="T:System.Windows.Documents.FixedDocument" /> together with an associated <see cref="T:System.Printing.PrintTicket" /> to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="fixedDocument">The document to write to the serialization <see cref="T:System.IO.Stream" />.</param>
      <param name="printTicket">The default print preferences for the <paramref name="fixedDocument" /> content.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence)">
      <summary>When overridden in a derived class, synchronously writes a given <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="fixedDocumentSequence">The document sequence that defines the content to write to the serialization <see cref="T:System.IO.Stream" />.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)">
      <summary>When overridden in a derived class, synchronously writes a given <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> together with an associated <see cref="T:System.Printing.PrintTicket" /> to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="fixedDocumentSequence">The document sequence that defines the content to write to the serialization <see cref="T:System.IO.Stream" />.</param>
      <param name="printTicket">The default print preferences for the <paramref name="fixedDocumentSequence" /> content.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage)">
      <summary>When overridden in a derived class, synchronously writes a given <see cref="T:System.Windows.Documents.FixedPage" /> to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="fixedPage">The page to write to the serialization <see cref="T:System.IO.Stream" />.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)">
      <summary>When overridden in a derived class, synchronously writes a given <see cref="T:System.Windows.Documents.FixedPage" /> together with an associated <see cref="T:System.Printing.PrintTicket" /> to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="fixedPage">The page to write to the serialization <see cref="T:System.IO.Stream" />.</param>
      <param name="printTicket">The default print preferences for the <paramref name="fixedPage" /> content.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual)">
      <summary>When overridden in a derived class, synchronously writes a given <see cref="T:System.Windows.Media.Visual" /> element to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="visual">The <see cref="T:System.Windows.Media.Visual" /> element to write to the serialization <see cref="T:System.IO.Stream" />.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual,System.Printing.PrintTicket)">
      <summary>When overridden in a derived class, synchronously writes a given <see cref="T:System.Windows.Media.Visual" /> element together with an associated <see cref="T:System.Printing.PrintTicket" /> to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="visual">The <see cref="T:System.Windows.Media.Visual" /> element to write to the serialization <see cref="T:System.IO.Stream" />.</param>
      <param name="printTicket">The default print preferences for the <paramref name="visual" /> element.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator)">
      <summary>When overridden in a derived class, asynchronously writes the content of a given <see cref="T:System.Windows.Documents.DocumentPaginator" /> to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="documentPaginator">The document paginator that defines the content to write to the serialization <see cref="T:System.IO.Stream" />.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Object)">
      <summary>When overridden in a derived class, asynchronously writes the content of a given <see cref="T:System.Windows.Documents.DocumentPaginator" /> to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="documentPaginator">The document paginator that defines the content to write to the serialization <see cref="T:System.IO.Stream" />.</param>
      <param name="userState">A caller-specified object to identify the asynchronous write operation.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)">
      <summary>When overridden in a derived class, asynchronously writes the content of a given <see cref="T:System.Windows.Documents.DocumentPaginator" /> to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="documentPaginator">The document paginator that defines the content to write to the serialization <see cref="T:System.IO.Stream" />.</param>
      <param name="printTicket">The default print preferences for the <paramref name="documentPaginator" /> content.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket,System.Object)">
      <summary>When overridden in a derived class, asynchronously writes paginated content together with an associated <see cref="T:System.Printing.PrintTicket" /> to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="documentPaginator">The document paginator that defines the content to write to the serialization <see cref="T:System.IO.Stream" />.</param>
      <param name="printTicket">The default print preferences for the <paramref name="documentPaginator" /> content.</param>
      <param name="userState">A caller-specified object to identify the asynchronous write operation.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument)">
      <summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Documents.FixedDocument" /> to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="fixedDocument">The document to write to the serialization <see cref="T:System.IO.Stream" />.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Object)">
      <summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Documents.FixedDocument" /> to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="fixedDocument">The document to write to the serialization <see cref="T:System.IO.Stream" />.</param>
      <param name="userState">A caller-specified object to identify the asynchronous write operation.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)">
      <summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Documents.FixedDocument" /> together with an associated <see cref="T:System.Printing.PrintTicket" /> to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="fixedDocument">The document to write to the serialization <see cref="T:System.IO.Stream" />.</param>
      <param name="printTicket">The default print preferences for the <paramref name="fixedDocument" /> content.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket,System.Object)">
      <summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Documents.FixedDocument" /> together with an associated <see cref="T:System.Printing.PrintTicket" /> to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="fixedDocument">The document to write to the serialization <see cref="T:System.IO.Stream" />.</param>
      <param name="printTicket">The default print preferences for the <paramref name="fixedDocument" /> content.</param>
      <param name="userState">A caller-specified object to identify the asynchronous write operation.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence)">
      <summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="fixedDocumentSequence">The document sequence that defines the content to write to the serialization <see cref="T:System.IO.Stream" />.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Object)">
      <summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="fixedDocumentSequence">The document sequence that defines the content to write to the serialization <see cref="T:System.IO.Stream" />.</param>
      <param name="userState">A caller-specified object to identify the asynchronous write operation.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)">
      <summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> together with an associated <see cref="T:System.Printing.PrintTicket" /> to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="fixedDocumentSequence">The document sequence that defines the content to write to the serialization <see cref="T:System.IO.Stream" />.</param>
      <param name="printTicket">The default print preferences for the <paramref name="fixedDocumentSequence" /> content.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket,System.Object)">
      <summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> together with an associated <see cref="T:System.Printing.PrintTicket" /> to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="fixedDocumentSequence">The document sequence that defines the content to write to the serialization <see cref="T:System.IO.Stream" />.</param>
      <param name="printTicket">The default print preferences for the <paramref name="fixedDocumentSequence" /> content.</param>
      <param name="userState">A caller-specified object to identify the asynchronous write operation.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage)">
      <summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Documents.FixedPage" /> to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="fixedPage">The page to write to the serialization <see cref="T:System.IO.Stream" />.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Object)">
      <summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Documents.FixedPage" /> to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="fixedPage">The page to write to the serialization <see cref="T:System.IO.Stream" />.</param>
      <param name="userState">A caller-specified object to identify the asynchronous write operation.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)">
      <summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Documents.FixedPage" /> together with an associated <see cref="T:System.Printing.PrintTicket" /> to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="fixedPage">The page to write to the serialization <see cref="T:System.IO.Stream" />.</param>
      <param name="printTicket">The default print preferences for the <paramref name="fixedPage" /> content.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket,System.Object)">
      <summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Documents.FixedPage" /> together with an associated <see cref="T:System.Printing.PrintTicket" /> to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="fixedPage">The page to write to the serialization <see cref="T:System.IO.Stream" />.</param>
      <param name="printTicket">The default print preferences for the <paramref name="fixedPage" /> content.</param>
      <param name="userState">A caller-specified object to identify the asynchronous write operation.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual)">
      <summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Media.Visual" /> element to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="visual">The <see cref="T:System.Windows.Media.Visual" /> element to write to the serialization <see cref="T:System.IO.Stream" />.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Object)">
      <summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Media.Visual" /> element to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="visual">The <see cref="T:System.Windows.Media.Visual" /> element to write to the serialization <see cref="T:System.IO.Stream" />.</param>
      <param name="userState">A caller-specified object to identify the asynchronous write operation.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket)">
      <summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Media.Visual" /> element together with an associated <see cref="T:System.Printing.PrintTicket" /> to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="visual">The <see cref="T:System.Windows.Media.Visual" /> element to write to the serialization <see cref="T:System.IO.Stream" />.</param>
      <param name="printTicket">The default print preferences for the <paramref name="visual" /> element.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket,System.Object)">
      <summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Media.Visual" /> element together with an associated <see cref="T:System.Printing.PrintTicket" /> and identifier to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="visual">The <see cref="T:System.Windows.Media.Visual" /> element to write to the serialization <see cref="T:System.IO.Stream" />.</param>
      <param name="printTicket">The default print preferences for the <paramref name="visual" /> element.</param>
      <param name="userState">A caller-specified object to identify the asynchronous write operation.</param>
    </member>
    <member name="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled">
      <summary>When overridden in a derived class, occurs when a <see cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" /> operation is performed.</summary>
    </member>
    <member name="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted">
      <summary>When overridden in a derived class, occurs when a write operation finishes.</summary>
    </member>
    <member name="E:System.Windows.Documents.Serialization.SerializerWriter.WritingPrintTicketRequired">
      <summary>When overridden in a derived class, occurs just before a <see cref="T:System.Printing.PrintTicket" /> is added to a stream by a <see cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.Write" /> or <see cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync" /> method.</summary>
    </member>
    <member name="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged">
      <summary>When overridden in a derived class, occurs when the <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" /> updates its progress.</summary>
    </member>
    <member name="T:System.Windows.Documents.Serialization.SerializerWriterCollator">
      <summary>Defines the abstract methods required to implement a plug-in document serialization <see cref="T:System.Windows.Media.Visual" /> collator.</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" /> class.</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.BeginBatchWrite">
      <summary>When overridden in a derived class, initiates the start of a batch write operation.</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.Cancel">
      <summary>When overridden in a derived class, cancels a synchronous <see cref="Overload:System.Windows.Documents.Serialization.SerializerWriterCollator.Write" /> operation.</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.CancelAsync">
      <summary>When overridden in a derived class, cancels an asynchronous <see cref="Overload:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync" /> operation.</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.EndBatchWrite">
      <summary>When overridden in a derived class, completes a batch write operation.</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.Write(System.Windows.Media.Visual)">
      <summary>When overridden in a derived class, synchronously writes a given <see cref="T:System.Windows.Media.Visual" /> element to the serialization stream.</summary>
      <param name="visual">The visual element to write to the serialization <see cref="T:System.IO.Stream" />.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.Write(System.Windows.Media.Visual,System.Printing.PrintTicket)">
      <summary>When overridden in a derived class, synchronously writes a given <see cref="T:System.Windows.Media.Visual" /> element together with an associated print ticket to the serialization stream.</summary>
      <param name="visual">A <see cref="T:System.Windows.Media.Visual" /> that is written to the stream.</param>
      <param name="printTicket">An object specifying preferences for how the material should be printed.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync(System.Windows.Media.Visual)">
      <summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Media.Visual" /> element to the serialization stream.</summary>
      <param name="visual">The visual element to write to the serialization <see cref="T:System.IO.Stream" />.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync(System.Windows.Media.Visual,System.Object)">
      <summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Media.Visual" /> element with a specified event identifier to the serialization stream.</summary>
      <param name="visual">The visual element to write to the serialization <see cref="T:System.IO.Stream" />.</param>
      <param name="userState">A caller-specified object to identify the asynchronous write operation.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket)">
      <summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Media.Visual" /> element together with an associated print ticket to the serialization stream.</summary>
      <param name="visual">The visual element to write to the serialization <see cref="T:System.IO.Stream" />.</param>
      <param name="printTicket">The default print preferences for the <paramref name="visual" /> element.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket,System.Object)">
      <summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Media.Visual" /> element together with an associated print ticket and identifier to the serialization stream.</summary>
      <param name="visual">The visual element to write to the serialization <see cref="T:System.IO.Stream" />.</param>
      <param name="printTicket">The default print preferences for the <paramref name="visual" /> element.</param>
      <param name="userState">A caller-specified object to identify the asynchronous write operation.</param>
    </member>
    <member name="T:System.Windows.Documents.Serialization.WritingCancelledEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Xps.XpsDocumentWriter.WritingCancelled" /> event.</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.WritingCancelledEventArgs.#ctor(System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Serialization.WritingCancelledEventArgs" /> class.</summary>
      <param name="exception">The exception that canceled the write operation.</param>
    </member>
    <member name="P:System.Windows.Documents.Serialization.WritingCancelledEventArgs.Error">
      <summary>Gets the exception that canceled the write operation.</summary>
      <returns>The exception that canceled the write operation.</returns>
    </member>
    <member name="T:System.Windows.Documents.Serialization.WritingCancelledEventHandler">
      <summary>Represents a method that will handle the <see cref="E:System.Windows.Xps.XpsDocumentWriter.WritingCancelled" /> event.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Documents.Serialization.WritingCompletedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" /> event.</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.WritingCompletedEventArgs.#ctor(System.Boolean,System.Object,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Serialization.WritingCompletedEventArgs" /> class.</summary>
      <param name="cancelled">
        <see langword="true" /> if canceled; otherwise, <see langword="false" /> if the write operation completed normally.</param>
      <param name="state">The user-supplied state object that was passed to the <see cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync" /> method.</param>
      <param name="exception">Error that occurred during the write operation or <see langword="null" /> if there is no error.</param>
    </member>
    <member name="T:System.Windows.Documents.Serialization.WritingCompletedEventHandler">
      <summary>Represents a method that handles the <see cref="E:System.Windows.Xps.XpsDocumentWriter.WritingCompleted" /> event of the <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> class.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingPrintTicketRequired" /> event.</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs.#ctor(System.Windows.Xps.Serialization.PrintTicketLevel,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs" /> class.</summary>
      <param name="printTicketLevel">An enumeration value that specifies scope of the <see cref="P:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs.CurrentPrintTicket" /> as a page, document, or sequence of documents.</param>
      <param name="sequence">Based on the scope of defined by <paramref name="printTicketLevel" />, the number of pages or the number of documents associated with the <see cref="P:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs.CurrentPrintTicket" />.</param>
    </member>
    <member name="P:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs.CurrentPrintTicket">
      <summary>Gets or sets the default printer settings to use when the document is printed.</summary>
      <returns>The default printer settings to use when the document is printed.</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs.CurrentPrintTicketLevel">
      <summary>Gets a value that indicates the scope of the <see cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingPrintTicketRequired" /> event.</summary>
      <returns>An enumeration that indicates the scope of the <see cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingPrintTicketRequired" /> event as for a sequence of documents, a single document, or a single page.</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs.Sequence">
      <summary>Gets the number of documents or pages output with the <see cref="P:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs.CurrentPrintTicket" />.</summary>
      <returns>The number of documents or pages output with the <see cref="P:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs.CurrentPrintTicket" />.</returns>
    </member>
    <member name="T:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventHandler">
      <summary>Represents the method that handles the <see cref="E:System.Windows.Xps.XpsDocumentWriter.WritingPrintTicketRequired" /> event of an <see cref="T:System.Windows.Xps.XpsDocumentWriter" />.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Documents.Serialization.WritingProgressChangedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Xps.XpsDocumentWriter.WritingProgressChanged" /> event.</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.WritingProgressChangedEventArgs.#ctor(System.Windows.Documents.Serialization.WritingProgressChangeLevel,System.Int32,System.Int32,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Serialization.WritingProgressChangedEventArgs" /> class.</summary>
      <param name="writingLevel">An enumeration value that specifies the scope of the progress changed event such as for an entire multiple document sequence, a single document, or a single page.</param>
      <param name="number">Based on the scope defined by <paramref name="writingLevel" />, the number of documents or the number of pages that have been written.</param>
      <param name="progressPercentage">The percentage of data that has been written.</param>
      <param name="state">The user-supplied object that identifies the write operation.</param>
    </member>
    <member name="P:System.Windows.Documents.Serialization.WritingProgressChangedEventArgs.Number">
      <summary>Gets the number of documents or pages that have been written.</summary>
      <returns>The number of documents or pages that have been written at the time of the event.</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.WritingProgressChangedEventArgs.WritingLevel">
      <summary>Gets a value that indicates the scope of the writing progress.</summary>
      <returns>An enumeration that indicates the scope of writing a multiple document sequence, a single document, or single page.</returns>
    </member>
    <member name="T:System.Windows.Documents.Serialization.WritingProgressChangedEventHandler">
      <summary>Represents a method that will handle the <see cref="E:System.Windows.Xps.XpsDocumentWriter.WritingProgressChanged" /> event of an <see cref="T:System.Windows.Xps.XpsDocumentWriter" />.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Documents.Serialization.WritingProgressChangeLevel">
      <summary>Specifies the scope of a <see cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" /> event.</summary>
    </member>
    <member name="F:System.Windows.Documents.Serialization.WritingProgressChangeLevel.FixedDocumentSequenceWritingProgress">
      <summary>The output progress of a multiple document sequence.</summary>
    </member>
    <member name="F:System.Windows.Documents.Serialization.WritingProgressChangeLevel.FixedDocumentWritingProgress">
      <summary>The output progress of a single document.</summary>
    </member>
    <member name="F:System.Windows.Documents.Serialization.WritingProgressChangeLevel.FixedPageWritingProgress">
      <summary>The output progress of a single page.</summary>
    </member>
    <member name="F:System.Windows.Documents.Serialization.WritingProgressChangeLevel.None">
      <summary>The output progress is unspecified.</summary>
    </member>
    <member name="T:System.Windows.Documents.Span">
      <summary>Groups other <see cref="T:System.Windows.Documents.Inline" /> flow content elements.</summary>
    </member>
    <member name="M:System.Windows.Documents.Span.#ctor">
      <summary>Initializes a new, empty instance of the <see cref="T:System.Windows.Documents.Span" /> class.</summary>
    </member>
    <member name="M:System.Windows.Documents.Span.#ctor(System.Windows.Documents.Inline)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Span" /> class with the specified <see cref="T:System.Windows.Documents.Inline" /> object as the initial contents.</summary>
      <param name="childInline">The initial contents of the new <see cref="T:System.Windows.Documents.Span" />.</param>
    </member>
    <member name="M:System.Windows.Documents.Span.#ctor(System.Windows.Documents.Inline,System.Windows.Documents.TextPointer)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Span" /> class, taking a specified <see cref="T:System.Windows.Documents.Inline" /> object as the initial contents of the new <see cref="T:System.Windows.Documents.Span" />, and a <see cref="T:System.Windows.Documents.TextPointer" /> that specifies an insertion position for the new <see cref="T:System.Windows.Documents.Inline" /> element.</summary>
      <param name="childInline">An <see cref="T:System.Windows.Documents.Inline" /> object that specifies the initial contents of the new <see cref="T:System.Windows.Documents.Span" />. This parameter may be null, in which case no <see cref="T:System.Windows.Documents.Inline" /> is inserted.</param>
      <param name="insertionPosition">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies the position at which to insert the <see cref="T:System.Windows.Documents.Span" /> element after it is created, or null for no automatic insertion.</param>
    </member>
    <member name="M:System.Windows.Documents.Span.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Span" /> class, taking two <see cref="T:System.Windows.Documents.TextPointer" /> objects that indicate the beginning and end of a selection of content that the new <see cref="T:System.Windows.Documents.Span" /> will contain.</summary>
      <param name="start">A <see cref="T:System.Windows.Documents.TextPointer" /> that indicates the beginning of a selection of content that the new <see cref="T:System.Windows.Documents.Span" /> will contain.</param>
      <param name="end">A <see cref="T:System.Windows.Documents.TextPointer" /> that indicates the end of a selection of content that the new <see cref="T:System.Windows.Documents.Span" /> will contain.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="start" /> or <paramref name="end" /> is null.</exception>
      <exception cref="T:System.ArgumentException">Raised when <paramref name="start" /> and <paramref name="end" /> do not resolve to a range of content suitable for enclosure by a <see cref="T:System.Windows.Documents.Span" /> element; for example, if <paramref name="start" /> and <paramref name="end" /> indicate positions in different paragraphs.</exception>
    </member>
    <member name="P:System.Windows.Documents.Span.Inlines">
      <summary>Gets an <see cref="T:System.Windows.Documents.InlineCollection" /> containing the top-level <see cref="T:System.Windows.Documents.Inline" /> elements that comprise the contents of the <see cref="T:System.Windows.Documents.Span" />.</summary>
      <returns>An <see cref="T:System.Windows.Documents.InlineCollection" /> containing the <see cref="T:System.Windows.Documents.Inline" /> elements that comprise the contents of the <see cref="T:System.Windows.Documents.Span" />.  
 This property has no default value.</returns>
    </member>
    <member name="M:System.Windows.Documents.Span.ShouldSerializeInlines(System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>Returns a value that indicates whether the content of a <see cref="T:System.Windows.Documents.Span" /> element should be serialized during serialization of a <see cref="T:System.Windows.Documents.Run" /> object.</summary>
      <param name="manager">A serialization service manager object for this object.</param>
      <returns>
        <see langword="true" /> if the content should be serialized; otherwise, <see langword="false" />.</returns>
      <exception cref="T:System.NullReferenceException">
        <paramref name="manager" /> is null.</exception>
    </member>
    <member name="T:System.Windows.Documents.Table">
      <summary>A block-level flow content element that provides a grid-based presentation organized by rows and columns.</summary>
    </member>
    <member name="M:System.Windows.Documents.Table.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Table" /> class.</summary>
    </member>
    <member name="M:System.Windows.Documents.Table.BeginInit">
      <summary>Called before an element is initialized.</summary>
    </member>
    <member name="P:System.Windows.Documents.Table.CellSpacing">
      <summary>Gets or sets the amount of spacing between cells in a table.</summary>
      <returns>The amount of spacing between cells in a table, in device independent pixels.  
 The default value is 2.0.</returns>
    </member>
    <member name="F:System.Windows.Documents.Table.CellSpacingProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Table.CellSpacing" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Table.Columns">
      <summary>Gets a <see cref="T:System.Windows.Documents.TableColumnCollection" /> object that contains the columns hosted by the table.</summary>
      <returns>A <see cref="T:System.Windows.Documents.TableColumnCollection" /> object that contains the columns (represented by <see cref="T:System.Windows.Documents.TableColumn" /> objects) hosted by the table. Note that this number might not be the actual number of columns rendered in the table. It is the <see cref="T:System.Windows.Documents.TableCell" /> objects in a table that determine how many columns are actually rendered.  
 This property has no default value.</returns>
    </member>
    <member name="M:System.Windows.Documents.Table.EndInit">
      <summary>Called immediately after an element is initialized.</summary>
    </member>
    <member name="P:System.Windows.Documents.Table.LogicalChildren">
      <summary>Gets an enumerator that can be used to iterate the logical children of the <see cref="T:System.Windows.Documents.Table" />.</summary>
      <returns>An enumerator for the logical children of the <see cref="T:System.Windows.Documents.Table" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.Table.OnCreateAutomationPeer">
      <summary>Creates and returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> object for this <see cref="T:System.Windows.Documents.Table" />.</summary>
      <returns>An <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> object for this <see cref="T:System.Windows.Documents.Table" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.Table.RowGroups">
      <summary>Gets a <see cref="T:System.Windows.Documents.TableRowGroupCollection" /> collection object that contains the row groups hosted by the table.</summary>
      <returns>A <see cref="T:System.Windows.Documents.TableRowGroupCollection" /> collection object that contains the row groups (represented by <see cref="T:System.Windows.Documents.TableRowGroup" /> objects) hosted by the table.  
 This property has no default value.</returns>
    </member>
    <member name="M:System.Windows.Documents.Table.ShouldSerializeColumns">
      <summary>Gets a value that indicates whether or not the effective value of the <see cref="P:System.Windows.Documents.Table.Columns" /> property should be serialized during serialization of a <see cref="T:System.Windows.Documents.Table" /> object.</summary>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.Documents.Table.Columns" /> property should be serialized; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.Table.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>Adds a child object.</summary>
      <param name="value">The child object to add.</param>
    </member>
    <member name="M:System.Windows.Documents.Table.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>Adds the text content of a node to the object.</summary>
      <param name="text">The text to add to the object.</param>
    </member>
    <member name="T:System.Windows.Documents.TableCell">
      <summary>A flow content element that defines a cell of content within a <see cref="T:System.Windows.Documents.Table" />.</summary>
    </member>
    <member name="M:System.Windows.Documents.TableCell.#ctor">
      <summary>Initializes a new, empty instance of the <see cref="T:System.Windows.Documents.TableCell" /> class.</summary>
    </member>
    <member name="M:System.Windows.Documents.TableCell.#ctor(System.Windows.Documents.Block)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.TableCell" /> class, taking a specified <see cref="T:System.Windows.Documents.Block" /> object as the initial contents of the new <see cref="T:System.Windows.Documents.TableCell" />.</summary>
      <param name="blockItem">A <see cref="T:System.Windows.Documents.Block" /> object specifying the initial contents of the new <see cref="T:System.Windows.Documents.TableCell" />.</param>
    </member>
    <member name="P:System.Windows.Documents.TableCell.Blocks">
      <summary>Gets a <see cref="T:System.Windows.Documents.BlockCollection" /> containing the top-level <see cref="T:System.Windows.Documents.Block" /> elements that comprise the contents of the <see cref="T:System.Windows.Documents.TableCell" />.</summary>
      <returns>A <see cref="T:System.Windows.Documents.BlockCollection" /> containing the <see cref="T:System.Windows.Documents.Block" /> elements that comprise the contents of the <see cref="T:System.Windows.Documents.TableCell" />  
 This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCell.BorderBrush">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.Brush" /> to use when painting the element's border.</summary>
      <returns>The brush used to apply to the element's border.  
 The default value is a null brush.</returns>
    </member>
    <member name="F:System.Windows.Documents.TableCell.BorderBrushProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.TableCell.BorderBrush" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.TableCell.BorderThickness">
      <summary>Gets or sets the border thickness for the element.</summary>
      <returns>A <see cref="T:System.Windows.Thickness" /> structure specifying the amount of border to apply, in device independent pixels.  
 The default value is a uniform thickness of zero (0.0).</returns>
    </member>
    <member name="F:System.Windows.Documents.TableCell.BorderThicknessProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.TableCell.BorderThickness" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.TableCell.ColumnSpan">
      <summary>Gets or sets the number of columns that the <see cref="T:System.Windows.Documents.TableCell" /> should span.</summary>
      <returns>The number of columns the <see cref="T:System.Windows.Documents.TableCell" /> should span.  
 The default value is 1 (no spanning).</returns>
    </member>
    <member name="F:System.Windows.Documents.TableCell.ColumnSpanProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.TableCell.ColumnSpan" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.TableCell.FlowDirection">
      <summary>Gets or sets a value that specifies the relative direction for flow of content within a <see cref="T:System.Windows.Documents.TableCell" /> element.</summary>
      <returns>A member of the <see cref="T:System.Windows.FlowDirection" /> enumeration specifying the relative flow direction.  Getting this property returns the currently effective flow direction.  Setting this property causes the contents of the <see cref="T:System.Windows.Documents.TableCell" /> element to re-flow in the indicated direction.  
 The default value is <see cref="F:System.Windows.FlowDirection.LeftToRight" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.TableCell.FlowDirectionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.TableCell.FlowDirection" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.TableCell.LineHeight">
      <summary>Gets or sets the height of each line of content.</summary>
      <returns>A double value specifying the height of line in device independent pixels.  <see cref="P:System.Windows.Documents.TableCell.LineHeight" /> must be equal to or greater than <c>0.0034</c> and equal to or less then <c>160000</c>.  
 A value of <see cref="F:System.Double.NaN" /> (equivalent to an attribute value of "<c>Auto</c>") causes the line height to be determined automatically from the current font characteristics.  
 The default value is <see cref="F:System.Double.NaN" />.</returns>
      <exception cref="T:System.ArgumentException">Raised if an attempt is made to set <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> to a non-positive value.</exception>
    </member>
    <member name="F:System.Windows.Documents.TableCell.LineHeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.TableCell.LineHeight" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.TableCell.LineStackingStrategy">
      <summary>Gets or sets the mechanism by which a line box is determined for each line of text within the <see cref="T:System.Windows.Documents.TableCell" />.</summary>
      <returns>The mechanism by which a line box is determined for each line of text within the <see cref="T:System.Windows.Documents.TableCell" />. The default value is <see cref="F:System.Windows.LineStackingStrategy.MaxHeight" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.TableCell.LineStackingStrategyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.TableCell.LineStackingStrategy" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Documents.TableCell.OnCreateAutomationPeer">
      <summary>Creates and returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> object for this <see cref="T:System.Windows.Documents.TableCell" />.</summary>
      <returns>An <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> object for this <see cref="T:System.Windows.Documents.TableCell" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCell.Padding">
      <summary>Gets or sets the padding thickness for the element.</summary>
      <returns>A <see cref="T:System.Windows.Thickness" /> structure specifying the amount of padding to apply, in device independent pixels.  
 The default value is a uniform thickness of zero (0.0).</returns>
    </member>
    <member name="F:System.Windows.Documents.TableCell.PaddingProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.TableCell.Padding" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.TableCell.RowSpan">
      <summary>Gets or sets the number of rows that the <see cref="T:System.Windows.Documents.TableCell" /> should span.</summary>
      <returns>The number of rows the <see cref="T:System.Windows.Documents.TableCell" /> should span.  
 The default value is 1 (no spanning).</returns>
    </member>
    <member name="F:System.Windows.Documents.TableCell.RowSpanProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.TableCell.RowSpan" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.TableCell.TextAlignment">
      <summary>Gets or sets a value that indicates the horizontal alignment of text content.</summary>
      <returns>A member of the <see cref="T:System.Windows.TextAlignment" /> enumerations specifying the desired alignment.  
 The default value is <see cref="F:System.Windows.TextAlignment.Left" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.TableCell.TextAlignmentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.TableCell.TextAlignment" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Documents.TableCellCollection">
      <summary>Provides standard facilities for creating and managing a type-safe, ordered collection of <see cref="T:System.Windows.Documents.TableCell" /> objects.</summary>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.Add(System.Windows.Documents.TableCell)">
      <summary>Appends a specified <see cref="T:System.Windows.Documents.TableCell" /> to the collection of table cells.</summary>
      <param name="item">The <see cref="T:System.Windows.Documents.TableCell" /> to append to the collection of table cells.</param>
      <exception cref="T:System.ArgumentException">Raised when <paramref name="item" /> already belongs to a collection.</exception>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="item" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Documents.TableCellCollection.Capacity">
      <summary>Gets or sets the preallocated collection item capacity for this collection.</summary>
      <returns>The preallocated collection item capacity for this collection. The default value is 8.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when an attempt is made to set <see cref="P:System.Windows.Documents.TableCellCollection.Capacity" /> to a value that is less than the current value of <see cref="P:System.Windows.Documents.TableCellCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.Clear">
      <summary>Clears all items from the collection.</summary>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.Contains(System.Windows.Documents.TableCell)">
      <summary>Queries for the presence of a specified item in the collection.</summary>
      <param name="item">An item to query for the presence of in the collection.</param>
      <returns>
        <see langword="true" /> if the specified <paramref name="item" /> is present in the collection; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the contents of the collection and inserts them into a specified array starting at a specified index position in the array.</summary>
      <param name="array">A one-dimensional array to which the collection contents will be copied. This array must use zero-based indexing.</param>
      <param name="index">A zero-based index in <paramref name="array" /> specifying the position at which to begin inserting the copied collection objects.</param>
      <exception cref="T:System.ArgumentException">Raised when <paramref name="array" /> includes items that are not compatible with the type <see cref="T:System.Windows.Documents.TableCell" />, or if <paramref name="index" /> specifies a position that falls outside the bounds of <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when <paramref name="index" /> is less than 0.</exception>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.CopyTo(System.Windows.Documents.TableCell[],System.Int32)">
      <summary>Copies the contents of the collection and inserts them into a specified <see cref="T:System.Windows.Documents.TableCell" /> array of starting at a specified index position in the array.</summary>
      <param name="array">A one-dimensional <see cref="T:System.Windows.Documents.TableCell" /> array to which the collection contents will be copied. This array must use zero-based indexing.</param>
      <param name="index">A zero-based index in <paramref name="array" /> that specifies the position at which to begin inserting the copied collection objects.</param>
      <exception cref="T:System.ArgumentException">Raised when <paramref name="array" /> includes items that are not compatible with the type <see cref="T:System.Windows.Documents.TableCell" />, or if <paramref name="index" /> specifies a position that falls outside of the bounds of <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when <paramref name="index" /> is less than 0.</exception>
    </member>
    <member name="P:System.Windows.Documents.TableCellCollection.Count">
      <summary>Gets the number of items currently contained by the collection.</summary>
      <returns>The number of items currently contained by the collection.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.IndexOf(System.Windows.Documents.TableCell)">
      <summary>Returns the zero-based index of specified collection item.</summary>
      <param name="item">A collection item to return the index of.</param>
      <returns>The zero-based index of the specified collection item, or -1 if the specified item is not a member of the collection.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.Insert(System.Int32,System.Windows.Documents.TableCell)">
      <summary>Inserts a specified item in the collection at a specified index position.</summary>
      <param name="index">A zero-based index that specifies the position in the collection at which to insert <paramref name="item" />.</param>
      <param name="item">An item to insert into the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when <paramref name="index" /> is less than 0.</exception>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="item" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Documents.TableCellCollection.IsReadOnly">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>Currently, this property always returns <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCellCollection.IsSynchronized">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>Currently, this property always returns <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCellCollection.Item(System.Int32)">
      <summary>Gets or sets the collection item at a specified index. This is an indexed property.</summary>
      <param name="index">A zero-based index that specifies the position of the collection item.</param>
      <returns>The collection item at the specified index.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when <paramref name="index" /> is less than zero, or when <paramref name="index" /> is greater than or equal to <see cref="P:System.Windows.Documents.TableCellCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.Remove(System.Windows.Documents.TableCell)">
      <summary>Removes a specified item from the collection.</summary>
      <param name="item">An item to remove from the collection.</param>
      <returns>
        <see langword="true" /> if the specified item was found and removed; otherwise, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Raised if <paramref name="item" /> is not present in the collection.</exception>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="item" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.RemoveAt(System.Int32)">
      <summary>Removes an item, specified by index, from the collection.</summary>
      <param name="index">A zero-based index that specifies the collection item to remove.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when <paramref name="index" /> is less than zero, or when <paramref name="index" /> is greater than or equal to <see cref="P:System.Windows.Documents.TableCellCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.RemoveRange(System.Int32,System.Int32)">
      <summary>Removes a range of items, specified by beginning index and count, from the collection.</summary>
      <param name="index">A zero-based index that indicates the beginning of a range of items to remove.</param>
      <param name="count">The number of items to remove, beginning from the position specified by <paramref name="index" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when <paramref name="index" /> or <paramref name="count" /> is less than zero, or when <paramref name="index" /> is greater than or equal to <see cref="P:System.Windows.Documents.TableCellCollection.Count" />.</exception>
      <exception cref="T:System.ArgumentException">Raised when <paramref name="index" /> and <paramref name="count" /> do not specify a valid range in this collection.</exception>
    </member>
    <member name="P:System.Windows.Documents.TableCellCollection.SyncRoot">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.System#Collections#Generic#IEnumerable{System#Windows#Documents#TableCell}#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.System#Collections#IList#Add(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Windows.Documents.TableCellCollection" />.</param>
      <returns>The position into which the new element was inserted.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.System#Collections#IList#Clear">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Clear" />.</summary>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.System#Collections#IList#Contains(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Documents.TableCellCollection" />.</param>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Windows.Documents.TableCellCollection" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Documents.TableCellCollection" />.</param>
      <returns>The index of <paramref name="value" /> if found in the list; otherwise, -1.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index">The zero-based index at which to insert the <see cref="T:System.Object" />.</param>
      <param name="value">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Windows.Documents.TableCellCollection" />.</param>
    </member>
    <member name="P:System.Windows.Documents.TableCellCollection.System#Collections#IList#IsFixedSize">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Documents.TableCellCollection" /> has a fixed size; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCellCollection.System#Collections#IList#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Documents.TableCellCollection" /> is read-only; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCellCollection.System#Collections#IList#Item(System.Int32)">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
      <param name="index">The zero-based index of the element to get or set.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.System#Collections#IList#Remove(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="value">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Windows.Documents.TableCellCollection" />.</param>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />.</summary>
      <param name="index">The zero-based index of the item to remove.</param>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.TrimToSize">
      <summary>Optimizes memory consumption for the collection by setting the underlying collection <see cref="P:System.Windows.Documents.TableCellCollection.Capacity" /> equal to the <see cref="P:System.Windows.Documents.TableCellCollection.Count" /> of items currently in the collection.</summary>
    </member>
    <member name="T:System.Windows.Documents.TableColumn">
      <summary>A flow content element that defines a column within a <see cref="T:System.Windows.Documents.Table" />.</summary>
    </member>
    <member name="M:System.Windows.Documents.TableColumn.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.TableColumn" /> class.</summary>
    </member>
    <member name="P:System.Windows.Documents.TableColumn.Background">
      <summary>Gets or sets the background <see cref="T:System.Windows.Media.Brush" /> used to fill the content of the <see cref="T:System.Windows.Documents.TableColumn" />.</summary>
      <returns>The background <see cref="T:System.Windows.Media.Brush" /> used to fill the content of the <see cref="T:System.Windows.Documents.TableColumn" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.TableColumn.BackgroundProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.TableColumn.Background" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.TableColumn.Width">
      <summary>Gets or sets the width of a <see cref="T:System.Windows.Documents.TableColumn" /> element. The <see cref="P:System.Windows.Documents.TableColumn.Width" /> property measures the sum of the <see cref="T:System.Windows.Documents.TableColumn" /> content, padding, and border from side to side.</summary>
      <returns>The width of the <see cref="T:System.Windows.Documents.TableColumn" /> element, as a <see cref="T:System.Windows.GridLength" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.TableColumn.WidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.TableColumn.Width" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Documents.TableColumnCollection">
      <summary>Provides standard facilities for creating and managing a type-safe, ordered collection of <see cref="T:System.Windows.Documents.TableColumn" /> objects.</summary>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.Add(System.Windows.Documents.TableColumn)">
      <summary>Appends a specified item to the collection.</summary>
      <param name="item">A table column to append to the collection of columns.</param>
      <exception cref="T:System.ArgumentException">Raised when <paramref name="item" /> already belongs to a collection.</exception>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="item" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Documents.TableColumnCollection.Capacity">
      <summary>Gets or sets the pre-allocated collection item capacity for this collection.</summary>
      <returns>The pre-allocated collection item capacity for this collection. The default value is 8.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when an attempt is made to set <see cref="P:System.Windows.Documents.TableCellCollection.Capacity" /> to a value that is less than the current value of <see cref="P:System.Windows.Documents.TableCellCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.Clear">
      <summary>Clears all items from the collection.</summary>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.Contains(System.Windows.Documents.TableColumn)">
      <summary>Queries for the presence of a specified item in the collection.</summary>
      <param name="item">An item to query for the presence of in the collection.</param>
      <returns>
        <see langword="true" /> if the specified <paramref name="item" /> is present in the collection; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the contents of the collection and inserts them into a specified array starting at a specified index position in the array.</summary>
      <param name="array">A one-dimensional array to which the collection contents will be copied.  This array must use zero-based indexing.</param>
      <param name="index">A zero-based index in <paramref name="array" /> specifying the position at which to begin inserting the copied collection objects.</param>
      <exception cref="T:System.ArgumentException">Raised when <paramref name="array" /> includes items that are not compatible with the type <see cref="T:System.Windows.Documents.TableColumn" />, or if <paramref name="index" /> specifies a position that falls outside of the bounds of <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="array" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when <paramref name="index" /> is less than 0.</exception>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.CopyTo(System.Windows.Documents.TableColumn[],System.Int32)">
      <summary>Copies the contents of the collection and inserts them into a specified <see cref="T:System.Windows.Documents.TableColumn" /> array of starting at a specified index position in the array.</summary>
      <param name="array">A one-dimensional <see cref="T:System.Windows.Documents.TableColumn" /> array to which the collection contents will be copied.  This array must use zero-based indexing.</param>
      <param name="index">A zero-based index in <paramref name="array" /> specifying the position at which to begin inserting the copied collection objects.</param>
      <exception cref="T:System.ArgumentException">Raised when <paramref name="array" /> includes items that are not compatible with the type <see cref="T:System.Windows.Documents.TableColumn" />, or if <paramref name="index" /> specifies a position that falls outside of the bounds of <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="array" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when <paramref name="index" /> is less than 0.</exception>
    </member>
    <member name="P:System.Windows.Documents.TableColumnCollection.Count">
      <summary>Gets the number of items currently contained by the collection.</summary>
      <returns>The number of items currently contained by the collection.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.IndexOf(System.Windows.Documents.TableColumn)">
      <summary>Returns the zero-based index of specified collection item.</summary>
      <param name="item">A collection item to return the index of.</param>
      <returns>The zero-based index of the specified collection item, or -1 if the specified item is not a member of the collection.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.Insert(System.Int32,System.Windows.Documents.TableColumn)">
      <summary>Inserts a specified item in the collection at a specified index position.</summary>
      <param name="index">A zero-based index that specifies the position in the collection at which to insert <paramref name="item" />.</param>
      <param name="item">An item to insert into the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when <paramref name="index" /> is less than 0.</exception>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="item" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Documents.TableColumnCollection.IsReadOnly">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>Currently, this property always returns <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.TableColumnCollection.IsSynchronized">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>Currently, this property always returns <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.TableColumnCollection.Item(System.Int32)">
      <summary>Gets the collection item at a specified index.  This is an indexed property.</summary>
      <param name="index">A zero-based index specifying the position of the collection item to retrieve.</param>
      <returns>The collection item at the specified index.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when <paramref name="index" /> is less than zero, or when <paramref name="index" /> is greater than or equal to <see cref="P:System.Windows.Documents.TableColumnCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.Remove(System.Windows.Documents.TableColumn)">
      <summary>Removes a specified item from the collection.</summary>
      <param name="item">An item to remove from the collection.</param>
      <returns>
        <see langword="true" /> if the specified item was found and removed; otherwise, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Raised if <paramref name="item" /> is not present in the collection.</exception>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="item" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.RemoveAt(System.Int32)">
      <summary>Removes an item, specified by index, from the collection.</summary>
      <param name="index">A zero-based index that specifies the collection item to remove.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when <paramref name="index" /> is less than zero, or when <paramref name="index" /> is greater than or equal to <see cref="P:System.Windows.Documents.TableColumnCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.RemoveRange(System.Int32,System.Int32)">
      <summary>Removes a range of items, specified by beginning index and count, from the collection.</summary>
      <param name="index">A zero-based index indicating the beginning of a range of items to remove.</param>
      <param name="count">The number of items to remove, beginning from the position specified by <paramref name="index" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when <paramref name="index" /> or <paramref name="count" /> is less than zero, or when <paramref name="index" /> is greater than or equal to <see cref="P:System.Windows.Documents.TableColumnCollection.Count" />.</exception>
      <exception cref="T:System.ArgumentException">Raised when <paramref name="index" /> and <paramref name="count" /> do not specify a valid range in this collection.</exception>
    </member>
    <member name="P:System.Windows.Documents.TableColumnCollection.SyncRoot">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.System#Collections#Generic#IEnumerable{System#Windows#Documents#TableColumn}#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.System#Collections#IList#Add(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />. Use the type-safe <see cref="M:System.Windows.Documents.TableColumnCollection.Add(System.Windows.Documents.TableColumn)" /> method instead.</summary>
      <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Windows.Documents.TableColumnCollection" />.</param>
      <returns>The position into which the new element was inserted.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.System#Collections#IList#Clear">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Clear" />. Use the type-safe <see cref="M:System.Windows.Documents.TableColumnCollection.Clear" /> method instead.</summary>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.System#Collections#IList#Contains(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />. Use the type-safe <see cref="M:System.Windows.Documents.TableColumnCollection.Contains(System.Windows.Documents.TableColumn)" /> method instead.</summary>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Documents.TableColumnCollection" />.</param>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Windows.Documents.TableColumnCollection" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />. Use the type-safe <see cref="M:System.Windows.Documents.TableColumnCollection.IndexOf(System.Windows.Documents.TableColumn)" /> method instead.</summary>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Documents.TableColumnCollection" />.</param>
      <returns>The index of <paramref name="value" /> if found in the list; otherwise, -1.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />. Use the type-safe <see cref="M:System.Windows.Documents.TableColumnCollection.Insert(System.Int32,System.Windows.Documents.TableColumn)" /> method instead.</summary>
      <param name="index">The zero-based index at which to insert the <see cref="T:System.Object" />.</param>
      <param name="value">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Windows.Documents.TableColumnCollection" />.</param>
    </member>
    <member name="P:System.Windows.Documents.TableColumnCollection.System#Collections#IList#IsFixedSize">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Documents.TableCellCollection" /> has a fixed size; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.TableColumnCollection.System#Collections#IList#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Documents.TableColumnCollection" /> is read-only; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.TableColumnCollection.System#Collections#IList#Item(System.Int32)">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />. Use the type-safe <see cref="P:System.Windows.Documents.TableCellCollection.Item(System.Int32)" /> property instead.</summary>
      <param name="index">The zero-based index of the element to get or set.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.System#Collections#IList#Remove(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />. Use the type-safe <see cref="M:System.Windows.Documents.TableColumnCollection.Remove(System.Windows.Documents.TableColumn)" />, <see cref="M:System.Windows.Documents.TableColumnCollection.RemoveAt(System.Int32)" />, or <see cref="M:System.Windows.Documents.TableColumnCollection.RemoveRange(System.Int32,System.Int32)" /> methods instead.</summary>
      <param name="value">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Windows.Documents.TableColumnCollection" />.</param>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />. Use the type-safe <see cref="M:System.Windows.Documents.TableColumnCollection.Remove(System.Windows.Documents.TableColumn)" />, <see cref="M:System.Windows.Documents.TableColumnCollection.RemoveAt(System.Int32)" />, or <see cref="M:System.Windows.Documents.TableColumnCollection.RemoveRange(System.Int32,System.Int32)" /> methods instead.</summary>
      <param name="index">The zero-based index of the item to remove.</param>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.TrimToSize">
      <summary>Optimizes memory consumption for the collection by setting the underlying collection <see cref="P:System.Windows.Documents.TableColumnCollection.Capacity" /> equal to the <see cref="P:System.Windows.Documents.TableColumnCollection.Count" /> of items currently in the collection.</summary>
    </member>
    <member name="T:System.Windows.Documents.TableRow">
      <summary>A flow content element that defines a row within a <see cref="T:System.Windows.Documents.Table" />.</summary>
    </member>
    <member name="M:System.Windows.Documents.TableRow.#ctor">
      <summary>Initializes a new, empty instance of the <see cref="T:System.Windows.Documents.TableRow" /> class.</summary>
    </member>
    <member name="P:System.Windows.Documents.TableRow.Cells">
      <summary>Gets a <see cref="T:System.Windows.Documents.TableCellCollection" /> that contains cells of a <see cref="T:System.Windows.Documents.TableRow" />.</summary>
      <returns>A collection of child cells.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRow.ShouldSerializeCells">
      <summary>Returns a value that indicates whether or not the effective value of the <see cref="P:System.Windows.Documents.TableRow.Cells" /> property should be serialized during serialization of a <see cref="T:System.Windows.Documents.TableRow" /> object.</summary>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.Documents.TableRow.Cells" /> property should be serialized; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRow.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>
        <see cref="P:System.Windows.Documents.TableRow.Cells" /> property to add child <see cref="T:System.Windows.Documents.TableCell" /> elements to a <see cref="T:System.Windows.Documents.TableRow" />.</summary>
      <param name="value">The child object to add.</param>
    </member>
    <member name="M:System.Windows.Documents.TableRow.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>Adds the text content of a node to the object.</summary>
      <param name="text">The text to add to the object.</param>
    </member>
    <member name="T:System.Windows.Documents.TableRowCollection">
      <summary>Provides standard facilities for creating and managing a type-safe, ordered collection of <see cref="T:System.Windows.Documents.TableRow" /> objects.</summary>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.Add(System.Windows.Documents.TableRow)">
      <summary>Appends a specified item to the collection.</summary>
      <param name="item">A table row to append to the collection or rows.</param>
      <exception cref="T:System.ArgumentException">Raised when item already belongs to a collection.</exception>
      <exception cref="T:System.ArgumentNullException">Raised when item is null.</exception>
    </member>
    <member name="P:System.Windows.Documents.TableRowCollection.Capacity">
      <summary>Gets or sets the pre-allocated collection item capacity for this collection.</summary>
      <returns>The pre-allocated collection item capacity for this collection.  The default value is 8.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when an attempt is made to set <see cref="P:System.Windows.Documents.TableCellCollection.Capacity" /> to a value that is less than the current value of <see cref="P:System.Windows.Documents.TableCellCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.Clear">
      <summary>Clears all items from the collection.</summary>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.Contains(System.Windows.Documents.TableRow)">
      <summary>Queries for the presence of a specified item in the collection.</summary>
      <param name="item">An item to query for the presence of in the collection.</param>
      <returns>
        <see langword="true" /> if the specified item is present in the collection; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the contents of the collection and inserts them into a specified array starting at a specified index position in the array.</summary>
      <param name="array">A one-dimensional array to which the collection contents will be copied.  This array must use zero-based indexing.</param>
      <param name="index">A zero-based index in <paramref name="array" /> specifying the position at which to begin inserting the copied collection objects.</param>
      <exception cref="T:System.ArgumentException">Raised when array includes items that are not compatible with the type <see cref="T:System.Windows.Documents.TableRow" />, or if arrayIndex specifies a position that falls outside of the bounds of array.</exception>
      <exception cref="T:System.ArgumentNullException">Raised when array is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when arrayIndex is less than 0.</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.CopyTo(System.Windows.Documents.TableRow[],System.Int32)">
      <summary>Copies the contents of the collection and inserts them into a specified <see cref="T:System.Windows.Documents.TableRow" /> array of starting at a specified index position in the array.</summary>
      <param name="array">A one-dimensional <see cref="T:System.Windows.Documents.TableRow" /> array to which the collection contents will be copied.  This array must use zero-based indexing.</param>
      <param name="index">A zero-based index in <paramref name="array" /> specifying the position at which to begin inserting the copied collection objects.</param>
      <exception cref="T:System.ArgumentException">Raised when array includes items that are not compatible with the type <see cref="T:System.Windows.Documents.TableRow" />, or if arrayIndex specifies a position that falls outside of the bounds of array.</exception>
      <exception cref="T:System.ArgumentNullException">Raised when array is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when arrayIndex is less than 0.</exception>
    </member>
    <member name="P:System.Windows.Documents.TableRowCollection.Count">
      <summary>Gets the number of items currently contained by the collection.</summary>
      <returns>The number of items currently contained by the collection.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.IndexOf(System.Windows.Documents.TableRow)">
      <summary>Returns the zero-based index of specified collection item.</summary>
      <param name="item">A collection item to return the index of.</param>
      <returns>The zero-based index of the specified collection item, or -1 if the specified item is not a member of the collection.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.Insert(System.Int32,System.Windows.Documents.TableRow)">
      <summary>Inserts a specified item in the collection at a specified index position.</summary>
      <param name="index">A zero-based index that specifies the position in the collection at which to insert <paramref name="item" />.</param>
      <param name="item">An item to insert into the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when index is less than 0.</exception>
      <exception cref="T:System.ArgumentNullException">Raised when item is null.</exception>
    </member>
    <member name="P:System.Windows.Documents.TableRowCollection.IsReadOnly">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>Currently, this property always returns <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.TableRowCollection.IsSynchronized">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>Currently, this property always returns <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.TableRowCollection.Item(System.Int32)">
      <summary>Gets the collection item at a specified index.  This is an indexed property.</summary>
      <param name="index">A zero-based index specifying the position of the collection item to retrieve.</param>
      <returns>The collection item at the specified index.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when index is less than zero, or when index is greater than or equal to <see cref="P:System.Windows.Documents.TableRowCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.Remove(System.Windows.Documents.TableRow)">
      <summary>Removes a specified item from the collection.</summary>
      <param name="item">An item to remove from the collection.</param>
      <returns>
        <see langword="true" /> if the specified item was found and removed; otherwise, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Raised if item is not present in the collection.</exception>
      <exception cref="T:System.ArgumentNullException">Raised when item is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.RemoveAt(System.Int32)">
      <summary>Removes an item, specified by index, from the collection.</summary>
      <param name="index">A zero-based index that specifies the collection item to remove.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when index is less than zero, or when index is greater than or equal to <see cref="P:System.Windows.Documents.TableRowCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.RemoveRange(System.Int32,System.Int32)">
      <summary>Removes a range of items, specified by beginning index and count, from the collection.</summary>
      <param name="index">A zero-based index indicating the beginning of a range of items to remove.</param>
      <param name="count">The number of items to remove, beginning form the position specified by <paramref name="index" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when index or count is less than zero, or when index is greater than or equal to <see cref="P:System.Windows.Documents.TableRowCollection.Count" />.</exception>
      <exception cref="T:System.ArgumentException">Raised when index and count do not specify a valid range in this collection.</exception>
    </member>
    <member name="P:System.Windows.Documents.TableRowCollection.SyncRoot">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.System#Collections#Generic#IEnumerable{System#Windows#Documents#TableRow}#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.System#Collections#IList#Add(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Windows.Documents.TableRowCollection" />.</param>
      <returns>The position into which the new element was inserted.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.System#Collections#IList#Clear">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Clear" />.</summary>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.System#Collections#IList#Contains(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Documents.TableRowCollection" />.</param>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Windows.Documents.TableRowCollection" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Documents.TableRowCollection" />.</param>
      <returns>The index of <paramref name="value" /> if found in the list; otherwise, -1.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index">The zero-based index at which to insert the <see cref="T:System.Object" />.</param>
      <param name="value">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Windows.Documents.TableRowCollection" />.</param>
    </member>
    <member name="P:System.Windows.Documents.TableRowCollection.System#Collections#IList#IsFixedSize">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Documents.TableRowCollection" /> has a fixed size; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.TableRowCollection.System#Collections#IList#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Documents.TableRowCollection" /> is read-only; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.TableRowCollection.System#Collections#IList#Item(System.Int32)">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
      <param name="index">The zero-based index of the element to get or set.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.System#Collections#IList#Remove(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="value">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Windows.Documents.TableRowCollection" />.</param>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />.</summary>
      <param name="index">The zero-based index of the item to remove.</param>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.TrimToSize">
      <summary>Optimizes memory consumption for the collection by setting the underlying collection <see cref="P:System.Windows.Documents.TableRowCollection.Capacity" /> equal to the <see cref="P:System.Windows.Documents.TableRowCollection.Count" /> of items currently in the collection.</summary>
    </member>
    <member name="T:System.Windows.Documents.TableRowGroup">
      <summary>Represents a flow content element used to group <see cref="T:System.Windows.Documents.TableRow" /> elements within a <see cref="T:System.Windows.Documents.Table" />.</summary>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroup.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.TableRowGroup" /> class.</summary>
    </member>
    <member name="P:System.Windows.Documents.TableRowGroup.Rows">
      <summary>Gets a <see cref="T:System.Windows.Documents.TableRowCollection" /> that contains the <see cref="T:System.Windows.Documents.TableRow" /> objects that comprise the contents of the <see cref="T:System.Windows.Documents.TableRowGroup" />.</summary>
      <returns>A <see cref="T:System.Windows.Documents.TableRowCollection" /> that contains the <see cref="T:System.Windows.Documents.TableRow" /> elements that comprise the contents of the <see cref="T:System.Windows.Documents.TableRowGroup" />. This property has no default value.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroup.ShouldSerializeRows">
      <summary>Indicates whether the <see cref="P:System.Windows.Documents.TableRowGroup.Rows" /> property should be persisted.</summary>
      <returns>
        <see langword="true" /> if the property value has changed from its default; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroup.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>Adds a table row to the <see cref="T:System.Windows.Documents.TableRowGroup" /> collection.</summary>
      <param name="value">The <see cref="T:System.Windows.Documents.TableRow" /> to add to the collection.</param>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroup.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>Adds the text content of a node to the object.</summary>
      <param name="text">The text to add to the object.</param>
    </member>
    <member name="T:System.Windows.Documents.TableRowGroupCollection">
      <summary>Provides standard facilities for creating and managing a type-safe, ordered collection of <see cref="T:System.Windows.Documents.TableRowGroup" /> objects.</summary>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.Add(System.Windows.Documents.TableRowGroup)">
      <summary>Appends a specified item to the collection.</summary>
      <param name="item">An item to append to the collection.</param>
      <exception cref="T:System.ArgumentException">Raised when item already belongs to a collection.</exception>
      <exception cref="T:System.ArgumentNullException">Raised when item is null.</exception>
    </member>
    <member name="P:System.Windows.Documents.TableRowGroupCollection.Capacity">
      <summary>Gets or sets the pre-allocated collection item capacity for this collection.</summary>
      <returns>The pre-allocated collection item capacity for this collection.  The default value is 8.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when an attempt is made to set <see cref="P:System.Windows.Documents.TableCellCollection.Capacity" /> to a value that is less than the current value of <see cref="P:System.Windows.Documents.TableCellCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.Clear">
      <summary>Clears all items from the collection.</summary>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.Contains(System.Windows.Documents.TableRowGroup)">
      <summary>Queries for the presence of a specified item in the collection.</summary>
      <param name="item">An item to query for the presence of in the collection.</param>
      <returns>
        <see langword="true" /> if the specified item is present in the collection; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the contents of the collection and inserts them into a specified array starting at a specified index position in the array.</summary>
      <param name="array">A one-dimensional array to which the collection contents will be copied.  This array must use zero-based indexing.</param>
      <param name="index">A zero-based index in <paramref name="array" /> specifying the position at which to begin inserting the copied collection objects.</param>
      <exception cref="T:System.ArgumentException">Raised when array includes items that are not compatible with the type <see cref="T:System.Windows.Documents.TableRowGroup" />, or if arrayIndex specifies a position that falls outside of the bounds of array.</exception>
      <exception cref="T:System.ArgumentNullException">Raised when array is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when arrayIndex is less than 0.</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.CopyTo(System.Windows.Documents.TableRowGroup[],System.Int32)">
      <summary>Copies the contents of the collection and inserts them into a specified <see cref="T:System.Windows.Documents.TableRowGroup" /> array of starting at a specified index position in the array.</summary>
      <param name="array">A one-dimensional <see cref="T:System.Windows.Documents.TableRowGroup" /> array to which the collection contents will be copied.  This array must use zero-based indexing.</param>
      <param name="index">A zero-based index in <paramref name="array" /> specifying the position at which to begin inserting the copied collection objects.</param>
      <exception cref="T:System.ArgumentException">Raised when array includes items that are not compatible with the type <see cref="T:System.Windows.Documents.TableRowGroup" />, or if arrayIndex specifies a position that falls outside of the bounds of array.</exception>
      <exception cref="T:System.ArgumentNullException">Raised when array is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when arrayIndex is less than 0.</exception>
    </member>
    <member name="P:System.Windows.Documents.TableRowGroupCollection.Count">
      <summary>Gets the number of items currently contained by the collection.</summary>
      <returns>The number of items currently contained by the collection.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.IndexOf(System.Windows.Documents.TableRowGroup)">
      <summary>Returns the zero-based index of specified collection item.</summary>
      <param name="item">A collection item to return the index of.</param>
      <returns>The zero-based index of the specified collection item, or -1 if the specified item is not a member of the collection.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.Insert(System.Int32,System.Windows.Documents.TableRowGroup)">
      <summary>Inserts a specified item in the collection at a specified index position.</summary>
      <param name="index">A zero-based index that specifies the position in the collection at which to insert <paramref name="item" />.</param>
      <param name="item">An item to insert into the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when index is less than 0.</exception>
      <exception cref="T:System.ArgumentNullException">Raised when item is null.</exception>
    </member>
    <member name="P:System.Windows.Documents.TableRowGroupCollection.IsReadOnly">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>Currently, this property always returns <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.TableRowGroupCollection.IsSynchronized">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>Currently, this property always returns <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.TableRowGroupCollection.Item(System.Int32)">
      <summary>Gets the collection item at a specified index.  This is an indexed property.</summary>
      <param name="index">A zero-based index specifying the position of the collection item to retrieve.</param>
      <returns>The collection item at the specified index.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when index is less than zero, or when index is greater than or equal to <see cref="P:System.Windows.Documents.TableRowGroupCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.Remove(System.Windows.Documents.TableRowGroup)">
      <summary>Removes a specified item from the collection.</summary>
      <param name="item">An item to remove from the collection.</param>
      <returns>
        <see langword="true" /> if the specified item was found and removed; otherwise, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Raised if item is not present in the collection.</exception>
      <exception cref="T:System.ArgumentNullException">Raised when item is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.RemoveAt(System.Int32)">
      <summary>Removes an item, specified by index, from the collection.</summary>
      <param name="index">A zero-based index that specifies the collection item to remove.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when index is less than zero, or when index is greater than or equal to <see cref="P:System.Windows.Documents.TableRowGroupCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.RemoveRange(System.Int32,System.Int32)">
      <summary>Removes a range of items, specified by beginning index and count, from the collection.</summary>
      <param name="index">A zero-based index indicating the beginning of a range of items to remove.</param>
      <param name="count">The number of items to remove, beginning form the position specified by <paramref name="index" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when index or count is less than zero, or when index is greater than or equal to <see cref="P:System.Windows.Documents.TableRowGroupCollection.Count" />.</exception>
      <exception cref="T:System.ArgumentException">Raised when index and count do not specify a valid range in this collection.</exception>
    </member>
    <member name="P:System.Windows.Documents.TableRowGroupCollection.SyncRoot">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.System#Collections#Generic#IEnumerable{System#Windows#Documents#TableRowGroup}#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.System#Collections#IList#Add(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Windows.Documents.TableRowGroupCollection" />.</param>
      <returns>The position into which the new element was inserted.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.System#Collections#IList#Clear">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Clear" />.</summary>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.System#Collections#IList#Contains(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Documents.TableRowGroupCollection" />.</param>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Windows.Documents.TableRowGroupCollection" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Documents.TableRowGroupCollection" />.</param>
      <returns>The index of <paramref name="value" /> if found in the list; otherwise, -1.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index">The zero-based index at which to insert the <see cref="T:System.Object" />.</param>
      <param name="value">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Windows.Documents.TableRowGroupCollection" />.</param>
    </member>
    <member name="P:System.Windows.Documents.TableRowGroupCollection.System#Collections#IList#IsFixedSize">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Documents.TableRowGroupCollection" /> has a fixed size; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.TableRowGroupCollection.System#Collections#IList#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Documents.TableRowGroupCollection" /> is read-only; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.TableRowGroupCollection.System#Collections#IList#Item(System.Int32)">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
      <param name="index">The zero-based index of the element to get or set.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.System#Collections#IList#Remove(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="value">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Windows.Documents.TableRowGroupCollection" />.</param>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />.</summary>
      <param name="index">The zero-based index of the item to remove.</param>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.TrimToSize">
      <summary>Optimizes memory consumption for the collection by setting the underlying collection <see cref="P:System.Windows.Documents.TableRowGroupCollection.Capacity" /> equal to the <see cref="P:System.Windows.Documents.TableRowGroupCollection.Count" /> of items currently in the collection.</summary>
    </member>
    <member name="T:System.Windows.Documents.TextEffectResolver">
      <summary>A helper class that sets text effects in a text container</summary>
    </member>
    <member name="M:System.Windows.Documents.TextEffectResolver.Resolve(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer,System.Windows.Media.TextEffect)">
      <summary>Resolves text effect on a text range to a list of text effect targets.</summary>
      <param name="startPosition">The starting text pointer</param>
      <param name="endPosition">The end text pointer</param>
      <param name="effect">The effect to apply on the text</param>
      <returns>Collection of <see cref="T:System.Windows.Documents.TextEffectTarget" /> objects corresponding to the text range.</returns>
    </member>
    <member name="T:System.Windows.Documents.TextEffectTarget">
      <summary>Result from using <see cref="T:System.Windows.Documents.TextEffectResolver" /> to set an effect on text. This consists of the <see cref="T:System.Windows.Media.TextEffect" /> created and the <see cref="T:System.Windows.DependencyObject" /> to which the <see cref="T:System.Windows.Media.TextEffect" /> should be set.</summary>
    </member>
    <member name="M:System.Windows.Documents.TextEffectTarget.Disable">
      <summary>Disables the <see cref="T:System.Windows.Media.TextEffect" /> on the effect target.</summary>
    </member>
    <member name="P:System.Windows.Documents.TextEffectTarget.Element">
      <summary>Gets the <see cref="T:System.Windows.DependencyObject" /> that the <see cref="T:System.Windows.Media.TextEffect" /> is targeting.</summary>
      <returns>The <see cref="T:System.Windows.DependencyObject" /> that the <see cref="T:System.Windows.Media.TextEffect" /> is targeting.</returns>
    </member>
    <member name="M:System.Windows.Documents.TextEffectTarget.Enable">
      <summary>Enables the <see cref="T:System.Windows.Media.TextEffect" /> on the target text.</summary>
    </member>
    <member name="P:System.Windows.Documents.TextEffectTarget.IsEnabled">
      <summary>Gets a value that determines whether the text effect is enabled on the target element</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Media.TextEffect" /> is enabled on the target; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.TextEffectTarget.TextEffect">
      <summary>Gets the <see cref="T:System.Windows.Media.TextEffect" /> of the <see cref="T:System.Windows.Documents.TextEffectTarget" />.</summary>
      <returns>The <see cref="T:System.Windows.Media.TextEffect" /> of the <see cref="T:System.Windows.Documents.TextEffectTarget" />.</returns>
    </member>
    <member name="T:System.Windows.Documents.TextElement">
      <summary>An abstract class used as the base class for the abstract <see cref="T:System.Windows.Documents.Block" /> and <see cref="T:System.Windows.Documents.Inline" /> classes.</summary>
    </member>
    <member name="P:System.Windows.Documents.TextElement.Background">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> used to fill the background of the content area.</summary>
      <returns>The brush used to fill the background of the content area, or <see langword="null" /> to not use a background brush. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.BackgroundProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.TextElement.Background" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.TextElement.ContentEnd">
      <summary>Gets a <see cref="T:System.Windows.Documents.TextPointer" /> that represents the end of the content in the element.</summary>
      <returns>A <see cref="T:System.Windows.Documents.TextPointer" /> that represents the end of the content in the <see cref="T:System.Windows.Documents.TextElement" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.ContentStart">
      <summary>Gets a <see cref="T:System.Windows.Documents.TextPointer" /> that represents the start of content in the element.</summary>
      <returns>A <see cref="T:System.Windows.Documents.TextPointerContext" /> that represents the start of the content in the <see cref="T:System.Windows.Documents.TextElement" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.ElementEnd">
      <summary>Gets a <see cref="T:System.Windows.Documents.TextPointer" /> that represents the position just after the end of the element.</summary>
      <returns>A <see cref="T:System.Windows.Documents.TextPointer" /> that represents the position just after the end of the <see cref="T:System.Windows.Documents.TextElement" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.ElementStart">
      <summary>Gets a <see cref="T:System.Windows.Documents.TextPointer" /> that represents the position just before the start of the element.</summary>
      <returns>A <see cref="T:System.Windows.Documents.TextPointerContext" /> that represents the position just before the start of the <see cref="T:System.Windows.Documents.TextElement" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.FontFamily">
      <summary>Gets or sets the preferred top-level font family for the content of the element.</summary>
      <returns>A <see cref="T:System.Windows.Media.FontFamily" /> object that specifies the preferred font family, or a primary preferred font family with one or more fallback font families. The default is the font determined by the <see cref="P:System.Windows.SystemFonts.MessageFontFamily" /> value.</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.FontFamilyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.TextElement.FontFamily" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.TextElement.FontSize">
      <summary>Gets or sets the font size for the content of the element.</summary>
      <returns>The desired font size to use in device independent pixels,  greater than 0.001 and less than or equal to 35791.  The default depends on current system settings and depends on the <see cref="P:System.Windows.SystemFonts.MessageFontSize" /> value.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Documents.TextElement.FontSize" /> is set to a value greater than 35791 or less than or equal to 0.001.</exception>
    </member>
    <member name="F:System.Windows.Documents.TextElement.FontSizeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.TextElement.FontSize" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.TextElement.FontStretch">
      <summary>Gets or sets the font-stretching characteristics for the content of the element.</summary>
      <returns>A <see cref="T:System.Windows.FontStretch" /> structure that specifies the desired font-stretching characteristics to use. The default is <see cref="P:System.Windows.FontStretches.Normal" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.FontStretchProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.TextElement.FontStretch" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.TextElement.FontStyle">
      <summary>Gets or sets the font style for the content of the element.</summary>
      <returns>A member of the <see cref="T:System.Windows.FontStyles" /> class that specifies the desired font style. The default is determined by the <see cref="P:System.Windows.SystemFonts.MessageFontStyle" /> value.</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.FontStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.TextElement.FontStyle" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.TextElement.FontWeight">
      <summary>Gets or sets the top-level font weight for the content of the element.</summary>
      <returns>A member of the <see cref="T:System.Windows.FontWeights" /> class that specifies the desired font weight. The default value is determined by the <see cref="P:System.Windows.SystemFonts.MessageFontWeight" /> value.</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.FontWeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.TextElement.FontWeight" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.TextElement.Foreground">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> to apply to the content of the element.</summary>
      <returns>The brush used to apply to the text contents. The default is <see cref="P:System.Windows.Media.Brushes.Black" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.ForegroundProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.TextElement.Foreground" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Documents.TextElement.GetFontFamily(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.TextElement.FontFamily" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.TextElement.FontFamily" /> property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.TextElement.FontFamily" /> attached property on the specified dependency object.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.GetFontSize(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.TextElement.FontSize" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.TextElement.FontSize" /> property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.TextElement.FontSize" /> attached property on the specified dependency object.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.GetFontStretch(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.TextElement.FontStretch" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.TextElement.FontStretch" /> property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.TextElement.FontStretch" /> attached property on the specified dependency object.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.GetFontStyle(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.TextElement.FontStyle" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.TextElement.FontStyle" /> property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.TextElement.FontStyle" /> attached property on the specified dependency object.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.GetFontWeight(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.TextElement.FontWeight" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.TextElement.FontWeight" /> property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.TextElement.FontWeight" /> attached property on the specified dependency object.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.GetForeground(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.TextElement.Foreground" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.TextElement.Foreground" /> property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.TextElement.Foreground" /> attached property on the specified dependency object.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Documents.TextElement.LogicalChildren">
      <summary>Gets an enumerator that can iterate the logical children of the element.</summary>
      <returns>An enumerator for the logical children.</returns>
    </member>
    <member name="M:System.Windows.Documents.TextElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Handles notifications that one or more of the dependency properties that exist on the element have had their effective values changed.</summary>
      <param name="e">Arguments associated with the property value change.  The <see cref="P:System.Windows.DependencyPropertyChangedEventArgs.Property" /> property specifies which property has changed, the <see cref="P:System.Windows.DependencyPropertyChangedEventArgs.OldValue" /> property specifies the previous property value, and the <see cref="P:System.Windows.DependencyPropertyChangedEventArgs.NewValue" /> property specifies the new property value.</param>
    </member>
    <member name="M:System.Windows.Documents.TextElement.SetFontFamily(System.Windows.DependencyObject,System.Windows.Media.FontFamily)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.TextElement.FontFamily" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.TextElement.FontFamily" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.SetFontSize(System.Windows.DependencyObject,System.Double)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.TextElement.FontSize" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.TextElement.FontSize" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.SetFontStretch(System.Windows.DependencyObject,System.Windows.FontStretch)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.TextElement.FontStretch" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.TextElement.FontStretch" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.SetFontStyle(System.Windows.DependencyObject,System.Windows.FontStyle)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.TextElement.FontStyle" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.TextElement.FontStyle" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.SetFontWeight(System.Windows.DependencyObject,System.Windows.FontWeight)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.TextElement.FontWeight" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.TextElement.FontWeight" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.SetForeground(System.Windows.DependencyObject,System.Windows.Media.Brush)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.TextElement.Foreground" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.TextElement.Foreground" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>Adds a child object.</summary>
      <param name="value">The child object to add.</param>
    </member>
    <member name="M:System.Windows.Documents.TextElement.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>Adds the text content of a node to the object.</summary>
      <param name="text">The text to add to the object.</param>
    </member>
    <member name="P:System.Windows.Documents.TextElement.TextEffects">
      <summary>Gets or sets a collection of text effects to apply to the content of the element.</summary>
      <returns>A <see cref="T:System.Windows.Media.TextEffectCollection" /> containing one or more <see cref="T:System.Windows.Media.TextEffect" /> objects that define effects to apply to the content in this element. The default is <see langword="null" /> (not an empty collection).</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.TextEffectsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.TextElement.TextEffects" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Documents.TextElement.Typography">
      <summary>Gets the currently effective typography variations for the content of the element.</summary>
      <returns>A <see cref="T:System.Windows.Documents.Typography" /> object that specifies the currently effective typography variations. For a list of default typography values, see <see cref="T:System.Windows.Documents.Typography" />.</returns>
    </member>
    <member name="T:System.Windows.Documents.TextElementCollection`1">
      <summary>Provides standard facilities for creating and managing a type-safe, ordered collection of <see cref="T:System.Windows.Documents.TextElement" /> objects.  This is a generic collection for working with objects of a specified type that derives from <see cref="T:System.Windows.Documents.TextElement" />.</summary>
      <typeparam name="TextElementType">Type specifier for the generic collection.  Acceptable types are constrained to a type of <see cref="T:System.Windows.Documents.TextElement" /> or a descendant of <see cref="T:System.Windows.Documents.TextElement" />.</typeparam>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.Add(`0)">
      <summary>Appends a specified item to the collection.</summary>
      <param name="item">An item to append to the collection.</param>
      <exception cref="T:System.ArgumentException">Raised when item already belongs to a collection.</exception>
      <exception cref="T:System.ArgumentNullException">Raised when item is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.AddRange(System.Collections.IEnumerable)">
      <summary>Appends a specified range of items to the collection.</summary>
      <param name="range">An object that implements the <see cref="T:System.Collections.IEnumerable" /> interface, and that specifies a range of items to add to the collection.</param>
      <exception cref="T:System.ArgumentException">Raised when range includes any null items.</exception>
      <exception cref="T:System.ArgumentNullException">Raised when range is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.Clear">
      <summary>Clears all items from the collection.</summary>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.Contains(`0)">
      <summary>Queries for the presence of a specified item in the collection.</summary>
      <param name="item">An item to query for the presence of in the collection.</param>
      <returns>
        <see langword="true" /> if the specified item is present in the collection; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.CopyTo(`0[],System.Int32)">
      <summary>Copies the contents of the collection and inserts them into a specified array starting at a specified index position in the array.</summary>
      <param name="array">A one-dimensional array to which the collection contents will be copied.  This array must use zero-based indexing.</param>
      <param name="arrayIndex">A zero-based index in <paramref name="array" /> specifying the position at which to begin inserting the copied collection objects.</param>
      <exception cref="T:System.ArgumentException">Raised when array includes items that are not compatible with the type <see cref="T:System.Windows.Documents.TextElement" />, or if arrayIndex specifies a position that falls outside of the bounds of array.</exception>
      <exception cref="T:System.ArgumentNullException">Raised when array is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when arrayIndex is less than 0.</exception>
    </member>
    <member name="P:System.Windows.Documents.TextElementCollection`1.Count">
      <summary>Gets the number of items currently in the collection.</summary>
      <returns>The number of items currently in the collection.</returns>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.GetEnumerator">
      <summary>Returns an enumerator for the contents of the collection.</summary>
      <returns>An enumerator for the contents of the collection.</returns>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.InsertAfter(`0,`0)">
      <summary>Inserts a specified item in the collection after a specified collection item.</summary>
      <param name="previousSibling">An item in the collection after which the new item will be inserted.</param>
      <param name="newItem">An item to insert into the collection.</param>
      <exception cref="T:System.ArgumentException">Raised when newItem already belongs to a collection.</exception>
      <exception cref="T:System.ArgumentNullException">Raised when previousSibling or newItem is null.</exception>
      <exception cref="T:System.InvalidOperationException">Raised when previousSibling does not belong to this collection.</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.InsertBefore(`0,`0)">
      <summary>Inserts a specified item in the collection before a specified collection item.</summary>
      <param name="nextSibling">An item in the collection before which the new item will be inserted.</param>
      <param name="newItem">An item to insert into the collection.</param>
      <exception cref="T:System.ArgumentException">Raised when newItem already belongs to a collection.</exception>
      <exception cref="T:System.ArgumentNullException">Raised when nextSibling or newItem is null.</exception>
      <exception cref="T:System.InvalidOperationException">Raised when nextSibling does not belong to this collection.</exception>
    </member>
    <member name="P:System.Windows.Documents.TextElementCollection`1.IsReadOnly">
      <summary>Gets a value that indicates whether or not the collection is read-only.</summary>
      <returns>
        <see langword="true" /> if the collection is read-only; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.Remove(`0)">
      <summary>Removes a specified item from the collection.</summary>
      <param name="item">An item to be removed fro the collection.</param>
      <returns>
        <see langword="true" /> if the specified item was found and removed; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index. Use the type-safe <see cref="M:System.Windows.Documents.TextElementCollection`1.CopyTo(`0[],System.Int32)" /> method instead.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying begins.</param>
    </member>
    <member name="P:System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#Count">
      <summary>Gets the number of elements contained in the <see cref="T:System.Collections.ICollection" />.  Use the type-safe <see cref="P:System.Windows.Documents.TextElementCollection`1.Count" /> property instead.</summary>
      <returns>The number of elements contained in the <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#IsSynchronized">
      <summary>Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</summary>
      <returns>
        <see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that iterates through a collection.  Use the type-safe <see cref="M:System.Windows.Documents.TextElementCollection`1.GetEnumerator" /> method instead.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Add(System.Object)">
      <summary>Adds an item to the <see cref="T:System.Collections.IList" />.  Use the type-safe <see cref="M:System.Windows.Documents.TextElementCollection`1.Add(`0)" /> method instead.</summary>
      <param name="value">The object to add to the <see cref="T:System.Collections.IList" />.</param>
      <returns>The position into which the new element was inserted.</returns>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Clear">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.  Use the type-safe <see cref="M:System.Windows.Documents.TextElementCollection`1.Clear" /> method instead.</summary>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Contains(System.Object)">
      <summary>Determines whether the <see cref="T:System.Collections.IList" /> contains a specific value. Use the type-safe <see cref="M:System.Windows.Documents.TextElementCollection`1.Contains(`0)" /> method instead.</summary>
      <param name="value">The object to locate in the <see cref="T:System.Collections.IList" />.</param>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Collections.IList" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IndexOf(System.Object)">
      <summary>Determines the index of a specific item in the <see cref="T:System.Collections.IList" />.</summary>
      <param name="value">The object to locate in the <see cref="T:System.Collections.IList" />.</param>
      <returns>The index of <paramref name="value" /> if found in the list; otherwise, -1.</returns>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Inserts an item to the <see cref="T:System.Collections.IList" /> at the specified index.  Use the type-safe <see cref="M:System.Windows.Documents.TextElementCollection`1.InsertAfter(`0,`0)" /> or <see cref="M:System.Windows.Documents.TextElementCollection`1.InsertBefore(`0,`0)" /> methods instead.</summary>
      <param name="index">The zero-based index at which <paramref name="value" /> should be inserted.</param>
      <param name="value">The object to insert into the <see cref="T:System.Collections.IList" />.</param>
    </member>
    <member name="P:System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IsFixedSize">
      <summary>Gets a value indicating whether the <see cref="T:System.Collections.IList" /> has a fixed size.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Collections.IList" /> has a fixed size; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:System.Collections.IList" /> is read-only.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Collections.IList" /> is read-only; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Item(System.Int32)">
      <summary>Gets or sets the element at the specified index.</summary>
      <param name="index">The zero-based index of the element to get or set.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Remove(System.Object)">
      <summary>Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList" />.  Use the type-safe <see cref="M:System.Windows.Documents.TextElementCollection`1.Remove(`0)" /> method instead.</summary>
      <param name="value">The object to remove from the <see cref="T:System.Collections.IList" />.</param>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Collections.IList" /> item at the specified index.</summary>
      <param name="index">The zero-based index of the item to remove.</param>
    </member>
    <member name="T:System.Windows.Documents.TextElementEditingBehaviorAttribute">
      <summary>Specifies how a <see cref="T:System.Windows.Controls.RichTextBox" /> should handle a custom text element.</summary>
    </member>
    <member name="M:System.Windows.Documents.TextElementEditingBehaviorAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.TextElementEditingBehaviorAttribute" /> class.</summary>
    </member>
    <member name="P:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsMergeable">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.Windows.Controls.RichTextBox" /> can merge two adjacent text elements.</summary>
      <returns>
        <see langword="true" /> if a <see cref="T:System.Windows.Controls.RichTextBox" /> is free to merge adjacent custom text elements that have identical property values; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsTypographicOnly">
      <summary>Gets or sets a value indicating whether the text element provides formatting on a character basis, or if the formatting applies to the entire element.</summary>
      <returns>
        <see langword="true" /> if formatting should apply to the individual characters; <see langword="false" /> if the formatting should apply to the entire element.</returns>
    </member>
    <member name="T:System.Windows.Documents.TextPointer">
      <summary>Represents a position within a <see cref="T:System.Windows.Documents.FlowDocument" /> or <see cref="T:System.Windows.Controls.TextBlock" />.</summary>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.CompareTo(System.Windows.Documents.TextPointer)">
      <summary>Performs an ordinal comparison between the positions specified by the current <see cref="T:System.Windows.Documents.TextPointer" /> and a second specified <see cref="T:System.Windows.Documents.TextPointer" />.</summary>
      <param name="position">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to compare to the current position.</param>
      <returns>-1 if the current <see cref="T:System.Windows.Documents.TextPointer" /> precedes <paramref name="position" />; 0 if the locations are the same; +1 if the current <see cref="T:System.Windows.Documents.TextPointer" /> follows <paramref name="position" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="position" /> specifies a position outside of the text container associated with the current position.</exception>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)">
      <summary>Deletes the specified number of characters from the position indicated by the current <see cref="T:System.Windows.Documents.TextPointer" />.</summary>
      <param name="count">The number of characters to delete, starting at the current position. Specify a positive value to delete characters that follow the current position; specify a negative value to delete characters that precede the current position.</param>
      <returns>The number of characters actually deleted.</returns>
      <exception cref="T:System.InvalidOperationException">The method is called at a position where text is not allowed.</exception>
    </member>
    <member name="P:System.Windows.Documents.TextPointer.DocumentEnd">
      <summary>Gets a <see cref="T:System.Windows.Documents.TextPointer" /> at the end of content in the text container associated with the current position.</summary>
      <returns>A <see cref="T:System.Windows.Documents.TextPointer" /> at the end of content in the text container associated with the current position.</returns>
    </member>
    <member name="P:System.Windows.Documents.TextPointer.DocumentStart">
      <summary>Gets a <see cref="T:System.Windows.Documents.TextPointer" /> at the beginning of content in the text container associated with the current position.</summary>
      <returns>A <see cref="T:System.Windows.Documents.TextPointer" /> at the beginning of content in the text container associated with the current position.</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetAdjacentElement(System.Windows.Documents.LogicalDirection)">
      <summary>Returns the element, if any, that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</summary>
      <param name="direction">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for an adjacent element.</param>
      <returns>The adjacent element in the specified <paramref name="direction" />, or <see langword="null" /> if no adjacent element exists.</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)">
      <summary>Returns a bounding box (<see cref="T:System.Windows.Rect" />) for content that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</summary>
      <param name="direction">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find a content bounding box.</param>
      <returns>A bounding box for content that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified direction, or <see cref="P:System.Windows.Rect.Empty" /> if current, valid layout information is unavailable.</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)">
      <summary>Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the closest insertion position in the specified logical direction.</summary>
      <param name="direction">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the closest insertion position.</param>
      <returns>A <see cref="T:System.Windows.Documents.TextPointer" /> to the closest insertion position in the specified direction.</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32)">
      <summary>Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />.</summary>
      <param name="count">The number of start-of-line markers to skip when determining the line for which to return the starting position. Negative values specify preceding lines, 0 specifies the current line, and positive values specify following lines.</param>
      <returns>A <see cref="T:System.Windows.Documents.TextPointer" /> pointing to the beginning of the specified line (with the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> set to <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />), or <see langword="null" /> if the specified line is out of range or otherwise cannot be located.</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32,System.Int32@)">
      <summary>Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />, and reports how many lines were skipped.</summary>
      <param name="count">The number of start-of-line markers to skip when determining the line for which to return the starting position. Negative values specify preceding lines, 0 specifies the current line, and positive values specify following lines.</param>
      <param name="actualCount">When this method returns, contains the actual number of start-of-line markers that were skipped when determining the line for which to return the starting position.  This value may be less than <paramref name="count" /> if the beginning or end of content is encountered before the specified number of lines are skipped. This parameter is passed uninitialized.</param>
      <returns>A <see cref="T:System.Windows.Documents.TextPointer" /> pointing to the beginning of the specified line (with the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> set to <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />), or to the beginning of the line closest to the specified line if the specified line is out of range.</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetNextContextPosition(System.Windows.Documents.LogicalDirection)">
      <summary>Returns a pointer to the next symbol in the specified logical direction.</summary>
      <param name="direction">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the next symbol.</param>
      <returns>A <see cref="T:System.Windows.Documents.TextPointer" /> to the next symbol in the requested direction, or <see langword="null" /> if the current <see cref="T:System.Windows.Documents.TextPointer" /> borders the start or end of content.</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)">
      <summary>Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the next insertion position in the specified logical direction.</summary>
      <param name="direction">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the next insertion position.</param>
      <returns>A <see cref="T:System.Windows.Documents.TextPointer" /> that identifies the next insertion position in the requested direction, or <see langword="null" /> if no next insertion position can be found.</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)">
      <summary>Returns the count of symbols between the current <see cref="T:System.Windows.Documents.TextPointer" /> and a second specified <see cref="T:System.Windows.Documents.TextPointer" />.</summary>
      <param name="position">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to find the distance (in symbols) to.</param>
      <returns>The relative number of symbols between the current <see cref="T:System.Windows.Documents.TextPointer" /> and <paramref name="position" />.  A negative value indicates that the current <see cref="T:System.Windows.Documents.TextPointer" /> follows the position specified by <paramref name="position" />, 0 indicates that the positions are equal, and a positive value indicates that the current <see cref="T:System.Windows.Documents.TextPointer" /> precedes the position specified by <paramref name="position" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="position" /> specifies a position outside of the text container associated with the current position.</exception>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetPointerContext(System.Windows.Documents.LogicalDirection)">
      <summary>Returns a category indicator for the content adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</summary>
      <param name="direction">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to determine the category for adjacent content.</param>
      <returns>One of the <see cref="T:System.Windows.Documents.TextPointerContext" /> values that indicates the category for adjacent content in the specified logical direction.</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32)">
      <summary>Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of the current <see cref="T:System.Windows.Documents.TextPointer" />.</summary>
      <param name="offset">An offset, in symbols, for which to calculate and return the position.  If the offset is negative, the position is calculated in the logical direction opposite of that indicated by the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> property.</param>
      <returns>A <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, or <see langword="null" /> if no corresponding position can be found.</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32,System.Windows.Documents.LogicalDirection)">
      <summary>Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of the current <see cref="T:System.Windows.Documents.TextPointer" /> and in the specified direction.</summary>
      <param name="offset">An offset, in symbols, for which to calculate and return the position.  If the offset is negative, the returned <see cref="T:System.Windows.Documents.TextPointer" /> precedes the current <see cref="T:System.Windows.Documents.TextPointer" />; otherwise, it follows.</param>
      <param name="direction">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction of the returned <see cref="T:System.Windows.Documents.TextPointer" />.</param>
      <returns>A <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, or <see langword="null" /> if the offset extends past the end of the content.</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)">
      <summary>Returns a string containing any text adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</summary>
      <param name="direction">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find and return any adjacent text.</param>
      <returns>A string containing any adjacent text in the specified logical direction, or <see cref="F:System.String.Empty" /> if no adjacent text can be found.</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)">
      <summary>Copies the specified maximum number of characters from any adjacent text in the specified direction into a caller-supplied character array.</summary>
      <param name="direction">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find and copy any adjacent text.</param>
      <param name="textBuffer">A buffer into which any text is copied.</param>
      <param name="startIndex">An index into <paramref name="textBuffer" /> at which to begin writing copied text.</param>
      <param name="count">The maximum number of characters to copy.</param>
      <returns>The number of characters actually copied into <paramref name="textBuffer" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="startIndex" /> is less than 0 or greater than the <see cref="P:System.Array.Length" /> property of <paramref name="textBuffer" />.  
-or-  
<paramref name="count" /> is less than 0 or greater than the remaining space in <paramref name="textBuffer" /> (<paramref name="textBuffer" />.<see cref="P:System.Array.Length" /> minus <paramref name="startIndex" />).</exception>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetTextRunLength(System.Windows.Documents.LogicalDirection)">
      <summary>Returns the number of Unicode characters between the current <see cref="T:System.Windows.Documents.TextPointer" /> and the next non-text symbol, in the specified logical direction.</summary>
      <param name="direction">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to count the number of characters.</param>
      <returns>The number of Unicode characters between the current <see cref="T:System.Windows.Documents.TextPointer" /> and the next non-text symbol.  This number may be 0 if there is no adjacent text.</returns>
    </member>
    <member name="P:System.Windows.Documents.TextPointer.HasValidLayout">
      <summary>Gets a value that indicates whether the text container associated with the current position has a valid (up-to-date) layout.</summary>
      <returns>
        <see langword="true" /> if the layout is current and valid; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.InsertLineBreak">
      <summary>Inserts a line break at the current position.</summary>
      <returns>A <see cref="T:System.Windows.Documents.TextPointer" /> positioned immediately after the <see cref="T:System.Windows.Documents.LineBreak" /> element inserted by this method.</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.InsertParagraphBreak">
      <summary>Inserts a paragraph break at the current position.</summary>
      <returns>A <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning (<see cref="P:System.Windows.Documents.TextElement.ContentStart" />) of the new paragraph.</returns>
      <exception cref="T:System.InvalidOperationException">This method is called on a position that cannot be split to accommodate a new paragraph, such as in the scope of a <see cref="T:System.Windows.Documents.Hyperlink" /> or <see cref="T:System.Windows.Documents.InlineUIContainer" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)">
      <summary>Inserts the specified text into the text <see cref="T:System.Windows.Documents.Run" /> at the current position.</summary>
      <param name="textData">The text to insert.</param>
      <exception cref="T:System.InvalidOperationException">The current position is not within a <see cref="T:System.Windows.Documents.Run" /> element.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textData" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Documents.TextPointer.IsAtInsertionPosition">
      <summary>Gets a value that indicates whether the current position is an insertion position.</summary>
      <returns>
        <see langword="true" /> if the current position is an insertion position; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.TextPointer.IsAtLineStartPosition">
      <summary>Gets a value that indicates whether the current position is at the beginning of a line.</summary>
      <returns>
        <see langword="true" /> if the current position is at the beginning of a line; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)">
      <summary>Indicates whether the specified position is in the same text container as the current position.</summary>
      <param name="textPosition">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to compare to the current position.</param>
      <returns>
        <see langword="true" /> if <paramref name="textPosition" /> indicates a position that is in the same text container as the current position; otherwise, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textPosition" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Documents.TextPointer.LogicalDirection">
      <summary>Gets the logical direction associated with the current position which is used to disambiguate content associated with the current position.</summary>
      <returns>The <see cref="T:System.Windows.Documents.LogicalDirection" /> value that is associated with the current position.</returns>
    </member>
    <member name="P:System.Windows.Documents.TextPointer.Paragraph">
      <summary>Gets the paragraph that scopes the current position, if any.</summary>
      <returns>The <see cref="T:System.Windows.Documents.Paragraph" /> that scopes the current position, or <see langword="null" /> if no such paragraph exists.</returns>
    </member>
    <member name="P:System.Windows.Documents.TextPointer.Parent">
      <summary>Gets the logical parent that scopes the current position.</summary>
      <returns>The logical parent that scopes the current position.</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.ToString">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>The string that represents the object.</returns>
    </member>
    <member name="T:System.Windows.Documents.TextPointerContext">
      <summary>Determines the category of content that is adjacent to a <see cref="T:System.Windows.Documents.TextPointer" /> in a specified <see cref="T:System.Windows.Documents.LogicalDirection" />.</summary>
    </member>
    <member name="F:System.Windows.Documents.TextPointerContext.ElementEnd">
      <summary>The <see cref="T:System.Windows.Documents.TextPointer" /> is adjacent to the closing tag of a <see cref="T:System.Windows.Documents.TextElement" />.</summary>
    </member>
    <member name="F:System.Windows.Documents.TextPointerContext.ElementStart">
      <summary>The <see cref="T:System.Windows.Documents.TextPointer" /> is adjacent to the opening tag of a <see cref="T:System.Windows.Documents.TextElement" />.</summary>
    </member>
    <member name="F:System.Windows.Documents.TextPointerContext.EmbeddedElement">
      <summary>The <see cref="T:System.Windows.Documents.TextPointer" /> is adjacent to an embedded <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" />.</summary>
    </member>
    <member name="F:System.Windows.Documents.TextPointerContext.None">
      <summary>The <see cref="T:System.Windows.Documents.TextPointer" /> is adjacent to the beginning or end of content.</summary>
    </member>
    <member name="F:System.Windows.Documents.TextPointerContext.Text">
      <summary>The <see cref="T:System.Windows.Documents.TextPointer" /> is adjacent to text.</summary>
    </member>
    <member name="T:System.Windows.Documents.TextRange">
      <summary>Represents a selection of content between two <see cref="T:System.Windows.Documents.TextPointer" /> positions.</summary>
    </member>
    <member name="M:System.Windows.Documents.TextRange.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.TextRange" /> class, taking two specified <see cref="T:System.Windows.Documents.TextPointer" /> positions as the beginning and end positions for the new range.</summary>
      <param name="position1">A fixed anchor position that marks one end of the selection used to form the new <see cref="T:System.Windows.Documents.TextRange" />.</param>
      <param name="position2">A movable position that marks the other end of the selection used to form the new <see cref="T:System.Windows.Documents.TextRange" />.</param>
      <exception cref="T:System.ArgumentException">Occurs when <paramref name="position1" /> and <paramref name="position2" /> are not positioned within the same document.</exception>
      <exception cref="T:System.ArgumentNullException">Occurs when <paramref name="position1" /> or <paramref name="position2" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.TextRange.ApplyPropertyValue(System.Windows.DependencyProperty,System.Object)">
      <summary>Applies a specified formatting property and value to the current selection.</summary>
      <param name="formattingProperty">A formatting property to apply.</param>
      <param name="value">The value for the formatting property.</param>
      <exception cref="T:System.ArgumentException">Occurs when <paramref name="formattingProperty" /> does not specify a valid formatting property, or <paramref name="value" /> specifies an invalid value for <paramref name="formattingProperty" />.</exception>
      <exception cref="T:System.ArgumentNullException">Occurs when <paramref name="formattingProperty" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.TextRange.CanLoad(System.String)">
      <summary>Checks whether the current selection can be loaded with content in a specified data format.</summary>
      <param name="dataFormat">A data format to check for load-compatibility into the current selection.  See <see cref="T:System.Windows.DataFormats" /> for a list of predefined data formats.</param>
      <returns>
        <see langword="true" /> if the current selection can be loaded with content in the specified data format; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.TextRange.CanSave(System.String)">
      <summary>Checks whether the current selection can be saved as a specified data format.</summary>
      <param name="dataFormat">A data format to check for save compatibility with the current selection.  See <see cref="T:System.Windows.DataFormats" /> for a list of predefined data formats.</param>
      <returns>
        <see langword="true" /> if the current selection can be saved as the specified data format; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="E:System.Windows.Documents.TextRange.Changed">
      <summary>Occurs when the range is repositioned to cover a new span of content.</summary>
    </member>
    <member name="M:System.Windows.Documents.TextRange.ClearAllProperties">
      <summary>Removes all formatting properties (represented by <see cref="T:System.Windows.Documents.Inline" /> elements) from the current selection.</summary>
    </member>
    <member name="M:System.Windows.Documents.TextRange.Contains(System.Windows.Documents.TextPointer)">
      <summary>Checks whether a position (specified by a <see cref="T:System.Windows.Documents.TextPointer" />) is located within the current selection.</summary>
      <param name="textPointer">A position to test for inclusion in the current selection.</param>
      <returns>
        <see langword="true" /> if the specified position is located within the current selection; otherwise, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Occurs when textPointer is not in the same document as the current selection.</exception>
    </member>
    <member name="P:System.Windows.Documents.TextRange.End">
      <summary>Get the position that marks the end of the current selection.</summary>
      <returns>A <see cref="T:System.Windows.Documents.TextPointer" /> that points to the end of the current selection.</returns>
    </member>
    <member name="M:System.Windows.Documents.TextRange.GetPropertyValue(System.Windows.DependencyProperty)">
      <summary>Returns the effective value of a specified formatting property on the current selection.</summary>
      <param name="formattingProperty">A formatting property to get the value of with respect to the current selection.</param>
      <returns>An object specifying the value of the specified formatting property.</returns>
      <exception cref="T:System.ArgumentException">Occurs when <paramref name="formattingProperty" /> does not specify a valid formatting property, or <paramref name="value" /> specifies an invalid value for <paramref name="formattingProperty" />.</exception>
      <exception cref="T:System.ArgumentNullException">Occurs when <paramref name="formattingProperty" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Documents.TextRange.IsEmpty">
      <summary>Gets a value indicating whether or not the current selection is empty.</summary>
      <returns>
        <see langword="true" /> if the current selection is empty; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.TextRange.Load(System.IO.Stream,System.String)">
      <summary>Loads the current selection in a specified data format from a specified stream.</summary>
      <param name="stream">A readable stream that contains data to load into the current selection.</param>
      <param name="dataFormat">A data format to load the data as.  Currently supported data formats are <see cref="F:System.Windows.DataFormats.Rtf" />, <see cref="F:System.Windows.DataFormats.Text" />, <see cref="F:System.Windows.DataFormats.Xaml" />, and <see cref="F:System.Windows.DataFormats.XamlPackage" />.</param>
      <exception cref="T:System.ArgumentNullException">Occurs when <paramref name="stream" /> or <paramref name="dataFormat" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Occurs when the specified data format is unsupported.  May also be raised if content loaded from <paramref name="stream" /> does not match the specified data format.</exception>
    </member>
    <member name="M:System.Windows.Documents.TextRange.Save(System.IO.Stream,System.String)">
      <summary>Saves the current selection to a specified stream in a specified data format.</summary>
      <param name="stream">An empty, writable stream to save the current selection to.</param>
      <param name="dataFormat">A data format to save the current selection as.  Currently supported data formats are <see cref="F:System.Windows.DataFormats.Rtf" />, <see cref="F:System.Windows.DataFormats.Text" />, <see cref="F:System.Windows.DataFormats.Xaml" />, and <see cref="F:System.Windows.DataFormats.XamlPackage" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> or <paramref name="dataFormat" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">The specified data format is unsupported.  
 -or  
 Content loaded from <paramref name="stream" /> does not match the specified data format.</exception>
    </member>
    <member name="M:System.Windows.Documents.TextRange.Save(System.IO.Stream,System.String,System.Boolean)">
      <summary>Saves the current selection to a specified stream in a specified data format, with the option of preserving custom <see cref="T:System.Windows.Documents.TextElement" /> objects.</summary>
      <param name="stream">An empty, writable stream to save the current selection to.</param>
      <param name="dataFormat">A data format to save the current selection as.  Currently supported data formats are <see cref="F:System.Windows.DataFormats.Rtf" />, <see cref="F:System.Windows.DataFormats.Text" />, <see cref="F:System.Windows.DataFormats.Xaml" />, and <see cref="F:System.Windows.DataFormats.XamlPackage" />.</param>
      <param name="preserveTextElements">
        <see langword="true" /> to preserve custom <see cref="T:System.Windows.Documents.TextElement" /> objects; otherwise, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">Occurs when <paramref name="stream" /> or <paramref name="dataFormat" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Occurs when the specified data format is unsupported.  May also be raised if content loaded from <paramref name="stream" /> does not match the specified data format.</exception>
    </member>
    <member name="M:System.Windows.Documents.TextRange.Select(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)">
      <summary>Updates the current selection, taking two <see cref="T:System.Windows.Documents.TextPointer" /> positions to indicate the updated selection.</summary>
      <param name="position1">A fixed anchor position that marks one end of the updated selection.</param>
      <param name="position2">A movable position that marks the other end of the updated selection.</param>
      <exception cref="T:System.ArgumentException">Occurs when <paramref name="position1" /> and <paramref name="position2" /> are not positioned within the same document.</exception>
      <exception cref="T:System.ArgumentNullException">Occurs when <paramref name="position1" /> or <paramref name="position2" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Documents.TextRange.Start">
      <summary>Gets the position that marks the beginning of the current selection.</summary>
      <returns>A <see cref="T:System.Windows.Documents.TextPointer" /> that points to the beginning of the current selection.</returns>
    </member>
    <member name="P:System.Windows.Documents.TextRange.Text">
      <summary>Gets or sets the plain text contents of the current selection.</summary>
      <returns>A string containing the plain text contents of the current selection.</returns>
      <exception cref="T:System.ArgumentNullException">Occurs when an attempt is made to set this property to <see langword="null" />.</exception>
    </member>
    <member name="T:System.Windows.Documents.TextSelection">
      <summary>Encapsulates the selection state for the <see cref="T:System.Windows.Controls.RichTextBox" /> control.</summary>
    </member>
    <member name="T:System.Windows.Documents.Typography">
      <summary>Provides access to a rich set of OpenType typography properties.</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.AnnotationAlternates">
      <summary>Gets or sets a value that specifies the index of an alternate annotation form.</summary>
      <returns>The index of the alternate annotation form. The default value is 0 (zero).</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.AnnotationAlternatesProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.AnnotationAlternates" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.Capitals">
      <summary>Gets or sets a <see cref="T:System.Windows.FontCapitals" /> enumerated value that indicates the capital form of the selected font.</summary>
      <returns>A <see cref="T:System.Windows.FontCapitals" /> enumerated value. The default value is <see cref="F:System.Windows.FontCapitals.Normal" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.CapitalSpacing">
      <summary>Gets or sets a value that determines whether inter-glyph spacing for all-capital text is globally adjusted to improve readability.</summary>
      <returns>
        <see langword="true" /> if spacing is adjusted; otherwise, <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.CapitalSpacingProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.CapitalSpacing" /> attached property.</summary>
    </member>
    <member name="F:System.Windows.Documents.Typography.CapitalsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.Capitals" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.CaseSensitiveForms">
      <summary>Gets or sets a value that determines whether glyphs adjust their vertical position to better align with uppercase glyphs.</summary>
      <returns>
        <see langword="true" /> if the vertical position is adjusted; otherwise, <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.CaseSensitiveFormsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.CaseSensitiveForms" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.ContextualAlternates">
      <summary>Gets or sets a value that determines whether custom glyph forms can be used based upon the context of the text being rendered.</summary>
      <returns>
        <see langword="true" /> if custom glyph forms can be used; otherwise, <see langword="false" />. The default value is <see langword="true" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.ContextualAlternatesProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.ContextualAlternates" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.ContextualLigatures">
      <summary>Gets or sets a value that determines whether contextual ligatures are enabled.</summary>
      <returns>
        <see langword="true" /> if contextual ligatures are enabled; otherwise, <see langword="false" />. The default value is <see langword="true" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.ContextualLigaturesProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.ContextualLigatures" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.ContextualSwashes">
      <summary>Gets or sets a value that specifies the index of a contextual swashes form.</summary>
      <returns>The index of the standard swashes form. The default value is 0 (zero).</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.ContextualSwashesProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.ContextualSwashes" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.DiscretionaryLigatures">
      <summary>Gets or sets a value that determines whether discretionary ligatures are enabled.</summary>
      <returns>
        <see langword="true" /> if discretionary ligatures are enabled; otherwise, <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.DiscretionaryLigaturesProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.DiscretionaryLigatures" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.EastAsianExpertForms">
      <summary>Gets or sets a value that determines whether the standard Japanese font forms have been replaced with the corresponding preferred typographic forms.</summary>
      <returns>
        <see langword="true" /> if standard Japanese font forms have been replaced with the corresponding preferred typographic forms; otherwise, <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.EastAsianExpertFormsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.EastAsianExpertForms" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.EastAsianLanguage">
      <summary>Gets or sets a <see cref="T:System.Windows.FontEastAsianLanguage" /> enumerated value that indicates the version of glyphs to be used for a specific writing system or language.</summary>
      <returns>A <see cref="T:System.Windows.FontEastAsianLanguage" /> enumerated value. The default value is <see cref="F:System.Windows.FontEastAsianLanguage.Normal" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.EastAsianLanguageProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.EastAsianLanguage" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.EastAsianWidths">
      <summary>Gets or sets a <see cref="T:System.Windows.FontEastAsianWidths" /> enumerated value that indicates the proportional width to be used for Latin characters in an East Asian font.</summary>
      <returns>A <see cref="T:System.Windows.FontEastAsianWidths" /> enumerated value. The default value is <see cref="F:System.Windows.FontEastAsianWidths.Normal" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.EastAsianWidthsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.EastAsianWidths" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.Fraction">
      <summary>Gets or sets a <see cref="T:System.Windows.FontFraction" /> enumerated value that indicates the fraction style.</summary>
      <returns>A <see cref="T:System.Windows.FontFraction" /> enumerated value. The default value is <see cref="F:System.Windows.FontFraction.Normal" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.FractionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.Fraction" /> attached property.</summary>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetAnnotationAlternates(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.AnnotationAlternates" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.AnnotationAlternates" /> property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.TextElement.FontFamily" /> attached property on the specified dependency object.</returns>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetCapitals(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.Capitals" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.Capitals" /> property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.Capitals" /> attached property on the specified dependency object.</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetCapitalSpacing(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.CapitalSpacing" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.CapitalSpacing" /> property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.CapitalSpacing" /> attached property on the specified dependency object.</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetCaseSensitiveForms(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.CaseSensitiveForms" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.CaseSensitiveForms" /> property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.CaseSensitiveForms" /> attached property on the specified dependency object.</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetContextualAlternates(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.ContextualAlternates" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.ContextualAlternates" /> property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.ContextualAlternates" /> attached property on the specified dependency object.</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetContextualLigatures(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.ContextualLigatures" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.ContextualLigatures" /> property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.ContextualLigatures" /> attached property on the specified dependency object.</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetContextualSwashes(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.ContextualSwashes" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.ContextualSwashes" /> property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.ContextualSwashes" /> attached property on the specified dependency object.</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetDiscretionaryLigatures(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.DiscretionaryLigatures" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.DiscretionaryLigatures" /> property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.DiscretionaryLigatures" /> attached property on the specified dependency object.</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetEastAsianExpertForms(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.EastAsianExpertForms" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.EastAsianExpertForms" /> property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.EastAsianExpertForms" /> attached property on the specified dependency object.</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetEastAsianLanguage(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.EastAsianLanguage" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.EastAsianLanguage" /> property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.EastAsianLanguage" /> attached property on the specified dependency object.</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetEastAsianWidths(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.EastAsianWidths" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.EastAsianWidths" /> property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.EastAsianWidths" /> attached property on the specified dependency object.</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetFraction(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.Fraction" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.Fraction" /> property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.Fraction" /> attached property on the specified dependency object.</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetHistoricalForms(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.HistoricalForms" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.HistoricalForms" /> property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.HistoricalForms" /> attached property on the specified dependency object.</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetHistoricalLigatures(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.HistoricalLigatures" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.HistoricalLigatures" /> property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.HistoricalLigatures" /> attached property on the specified dependency object.</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetKerning(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.Kerning" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.Kerning" /> property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.Kerning" /> attached property on the specified dependency object.</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetMathematicalGreek(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.MathematicalGreek" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.MathematicalGreek" /> property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.MathematicalGreek" /> attached property on the specified dependency object.</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetNumeralAlignment(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.NumeralAlignment" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.NumeralAlignment" /> property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.NumeralAlignment" /> attached property on the specified dependency object.</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetNumeralStyle(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.NumeralStyle" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.NumeralStyle" /> property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.NumeralStyle" /> attached property on the specified dependency object.</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetSlashedZero(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.SlashedZero" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.SlashedZero" /> property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.SlashedZero" /> attached property on the specified dependency object.</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStandardLigatures(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StandardLigatures" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StandardLigatures" /> property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StandardLigatures" /> attached property on the specified dependency object.</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStandardSwashes(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StandardSwashes" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StandardSwashes" /> property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StandardSwashes" /> attached property on the specified dependency object.</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticAlternates(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticAlternates" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticAlternates" /> property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticAlternates" /> attached property on the specified dependency object.</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet1(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet1" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet1" /> property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet1" /> attached property on the specified dependency object.</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet10(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet10" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet10" /> property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet10" /> attached property on the specified dependency object.</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet11(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet11" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet11" /> property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet11" /> attached property on the specified dependency object.</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet12(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet12" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet12" /> property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet12" /> attached property on the specified dependency object.</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet13(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet13" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet13" /> property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet13" /> attached property on the specified dependency object.</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet14(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet14" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet14" /> property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet14" /> attached property on the specified dependency object.</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet15(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet15" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet15" /> property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet15" /> attached property on the specified dependency object.</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet16(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet16" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet16" /> property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet16" /> attached property on the specified dependency object.</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet17(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet17" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet17" /> property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet17" /> attached property on the specified dependency object.</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet18(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet18" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet18" /> property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet18" /> attached property on the specified dependency object.</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet19(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet19" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet19" /> property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet19" /> attached property on the specified dependency object.</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet2(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet2" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet2" /> property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet2" /> attached property on the specified dependency object.</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet20(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet20" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet20" /> property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet20" /> attached property on the specified dependency object.</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet3(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet3" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet3" /> property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet3" /> attached property on the specified dependency object.</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet4(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet4" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet4" /> property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet4" /> attached property on the specified dependency object.</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet5(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet5" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet5" /> property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet5" /> attached property on the specified dependency object.</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet6(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet6" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet6" /> property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet6" /> attached property on the specified dependency object.</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet7(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet7" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet7" /> property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet7" /> attached property on the specified dependency object.</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet8(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> attached property on the specified dependency object.</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet9(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> attached property on the specified dependency object.</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetVariants(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.Variants" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.Variants" /> property.</param>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.Variants" /> attached property on the specified dependency object.</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.HistoricalForms">
      <summary>Gets or sets a value that determines whether historical forms are enabled.</summary>
      <returns>
        <see langword="true" /> if historical forms are enabled; otherwise, <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.HistoricalFormsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.HistoricalForms" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.HistoricalLigatures">
      <summary>Gets or sets a value that indicates whether historical ligatures are enabled.</summary>
      <returns>
        <see langword="true" /> if historical ligatures are enabled; otherwise, <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.HistoricalLigaturesProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.HistoricalLigatures" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.Kerning">
      <summary>Gets or sets a value that indicates whether kerning is enabled.</summary>
      <returns>
        <see langword="true" /> if kerning is enabled; otherwise, <see langword="false" />. The default value is <see langword="true" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.KerningProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.Kerning" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.MathematicalGreek">
      <summary>Gets or sets a value that indicates whether standard typographic font forms of Greek glyphs have been replaced with corresponding font forms commonly used in mathematical notation.</summary>
      <returns>
        <see langword="true" /> if mathematical Greek forms are enabled; otherwise, <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.MathematicalGreekProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.MathematicalGreek" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.NumeralAlignment">
      <summary>Gets or sets a <see cref="T:System.Windows.FontNumeralAlignment" /> enumerated value that indicates the alignment of widths when using numerals.</summary>
      <returns>A <see cref="T:System.Windows.FontNumeralAlignment" /> enumerated value. The default value is <see cref="F:System.Windows.FontNumeralAlignment.Normal" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.NumeralAlignmentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.NumeralAlignment" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.NumeralStyle">
      <summary>Gets or sets a <see cref="T:System.Windows.FontNumeralStyle" /> enumerated value that determines the set of glyphs that are used to render numeric alternate font forms.</summary>
      <returns>A <see cref="T:System.Windows.FontNumeralStyle" /> enumerated value. The default value is <see cref="F:System.Windows.FontNumeralStyle.Normal" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.NumeralStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.NumeralStyle" /> attached property.</summary>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetAnnotationAlternates(System.Windows.DependencyObject,System.Int32)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.AnnotationAlternates" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.AnnotationAlternates" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetCapitals(System.Windows.DependencyObject,System.Windows.FontCapitals)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.Capitals" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.Capitals" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetCapitalSpacing(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.CapitalSpacing" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.CapitalSpacing" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetCaseSensitiveForms(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.CaseSensitiveForms" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.CaseSensitiveForms" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetContextualAlternates(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.ContextualAlternates" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.ContextualAlternates" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetContextualLigatures(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.ContextualLigatures" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.ContextualLigatures" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetContextualSwashes(System.Windows.DependencyObject,System.Int32)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.ContextualSwashes" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.ContextualSwashes" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetDiscretionaryLigatures(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.DiscretionaryLigatures" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.DiscretionaryLigatures" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetEastAsianExpertForms(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.EastAsianExpertForms" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.EastAsianExpertForms" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetEastAsianLanguage(System.Windows.DependencyObject,System.Windows.FontEastAsianLanguage)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.EastAsianLanguage" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.EastAsianLanguage" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetEastAsianWidths(System.Windows.DependencyObject,System.Windows.FontEastAsianWidths)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.EastAsianWidths" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.EastAsianWidths" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetFraction(System.Windows.DependencyObject,System.Windows.FontFraction)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.Fraction" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.Fraction" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetHistoricalForms(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.HistoricalForms" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.HistoricalForms" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetHistoricalLigatures(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.HistoricalLigatures" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.HistoricalLigatures" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetKerning(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.Kerning" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.Kerning" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetMathematicalGreek(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.MathematicalGreek" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.MathematicalGreek" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetNumeralAlignment(System.Windows.DependencyObject,System.Windows.FontNumeralAlignment)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.NumeralAlignment" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.NumeralAlignment" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetNumeralStyle(System.Windows.DependencyObject,System.Windows.FontNumeralStyle)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.NumeralStyle" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.NumeralStyle" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetSlashedZero(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.SlashedZero" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.SlashedZero" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStandardLigatures(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StandardLigatures" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StandardLigatures" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStandardSwashes(System.Windows.DependencyObject,System.Int32)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StandardSwashes" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StandardSwashes" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticAlternates(System.Windows.DependencyObject,System.Int32)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticAlternates" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticAlternates" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet1(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet1" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet1" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet10(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet10" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet10" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet11(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet11" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet11" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet12(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet12" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet12" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet13(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet13" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet13" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet14(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet14" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet14" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet15(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet15" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet15" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet16(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet16" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet16" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet17(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet17" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet17" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet18(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet18" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet18" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet19(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet19" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet19" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet2(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet2" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet2" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet20(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet20" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet20" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet3(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet3" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet3" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet4(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet4" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet4" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet5(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet5" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet5" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet6(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet6" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet6" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet7(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet7" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet7" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet8(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet9(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet9" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet9" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetVariants(System.Windows.DependencyObject,System.Windows.FontVariants)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.Variants" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.Variants" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Documents.Typography.SlashedZero">
      <summary>Gets or sets a value that indicates whether a nominal zero font form should be replaced with a slashed zero.</summary>
      <returns>
        <see langword="true" /> if slashed zero forms are enabled; otherwise, <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.SlashedZeroProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.SlashedZero" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.StandardLigatures">
      <summary>Gets or sets a value that indicates whether standard ligatures are enabled.</summary>
      <returns>
        <see langword="true" /> if standard ligatures are enabled; otherwise, <see langword="false" />. The default value is <see langword="true" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StandardLigaturesProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.StandardLigatures" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.StandardSwashes">
      <summary>Gets or sets a value that specifies the index of a standard swashes form.</summary>
      <returns>The index of the standard swashes form. The default value is 0 (zero).</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StandardSwashesProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.StandardSwashes" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticAlternates">
      <summary>Gets or sets a value that specifies the index of a stylistic alternates form.</summary>
      <returns>The index of the stylistic alternates form. The default value is 0 (zero).</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticAlternatesProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.StylisticAlternates" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet1">
      <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
      <returns>
        <see langword="true" /> if the stylistic set of the font form is enabled; otherwise, <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet10">
      <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
      <returns>
        <see langword="true" /> if the stylistic set of the font form is enabled; otherwise, <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet10Property">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.StylisticSet10" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet11">
      <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
      <returns>
        <see langword="true" /> if the stylistic set of the font form is enabled; otherwise, <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet11Property">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.StylisticSet11" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet12">
      <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
      <returns>
        <see langword="true" /> if the stylistic set of the font form is enabled; otherwise, <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet12Property">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.StylisticSet12" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet13">
      <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
      <returns>
        <see langword="true" /> if the stylistic set of the font form is enabled; otherwise, <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet13Property">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.StylisticSet13" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet14">
      <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
      <returns>
        <see langword="true" /> if the stylistic set of the font form is enabled; otherwise, <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet14Property">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.StylisticSet14" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet15">
      <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
      <returns>
        <see langword="true" /> if the stylistic set of the font form is enabled; otherwise, <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet15Property">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.StylisticSet15" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet16">
      <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
      <returns>
        <see langword="true" /> if the stylistic set of the font form is enabled; otherwise, <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet16Property">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.StylisticSet16" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet17">
      <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
      <returns>
        <see langword="true" /> if the stylistic set of the font form is enabled; otherwise, <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet17Property">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.StylisticSet17" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet18">
      <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
      <returns>
        <see langword="true" /> if the stylistic set of the font form is enabled; otherwise, <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet18Property">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.StylisticSet18" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet19">
      <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
      <returns>
        <see langword="true" /> if the stylistic set of the font form is enabled; otherwise, <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet19Property">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.StylisticSet19" /> attached property.</summary>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet1Property">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.StylisticSet1" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet2">
      <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
      <returns>
        <see langword="true" /> if the stylistic set of the font form is enabled; otherwise, <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet20">
      <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
      <returns>
        <see langword="true" /> if the stylistic set of the font form is enabled; otherwise, <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet20Property">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.StylisticSet20" /> attached property.</summary>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet2Property">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.StylisticSet2" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet3">
      <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
      <returns>
        <see langword="true" /> if the stylistic set of the font form is enabled; otherwise, <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet3Property">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.StylisticSet3" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet4">
      <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
      <returns>
        <see langword="true" /> if the stylistic set of the font form is enabled; otherwise, <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet4Property">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.StylisticSet4" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet5">
      <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
      <returns>
        <see langword="true" /> if the stylistic set of the font form is enabled; otherwise, <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet5Property">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.StylisticSet5" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet6">
      <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
      <returns>
        <see langword="true" /> if the stylistic set of the font form is enabled; otherwise, <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet6Property">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.StylisticSet6" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet7">
      <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
      <returns>
        <see langword="true" /> if the stylistic set of the font form is enabled; otherwise, <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet7Property">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.StylisticSet7" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet8">
      <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
      <returns>
        <see langword="true" /> if the stylistic set of the font form is enabled; otherwise, <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet8Property">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet9">
      <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
      <returns>
        <see langword="true" /> if the stylistic set of the font form is enabled; otherwise, <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet9Property">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.StylisticSet9" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.Variants">
      <summary>Gets or sets a <see cref="T:System.Windows.FontVariants" /> enumerated value that indicates a variation of the standard typographic form to be used.</summary>
      <returns>A <see cref="T:System.Windows.FontVariants" /> enumerated value. The default value is <see cref="F:System.Windows.FontVariants.Normal" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.VariantsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.Variants" /> attached property.</summary>
    </member>
    <member name="T:System.Windows.Documents.Underline">
      <summary>An inline-level flow content element which causes content to render with an underlined text decoration.</summary>
    </member>
    <member name="M:System.Windows.Documents.Underline.#ctor">
      <summary>Initializes a new, empty instance of the <see cref="T:System.Windows.Documents.Underline" /> class.</summary>
    </member>
    <member name="M:System.Windows.Documents.Underline.#ctor(System.Windows.Documents.Inline)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Underline" /> class, taking a specified <see cref="T:System.Windows.Documents.Inline" /> object as the initial contents of the new <see cref="T:System.Windows.Documents.Underline" />.</summary>
      <param name="childInline">An <see cref="T:System.Windows.Documents.Inline" /> object specifying the initial contents of the new <see cref="T:System.Windows.Documents.Underline" />.</param>
    </member>
    <member name="M:System.Windows.Documents.Underline.#ctor(System.Windows.Documents.Inline,System.Windows.Documents.TextPointer)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Underline" /> class, taking a specified <see cref="T:System.Windows.Documents.Inline" /> object as the initial contents of the new <see cref="T:System.Windows.Documents.Underline" />, and a <see cref="T:System.Windows.Documents.TextPointer" /> specifying an insertion position for the new <see cref="T:System.Windows.Documents.Inline" /> element.</summary>
      <param name="childInline">An <see cref="T:System.Windows.Documents.Inline" /> object specifying the initial contents of the new <see cref="T:System.Windows.Documents.Underline" />.  This parameter may be <see langword="null" />, in which case no <see cref="T:System.Windows.Documents.Inline" /> is inserted.</param>
      <param name="insertionPosition">A <see cref="T:System.Windows.Documents.TextPointer" /> specifying an insertion position at which to insert the <see cref="T:System.Windows.Documents.Underline" /> element after it is created, or <see langword="null" /> for no automatic insertion.</param>
    </member>
    <member name="M:System.Windows.Documents.Underline.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Underline" /> class, taking two <see cref="T:System.Windows.Documents.TextPointer" /> objects that indicate the beginning and end of a selection of content to be contained by the new <see cref="T:System.Windows.Documents.Underline" />.</summary>
      <param name="start">A <see cref="T:System.Windows.Documents.TextPointer" /> indicating the beginning of a selection of content to be contained by the new <see cref="T:System.Windows.Documents.Underline" />.</param>
      <param name="end">A <see cref="T:System.Windows.Documents.TextPointer" /> indicating the end of a selection of content to be contained by the new <see cref="T:System.Windows.Documents.Underline" />.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="start" /> or <paramref name="end" /> is null.</exception>
      <exception cref="T:System.ArgumentException">Raised when <paramref name="start" /> and <paramref name="end" /> do not resolve to a range of content suitable for enclosure by a <see cref="T:System.Windows.Documents.Underline" /> element, for example, if <paramref name="start" /> and <paramref name="end" /> indicate positions in different paragraphs.</exception>
    </member>
    <member name="T:System.Windows.Documents.ZoomPercentageConverter">
      <summary>Implements a type converter for converting <see cref="T:System.Double" /> (used as the value of <see cref="P:System.Windows.Controls.DocumentViewer.Zoom" />) to and from other types.</summary>
    </member>
    <member name="M:System.Windows.Documents.ZoomPercentageConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.ZoomPercentageConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Documents.ZoomPercentageConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts the <see cref="T:System.Double" /> (used as the value of <see cref="P:System.Windows.Controls.DocumentViewer.Zoom" />) to an object of the specified type.</summary>
      <param name="value">The current value of <see cref="P:System.Windows.Controls.DocumentViewer.Zoom" />.</param>
      <param name="targetType">The type to which <paramref name="value" /> is to be converted. This must be <see cref="T:System.Double" /> or <see cref="T:System.String" />.</param>
      <param name="parameter">
        <see langword="null" />.</param>
      <param name="culture">The language and culture assumed during the conversion.</param>
      <returns>
        <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> when the converter cannot produce a value; for example, when <paramref name="value" /> is <see langword="null" /> or when <paramref name="targetType" /> is not <see cref="T:System.Double" /> or <see cref="T:System.String" />.  
-or-
 The new <see cref="T:System.Object" /> of the designated type. As implemented in this class, this must be either a <see cref="T:System.Double" /> or a <see cref="T:System.String" />. If it is a string, it will be formatted appropriately for the <paramref name="culture" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.ZoomPercentageConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Returns a previously converted value of <see cref="P:System.Windows.Controls.DocumentViewer.Zoom" /> back to a <see cref="T:System.Double" /> that can be assigned to <see cref="P:System.Windows.Controls.DocumentViewer.Zoom" />.</summary>
      <param name="value">The object that is to be converted back to a <see cref="T:System.Double" />.</param>
      <param name="targetType">The type of <paramref name="value" />. This must be <see cref="T:System.Double" /> or <see cref="T:System.String" />.</param>
      <param name="parameter">
        <see langword="null" />.</param>
      <param name="culture">The language and culture assumed during the conversion.</param>
      <returns>
        <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> when the converter cannot produce a value; for example, when <paramref name="value" /> is not a valid percentage when <paramref name="targetType" /> is not <see cref="T:System.Double" /> or <see cref="T:System.String" />.  
-or-
 A <see cref="T:System.Double" /> representing the zoom percentage of a <see cref="T:System.Windows.Controls.DocumentViewer" />.</returns>
    </member>
    <member name="T:System.Windows.DynamicResourceExtension">
      <summary>Implements a markup extension that supports dynamic resource references made from XAML.</summary>
    </member>
    <member name="M:System.Windows.DynamicResourceExtension.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.DynamicResourceExtension" /> class.</summary>
    </member>
    <member name="M:System.Windows.DynamicResourceExtension.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.DynamicResourceExtension" /> class, with the provided initial key.</summary>
      <param name="resourceKey">The key of the resource that this markup extension references.</param>
    </member>
    <member name="M:System.Windows.DynamicResourceExtension.ProvideValue(System.IServiceProvider)">
      <summary>Returns an object that should be set on the property where this extension is applied. For <see cref="T:System.Windows.DynamicResourceExtension" />, this is the object found in a resource dictionary in the current parent chain that is keyed by the <see cref="P:System.Windows.DynamicResourceExtension.ResourceKey" />.</summary>
      <param name="serviceProvider">Object that can provide services for the markup extension.</param>
      <returns>The object to set on the property where the extension is applied. Rather than the actual value, this will be an expression that will be evaluated at a later time.</returns>
      <exception cref="T:System.InvalidOperationException">Attempted to provide a value for an extension that did not provide a <paramref name="resourceKey" />.</exception>
    </member>
    <member name="P:System.Windows.DynamicResourceExtension.ResourceKey">
      <summary>Gets or sets the key specified by this dynamic resource reference. The key is used to lookup a resource in resource dictionaries, by means of an intermediate expression.</summary>
      <returns>The resource key that this dynamic resource reference specifies.</returns>
    </member>
    <member name="T:System.Windows.DynamicResourceExtensionConverter">
      <summary>Converts from parsed XAML to <see cref="T:System.Windows.DynamicResourceExtension" /> and supports dynamic resource references made from XAML.</summary>
    </member>
    <member name="M:System.Windows.DynamicResourceExtensionConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.DynamicResourceExtensionConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.DynamicResourceExtensionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns a value indicating whether this converter can convert an object to the given destination type using the context.</summary>
      <param name="context">Context in which the provided type should be evaluated.</param>
      <param name="destinationType">The type of the destination/output of conversion.</param>
      <returns>
        <see langword="true" /> if <paramref name="destinationType" /> is type of <see cref="T:System.ComponentModel.Design.Serialization.InstanceDescriptor" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DynamicResourceExtensionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the specified object to another type.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that provides a format context.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> object that specifies the culture to represent the number.</param>
      <param name="value">Value to be converted. This is expected to be type <see cref="T:System.Windows.DynamicResourceExtension" />.</param>
      <param name="destinationType">Type that should be converted to.</param>
      <returns>The returned converted object. Cast this to the requested type. Ordinarily this should be cast to <see cref="T:System.ComponentModel.Design.Serialization.InstanceDescriptor" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> could not be assigned as <see cref="T:System.Windows.DynamicResourceExtension" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is <see langword="null" />.</exception>
    </member>
    <member name="T:System.Windows.EventSetter">
      <summary>Represents an event setter in a style. Event setters invoke the specified event handlers in response to events.</summary>
    </member>
    <member name="M:System.Windows.EventSetter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.EventSetter" /> class.</summary>
    </member>
    <member name="M:System.Windows.EventSetter.#ctor(System.Windows.RoutedEvent,System.Delegate)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.EventSetter" /> class, using the provided event and handler parameters.</summary>
      <param name="routedEvent">The particular routed event that the <see cref="T:System.Windows.EventSetter" /> responds to.</param>
      <param name="handler">The handler to assign in this setter.</param>
    </member>
    <member name="P:System.Windows.EventSetter.Event">
      <summary>Gets or sets the particular routed event that this <see cref="T:System.Windows.EventSetter" /> responds to.</summary>
      <returns>The identifier field of the routed event.</returns>
      <exception cref="T:System.InvalidOperationException">Attempted to set this property on a sealed <see cref="T:System.Windows.EventSetter" /> .</exception>
    </member>
    <member name="P:System.Windows.EventSetter.HandledEventsToo">
      <summary>Gets or sets a value that determines whether the handler assigned to the setter should still be invoked, even if the event is marked handled in its event data.</summary>
      <returns>
        <see langword="true" /> if the handler should still be invoked; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.EventSetter.Handler">
      <summary>Gets or sets the reference to a handler for a routed event in the setter.</summary>
      <returns>Reference to the handler that is attached by this <see cref="T:System.Windows.EventSetter" />.</returns>
    </member>
    <member name="T:System.Windows.EventTrigger">
      <summary>Represents a trigger that applies a set of actions in response to an event.</summary>
    </member>
    <member name="M:System.Windows.EventTrigger.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.EventTrigger" /> class.</summary>
    </member>
    <member name="M:System.Windows.EventTrigger.#ctor(System.Windows.RoutedEvent)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.EventTrigger" /> class with the specified event.</summary>
      <param name="routedEvent">The <see cref="T:System.Windows.RoutedEvent" /> that activates this trigger.</param>
    </member>
    <member name="P:System.Windows.EventTrigger.Actions">
      <summary>Gets the collection of actions to apply when the event occurs.</summary>
      <returns>The default is an empty collection.</returns>
    </member>
    <member name="M:System.Windows.EventTrigger.AddChild(System.Object)">
      <summary>Adds the specified object to the <see cref="P:System.Windows.EventTrigger.Actions" /> collection of the current event trigger.</summary>
      <param name="value">A <see cref="T:System.Windows.TriggerAction" /> object to add to the <see cref="P:System.Windows.EventTrigger.Actions" /> collection of this trigger.</param>
    </member>
    <member name="M:System.Windows.EventTrigger.AddText(System.String)">
      <summary>This method is not supported and results in an exception.</summary>
      <param name="text">This parameter is not used.</param>
    </member>
    <member name="P:System.Windows.EventTrigger.RoutedEvent">
      <summary>Gets or sets the <see cref="T:System.Windows.RoutedEvent" /> that will activate this trigger.</summary>
      <returns>The default value is <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">The <see cref="P:System.Windows.EventTrigger.RoutedEvent" /> property cannot be null.</exception>
    </member>
    <member name="M:System.Windows.EventTrigger.ShouldSerializeActions">
      <summary>Returns whether serialization processes should serialize the effective value of the <see cref="P:System.Windows.EventTrigger.Actions" /> property on instances of this class.</summary>
      <returns>Returns <see langword="true" /> if the <see cref="P:System.Windows.EventTrigger.Actions" /> property value should be serialized; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.EventTrigger.SourceName">
      <summary>Gets or sets the name of the object with the event that activates this trigger. This is only used by element triggers or template triggers.</summary>
      <returns>The default value is <see langword="null" />. If this property value is <see langword="null" />, then the element being monitored for the raising of the event is the templated parent or the logical tree root.</returns>
      <exception cref="T:System.InvalidOperationException">After an <see cref="T:System.Windows.EventTrigger" /> is in use, it cannot be modified.</exception>
    </member>
    <member name="M:System.Windows.EventTrigger.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>Adds a child object.</summary>
      <param name="value">The child object to add.</param>
    </member>
    <member name="M:System.Windows.EventTrigger.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>Adds the text content of a node to the object.</summary>
      <param name="text">The text to add to the object.</param>
    </member>
    <member name="T:System.Windows.ExceptionRoutedEventArgs">
      <summary>Provides data for the  <see cref="T:System.Windows.Controls.Image" /> and <see cref="T:System.Windows.Controls.MediaElement" /> failed events.</summary>
    </member>
    <member name="P:System.Windows.ExceptionRoutedEventArgs.ErrorException">
      <summary>Gets the exception that caused the error condition.</summary>
      <returns>The exception that details the specific error condition.</returns>
      <exception cref="T:System.Security.SecurityException">The attempt to access the media file is denied.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The media file is not found.</exception>
      <exception cref="T:System.IO.FileFormatException">The media file format is not supported by any installed codec.  
 -or-  
 The file format is not recognized.</exception>
      <exception cref="T:System.NotSupportedException">Windows Media Player version 10 or later is not detected.  
 -or-  
 Video resources are insufficient for media playback.</exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">A COM error code appears.</exception>
    </member>
    <member name="T:System.Windows.ExitEventArgs">
      <summary>Event arguments for the <see cref="E:System.Windows.Application.Exit" /> event.</summary>
    </member>
    <member name="P:System.Windows.ExitEventArgs.ApplicationExitCode">
      <summary>Gets or sets the exit code that an application returns to the operating system when the application exits.</summary>
      <returns>The exit code that an application returns to the operating system when the application exits.</returns>
    </member>
    <member name="T:System.Windows.ExitEventHandler">
      <summary>Represents the method that handles the <see cref="E:System.Windows.Application.Exit" /> event.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.FigureHorizontalAnchor">
      <summary>Describes a position reference for a figure in a horizontal direction.</summary>
    </member>
    <member name="F:System.Windows.FigureHorizontalAnchor.ColumnCenter">
      <summary>Anchor the figure in the center of the column content area.</summary>
    </member>
    <member name="F:System.Windows.FigureHorizontalAnchor.ColumnLeft">
      <summary>Anchor the figure to the left of the column content area.</summary>
    </member>
    <member name="F:System.Windows.FigureHorizontalAnchor.ColumnRight">
      <summary>Anchor the figure to the right of the column content area.</summary>
    </member>
    <member name="F:System.Windows.FigureHorizontalAnchor.ContentCenter">
      <summary>Anchor the figure in the center of the page content area.</summary>
    </member>
    <member name="F:System.Windows.FigureHorizontalAnchor.ContentLeft">
      <summary>Anchor the figure to the left of the page content area.</summary>
    </member>
    <member name="F:System.Windows.FigureHorizontalAnchor.ContentRight">
      <summary>Anchor the figure to the right of the page content area.</summary>
    </member>
    <member name="F:System.Windows.FigureHorizontalAnchor.PageCenter">
      <summary>Anchor the figure in the center of the page area.</summary>
    </member>
    <member name="F:System.Windows.FigureHorizontalAnchor.PageLeft">
      <summary>Anchor the figure to the left of the page area.</summary>
    </member>
    <member name="F:System.Windows.FigureHorizontalAnchor.PageRight">
      <summary>Anchor the figure to the right of the page area.</summary>
    </member>
    <member name="T:System.Windows.FigureLength">
      <summary>Describes the height or width of a <see cref="T:System.Windows.Documents.Figure" />.</summary>
    </member>
    <member name="M:System.Windows.FigureLength.#ctor(System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.FigureLength" /> class with the specified number of pixels in length.</summary>
      <param name="pixels">The number of device-independent pixels (96 pixels-per-inch) that make up the length.</param>
    </member>
    <member name="M:System.Windows.FigureLength.#ctor(System.Double,System.Windows.FigureUnitType)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.FigureLength" /> class with the specified <see cref="P:System.Windows.FigureLength.Value" /> and <see cref="P:System.Windows.FigureLength.FigureUnitType" />.</summary>
      <param name="value">The <see cref="P:System.Windows.FigureLength.Value" /> of the <see cref="T:System.Windows.FigureLength" /> class.</param>
      <param name="type">The <see cref="P:System.Windows.FigureLength.Value" /> of the <see cref="P:System.Windows.FigureLength.FigureUnitType" /> class.</param>
    </member>
    <member name="M:System.Windows.FigureLength.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is a <see cref="T:System.Windows.FigureLength" /> and whether it is identical to this <see cref="T:System.Windows.FigureLength" />.</summary>
      <param name="oCompare">The <see cref="T:System.Object" /> to compare to this instance.</param>
      <returns>
        <see langword="true" /> if <paramref name="oCompare" /> is a <see cref="T:System.Windows.FigureLength" /> and is identical to this <see cref="T:System.Windows.FigureLength" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.FigureLength.Equals(System.Windows.FigureLength)">
      <summary>Compares two <see cref="T:System.Windows.FigureLength" /> structures for equality.</summary>
      <param name="figureLength">The <see cref="T:System.Windows.FigureLength" /> to compare to this instance.</param>
      <returns>
        <see langword="true" /> if <paramref name="figureLength" /> is identical to this <see cref="T:System.Windows.FigureLength" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.FigureLength.FigureUnitType">
      <summary>Gets the unit type of the <see cref="P:System.Windows.FigureLength.Value" />.</summary>
      <returns>The unit type of this <see cref="P:System.Windows.FigureLength.Value" />. The default value is <see cref="F:System.Windows.FigureUnitType.Auto" />.</returns>
    </member>
    <member name="M:System.Windows.FigureLength.GetHashCode">
      <summary>Returns the hash code for this <see cref="T:System.Windows.FigureLength" />.</summary>
      <returns>The hash code for this <see cref="T:System.Windows.FigureLength" /> structure.</returns>
    </member>
    <member name="P:System.Windows.FigureLength.IsAbsolute">
      <summary>Gets a value that determines whether this <see cref="T:System.Windows.FigureLength" /> holds an absolute value (in pixels).</summary>
      <returns>
        <see langword="true" /> if this <see cref="T:System.Windows.FigureLength" /> holds an absolute value (in pixels); otherwise, <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.FigureLength.IsAuto">
      <summary>Gets a value that determines whether this <see cref="T:System.Windows.FigureLength" /> is automatic (not specified).</summary>
      <returns>
        <see langword="true" /> if this <see cref="T:System.Windows.FigureLength" /> is automatic (not specified); otherwise, <see langword="false" />. The default value is <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.FigureLength.IsColumn">
      <summary>Gets a value that determines whether this <see cref="T:System.Windows.FigureLength" /> has a <see cref="T:System.Windows.FigureUnitType" /> property value of <see cref="F:System.Windows.FigureUnitType.Column" />.</summary>
      <returns>
        <see langword="true" /> if this <see cref="T:System.Windows.FigureLength" /> has a <see cref="T:System.Windows.FigureUnitType" /> property value of <see cref="F:System.Windows.FigureUnitType.Column" />; otherwise, <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.FigureLength.IsContent">
      <summary>Gets a value that determines whether this <see cref="T:System.Windows.FigureLength" /> has a <see cref="T:System.Windows.FigureUnitType" /> property value of <see cref="F:System.Windows.FigureUnitType.Content" />.</summary>
      <returns>Returns <see langword="true" /> if this <see cref="T:System.Windows.FigureLength" /> has a <see cref="T:System.Windows.FigureUnitType" /> property value of <see cref="F:System.Windows.FigureUnitType.Content" />; otherwise, <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.FigureLength.IsPage">
      <summary>Gets a value that determines whether this <see cref="T:System.Windows.FigureLength" /> has a <see cref="T:System.Windows.FigureUnitType" /> property value of <see cref="F:System.Windows.FigureUnitType.Page" />.</summary>
      <returns>
        <see langword="true" /> if this <see cref="T:System.Windows.FigureLength" /> has a <see cref="T:System.Windows.FigureUnitType" /> property value of <see cref="F:System.Windows.FigureUnitType.Page" />; otherwise, <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.FigureLength.op_Equality(System.Windows.FigureLength,System.Windows.FigureLength)">
      <summary>Compares two <see cref="T:System.Windows.FigureLength" /> structures for equality.</summary>
      <param name="fl1">The first <see cref="T:System.Windows.FigureLength" /> structure to compare.</param>
      <param name="fl2">The second <see cref="T:System.Windows.FigureLength" /> structure to compare.</param>
      <returns>
        <see langword="true" /> if <paramref name="fl1" /> and <paramref name="fl2" /> are equal; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.FigureLength.op_Inequality(System.Windows.FigureLength,System.Windows.FigureLength)">
      <summary>Compares two <see cref="T:System.Windows.FigureLength" /> structures for inequality.</summary>
      <param name="fl1">The first <see cref="T:System.Windows.FigureLength" /> structure to compare.</param>
      <param name="fl2">The second <see cref="T:System.Windows.FigureLength" /> structure to compare.</param>
      <returns>
        <see langword="true" /> if <paramref name="fl1" /> and <paramref name="fl2" /> are not equal; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.FigureLength.ToString">
      <summary>Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.FigureLength" />.</summary>
      <returns>A <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.FigureLength" />.</returns>
    </member>
    <member name="P:System.Windows.FigureLength.Value">
      <summary>Gets the value of this <see cref="T:System.Windows.FigureLength" />.</summary>
      <returns>The value of this <see cref="T:System.Windows.FigureLength" />. The default value is <c>1</c>.</returns>
    </member>
    <member name="T:System.Windows.FigureLengthConverter">
      <summary>Converts instances of other types to and from a <see cref="T:System.Windows.FigureLength" />.</summary>
    </member>
    <member name="M:System.Windows.FigureLengthConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.FigureLengthConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.FigureLengthConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Indicates whether an object can be converted from a given type to an instance of a <see cref="T:System.Windows.FigureLength" />.</summary>
      <param name="typeDescriptorContext">Describes the context information of a type.</param>
      <param name="sourceType">The source <see cref="T:System.Type" /> that is being queried for conversion support.</param>
      <returns>
        <see langword="true" /> if object of the specified type can be converted to a <see cref="T:System.Windows.FigureLength" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.FigureLengthConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether instances of <see cref="T:System.Windows.FigureLength" /> can be converted to the specified type.</summary>
      <param name="typeDescriptorContext">Describes the context information of a type.</param>
      <param name="destinationType">The desired type this <see cref="T:System.Windows.FigureLength" /> is being evaluated to be converted to.</param>
      <returns>
        <see langword="true" /> if instances of <see cref="T:System.Windows.FigureLength" /> can be converted to <paramref name="destinationType" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.FigureLengthConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the specified object to a <see cref="T:System.Windows.FigureLength" />.</summary>
      <param name="typeDescriptorContext">Describes the context information of a type.</param>
      <param name="cultureInfo">Describes the <see cref="T:System.Globalization.CultureInfo" /> of the type being converted.</param>
      <param name="source">The object being converted.</param>
      <returns>The <see cref="T:System.Windows.FigureLength" /> created from converting <paramref name="source" />.</returns>
    </member>
    <member name="M:System.Windows.FigureLengthConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the specified <see cref="T:System.Windows.FigureLength" /> to the specified type.</summary>
      <param name="typeDescriptorContext">Describes the context information of a type.</param>
      <param name="cultureInfo">Describes the <see cref="T:System.Globalization.CultureInfo" /> of the type being converted.</param>
      <param name="value">The <see cref="T:System.Windows.FigureLength" /> to convert.</param>
      <param name="destinationType">The type to convert the <see cref="T:System.Windows.FigureLength" /> to.</param>
      <returns>The object created from converting this <see cref="T:System.Windows.FigureLength" />.</returns>
    </member>
    <member name="T:System.Windows.FigureUnitType">
      <summary>Describes the unit type associated with the width or height of a <see cref="T:System.Windows.FigureLength" />.</summary>
    </member>
    <member name="F:System.Windows.FigureUnitType.Auto">
      <summary>Default value when the <see cref="T:System.Windows.FigureLength" /> is not specified which creates a value for the width or height of the <see cref="T:System.Windows.Documents.Figure" /> that is calculated without constraints. Note: When <see cref="T:System.Windows.FigureUnitType" /> is set to <see cref="F:System.Windows.FigureUnitType.Auto" />, the <see cref="P:System.Windows.FigureLength.Value" /> property of <see cref="T:System.Windows.FigureLength" /> is set to <c>1</c>.</summary>
    </member>
    <member name="F:System.Windows.FigureUnitType.Column">
      <summary>The value of the width or height of the <see cref="T:System.Windows.Documents.Figure" /> is expressed as a fraction (including fractions greater then 1) of the width of the column the <see cref="T:System.Windows.Documents.Figure" /> is in.</summary>
    </member>
    <member name="F:System.Windows.FigureUnitType.Content">
      <summary>The value of the width or height of the <see cref="T:System.Windows.Documents.Figure" /> is expressed as a fraction (including fractions greater then 1) of the content width of the <see cref="T:System.Windows.Documents.Figure" />. Note: Note: When <see cref="T:System.Windows.FigureUnitType" /> is set to <see cref="F:System.Windows.FigureUnitType.Content" />, the <see cref="P:System.Windows.FigureLength.Value" /> property of <see cref="T:System.Windows.FigureLength" /> must be set to a value between <c>0</c> and <c>1</c>.</summary>
    </member>
    <member name="F:System.Windows.FigureUnitType.Page">
      <summary>The value of the width or height of the <see cref="T:System.Windows.Documents.Figure" /> is expressed as a fraction (including fractions greater then 1) of the page width of that the <see cref="T:System.Windows.Documents.Figure" /> is in. Note: Note: When <see cref="T:System.Windows.FigureUnitType" /> is set to <see cref="F:System.Windows.FigureUnitType.Page" />, the <see cref="P:System.Windows.FigureLength.Value" /> property of <see cref="T:System.Windows.FigureLength" /> must be set to a value between <c>0</c> and <c>1</c>.</summary>
    </member>
    <member name="F:System.Windows.FigureUnitType.Pixel">
      <summary>The value of the width or height of the <see cref="T:System.Windows.Documents.Figure" /> is expressed in pixels (96 pixels-per-inch).</summary>
    </member>
    <member name="T:System.Windows.FigureVerticalAnchor">
      <summary>Describes the point of reference of a figure in the vertical direction.</summary>
    </member>
    <member name="F:System.Windows.FigureVerticalAnchor.ContentBottom">
      <summary>Anchor the figure to the bottom of the page content area.</summary>
    </member>
    <member name="F:System.Windows.FigureVerticalAnchor.ContentCenter">
      <summary>Anchor the figure to the center of the page content area.</summary>
    </member>
    <member name="F:System.Windows.FigureVerticalAnchor.ContentTop">
      <summary>Anchor the figure to the top of the page content area.</summary>
    </member>
    <member name="F:System.Windows.FigureVerticalAnchor.PageBottom">
      <summary>Anchor the figure to the bottom of the page area.</summary>
    </member>
    <member name="F:System.Windows.FigureVerticalAnchor.PageCenter">
      <summary>Anchor the figure to the center of the page area.</summary>
    </member>
    <member name="F:System.Windows.FigureVerticalAnchor.PageTop">
      <summary>Anchor the figure to the top of the page area.</summary>
    </member>
    <member name="F:System.Windows.FigureVerticalAnchor.ParagraphTop">
      <summary>Anchor the figure to the top of the current paragraph.</summary>
    </member>
    <member name="T:System.Windows.FontSizeConverter">
      <summary>Converts font size values to and from other type representations.</summary>
    </member>
    <member name="M:System.Windows.FontSizeConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.FontSizeConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.FontSizeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines if conversion from a specified type to a <see cref="T:System.Double" /> value is possible.</summary>
      <param name="context">Describes context information of a component such as its container and <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
      <param name="sourceType">Identifies the data type to evaluate for purposes of conversion.</param>
      <returns>
        <see langword="true" /> if <paramref name="sourceType" /> can be converted to <see cref="T:System.Double" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.FontSizeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines if conversion of a font size value to a specified type is possible.</summary>
      <param name="context">Context information of a component such as its container and <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
      <param name="destinationType">The data type to evaluate for purposes of conversion.</param>
      <returns>
        <see langword="true" /> if this type can be converted; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.FontSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts a specified type to a <see cref="T:System.Double" />.</summary>
      <param name="context">Context information of a component such as its container and <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
      <param name="culture">Cultural specific information, including the writing system and calendar used.</param>
      <param name="value">The value which is being converted to a font size value.</param>
      <returns>A <see cref="T:System.Double" /> value that represents the converted font size value.</returns>
    </member>
    <member name="M:System.Windows.FontSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts a <see cref="T:System.Double" /> value to a specified type.</summary>
      <param name="context">Context information of a component such as its container and <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
      <param name="culture">Cultural specific information, including writing system and calendar used.</param>
      <param name="value">The <see cref="T:System.Object" /> being converted.</param>
      <param name="destinationType">The data type this font size value is being converted to.</param>
      <returns>A new <see cref="T:System.Object" /> that is the value of the conversion.</returns>
    </member>
    <member name="T:System.Windows.FrameworkCompatibilityPreferences">
      <summary>Contains properties that specify how an application should behave relative to WPF features that are in the PresentationFramework assembly.</summary>
    </member>
    <member name="P:System.Windows.FrameworkCompatibilityPreferences.AreInactiveSelectionHighlightBrushKeysSupported">
      <summary>Gets or sets a value that indicates whether the application should use the <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightBrush" /> and <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightTextBrush" /> properties for the colors of inactive selected items.</summary>
      <returns>
        <see langword="true" /> if the application should use the <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightBrush" /> and <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightTextBrush" /> properties for the colors of inactive selected items; otherwise, <see langword="false" /></returns>
    </member>
    <member name="P:System.Windows.FrameworkCompatibilityPreferences.KeepTextBoxDisplaySynchronizedWithTextProperty">
      <summary>Gets or sets a value that indicates whether a data-bound <see cref="T:System.Windows.Controls.TextBox" /> should display a string that is identical to the value of the source its <see cref="P:System.Windows.Controls.TextBox.Text" /> property</summary>
      <returns>
        <see langword="true" /> if a data-bound <see cref="T:System.Windows.Controls.TextBox" /> should display a string that is identical to the value of the source its <see cref="P:System.Windows.Controls.TextBox.Text" /> property; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure">
      <summary>Gets or sets a value that indicates whether a failed copy or cut operation in a <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> instance results in a <see cref="T:System.Runtime.InteropServices.ExternalException" />.</summary>
      <returns>
        <see langword="true" /> if a failed copy or cut operation in a <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> instance results in a <see cref="T:System.Runtime.InteropServices.ExternalException" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.FrameworkContentElement">
      <summary>
        <see cref="T:System.Windows.FrameworkContentElement" /> is the WPF framework-level implementation and expansion of the <see cref="T:System.Windows.ContentElement" /> base class. <see cref="T:System.Windows.FrameworkContentElement" /> adds support for additional input APIs (including tooltips and context menus), storyboards, data context for data binding, styles support, and logical tree helper APIs.</summary>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.FrameworkContentElement" /> class.</summary>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.AddLogicalChild(System.Object)">
      <summary>Adds the provided element as a child of this element.</summary>
      <param name="child">The child element to be added.</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.BeginInit">
      <summary>Called before an element is initialized.</summary>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)">
      <summary>Begins the sequence of actions that are contained in the provided storyboard.</summary>
      <param name="storyboard">The storyboard to begin.</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)">
      <summary>Begins the sequence of actions that are contained in the provided storyboard, with options specified for what should occur if the property is already animated.</summary>
      <param name="storyboard">The storyboard to begin.</param>
      <param name="handoffBehavior">A value of the enumeration that describes behavior to use if a property described in the storyboard is already animated.</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
      <summary>Begins the sequence of actions that are contained in the provided storyboard, with specified state for control of the animation after it is started.</summary>
      <param name="storyboard">The storyboard to begin.</param>
      <param name="handoffBehavior">A value of the enumeration that describes behavior to use if a  property described in the storyboard is already animated.</param>
      <param name="isControllable">Declares whether the animation is controllable (can be paused) after it is started.</param>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.BindingGroup">
      <summary>Gets or sets the <see cref="T:System.Windows.Data.BindingGroup" /> that is used for the element.</summary>
      <returns>The <see cref="T:System.Windows.Data.BindingGroup" /> that is used for the element.</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.BindingGroupProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkContentElement.BindingGroup" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.BringIntoView">
      <summary>Attempts to bring this element into view, within any scrollable regions it is contained within.</summary>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.ContextMenu">
      <summary>Gets or sets the context menu element that should appear whenever the context menu is requested via user interface (UI) from within this element.</summary>
      <returns>The context menu that this element uses.</returns>
    </member>
    <member name="E:System.Windows.FrameworkContentElement.ContextMenuClosing">
      <summary>Occurs just before any context menu on the element is closed.</summary>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.ContextMenuClosingEvent">
      <summary>Identifies the <see cref="E:System.Windows.FrameworkContentElement.ContextMenuClosing" /> Routed Events Overview.</summary>
    </member>
    <member name="E:System.Windows.FrameworkContentElement.ContextMenuOpening">
      <summary>Occurs when any context menu on the element is opened.</summary>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.ContextMenuOpeningEvent">
      <summary>Identifies the <see cref="E:System.Windows.FrameworkContentElement.ContextMenuOpening" /> Routed Events Overview.</summary>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.ContextMenuProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkContentElement.ContextMenu" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.Cursor">
      <summary>Gets or sets the cursor that displays when the mouse pointer is over this element.</summary>
      <returns>The cursor to display. The default value is defined as <see langword="null" /> per this dependency property. However, the practical default at run time will come from a variety of factors.</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.CursorProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkContentElement.Cursor" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.DataContext">
      <summary>Gets or sets the data context for an element when it participates in data binding.</summary>
      <returns>The object to use as data context.</returns>
    </member>
    <member name="E:System.Windows.FrameworkContentElement.DataContextChanged">
      <summary>Occurs when this element's data context changes.</summary>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.DataContextProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkContentElement.DataContext" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.DefaultStyleKey">
      <summary>Gets or sets the key to use to find the style template for this control in themes.</summary>
      <returns>The style key. To work correctly as part of theme style lookup, this value is expected to be the <see cref="T:System.Type" /> of the element being styled. <see langword="null" /> is an accepted value for a certain case.</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.DefaultStyleKeyProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkContentElement.DefaultStyleKey" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.EndInit">
      <summary>Called immediately after an element is initialized.</summary>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.FindName(System.String)">
      <summary>Finds an element that has the provided identifier name.</summary>
      <param name="name">Name of the element to search for.</param>
      <returns>The requested element. May be <see langword="null" /> if no matching element was found.</returns>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.FindResource(System.Object)">
      <summary>Searches for a resource with the specified key, and will throw an exception if the requested resource is not found.</summary>
      <param name="resourceKey">Key identifier of the resource to be found.</param>
      <returns>The found resource, or <see langword="null" /> if no matching resource was found (but will also throw an exception if <see langword="null" />).</returns>
      <exception cref="T:System.Windows.ResourceReferenceKeyNotFoundException">The requested resource key was not found.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resourceKey" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.FocusVisualStyle">
      <summary>Gets or sets an object that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.</summary>
      <returns>The desired style to apply on focus. The default value as declared in the dependency property is an empty static <see cref="T:System.Windows.Style" />. However, the effective value at run time is often (but not always) a style as supplied by theme support for controls.</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.FocusVisualStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkContentElement.FocusVisualStyle" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.ForceCursor">
      <summary>Gets or sets a value indicating whether this <see cref="T:System.Windows.FrameworkContentElement" /> should force the user interface (UI) to render the cursor as declared by this instance's <see cref="P:System.Windows.FrameworkContentElement.Cursor" /> property.</summary>
      <returns>
        <see langword="true" /> to force cursor presentation while over this element to use this instance's setting for the cursor (including on all child elements); otherwise <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.ForceCursorProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkContentElement.ForceCursor" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.GetBindingExpression(System.Windows.DependencyProperty)">
      <summary>Gets the <see cref="T:System.Windows.Data.BindingExpression" /> for the specified property's binding.</summary>
      <param name="dp">The target <see cref="T:System.Windows.DependencyProperty" /> from which to get the binding.</param>
      <returns>Returns a <see cref="T:System.Windows.Data.BindingExpression" /> if the target is data bound; otherwise, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.GetUIParentCore">
      <summary>Returns an alternative logical parent for this element if there is no visual parent. In this case, a <see cref="T:System.Windows.FrameworkContentElement" /> parent is always the same value as the <see cref="P:System.Windows.FrameworkContentElement.Parent" /> property.</summary>
      <returns>Returns something other than <see langword="null" /> whenever a WPF framework-level implementation of this method has a non-visual parent connection.</returns>
    </member>
    <member name="E:System.Windows.FrameworkContentElement.Initialized">
      <summary>Occurs when this <see cref="T:System.Windows.FrameworkContentElement" /> is initialized. This coincides with cases where the value of the <see cref="P:System.Windows.FrameworkContentElement.IsInitialized" /> property changes from <see langword="false" /> (or undefined) to <see langword="true" />.</summary>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.InputScope">
      <summary>Gets or sets the context for input used by this <see cref="T:System.Windows.FrameworkContentElement" />.</summary>
      <returns>The input scope, which modifies how input from alternative input methods is interpreted. The default value is <see langword="null" /> (which results in a default handling of commands).</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.InputScopeProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkContentElement.InputScope" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.IsInitialized">
      <summary>Gets a value indicating whether this element has been initialized, either by being loaded as Extensible Application Markup Language (XAML), or by explicitly having its <see cref="M:System.Windows.FrameworkContentElement.EndInit" /> method called.</summary>
      <returns>
        <see langword="true" /> if the element is initialized per the aforementioned loading or method calls; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.IsLoaded">
      <summary>Gets a value indicating whether this element has been loaded for presentation.</summary>
      <returns>
        <see langword="true" /> if the current element is attached to an element tree and has been rendered; <see langword="false" /> if the element has never been attached to a loaded element tree.</returns>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.Language">
      <summary>Gets or sets localization/globalization language information that applies to an individual element.</summary>
      <returns>The culture information for this element. The default value is an <see cref="T:System.Windows.Markup.XmlLanguage" /> instance with its <see cref="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag" /> value set to the string "en-US".</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.LanguageProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkContentElement.Language" /> dependency property.</summary>
    </member>
    <member name="E:System.Windows.FrameworkContentElement.Loaded">
      <summary>Occurs when the element is laid out, rendered, and ready for interaction.</summary>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.LoadedEvent">
      <summary>Identifies the <see cref="E:System.Windows.FrameworkContentElement.Loaded" /> Routed Events Overview.</summary>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.LogicalChildren">
      <summary>Gets an enumerator for the logical child elements of this element.</summary>
      <returns>An enumerator for logical child elements of this element.</returns>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.MoveFocus(System.Windows.Input.TraversalRequest)">
      <summary>Moves the keyboard focus from this element to another element.</summary>
      <param name="request">The direction that focus is to be moved, as a value of the enumeration.</param>
      <returns>Returns <see langword="true" /> if focus is moved successfully; <see langword="false" /> if the target element in direction as specified does not exist.</returns>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.Name">
      <summary>Gets or sets the identifying name of the element. The name provides an instance reference so that programmatic code-behind, such as event handler code, can refer to an element once it is constructed during parsing of XAML.</summary>
      <returns>The name of the element.</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.NameProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkContentElement.Name" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)">
      <summary>Invoked whenever the <see cref="E:System.Windows.FrameworkContentElement.ContextMenuClosing" /> routed event reaches this class in its route. Implement this method to add class handling for this event.</summary>
      <param name="e">Provides data about the event.</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
      <summary>Invoked whenever the <see cref="E:System.Windows.FrameworkContentElement.ContextMenuOpening" /> routed event reaches this class in its route. Implement this method to add class handling for this event.</summary>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.OnGotFocus(System.Windows.RoutedEventArgs)">
      <summary>Class handler for the <see cref="E:System.Windows.ContentElement.GotFocus" /> event.</summary>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.OnInitialized(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.FrameworkContentElement.Initialized" /> event. This method is invoked whenever <see cref="P:System.Windows.FrameworkContentElement.IsInitialized" /> is set to <see langword="true" />.</summary>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Invoked whenever the effective value of any dependency property on this <see cref="T:System.Windows.FrameworkContentElement" /> has been updated. The specific dependency property that changed is reported in the arguments parameter. Overrides <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />.</summary>
      <param name="e">The event data that describes the property that changed, including the old and new values.</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)">
      <summary>Invoked when the style that is in use on this element changes.</summary>
      <param name="oldStyle">The old style.</param>
      <param name="newStyle">The new style.</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)">
      <summary>Invoked whenever the <see cref="E:System.Windows.FrameworkContentElement.ToolTipClosing" /> routed event reaches this class in its route. Implement this method to add class handling for this event.</summary>
      <param name="e">Provides data about the event.</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)">
      <summary>Invoked whenever the <see cref="E:System.Windows.FrameworkContentElement.ToolTipOpening" /> routed event reaches this class in its route. Implement this method to add class handling for this event.</summary>
      <param name="e">Provides data about the event.</param>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.OverridesDefaultStyle">
      <summary>Gets or sets a value indicating whether this element incorporates style properties from theme styles.</summary>
      <returns>
        <see langword="true" /> if this element does not use theme style properties; all style-originating properties come from local application styles, and theme style properties do not apply. <see langword="false" /> if application styles apply first, and then theme styles apply for properties that were not specifically set in application styles.</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.OverridesDefaultStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkContentElement.OverridesDefaultStyle" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.Parent">
      <summary>Gets the parent in the logical tree for this element.</summary>
      <returns>The logical parent for this element.</returns>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)">
      <summary>Determines the next element that would receive focus relative to this element for a provided focus movement direction, but does not actually move the focus. This method is sealed and cannot be overridden.</summary>
      <param name="direction">The direction for which a prospective focus change should be determined.</param>
      <returns>The next element that focus would move to if focus were actually traversed. May return <see langword="null" /> if focus cannot be moved relative to this element for the provided direction.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Specified one of the following directions in the <see cref="T:System.Windows.Input.TraversalRequest" />: <see cref="F:System.Windows.Input.FocusNavigationDirection.Next" />, <see cref="F:System.Windows.Input.FocusNavigationDirection.Previous" />, <see cref="F:System.Windows.Input.FocusNavigationDirection.First" />, <see cref="F:System.Windows.Input.FocusNavigationDirection.Last" />. These directions are not legal for <see cref="M:System.Windows.FrameworkContentElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" /> (but they are legal for <see cref="M:System.Windows.FrameworkContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" />).</exception>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.RegisterName(System.String,System.Object)">
      <summary>Provides an accessor that simplifies access to the <see cref="T:System.Windows.NameScope" /> registration method.</summary>
      <param name="name">Name to use for the specified name-object mapping.</param>
      <param name="scopedElement">Object for the mapping.</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.RemoveLogicalChild(System.Object)">
      <summary>Removes the specified element from the logical tree for this element.</summary>
      <param name="child">The element to remove.</param>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.Resources">
      <summary>Gets or sets the current locally-defined resource dictionary.</summary>
      <returns>The current locally-defined resources. This is a dictionary of resources, where resources within the dictionary are accessed by key.</returns>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.SetBinding(System.Windows.DependencyProperty,System.String)">
      <summary>Attaches a binding to this element, based on the provided source property name as a path qualification to the data source.</summary>
      <param name="dp">Identifies the bound property.</param>
      <param name="path">The source property name or the path to the property used for the binding.</param>
      <returns>Records the conditions of the binding. This return value can be useful for error checking.</returns>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
      <summary>Attaches a binding to this element, based on the provided binding object.</summary>
      <param name="dp">Identifies the bound property.</param>
      <param name="binding">Represents a data binding.</param>
      <returns>Records the conditions of the binding. This return value can be useful for error checking.</returns>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)">
      <summary>Searches for a resource with the specified name and sets up a resource reference to it for the specified property.</summary>
      <param name="dp">The property to which the resource is bound.</param>
      <param name="name">The name of the resource.</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.ShouldSerializeResources">
      <summary>Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.FrameworkContentElement.Resources" /> property on instances of this class.</summary>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.FrameworkContentElement.Resources" /> property value should be serialized; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.ShouldSerializeStyle">
      <summary>Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.FrameworkContentElement.Style" /> property on instances of this class.</summary>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.FrameworkContentElement.Style" /> property value should be serialized; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="E:System.Windows.FrameworkContentElement.SourceUpdated">
      <summary>Occurs when any associated data source participating in a binding on this element changes.</summary>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.Style">
      <summary>Gets or sets the style to be used by this element.</summary>
      <returns>The applied, nondefault style for the element, if present. Otherwise, <see langword="null" />. The default for a default-constructed <see cref="T:System.Windows.FrameworkContentElement" /> is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.StyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkContentElement.Style" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)">
      <summary>For a description of this member, see the <see cref="M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)" /> method.</summary>
      <param name="propertyName">The name of the requested ambient property.</param>
      <returns>
        <see langword="true" /> if <paramref name="propertyName" /> is available; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.Tag">
      <summary>Gets or sets an arbitrary object value that can be used to store custom information about this element.</summary>
      <returns>The intended value. This property has no default value.</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.TagProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkContentElement.Tag" /> dependency property.</summary>
    </member>
    <member name="E:System.Windows.FrameworkContentElement.TargetUpdated">
      <summary>Occurs when any associated target property participating in a binding on this element changes.</summary>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.TemplatedParent">
      <summary>Gets a reference to the template parent of this element. This property is not relevant if the element was not created through a template.</summary>
      <returns>The element whose <see cref="T:System.Windows.FrameworkTemplate" /><see cref="P:System.Windows.FrameworkTemplate.VisualTree" /> caused this element to be created. This value is frequently <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.ToolTip">
      <summary>Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).</summary>
      <returns>The tooltip object.</returns>
    </member>
    <member name="E:System.Windows.FrameworkContentElement.ToolTipClosing">
      <summary>Occurs just before any tooltip on the element is closed.</summary>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.ToolTipClosingEvent">
      <summary>Identifies the <see cref="E:System.Windows.FrameworkContentElement.ToolTipClosing" /> Routed Events Overview.</summary>
    </member>
    <member name="E:System.Windows.FrameworkContentElement.ToolTipOpening">
      <summary>Occurs when any tooltip on the element is opened.</summary>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.ToolTipOpeningEvent">
      <summary>Identifies the <see cref="E:System.Windows.FrameworkContentElement.ToolTipOpening" /> Routed Events Overview.</summary>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.ToolTipProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkContentElement.ToolTip" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.TryFindResource(System.Object)">
      <summary>Searches for a resource with the specified key, and returns that resource if found.</summary>
      <param name="resourceKey">Key identifier of the resource to be found.</param>
      <returns>The found resource. If no resource was found, <see langword="null" /> is returned.</returns>
    </member>
    <member name="E:System.Windows.FrameworkContentElement.Unloaded">
      <summary>Occurs when the element is removed from an element tree of loaded elements.</summary>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.UnloadedEvent">
      <summary>Identifies the <see cref="E:System.Windows.FrameworkContentElement.Unloaded" /> Routed Events Overview.</summary>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.UnregisterName(System.String)">
      <summary>Simplifies access to the <see cref="T:System.Windows.NameScope" /> de-registration method.</summary>
      <param name="name">Name of the name-object pair to remove from the current scope.</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.UpdateDefaultStyle">
      <summary>Reapplies the default style to the current <see cref="T:System.Windows.FrameworkContentElement" />.</summary>
    </member>
    <member name="T:System.Windows.FrameworkElement">
      <summary>Provides a WPF framework-level set of properties, events, and methods for Windows Presentation Foundation (WPF) elements. This class represents the provided WPF framework-level implementation that is built on the WPF core-level APIs that are defined by <see cref="T:System.Windows.UIElement" />.</summary>
    </member>
    <member name="M:System.Windows.FrameworkElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.FrameworkElement" /> class.</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.ActualHeight">
      <summary>Gets the rendered height of this element.</summary>
      <returns>The element's height, as a value in device-independent units (1/96th inch per unit). The default value is 0 (zero).</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.ActualHeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkElement.ActualHeight" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.ActualWidth">
      <summary>Gets the rendered width of this element.</summary>
      <returns>The element's width, as a value in device-independent units (1/96th inch per unit). The default value is 0 (zero).</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.ActualWidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkElement.ActualWidth" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.FrameworkElement.AddLogicalChild(System.Object)">
      <summary>Adds the provided object to the logical tree of this element.</summary>
      <param name="child">Child element to be added.</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.ApplyTemplate">
      <summary>Builds the current template's visual tree if necessary, and returns a value that indicates whether the visual tree was rebuilt by this call.</summary>
      <returns>
        <see langword="true" /> if visuals were added to the tree; returns <see langword="false" /> otherwise.</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.ArrangeCore(System.Windows.Rect)">
      <summary>Implements <see cref="M:System.Windows.UIElement.ArrangeCore(System.Windows.Rect)" /> (defined as virtual in <see cref="T:System.Windows.UIElement" />) and seals the implementation.</summary>
      <param name="finalRect">The final area within the parent that this element should use to arrange itself and its children.</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)">
      <summary>When overridden in a derived class, positions child elements and determines a size for a <see cref="T:System.Windows.FrameworkElement" /> derived class.</summary>
      <param name="finalSize">The final area within the parent that this element should use to arrange itself and its children.</param>
      <returns>The actual size used.</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.BeginInit">
      <summary>Starts the initialization process for this element.</summary>
    </member>
    <member name="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)">
      <summary>Begins the sequence of actions that are contained in the provided storyboard.</summary>
      <param name="storyboard">The storyboard to begin.</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)">
      <summary>Begins the sequence of actions contained in the provided storyboard, with options specified for what should happen if the property is already animated.</summary>
      <param name="storyboard">The storyboard to begin.</param>
      <param name="handoffBehavior">A value of the enumeration that describes behavior to use if a property described in the storyboard is already animated.</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
      <summary>Begins the sequence of actions contained in the provided storyboard, with specified state for control of the animation after it is started.</summary>
      <param name="storyboard">The storyboard to begin.</param>
      <param name="handoffBehavior">A value of the enumeration that describes behavior to use if a property described in the storyboard is already animated.</param>
      <param name="isControllable">Declares whether the animation is controllable (can be paused) after it is started.</param>
    </member>
    <member name="P:System.Windows.FrameworkElement.BindingGroup">
      <summary>Gets or sets the <see cref="T:System.Windows.Data.BindingGroup" /> that is used for the element.</summary>
      <returns>The <see cref="T:System.Windows.Data.BindingGroup" /> that is used for the element.</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.BindingGroupProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkElement.BindingGroup" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.FrameworkElement.BringIntoView">
      <summary>Attempts to bring this element into view, within any scrollable regions it is contained within.</summary>
    </member>
    <member name="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)">
      <summary>Attempts to bring the provided region size of this element into view, within any scrollable regions it is contained within.</summary>
      <param name="targetRectangle">Specified size of the element that should also be brought into view.</param>
    </member>
    <member name="P:System.Windows.FrameworkElement.ContextMenu">
      <summary>Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.</summary>
      <returns>The context menu assigned to this element.</returns>
    </member>
    <member name="E:System.Windows.FrameworkElement.ContextMenuClosing">
      <summary>Occurs just before any context menu on the element is closed.</summary>
    </member>
    <member name="F:System.Windows.FrameworkElement.ContextMenuClosingEvent">
      <summary>Identifies the <see cref="E:System.Windows.FrameworkElement.ContextMenuClosing" /> routed event.</summary>
    </member>
    <member name="E:System.Windows.FrameworkElement.ContextMenuOpening">
      <summary>Occurs when any context menu on the element is opened.</summary>
    </member>
    <member name="F:System.Windows.FrameworkElement.ContextMenuOpeningEvent">
      <summary>Identifies the <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> routed event.</summary>
    </member>
    <member name="F:System.Windows.FrameworkElement.ContextMenuProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkElement.ContextMenu" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.Cursor">
      <summary>Gets or sets the cursor that displays when the mouse pointer is over this element.</summary>
      <returns>The cursor to display. The default value is defined as <see langword="null" /> per this dependency property. However, the practical default at run time will come from a variety of factors.</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.CursorProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkElement.Cursor" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.DataContext">
      <summary>Gets or sets the data context for an element when it participates in data binding.</summary>
      <returns>The object to use as data context.</returns>
    </member>
    <member name="E:System.Windows.FrameworkElement.DataContextChanged">
      <summary>Occurs when the data context for this element changes.</summary>
    </member>
    <member name="F:System.Windows.FrameworkElement.DataContextProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkElement.DataContext" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.DefaultStyleKey">
      <summary>Gets or sets the key to use to reference the style for this control, when theme styles are used or defined.</summary>
      <returns>The style key. To work correctly as part of theme style lookup, this value is expected to be the <see cref="T:System.Type" /> of the control being styled.</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.DefaultStyleKeyProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkElement.DefaultStyleKey" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.FrameworkElement.EndInit">
      <summary>Indicates that the initialization process for the element is complete.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Windows.FrameworkElement.EndInit" /> was called without <see cref="M:System.Windows.FrameworkElement.BeginInit" /> having previously been called on the element.</exception>
    </member>
    <member name="M:System.Windows.FrameworkElement.FindName(System.String)">
      <summary>Finds an element that has the provided identifier name.</summary>
      <param name="name">The name of the requested element.</param>
      <returns>The requested element. This can be <see langword="null" /> if no matching element was found.</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.FindResource(System.Object)">
      <summary>Searches for a resource with the specified key, and throws an exception if the requested resource is not found.</summary>
      <param name="resourceKey">The key identifier for the requested resource.</param>
      <returns>The requested resource. If no resource with the provided key was found, an exception is thrown. An <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> value might also be returned in the exception case.</returns>
      <exception cref="T:System.Windows.ResourceReferenceKeyNotFoundException">
        <paramref name="resourceKey" /> was not found and an event handler does not exist for the <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" /> event.  
-or-  
<paramref name="resourceKey" /> was not found and the <see cref="P:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Handled" /> property is <see langword="false" /> in the <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" /> event.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resourceKey" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.FrameworkElement.FlowDirection">
      <summary>Gets or sets the direction that text and other user interface (UI) elements flow within any parent element that controls their layout.</summary>
      <returns>The direction that text and other UI elements flow within their parent element, as a value of the enumeration. The default value is <see cref="F:System.Windows.FlowDirection.LeftToRight" />.</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.FlowDirectionProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkElement.FlowDirection" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.FocusVisualStyle">
      <summary>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.</summary>
      <returns>The desired style to apply on focus. The default value as declared in the dependency property is an empty static <see cref="T:System.Windows.Style" />. However, the effective value at run time is often (but not always) a style as supplied by theme support for controls.</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.FocusVisualStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkElement.FocusVisualStyle" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.ForceCursor">
      <summary>Gets or sets a value that indicates whether this <see cref="T:System.Windows.FrameworkElement" /> should force the user interface (UI) to render the cursor as declared by the <see cref="P:System.Windows.FrameworkElement.Cursor" /> property.</summary>
      <returns>
        <see langword="true" /> if cursor presentation while over this element is forced to use current <see cref="P:System.Windows.FrameworkElement.Cursor" /> settings for the cursor (including on all child elements); otherwise <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.ForceCursorProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkElement.ForceCursor" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.FrameworkElement.GetBindingExpression(System.Windows.DependencyProperty)">
      <summary>Returns the <see cref="T:System.Windows.Data.BindingExpression" /> that represents the binding on the specified property.</summary>
      <param name="dp">The target <see cref="T:System.Windows.DependencyProperty" /> to get the binding from.</param>
      <returns>A <see cref="T:System.Windows.Data.BindingExpression" /> if the target property has an active binding; otherwise, returns <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.GetFlowDirection(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.FrameworkElement.FlowDirection" /> attached property for the specified <see cref="T:System.Windows.DependencyObject" />.</summary>
      <param name="element">The element to return a <see cref="P:System.Windows.FrameworkElement.FlowDirection" /> for.</param>
      <returns>The requested flow direction, as a value of the enumeration.</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)">
      <summary>Returns a geometry for a clipping mask. The mask applies if the layout system attempts to arrange an element that is larger than the available display space.</summary>
      <param name="layoutSlotSize">The size of the part of the element that does visual presentation.</param>
      <returns>The clipping geometry.</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.GetTemplateChild(System.String)">
      <summary>Returns the named element in the visual tree of an instantiated <see cref="T:System.Windows.Controls.ControlTemplate" />.</summary>
      <param name="childName">Name of the child to find.</param>
      <returns>The requested element. May be <see langword="null" /> if no element of the requested name exists.</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.GetUIParentCore">
      <summary>Returns an alternative logical parent for this element if there is no visual parent.</summary>
      <returns>Returns something other than <see langword="null" /> whenever a WPF framework-level implementation of this method has a non-visual parent connection.</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.GetVisualChild(System.Int32)">
      <summary>Overrides <see cref="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)" />, and returns a child at the specified index from a collection of child elements.</summary>
      <param name="index">The zero-based index of the requested child element in the collection.</param>
      <returns>The requested child element. This should not return <see langword="null" />; if the provided index is out of range, an exception is thrown.</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.Height">
      <summary>Gets or sets the suggested height of the element.</summary>
      <returns>The height of the element, in device-independent units (1/96th inch per unit). The default value is <see cref="F:System.Double.NaN" />. This value must be equal to or greater than 0.0.</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.HeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkElement.Height" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.HorizontalAlignment">
      <summary>Gets or sets the horizontal alignment characteristics applied to this element when it is composed within a parent element, such as a panel or items control.</summary>
      <returns>A horizontal alignment setting, as a value of the enumeration. The default is <see cref="F:System.Windows.HorizontalAlignment.Stretch" />.</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.HorizontalAlignmentProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkElement.HorizontalAlignment" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.InheritanceBehavior">
      <summary>Gets or sets the scope limits for property value inheritance, resource key lookup, and RelativeSource FindAncestor lookup.</summary>
      <returns>A value of the enumeration. The default is <see cref="F:System.Windows.InheritanceBehavior.Default" />.</returns>
    </member>
    <member name="E:System.Windows.FrameworkElement.Initialized">
      <summary>Occurs when this <see cref="T:System.Windows.FrameworkElement" /> is initialized. This event coincides with cases where the value of the <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> property changes from <see langword="false" /> (or undefined) to <see langword="true" />.</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.InputScope">
      <summary>Gets or sets the context for input used by this <see cref="T:System.Windows.FrameworkElement" />.</summary>
      <returns>The input scope, which modifies how input from alternative input methods is interpreted. The default value is <see langword="null" /> (which results in a default handling of commands).</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.InputScopeProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkElement.InputScope" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.IsInitialized">
      <summary>Gets a value that indicates whether this element has been initialized, either during processing by a XAML processor, or by explicitly having its <see cref="M:System.Windows.FrameworkElement.EndInit" /> method called.</summary>
      <returns>
        <see langword="true" /> if the element is initialized per the aforementioned XAML processing or method calls; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.IsLoaded">
      <summary>Gets a value that indicates whether this element has been loaded for presentation.</summary>
      <returns>
        <see langword="true" /> if the current element is attached to an element tree; <see langword="false" /> if the element has never been attached to a loaded element tree.</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.Language">
      <summary>Gets or sets localization/globalization language information that applies to an element.</summary>
      <returns>The language information for this element. The default value is an <see cref="T:System.Windows.Markup.XmlLanguage" /> with its <see cref="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag" /> value set to the string "en-US".</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.LanguageProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkElement.Language" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.LayoutTransform">
      <summary>Gets or sets a graphics transformation that should apply to this element when  layout is performed.</summary>
      <returns>The transform this element should use. The default is <see cref="P:System.Windows.Media.Transform.Identity" />.</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.LayoutTransformProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkElement.LayoutTransform" /> dependency property.</summary>
    </member>
    <member name="E:System.Windows.FrameworkElement.Loaded">
      <summary>Occurs when the element is laid out, rendered, and ready for interaction.</summary>
    </member>
    <member name="F:System.Windows.FrameworkElement.LoadedEvent">
      <summary>Identifies the <see cref="E:System.Windows.FrameworkElement.Loaded" /> routed event.</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.LogicalChildren">
      <summary>Gets an enumerator for logical child elements of this element.</summary>
      <returns>An enumerator for logical child elements of this element.</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.Margin">
      <summary>Gets or sets the outer margin of an element.</summary>
      <returns>Provides margin values for the element. The default value is a <see cref="T:System.Windows.Thickness" /> with all properties equal to 0 (zero).</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.MarginProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkElement.Margin" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.MaxHeight">
      <summary>Gets or sets the maximum height constraint of the element.</summary>
      <returns>The maximum height of the element, in device-independent units (1/96th inch per unit). The default value is <see cref="F:System.Double.PositiveInfinity" />. This value can be any value equal to or greater than 0.0. <see cref="F:System.Double.PositiveInfinity" /> is also valid.</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.MaxHeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkElement.MaxHeight" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.MaxWidth">
      <summary>Gets or sets the maximum width constraint of the element.</summary>
      <returns>The maximum width of the element, in device-independent units (1/96th inch per unit). The default value is <see cref="F:System.Double.PositiveInfinity" />. This value can be any value equal to or greater than 0.0. <see cref="F:System.Double.PositiveInfinity" /> is also valid.</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.MaxWidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkElement.MaxWidth" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.FrameworkElement.MeasureCore(System.Windows.Size)">
      <summary>Implements basic measure-pass layout system behavior for <see cref="T:System.Windows.FrameworkElement" />.</summary>
      <param name="availableSize">The available size that the parent element can give to the child elements.</param>
      <returns>The desired size of this element in layout.</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)">
      <summary>When overridden in a derived class, measures the size in layout required for child elements and determines a size for the <see cref="T:System.Windows.FrameworkElement" />-derived class.</summary>
      <param name="availableSize">The available size that this element can give to child elements. Infinity can be specified as a value to indicate that the element will size to whatever content is available.</param>
      <returns>The size that this element determines it needs during layout, based on its calculations of child element sizes.</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.MinHeight">
      <summary>Gets or sets the minimum height constraint of the element.</summary>
      <returns>The minimum height of the element, in device-independent units (1/96th inch per unit). The default value is 0.0. This value can be any value equal to or greater than 0.0. However, <see cref="F:System.Double.PositiveInfinity" /> is NOT valid, nor is <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.MinHeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkElement.MinHeight" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.MinWidth">
      <summary>Gets or sets the minimum width constraint of the element.</summary>
      <returns>The minimum width of the element, in device-independent units (1/96th inch per unit). The default value is 0.0. This value can be any value equal to or greater than 0.0. However, <see cref="F:System.Double.PositiveInfinity" /> is not valid, nor is <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.MinWidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkElement.MinWidth" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)">
      <summary>Moves the keyboard focus away from this element and to another element in a provided traversal direction.</summary>
      <param name="request">The direction that focus is to be moved, as a value of the enumeration.</param>
      <returns>Returns <see langword="true" /> if focus is moved successfully; <see langword="false" /> if the target element in direction as specified does not exist or could not be keyboard focused.</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.Name">
      <summary>Gets or sets the identifying name of the element. The name provides a reference so that code-behind, such as event handler code, can refer to a markup element after it is constructed during processing by a XAML processor.</summary>
      <returns>The name of the element. The default is an empty string.</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.NameProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkElement.Name" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.FrameworkElement.OnApplyTemplate">
      <summary>When overridden in a derived class, is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.</summary>
    </member>
    <member name="M:System.Windows.FrameworkElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)">
      <summary>Invoked whenever an unhandled <see cref="E:System.Windows.FrameworkElement.ContextMenuClosing" /> routed event reaches this class in its route. Implement this method to add class handling for this event.</summary>
      <param name="e">Provides data about the event.</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
      <summary>Invoked whenever an unhandled <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> routed event reaches this class in its route. Implement this method to add class handling for this event.</summary>
      <param name="e">The <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.OnGotFocus(System.Windows.RoutedEventArgs)">
      <summary>Invoked whenever an unhandled <see cref="E:System.Windows.UIElement.GotFocus" /> event reaches this element in its route.</summary>
      <param name="e">The <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.OnInitialized(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.FrameworkElement.Initialized" /> event. This method is invoked whenever <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> is set to <see langword="true" /> internally.</summary>
      <param name="e">The <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Invoked whenever the effective value of any dependency property on this <see cref="T:System.Windows.FrameworkElement" /> has been updated. The specific dependency property that changed is reported in the arguments parameter. Overrides <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />.</summary>
      <param name="e">The event data that describes the property that changed, as well as old and new values.</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
      <summary>Raises the <see cref="E:System.Windows.FrameworkElement.SizeChanged" /> event, using the specified information as part of the eventual event data.</summary>
      <param name="sizeInfo">Details of the old and new size involved in the change.</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)">
      <summary>Invoked when the style in use on this element changes, which will invalidate the layout.</summary>
      <param name="oldStyle">The old style.</param>
      <param name="newStyle">The new style.</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)">
      <summary>Invoked whenever an unhandled <see cref="E:System.Windows.FrameworkElement.ToolTipClosing" /> routed event reaches this class in its route. Implement this method to add class handling for this event.</summary>
      <param name="e">Provides data about the event.</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)">
      <summary>Invoked whenever the <see cref="E:System.Windows.FrameworkElement.ToolTipOpening" /> routed event reaches this class in its route. Implement this method to add class handling for this event.</summary>
      <param name="e">Provides data about the event.</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)">
      <summary>Invoked when the parent of this element in the visual tree is changed. Overrides <see cref="M:System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)" />.</summary>
      <param name="oldParent">The old parent element. May be <see langword="null" /> to indicate that the element did not have a visual parent previously.</param>
    </member>
    <member name="P:System.Windows.FrameworkElement.OverridesDefaultStyle">
      <summary>Gets or sets a value that indicates whether this element incorporates style properties from theme styles.</summary>
      <returns>
        <see langword="true" /> if this element does not use theme style properties; all style-originating properties come from local application styles, and theme style properties do not apply. <see langword="false" /> if application styles apply first, and then theme styles apply for properties that were not specifically set in application styles. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.OverridesDefaultStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkElement.OverridesDefaultStyle" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.Parent">
      <summary>Gets the logical parent  element of this element.</summary>
      <returns>This element's logical parent.</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)">
      <summary>Supports incremental layout implementations in specialized subclasses of <see cref="T:System.Windows.FrameworkElement" />. <see cref="M:System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)" /> is invoked when a child element has invalidated a property that is marked in metadata as affecting the parent's measure or arrange passes during layout.</summary>
      <param name="child">The child element reporting the change.</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)">
      <summary>Determines the next element that would receive focus relative to this element for a provided focus movement direction, but does not actually move the focus.</summary>
      <param name="direction">The direction for which a prospective focus change should be determined.</param>
      <returns>The next element that focus would move to if focus were actually traversed. May return <see langword="null" /> if focus cannot be moved relative to this element for the provided direction.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Specified one of the following directions in the <see cref="T:System.Windows.Input.TraversalRequest" />: <see cref="F:System.Windows.Input.FocusNavigationDirection.Next" />, <see cref="F:System.Windows.Input.FocusNavigationDirection.Previous" />, <see cref="F:System.Windows.Input.FocusNavigationDirection.First" />, <see cref="F:System.Windows.Input.FocusNavigationDirection.Last" />. These directions are not legal for <see cref="M:System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" /> (but they are legal for <see cref="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)" />).</exception>
    </member>
    <member name="M:System.Windows.FrameworkElement.RegisterName(System.String,System.Object)">
      <summary>Provides an accessor that simplifies access to the <see cref="T:System.Windows.NameScope" /> registration method.</summary>
      <param name="name">Name to use for the specified name-object mapping.</param>
      <param name="scopedElement">Object for the mapping.</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.RemoveLogicalChild(System.Object)">
      <summary>Removes the provided object from this element's logical tree. <see cref="T:System.Windows.FrameworkElement" /> updates the affected logical tree parent pointers to keep in sync with this deletion.</summary>
      <param name="child">The element to remove.</param>
    </member>
    <member name="E:System.Windows.FrameworkElement.RequestBringIntoView">
      <summary>Occurs when <see cref="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)" /> is called on this element.</summary>
    </member>
    <member name="F:System.Windows.FrameworkElement.RequestBringIntoViewEvent">
      <summary>Identifies the <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> routed event.</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.Resources">
      <summary>Gets or sets the locally-defined resource dictionary.</summary>
      <returns>The current locally-defined dictionary of resources, where each resource can be accessed by key.</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.String)">
      <summary>Attaches a binding to this element, based on the provided source property name as a path qualification to the data source.</summary>
      <param name="dp">Identifies the destination property where the binding should be established.</param>
      <param name="path">The source property name or the path to the property used for the binding.</param>
      <returns>Records the conditions of the binding. This return value can be useful for error checking.</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
      <summary>Attaches a binding to this element, based on the provided binding object.</summary>
      <param name="dp">Identifies the property where the binding should be established.</param>
      <param name="binding">Represents the specifics of the data binding.</param>
      <returns>Records the conditions of the binding. This return value can be useful for error checking.</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.SetFlowDirection(System.Windows.DependencyObject,System.Windows.FlowDirection)">
      <summary>Sets the value of the <see cref="P:System.Windows.FrameworkElement.FlowDirection" /> attached property for the provided element.</summary>
      <param name="element">The element that specifies a flow direction.</param>
      <param name="value">A value of the enumeration, specifying the direction.</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)">
      <summary>Searches for a resource with the specified name and sets up a resource reference to it for the specified property.</summary>
      <param name="dp">The property to which the resource is bound.</param>
      <param name="name">The name of the resource.</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.ShouldSerializeResources">
      <summary>Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.FrameworkElement.Resources" /> property.</summary>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.FrameworkElement.Resources" /> property value should be serialized; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.ShouldSerializeStyle">
      <summary>Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.FrameworkElement.Style" /> property.</summary>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.FrameworkElement.Style" /> property value should be serialized; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.ShouldSerializeTriggers">
      <summary>Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.FrameworkElement.Triggers" /> property.</summary>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.FrameworkElement.Triggers" /> property value should be serialized; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="E:System.Windows.FrameworkElement.SizeChanged">
      <summary>Occurs when either the <see cref="P:System.Windows.FrameworkElement.ActualHeight" /> or the <see cref="P:System.Windows.FrameworkElement.ActualWidth" /> properties change value on this element.</summary>
    </member>
    <member name="F:System.Windows.FrameworkElement.SizeChangedEvent">
      <summary>Identifies the <see cref="E:System.Windows.FrameworkElement.SizeChanged" /> routed event.</summary>
    </member>
    <member name="E:System.Windows.FrameworkElement.SourceUpdated">
      <summary>Occurs when the source value changes for any existing property binding on this element.</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.Style">
      <summary>Gets or sets the style used by this element when it is rendered.</summary>
      <returns>The applied, nondefault style for the element, if present. Otherwise, <see langword="null" />. The default for a default-constructed <see cref="T:System.Windows.FrameworkElement" /> is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.StyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkElement.Style" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.FrameworkElement.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)">
      <summary>For a description of this member, see the <see cref="M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)" /> method.</summary>
      <param name="propertyName">The name of the requested ambient property.</param>
      <returns>
        <see langword="true" /> if <paramref name="propertyName" /> is available; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.Tag">
      <summary>Gets or sets an arbitrary object value that can be used to store custom information about this element.</summary>
      <returns>The intended value. This property has no default value.</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.TagProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkElement.Tag" /> dependency property.</summary>
    </member>
    <member name="E:System.Windows.FrameworkElement.TargetUpdated">
      <summary>Occurs when the target value changes for any property binding on this element.</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.TemplatedParent">
      <summary>Gets a reference to the template parent of this element. This property is not relevant if the element was not created through a template.</summary>
      <returns>The element whose <see cref="T:System.Windows.FrameworkTemplate" /><see cref="P:System.Windows.FrameworkTemplate.VisualTree" /> caused this element to be created. This value is frequently <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.ToolTip">
      <summary>Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).</summary>
      <returns>The tooltip object.</returns>
    </member>
    <member name="E:System.Windows.FrameworkElement.ToolTipClosing">
      <summary>Occurs just before any tooltip on the element is closed.</summary>
    </member>
    <member name="F:System.Windows.FrameworkElement.ToolTipClosingEvent">
      <summary>Identifies the <see cref="E:System.Windows.FrameworkElement.ToolTipClosing" /> routed event.</summary>
    </member>
    <member name="E:System.Windows.FrameworkElement.ToolTipOpening">
      <summary>Occurs when any tooltip on the element is opened.</summary>
    </member>
    <member name="F:System.Windows.FrameworkElement.ToolTipOpeningEvent">
      <summary>Identifies the <see cref="E:System.Windows.FrameworkElement.ToolTipOpening" /> routed event.</summary>
    </member>
    <member name="F:System.Windows.FrameworkElement.ToolTipProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkElement.ToolTip" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.Triggers">
      <summary>Gets the collection of triggers established directly on this element, or in child elements.</summary>
      <returns>A strongly typed collection of <see cref="T:System.Windows.Trigger" /> objects.</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.TryFindResource(System.Object)">
      <summary>Searches for a resource with the specified key, and returns that resource if found.</summary>
      <param name="resourceKey">The key identifier of the resource to be found.</param>
      <returns>The found resource, or <see langword="null" /> if no resource with the provided <paramref name="key" /> is found.</returns>
    </member>
    <member name="E:System.Windows.FrameworkElement.Unloaded">
      <summary>Occurs when the element is removed from within an element tree of loaded elements.</summary>
    </member>
    <member name="F:System.Windows.FrameworkElement.UnloadedEvent">
      <summary>Identifies the <see cref="E:System.Windows.FrameworkElement.Unloaded" /> routed event.</summary>
    </member>
    <member name="M:System.Windows.FrameworkElement.UnregisterName(System.String)">
      <summary>Simplifies access to the <see cref="T:System.Windows.NameScope" /> de-registration method.</summary>
      <param name="name">Name of the name-object pair to remove from the current scope.</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.UpdateDefaultStyle">
      <summary>Reapplies the default style to the current <see cref="T:System.Windows.FrameworkElement" />.</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.UseLayoutRounding">
      <summary>Gets or sets a value that indicates whether layout rounding should be applied to this element's size and position during layout.</summary>
      <returns>
        <see langword="true" /> if layout rounding is applied; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.UseLayoutRoundingProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkElement.UseLayoutRounding" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.VerticalAlignment">
      <summary>Gets or sets the vertical alignment characteristics applied to this element when it is composed within a parent element such as a panel or items control.</summary>
      <returns>A vertical alignment setting. The default is <see cref="F:System.Windows.VerticalAlignment.Stretch" />.</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.VerticalAlignmentProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkElement.VerticalAlignment" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.VisualChildrenCount">
      <summary>Gets the number of visual child elements within this element.</summary>
      <returns>The number of visual child elements for this element.</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.Width">
      <summary>Gets or sets the width of the element.</summary>
      <returns>The width of the element, in device-independent units (1/96th inch per unit). The default value is <see cref="F:System.Double.NaN" />. This value must be equal to or greater than 0.0. See Remarks for upper bound information.</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.WidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.FrameworkElement.Width" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.FrameworkElementFactory">
      <summary>Supports the creation of templates.</summary>
    </member>
    <member name="M:System.Windows.FrameworkElementFactory.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.FrameworkElementFactory" /> class.</summary>
    </member>
    <member name="M:System.Windows.FrameworkElementFactory.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.FrameworkElementFactory" /> class with the specified text to produce.</summary>
      <param name="text">The text string to produce.</param>
    </member>
    <member name="M:System.Windows.FrameworkElementFactory.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.FrameworkElementFactory" /> class with the specified <see cref="T:System.Type" />.</summary>
      <param name="type">The type of instance to create.</param>
    </member>
    <member name="M:System.Windows.FrameworkElementFactory.#ctor(System.Type,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.FrameworkElementFactory" /> class with the specified <see cref="T:System.Type" /> and name.</summary>
      <param name="type">The type of instance to create.</param>
      <param name="name">The style identifier.</param>
    </member>
    <member name="M:System.Windows.FrameworkElementFactory.AddHandler(System.Windows.RoutedEvent,System.Delegate)">
      <summary>Adds an event handler for the given routed event to the instances created by this factory.</summary>
      <param name="routedEvent">Identifier object for the routed event being handled.</param>
      <param name="handler">A reference to the handler implementation.</param>
    </member>
    <member name="M:System.Windows.FrameworkElementFactory.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
      <summary>Adds an event handler for the given routed event to the instances created by this factory, with the option of having the provided handler be invoked even in cases of routed events that had already been marked as handled by another element along the route.</summary>
      <param name="routedEvent">Identifier object for the routed event being handled.</param>
      <param name="handler">A reference to the handler implementation.</param>
      <param name="handledEventsToo">Whether to invoke the handler in cases where the routed event has already been marked as handled in its arguments object. <see langword="true" /> to invoke the handler even when the routed event is marked handled; otherwise, <see langword="false" />. The default is <see langword="false" />. Asking to handle already-handled routed events is not common.</param>
    </member>
    <member name="M:System.Windows.FrameworkElementFactory.AppendChild(System.Windows.FrameworkElementFactory)">
      <summary>Adds a child factory to this factory.</summary>
      <param name="child">The <see cref="T:System.Windows.FrameworkElementFactory" /> object to add as a child.</param>
    </member>
    <member name="P:System.Windows.FrameworkElementFactory.FirstChild">
      <summary>Gets the first child factory.</summary>
      <returns>A <see cref="T:System.Windows.FrameworkElementFactory" /> the first child factory.</returns>
    </member>
    <member name="P:System.Windows.FrameworkElementFactory.IsSealed">
      <summary>Gets a value that indicates whether this object is in an immutable state.</summary>
      <returns>
        <see langword="true" /> if this object is in an immutable state; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.FrameworkElementFactory.Name">
      <summary>Gets or sets the name of a template item.</summary>
      <returns>A string that is the template identifier.</returns>
    </member>
    <member name="P:System.Windows.FrameworkElementFactory.NextSibling">
      <summary>Gets the next sibling factory.</summary>
      <returns>A <see cref="T:System.Windows.FrameworkElementFactory" /> that is the next sibling factory.</returns>
    </member>
    <member name="P:System.Windows.FrameworkElementFactory.Parent">
      <summary>Gets the parent <see cref="T:System.Windows.FrameworkElementFactory" />.</summary>
      <returns>A <see cref="T:System.Windows.FrameworkElementFactory" /> that is the parent factory.</returns>
    </member>
    <member name="M:System.Windows.FrameworkElementFactory.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)">
      <summary>Removes an event handler from the given routed event. This applies to the instances created by this factory.</summary>
      <param name="routedEvent">Identifier object for the routed event.</param>
      <param name="handler">The handler to remove.</param>
    </member>
    <member name="M:System.Windows.FrameworkElementFactory.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
      <summary>Sets up data binding on a property.</summary>
      <param name="dp">Identifies the property where the binding should be established.</param>
      <param name="binding">Description of the binding.</param>
    </member>
    <member name="M:System.Windows.FrameworkElementFactory.SetResourceReference(System.Windows.DependencyProperty,System.Object)">
      <summary>Set up a dynamic resource reference on a child property.</summary>
      <param name="dp">The property to which the resource is bound.</param>
      <param name="name">The name of the resource.</param>
    </member>
    <member name="M:System.Windows.FrameworkElementFactory.SetValue(System.Windows.DependencyProperty,System.Object)">
      <summary>Sets the value of a dependency property.</summary>
      <param name="dp">The dependency property identifier of the property to set.</param>
      <param name="value">The new value.</param>
    </member>
    <member name="P:System.Windows.FrameworkElementFactory.Text">
      <summary>Gets or sets the text string to produce.</summary>
      <returns>The text string to produce.</returns>
    </member>
    <member name="P:System.Windows.FrameworkElementFactory.Type">
      <summary>Gets or sets the type of the objects this factory produces.</summary>
      <returns>The type of the objects this factory produces.</returns>
    </member>
    <member name="T:System.Windows.FrameworkPropertyMetadata">
      <summary>Reports or applies metadata for a dependency property, specifically adding framework-specific property system characteristics.</summary>
    </member>
    <member name="M:System.Windows.FrameworkPropertyMetadata.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.FrameworkPropertyMetadata" /> class.</summary>
    </member>
    <member name="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.FrameworkPropertyMetadata" /> class with the specified default value.</summary>
      <param name="defaultValue">The default value of the dependency property, usually provided as a value of a specific type.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="defaultValue" /> is set to <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</exception>
    </member>
    <member name="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.FrameworkPropertyMetadata" /> class with the provided default value and framework-level metadata options.</summary>
      <param name="defaultValue">The default value of the dependency property, usually provided as a value of a specific type.</param>
      <param name="flags">The metadata option flags (a combination of <see cref="T:System.Windows.FrameworkPropertyMetadataOptions" /> values). These options specify characteristics of the dependency property that interact with systems such as layout or data binding.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="defaultValue" /> is set to <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</exception>
    </member>
    <member name="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.FrameworkPropertyMetadata" /> class with the provided default value and framework metadata options, and specified <see cref="T:System.Windows.PropertyChangedCallback" /> callback.</summary>
      <param name="defaultValue">The default value of the dependency property, usually provided as a value of a specific type.</param>
      <param name="flags">The metadata option flags (a combination of <see cref="T:System.Windows.FrameworkPropertyMetadataOptions" /> values). These options specify characteristics of the dependency property that interact with systems such as layout or data binding.</param>
      <param name="propertyChangedCallback">A reference to a handler implementation that the property system will call whenever the effective value of the property changes.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="defaultValue" /> is set to <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</exception>
    </member>
    <member name="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.FrameworkPropertyMetadata" /> class with the provided default value and framework metadata options, and specified callbacks.</summary>
      <param name="defaultValue">The default value of the dependency property, usually provided as a specific type.</param>
      <param name="flags">The metadata option flags (a combination of <see cref="T:System.Windows.FrameworkPropertyMetadataOptions" /> values). These options specify characteristics of the dependency property that interact with systems such as layout or data binding.</param>
      <param name="propertyChangedCallback">A reference to a handler implementation that the property system will call whenever the effective value of the property changes.</param>
      <param name="coerceValueCallback">A reference to a handler implementation that will be called whenever the property system calls <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /> against this property.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="defaultValue" /> is set to <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</exception>
    </member>
    <member name="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.FrameworkPropertyMetadata" /> class with the provided default value and framework metadata options, specified callbacks, and a Boolean that can be used to prevent animation of the property.</summary>
      <param name="defaultValue">The default value of the dependency property, usually provided as a specific type.</param>
      <param name="flags">The metadata option flags (a combination of <see cref="T:System.Windows.FrameworkPropertyMetadataOptions" /> values). These options specify characteristics of the dependency property that interact with systems such as layout or data binding.</param>
      <param name="propertyChangedCallback">A reference to a handler implementation that the property system will call whenever the effective value of the property changes.</param>
      <param name="coerceValueCallback">A reference to a handler implementation that will be called whenever the property system calls <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /> on this dependency property.</param>
      <param name="isAnimationProhibited">
        <see langword="true" /> to prevent the property system from animating the property that this metadata is applied to. Such properties will raise a run-time exception originating from the property system if animations of them are attempted. <see langword="false" /> to permit animating the property. The default is <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="defaultValue" /> is set to <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</exception>
    </member>
    <member name="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean,System.Windows.Data.UpdateSourceTrigger)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.FrameworkPropertyMetadata" /> class with the provided default value and framework metadata options, specified callbacks, a Boolean that can be used to prevent animation of the property, and a data-binding update trigger default.</summary>
      <param name="defaultValue">The default value of the dependency property, usually provided as a specific type.</param>
      <param name="flags">The metadata option flags (a combination of <see cref="T:System.Windows.FrameworkPropertyMetadataOptions" /> values). These options specify characteristics of the dependency property that interact with systems such as layout or data binding.</param>
      <param name="propertyChangedCallback">A reference to a handler implementation that the property system will call whenever the effective value of the property changes.</param>
      <param name="coerceValueCallback">A reference to a handler implementation that will be called whenever the property system calls <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /> against this property.</param>
      <param name="isAnimationProhibited">
        <see langword="true" /> to prevent the property system from animating the property that this metadata is applied to. Such properties will raise a run-time exception originating from the property system if animations of them are attempted. The default is <see langword="false" />.</param>
      <param name="defaultUpdateSourceTrigger">The <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> to use when bindings for this property are applied that have their <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> set to <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="defaultValue" /> is set to <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</exception>
    </member>
    <member name="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.FrameworkPropertyMetadata" /> class with the provided default value and specified <see cref="T:System.Windows.PropertyChangedCallback" /> callback.</summary>
      <param name="defaultValue">The default value of the dependency property, usually provided as a value of a specific type.</param>
      <param name="propertyChangedCallback">A reference to a handler implementation that the property system will call whenever the effective value of the property changes.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="defaultValue" /> is set to <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</exception>
    </member>
    <member name="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.FrameworkPropertyMetadata" /> class with the provided default value and specified callbacks.</summary>
      <param name="defaultValue">The default value of the dependency property, usually provided as a specific type.</param>
      <param name="propertyChangedCallback">A reference to a handler implementation that the property system will call whenever the effective value of the property changes.</param>
      <param name="coerceValueCallback">A reference to a handler implementation that will be called whenever the property system calls <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /> for this dependency property.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="defaultValue" /> is set to <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</exception>
    </member>
    <member name="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Windows.PropertyChangedCallback)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.FrameworkPropertyMetadata" /> class with the specified <see cref="T:System.Windows.PropertyChangedCallback" /> callback.</summary>
      <param name="propertyChangedCallback">A reference to a handler implementation that the property system will call whenever the effective value of the property changes.</param>
    </member>
    <member name="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.FrameworkPropertyMetadata" /> class with the specified callbacks.</summary>
      <param name="propertyChangedCallback">A reference to a handler implementation that the property system will call whenever the effective value of the property changes.</param>
      <param name="coerceValueCallback">A reference to a handler implementation will be called whenever the property system calls <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /> for this dependency property.</param>
    </member>
    <member name="P:System.Windows.FrameworkPropertyMetadata.AffectsArrange">
      <summary>Gets or sets a value that indicates whether a dependency property potentially affects the arrange pass during layout engine operations.</summary>
      <returns>
        <see langword="true" /> if the dependency property on which this metadata exists potentially affects the arrange pass; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</exception>
    </member>
    <member name="P:System.Windows.FrameworkPropertyMetadata.AffectsMeasure">
      <summary>Gets or sets a value that indicates whether a dependency property potentially affects the measure pass during layout engine operations.</summary>
      <returns>
        <see langword="true" /> if the dependency property on which this metadata exists potentially affects the measure pass; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</exception>
    </member>
    <member name="P:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange">
      <summary>Gets or sets a value that indicates whether a dependency property potentially affects the arrange pass of its parent element's layout during layout engine operations.</summary>
      <returns>
        <see langword="true" /> if the dependency property on which this metadata exists potentially affects the arrange pass specifically on its parent element; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</exception>
    </member>
    <member name="P:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure">
      <summary>Gets or sets a value that indicates whether a dependency property potentially affects the measure pass of its parent element's layout during layout engine operations.</summary>
      <returns>
        <see langword="true" /> if the dependency property on which this metadata exists potentially affects the measure pass specifically on its parent element; otherwise, <see langword="false" />.The default is <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</exception>
    </member>
    <member name="P:System.Windows.FrameworkPropertyMetadata.AffectsRender">
      <summary>Gets or sets a value that indicates whether a dependency property potentially affects the general layout in some way that does not specifically influence arrangement or measurement, but would require a redraw.</summary>
      <returns>
        <see langword="true" /> if the dependency property on which this metadata exists affects rendering; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</exception>
    </member>
    <member name="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault">
      <summary>Gets or sets a value that indicates whether the property binds two-way by default.</summary>
      <returns>
        <see langword="true" /> if the dependency property on which this metadata exists binds two-way by default; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</exception>
    </member>
    <member name="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger">
      <summary>Gets or sets the default for <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> to use when bindings for the property with this metadata are applied, which have their <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> set to <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" />.</summary>
      <returns>A value of the enumeration, other than <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" />.</returns>
      <exception cref="T:System.ArgumentException">This property is set to <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" />; the value you set is supposed to become the default when requested by bindings.</exception>
      <exception cref="T:System.InvalidOperationException">The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</exception>
    </member>
    <member name="P:System.Windows.FrameworkPropertyMetadata.Inherits">
      <summary>Gets or sets a value that indicates whether the value of the dependency property is inheritable.</summary>
      <returns>
        <see langword="true" /> if the property value is inheritable; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</exception>
    </member>
    <member name="P:System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed">
      <summary>Gets a value that indicates whether data binding is supported for the dependency property.</summary>
      <returns>
        <see langword="true" /> if data binding is supported on the dependency property to which this metadata applies; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable">
      <summary>Gets or sets a value that indicates whether the dependency property supports data binding.</summary>
      <returns>
        <see langword="true" /> if the property does not support data binding; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</exception>
    </member>
    <member name="P:System.Windows.FrameworkPropertyMetadata.Journal">
      <summary>Gets or sets a value that indicates whether this property contains journaling information that applications can or should store as part of a journaling implementation.</summary>
      <returns>
        <see langword="true" /> if journaling should be performed on the dependency property that this metadata is applied to; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</exception>
    </member>
    <member name="M:System.Windows.FrameworkPropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)">
      <summary>Enables a merge of the source metadata with base metadata.</summary>
      <param name="baseMetadata">The base metadata to merge.</param>
      <param name="dp">The dependency property this metadata is being applied to.</param>
    </member>
    <member name="M:System.Windows.FrameworkPropertyMetadata.OnApply(System.Windows.DependencyProperty,System.Type)">
      <summary>Called when this metadata has been applied to a property, which indicates that the metadata is being sealed.</summary>
      <param name="dp">The dependency property to which the metadata has been applied.</param>
      <param name="targetType">The type associated with this metadata if this is type-specific metadata. If this is default metadata, this value can be <see langword="null" />.</param>
    </member>
    <member name="P:System.Windows.FrameworkPropertyMetadata.OverridesInheritanceBehavior">
      <summary>Gets or sets a value that indicates whether the property value inheritance evaluation should span across certain content boundaries in the logical tree of elements.</summary>
      <returns>
        <see langword="true" /> if the property value inheritance should span across certain content boundaries; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</exception>
    </member>
    <member name="P:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender">
      <summary>Gets or sets a value that indicates whether sub-properties of the dependency property do not affect the rendering of the containing object.</summary>
      <returns>
        <see langword="true" /> if changes to sub-property values do not affect rendering if changed; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</exception>
    </member>
    <member name="T:System.Windows.FrameworkPropertyMetadataOptions">
      <summary>Specifies the types of framework-level property behavior that pertain to a particular dependency property in the Windows Presentation Foundation (WPF) property system.</summary>
    </member>
    <member name="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange">
      <summary>The arrange pass of layout composition is affected by value changes to this dependency property.</summary>
    </member>
    <member name="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure">
      <summary>The measure pass of layout compositions is affected by value changes to this dependency property.</summary>
    </member>
    <member name="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsParentArrange">
      <summary>The arrange pass on the parent element is affected by value changes to this dependency property.</summary>
    </member>
    <member name="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsParentMeasure">
      <summary>The measure pass on the parent element is affected by value changes to this dependency property.</summary>
    </member>
    <member name="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender">
      <summary>Some aspect of rendering or layout composition (other than measure or arrange) is affected by value changes to this dependency property.</summary>
    </member>
    <member name="F:System.Windows.FrameworkPropertyMetadataOptions.BindsTwoWayByDefault">
      <summary>The <see cref="T:System.Windows.Data.BindingMode" /> for data bindings on this dependency property defaults to <see cref="F:System.Windows.Data.BindingMode.TwoWay" />.</summary>
    </member>
    <member name="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits">
      <summary>The values of this dependency property are inherited by child elements.</summary>
    </member>
    <member name="F:System.Windows.FrameworkPropertyMetadataOptions.Journal">
      <summary>The values of this dependency property should be saved or restored by journaling processes, or when navigating by Uniform resource identifiers (URIs).</summary>
    </member>
    <member name="F:System.Windows.FrameworkPropertyMetadataOptions.None">
      <summary>No options are specified; the dependency property uses the default behavior of the Windows Presentation Foundation (WPF) property system.</summary>
    </member>
    <member name="F:System.Windows.FrameworkPropertyMetadataOptions.NotDataBindable">
      <summary>Data binding to this dependency property is not allowed.</summary>
    </member>
    <member name="F:System.Windows.FrameworkPropertyMetadataOptions.OverridesInheritanceBehavior">
      <summary>The values of this dependency property span separated trees for purposes of property value inheritance.</summary>
    </member>
    <member name="F:System.Windows.FrameworkPropertyMetadataOptions.SubPropertiesDoNotAffectRender">
      <summary>The subproperties on the value of this dependency property do not affect any aspect of rendering.</summary>
    </member>
    <member name="T:System.Windows.FrameworkTemplate">
      <summary>Enables the instantiation of a tree of <see cref="T:System.Windows.FrameworkElement" /> and/or <see cref="T:System.Windows.FrameworkContentElement" /> objects.</summary>
    </member>
    <member name="M:System.Windows.FrameworkTemplate.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.FrameworkTemplate" /> class.</summary>
    </member>
    <member name="M:System.Windows.FrameworkTemplate.FindName(System.String,System.Windows.FrameworkElement)">
      <summary>Finds the element associated with the specified name defined within this template.</summary>
      <param name="name">The string name.</param>
      <param name="templatedParent">The context of the <see cref="T:System.Windows.FrameworkElement" /> where this template is applied.</param>
      <returns>The element associated with the specified name.</returns>
    </member>
    <member name="P:System.Windows.FrameworkTemplate.HasContent">
      <summary>Gets a value that indicates whether this template has optimized content.</summary>
      <returns>
        <see langword="true" /> if this template has optimized content; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.FrameworkTemplate.IsSealed">
      <summary>Gets a value that indicates whether this object is in an immutable state so it cannot be changed.</summary>
      <returns>
        <see langword="true" /> if this object is in an immutable state; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.FrameworkTemplate.LoadContent">
      <summary>Loads the content of the template as an instance of an object and returns the root element of the content.</summary>
      <returns>The root element of the content. Calling this multiple times returns separate instances.</returns>
    </member>
    <member name="M:System.Windows.FrameworkTemplate.RegisterName(System.String,System.Object)">
      <summary>Registers a new name/object pair into the current name scope.</summary>
      <param name="name">The name to register.</param>
      <param name="scopedElement">The object to be mapped to the provided name.</param>
    </member>
    <member name="P:System.Windows.FrameworkTemplate.Resources">
      <summary>Gets or sets the collection of resources that can be used within the scope of this template.</summary>
      <returns>The resources that can be used within the scope of this template.</returns>
    </member>
    <member name="M:System.Windows.FrameworkTemplate.Seal">
      <summary>Locks the template so it cannot be changed.</summary>
    </member>
    <member name="M:System.Windows.FrameworkTemplate.ShouldSerializeResources(System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>Returns a value that indicates whether serialization processes should serialize the value of the <see cref="P:System.Windows.FrameworkTemplate.Resources" /> property on instances of this class.</summary>
      <param name="manager">The <see cref="T:System.Windows.Markup.XamlDesignerSerializationManager" />.</param>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.FrameworkTemplate.Resources" /> property value should be serialized; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.FrameworkTemplate.ShouldSerializeVisualTree">
      <summary>Returns a value that indicates whether serialization processes should serialize the value of the <see cref="P:System.Windows.FrameworkTemplate.VisualTree" /> property on instances of this class.</summary>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.FrameworkTemplate.VisualTree" /> property value should be serialized; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.FrameworkTemplate.System#Windows#Markup#INameScope#FindName(System.String)">
      <summary>Returns an object that has the provided identifying name.</summary>
      <param name="name">The name identifier for the object being requested.</param>
      <returns>The object, if found. Returns <see langword="null" /> if no object of that name was found.</returns>
    </member>
    <member name="M:System.Windows.FrameworkTemplate.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)">
      <summary>Queries whether a specified ambient property is available in the current scope.</summary>
      <param name="propertyName">The name of the requested ambient property.</param>
      <returns>
        <see langword="true" /> if the requested ambient property is available; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.FrameworkTemplate.Template">
      <summary>Gets or sets a reference to the object that records or plays the XAML nodes for the template when the template is defined or applied by a writer.</summary>
      <returns>A reference to the object that records or plays the XAML nodes for the template.</returns>
    </member>
    <member name="M:System.Windows.FrameworkTemplate.UnregisterName(System.String)">
      <summary>Removes a name/object mapping from the XAML namescope.</summary>
      <param name="name">The name of the mapping to remove.</param>
    </member>
    <member name="M:System.Windows.FrameworkTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)">
      <summary>When overridden in a derived class, supplies rules for the element this template is applied to.</summary>
      <param name="templatedParent">The element this template is applied to.</param>
    </member>
    <member name="P:System.Windows.FrameworkTemplate.VisualTree">
      <summary>Gets or sets the root node of the template.</summary>
      <returns>The root node of the template.</returns>
    </member>
    <member name="T:System.Windows.GridLength">
      <summary>Represents the length of elements that explicitly support <see cref="F:System.Windows.GridUnitType.Star" /> unit types.</summary>
    </member>
    <member name="M:System.Windows.GridLength.#ctor(System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.GridLength" /> structure using the specified absolute value in pixels.</summary>
      <param name="pixels">The number of device-independent pixels (96 pixels-per-inch).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Pixels" /> is equal to <see cref="F:System.Double.NegativeInfinity" />, <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NaN" />.</exception>
    </member>
    <member name="M:System.Windows.GridLength.#ctor(System.Double,System.Windows.GridUnitType)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.GridLength" /> structure and specifies what kind of value it holds.</summary>
      <param name="value">The initial value of this instance of <see cref="T:System.Windows.GridLength" />.</param>
      <param name="type">The <see cref="T:System.Windows.GridUnitType" /> held by this instance of <see cref="T:System.Windows.GridLength" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is equal to <see cref="F:System.Double.NegativeInfinity" />, <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NaN" />.</exception>
    </member>
    <member name="P:System.Windows.GridLength.Auto">
      <summary>Gets an instance of <see cref="T:System.Windows.GridLength" /> that holds a value whose size is determined by the size properties of the content object.</summary>
      <returns>A instance of <see cref="T:System.Windows.GridLength" /> whose <see cref="P:System.Windows.GridLength.GridUnitType" /> property is set to <see cref="F:System.Windows.GridUnitType.Auto" />.</returns>
    </member>
    <member name="M:System.Windows.GridLength.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current <see cref="T:System.Windows.GridLength" /> instance.</summary>
      <param name="oCompare">The object to compare with the current instance.</param>
      <returns>
        <see langword="true" /> if the specified object has the same value and <see cref="T:System.Windows.GridUnitType" /> as the current instance; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.GridLength.Equals(System.Windows.GridLength)">
      <summary>Determines whether the specified <see cref="T:System.Windows.GridLength" /> is equal to the current <see cref="T:System.Windows.GridLength" />.</summary>
      <param name="gridLength">The <see cref="T:System.Windows.GridLength" /> structure to compare with the current instance.</param>
      <returns>
        <see langword="true" /> if the specified <see cref="T:System.Windows.GridLength" /> has the same value and <see cref="P:System.Windows.GridLength.GridUnitType" /> as the current instance; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.GridLength.GetHashCode">
      <summary>Gets a hash code for the <see cref="T:System.Windows.GridLength" />.</summary>
      <returns>A hash code for the current <see cref="T:System.Windows.GridLength" /> structure.</returns>
    </member>
    <member name="P:System.Windows.GridLength.GridUnitType">
      <summary>Gets the associated <see cref="T:System.Windows.GridUnitType" /> for the <see cref="T:System.Windows.GridLength" />.</summary>
      <returns>One of the <see cref="T:System.Windows.GridUnitType" /> values. The default is <see cref="F:System.Windows.GridUnitType.Auto" />.</returns>
    </member>
    <member name="P:System.Windows.GridLength.IsAbsolute">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.GridLength" /> holds a value that is expressed in pixels.</summary>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.GridLength.GridUnitType" /> property is <see cref="F:System.Windows.GridUnitType.Pixel" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.GridLength.IsAuto">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.GridLength" /> holds a value whose size is determined by the size properties of the content object.</summary>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.GridLength.GridUnitType" /> property is <see cref="F:System.Windows.GridUnitType.Auto" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.GridLength.IsStar">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.GridLength" /> holds a value that is expressed as a weighted proportion of available space.</summary>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.GridLength.GridUnitType" /> property is <see cref="F:System.Windows.GridUnitType.Star" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.GridLength.op_Equality(System.Windows.GridLength,System.Windows.GridLength)">
      <summary>Compares two <see cref="T:System.Windows.GridLength" /> structures for equality.</summary>
      <param name="gl1">The first instance of <see cref="T:System.Windows.GridLength" /> to compare.</param>
      <param name="gl2">The second instance of <see cref="T:System.Windows.GridLength" /> to compare.</param>
      <returns>
        <see langword="true" /> if the two instances of <see cref="T:System.Windows.GridLength" /> have the same value and <see cref="T:System.Windows.GridUnitType" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.GridLength.op_Inequality(System.Windows.GridLength,System.Windows.GridLength)">
      <summary>Compares two <see cref="T:System.Windows.GridLength" /> structures to determine if they are not equal.</summary>
      <param name="gl1">The first instance of <see cref="T:System.Windows.GridLength" /> to compare.</param>
      <param name="gl2">The second instance of <see cref="T:System.Windows.GridLength" /> to compare.</param>
      <returns>
        <see langword="true" /> if the two instances of <see cref="T:System.Windows.GridLength" /> do not have the same value and <see cref="T:System.Windows.GridUnitType" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.GridLength.ToString">
      <summary>Returns a <see cref="T:System.String" /> representation of the <see cref="T:System.Windows.GridLength" />.</summary>
      <returns>A <see cref="T:System.String" /> representation of the current <see cref="T:System.Windows.GridLength" /> structure.</returns>
    </member>
    <member name="P:System.Windows.GridLength.Value">
      <summary>Gets a <see cref="T:System.Double" /> that represents the value of the <see cref="T:System.Windows.GridLength" />.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the value of the current instance.</returns>
    </member>
    <member name="T:System.Windows.GridLengthConverter">
      <summary>Converts instances of other types to and from <see cref="T:System.Windows.GridLength" /> instances.</summary>
    </member>
    <member name="M:System.Windows.GridLengthConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.GridLengthConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.GridLengthConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether a class can be converted from a given type to an instance of <see cref="T:System.Windows.GridLength" />.</summary>
      <param name="typeDescriptorContext">Describes the context information of a type.</param>
      <param name="sourceType">The type of the source that is being evaluated for conversion.</param>
      <returns>
        <see langword="true" /> if the converter can convert from the specified type to an instance of <see cref="T:System.Windows.GridLength" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.GridLengthConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether an instance of <see cref="T:System.Windows.GridLength" /> can be converted to a different type.</summary>
      <param name="typeDescriptorContext">Describes the context information of a type.</param>
      <param name="destinationType">The desired type that this instance of <see cref="T:System.Windows.GridLength" /> is being evaluated for conversion.</param>
      <returns>
        <see langword="true" /> if the converter can convert this instance of <see cref="T:System.Windows.GridLength" /> to the specified type; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.GridLengthConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Attempts to convert a specified object to an instance of <see cref="T:System.Windows.GridLength" />.</summary>
      <param name="typeDescriptorContext">Describes the context information of a type.</param>
      <param name="cultureInfo">Cultural specific information that should be respected during conversion.</param>
      <param name="source">The object being converted.</param>
      <returns>The instance of <see cref="T:System.Windows.GridLength" /> that is created from the converted <paramref name="source" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> object is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> object is not <see langword="null" /> and is not a valid type that can be converted to a <see cref="T:System.Windows.GridLength" />.</exception>
    </member>
    <member name="M:System.Windows.GridLengthConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Attempts to convert an instance of <see cref="T:System.Windows.GridLength" /> to a specified type.</summary>
      <param name="typeDescriptorContext">Describes the context information of a type.</param>
      <param name="cultureInfo">Cultural specific information that should be respected during conversion.</param>
      <param name="value">The instance of <see cref="T:System.Windows.GridLength" /> to convert.</param>
      <param name="destinationType">The type that this instance of <see cref="T:System.Windows.GridLength" /> is converted to.</param>
      <returns>The object that is created from the converted instance of <see cref="T:System.Windows.GridLength" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> is not one of the valid types for conversion.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is <see langword="null" />.</exception>
    </member>
    <member name="T:System.Windows.GridUnitType">
      <summary>Describes the kind of value that a <see cref="T:System.Windows.GridLength" /> object is holding.</summary>
    </member>
    <member name="F:System.Windows.GridUnitType.Auto">
      <summary>The size is determined by the size properties of the content object.</summary>
    </member>
    <member name="F:System.Windows.GridUnitType.Pixel">
      <summary>The value is expressed as a pixel.</summary>
    </member>
    <member name="F:System.Windows.GridUnitType.Star">
      <summary>The value is expressed as a weighted proportion of available space.</summary>
    </member>
    <member name="T:System.Windows.HierarchicalDataTemplate">
      <summary>Represents a <see cref="T:System.Windows.DataTemplate" /> that supports <see cref="T:System.Windows.Controls.HeaderedItemsControl" />, such as <see cref="T:System.Windows.Controls.TreeViewItem" /> or <see cref="T:System.Windows.Controls.MenuItem" />.</summary>
    </member>
    <member name="M:System.Windows.HierarchicalDataTemplate.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.HierarchicalDataTemplate" /> class.</summary>
    </member>
    <member name="M:System.Windows.HierarchicalDataTemplate.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.HierarchicalDataTemplate" /> class with the specified type for which the template is intended.</summary>
      <param name="dataType">The type for which this template is intended.</param>
    </member>
    <member name="P:System.Windows.HierarchicalDataTemplate.AlternationCount">
      <summary>Gets or sets the number of alternating item containers for the child items.</summary>
      <returns>The number of alternating item containers for the next level of items.</returns>
    </member>
    <member name="P:System.Windows.HierarchicalDataTemplate.ItemBindingGroup">
      <summary>Gets or sets the <see cref="T:System.Windows.Data.BindingGroup" /> that is copied to each child item.</summary>
      <returns>The <see cref="T:System.Windows.Data.BindingGroup" /> that is copied to each child item.</returns>
    </member>
    <member name="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyle">
      <summary>Gets or sets the <see cref="T:System.Windows.Style" /> that is applied to the item container for each child item.</summary>
      <returns>The <see cref="T:System.Windows.Style" /> that is applied to the item container for each child item.</returns>
    </member>
    <member name="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector">
      <summary>Gets or sets custom style-selection logic for a style that can be applied to each item container.</summary>
      <returns>A <see cref="T:System.Windows.Controls.StyleSelector" /> that chooses which style to use as the <see cref="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyle" />. The default is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.HierarchicalDataTemplate.ItemsSource">
      <summary>Gets or sets the binding for this data template, which indicates where to find the collection that represents the next level in the data hierarchy.</summary>
      <returns>The default is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.HierarchicalDataTemplate.ItemStringFormat">
      <summary>Gets or sets a composite string that specifies how to format the items in the next level in the data hierarchy if they are displayed as strings.</summary>
      <returns>A composite string that specifies how to format the items in the next level of the data hierarchy if they are displayed as strings.</returns>
    </member>
    <member name="P:System.Windows.HierarchicalDataTemplate.ItemTemplate">
      <summary>Gets or sets the <see cref="T:System.Windows.DataTemplate" /> to apply to the <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> property on a generated <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> (such as a <see cref="T:System.Windows.Controls.MenuItem" /> or a <see cref="T:System.Windows.Controls.TreeViewItem" />), to indicate how to display items from the next level in the data hierarchy.</summary>
      <returns>The <see cref="T:System.Windows.DataTemplate" /> to apply to the <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> property on a generated <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> (such as a <see cref="T:System.Windows.Controls.MenuItem" /> or a <see cref="T:System.Windows.Controls.TreeViewItem" />), to indicate how to display items from the next level in the data hierarchy.</returns>
    </member>
    <member name="P:System.Windows.HierarchicalDataTemplate.ItemTemplateSelector">
      <summary>Gets or sets the <see cref="T:System.Windows.Controls.DataTemplateSelector" /> to apply to the <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> property on a generated <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> (such as a <see cref="T:System.Windows.Controls.MenuItem" /> or a <see cref="T:System.Windows.Controls.TreeViewItem" />), to indicate how to select a template to display items from the next level in the data hierarchy.</summary>
      <returns>The <see cref="T:System.Windows.Controls.DataTemplateSelector" /> object to apply to the <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> property on a generated <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> (such as a <see cref="T:System.Windows.Controls.MenuItem" /> or a <see cref="T:System.Windows.Controls.TreeViewItem" />), to indicate how to select a template to display items from the next level in the data hierarchy.</returns>
    </member>
    <member name="T:System.Windows.HorizontalAlignment">
      <summary>Indicates where an element should be displayed on the horizontal axis relative to the allocated layout slot of the parent element.</summary>
    </member>
    <member name="F:System.Windows.HorizontalAlignment.Center">
      <summary>An element aligned to the center of the layout slot for the parent element.</summary>
    </member>
    <member name="F:System.Windows.HorizontalAlignment.Left">
      <summary>An element aligned to the left of the layout slot for the parent element.</summary>
    </member>
    <member name="F:System.Windows.HorizontalAlignment.Right">
      <summary>An element aligned to the right of the layout slot for the parent element.</summary>
    </member>
    <member name="F:System.Windows.HorizontalAlignment.Stretch">
      <summary>An element stretched to fill the entire layout slot of the parent element.</summary>
    </member>
    <member name="T:System.Windows.IFrameworkInputElement">
      <summary>Declares a namescope contract for framework elements.</summary>
    </member>
    <member name="P:System.Windows.IFrameworkInputElement.Name">
      <summary>Gets or sets the name of an element.</summary>
      <returns>The element name, which is unique in the namescope and can be used as an identifier for certain operations.</returns>
    </member>
    <member name="T:System.Windows.InheritanceBehavior">
      <summary>Indicates the current mode of lookup for property value inheritance, resource lookup, and RelativeSource FindAncestor lookup. A RelativeSource FindAncestor lookup occurs when a binding uses a <see cref="T:System.Windows.Data.RelativeSource" /> that has its <see cref="P:System.Windows.Data.RelativeSource.Mode" /> property set to the <see cref="F:System.Windows.Data.RelativeSourceMode.FindAncestor" /> value.</summary>
    </member>
    <member name="F:System.Windows.InheritanceBehavior.Default">
      <summary>Property value inheritance lookup will query the current element and continue walking up the element tree to the page root. A resource lookup will query through the current element and further.</summary>
    </member>
    <member name="F:System.Windows.InheritanceBehavior.SkipAllNext">
      <summary>Property value inheritance lookup or resource lookup will query the current element but not any further. A resource lookup will query the current element but not any further.</summary>
    </member>
    <member name="F:System.Windows.InheritanceBehavior.SkipAllNow">
      <summary>Property value inheritance lookup, resource lookup, or RelativeSource FindAncestor lookup will not query the current element or any further.</summary>
    </member>
    <member name="F:System.Windows.InheritanceBehavior.SkipToAppNext">
      <summary>Property value inheritance lookup will query the current element but not any further. A resource lookup will query the current element and will then skip over to the application and theme dictionaries, rather than walking up the element tree toward the page root.</summary>
    </member>
    <member name="F:System.Windows.InheritanceBehavior.SkipToAppNow">
      <summary>Property value inheritance lookup will not query the current element or any further. A resource lookup will not query the current element but will skip over to the application and then the theme dictionaries, rather than walking up the element tree toward the page root. A RelativeSource FindAncestor lookup will not query the current element or any further.</summary>
    </member>
    <member name="F:System.Windows.InheritanceBehavior.SkipToThemeNext">
      <summary>Property value inheritance lookup will query the current element but not any further. A resource lookup will query the current element and will then skip over to the theme dictionaries, rather than walking up the element tree toward the page root, or checking application dictionaries</summary>
    </member>
    <member name="F:System.Windows.InheritanceBehavior.SkipToThemeNow">
      <summary>Property value inheritance lookup will not query the current element or any further. A resource lookup will not query the current element but will skip over to the theme dictionaries, rather than walking up the element tree toward the page root, or checking application dictionaries. A RelativeSource FindAncestor lookup will not query the current element or any further.</summary>
    </member>
    <member name="T:System.Windows.Input.CommandConverter">
      <summary>Converts an <see cref="T:System.Windows.Input.ICommand" /> object to and from other types.</summary>
    </member>
    <member name="M:System.Windows.Input.CommandConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.CommandConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Input.CommandConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether an object of the specified type can be converted to an instance of <see cref="T:System.Windows.Input.ICommand" />, using the specified context.</summary>
      <param name="context">A format context that provides information about the environment from which this converter is being invoked.</param>
      <param name="sourceType">The type being evaluated for conversion.</param>
      <returns>
        <see langword="true" /> if <paramref name="sourceType" /> is of type <see cref="T:System.String" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.CommandConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether an instance of <see cref="T:System.Windows.Input.ICommand" /> can be converted to the specified type, using the specified context.</summary>
      <param name="context">A format context that provides information about the environment from which this converter is being invoked.</param>
      <param name="destinationType">The type being evaluated for conversion.</param>
      <returns>
        <see langword="true" /> if <paramref name="destinationType" /> is of type <see cref="T:System.String" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.CommandConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Attempts to convert the specified object to an <see cref="T:System.Windows.Input.ICommand" />, using the specified context.</summary>
      <param name="context">A format context that provides information about the environment from which this converter is being invoked.</param>
      <param name="culture">Culture specific information.</param>
      <param name="source">The object to convert.</param>
      <returns>The converted object, or <see langword="null" /> if <paramref name="source" /> is an empty string.</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="source" /> cannot be converted.</exception>
    </member>
    <member name="M:System.Windows.Input.CommandConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Attempts to convert an <see cref="T:System.Windows.Input.ICommand" /> to the specified type, using the specified context.</summary>
      <param name="context">A format context that provides information about the environment from which this converter is being invoked.</param>
      <param name="culture">Culture specific information.</param>
      <param name="value">The object to convert.</param>
      <param name="destinationType">The type to convert the object to.</param>
      <returns>The converted object, or an empty string.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> is <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> cannot be converted.</exception>
    </member>
    <member name="T:System.Windows.Input.KeyboardNavigation">
      <summary>Provides logical and directional navigation between focusable objects.</summary>
    </member>
    <member name="P:System.Windows.Input.KeyboardNavigation.AcceptsReturn">
      <summary>Gets or sets a value indicating whether the Return character is accepted by a control.</summary>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigation.AcceptsReturnProperty">
      <summary>Identifies the <see cref="P:System.Windows.Input.KeyboardNavigation.AcceptsReturn" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Input.KeyboardNavigation.ControlTabNavigation">
      <summary>Gets or sets the logical control tab navigation behavior for the children of the element that this property is set on.</summary>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigation.ControlTabNavigationProperty">
      <summary>Identifies the <see cref="P:System.Windows.Input.KeyboardNavigation.ControlTabNavigation" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Input.KeyboardNavigation.DirectionalNavigation">
      <summary>Gets or sets the directional navigation behavior for the children of the element that this property is set on.</summary>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigation.DirectionalNavigationProperty">
      <summary>Identifies the <see cref="P:System.Windows.Input.KeyboardNavigation.DirectionalNavigation" /> attached property.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.GetAcceptsReturn(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Input.KeyboardNavigation.AcceptsReturn" /> attached property for the specified element.</summary>
      <param name="element">The element from which to read the attached property.</param>
      <returns>The value of the <see cref="P:System.Windows.Input.KeyboardNavigation.AcceptsReturn" /> property.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.GetControlTabNavigation(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Input.KeyboardNavigation.ControlTabNavigation" /> attached property for the specified element.</summary>
      <param name="element">Element from which to get the attached property.</param>
      <returns>The value of the <see cref="P:System.Windows.Input.KeyboardNavigation.ControlTabNavigation" /> property.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.GetDirectionalNavigation(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Input.KeyboardNavigation.DirectionalNavigation" /> attached property for the specified element.</summary>
      <param name="element">Element from which to get the attached property.</param>
      <returns>The value of the <see cref="P:System.Windows.Input.KeyboardNavigation.DirectionalNavigation" /> property.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.GetIsTabStop(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Input.KeyboardNavigation.IsTabStop" /> attached property for the specified element.</summary>
      <param name="element">The element from which to read the attached property.</param>
      <returns>The value of the <see cref="P:System.Windows.Input.KeyboardNavigation.IsTabStop" /> property.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.GetTabIndex(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Input.KeyboardNavigation.TabIndex" /> attached property for the specified element.</summary>
      <param name="element">The element from which to read the attached property.</param>
      <returns>The value of the <see cref="P:System.Windows.Input.KeyboardNavigation.TabIndex" /> property.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.GetTabNavigation(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Input.KeyboardNavigation.TabNavigation" /> attached property for the specified element.</summary>
      <param name="element">Element from which to get the attached property.</param>
      <returns>The value of the <see cref="P:System.Windows.Input.KeyboardNavigation.TabNavigation" /> property.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Input.KeyboardNavigation.IsTabStop">
      <summary>Gets or sets a value indicating whether the element that this property is set on is a tab stop.</summary>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigation.IsTabStopProperty">
      <summary>Identifies the <see cref="P:System.Windows.Input.KeyboardNavigation.IsTabStop" /> attached property.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.SetAcceptsReturn(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Input.KeyboardNavigation.AcceptsReturn" /> attached property for the specified element.</summary>
      <param name="element">The element to write the attached property to.</param>
      <param name="enabled">The property value to set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.SetControlTabNavigation(System.Windows.DependencyObject,System.Windows.Input.KeyboardNavigationMode)">
      <summary>Sets the value of the <see cref="P:System.Windows.Input.KeyboardNavigation.ControlTabNavigation" /> attached property for the specified element.</summary>
      <param name="element">Element on which to set the attached property.</param>
      <param name="mode">The property value to set</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.SetDirectionalNavigation(System.Windows.DependencyObject,System.Windows.Input.KeyboardNavigationMode)">
      <summary>Sets the value of the <see cref="P:System.Windows.Input.KeyboardNavigation.DirectionalNavigation" /> attached property for the specified element.</summary>
      <param name="element">Element on which to set the attached property.</param>
      <param name="mode">Property value to set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.SetIsTabStop(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Input.KeyboardNavigation.IsTabStop" /> attached property for the specified element.</summary>
      <param name="element">The element to which to write the attached property.</param>
      <param name="isTabStop">The property value to set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.SetTabIndex(System.Windows.DependencyObject,System.Int32)">
      <summary>Set the value of the <see cref="P:System.Windows.Input.KeyboardNavigation.TabIndex" /> attached property for the specified element.</summary>
      <param name="element">The element on which to set the attached property to.</param>
      <param name="index">The property value to set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.SetTabNavigation(System.Windows.DependencyObject,System.Windows.Input.KeyboardNavigationMode)">
      <summary>Sets the value of the <see cref="P:System.Windows.Input.KeyboardNavigation.TabNavigation" /> attached property for the specified element.</summary>
      <param name="element">Element on which to set the attached property.</param>
      <param name="mode">Property value to set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Input.KeyboardNavigation.TabIndex">
      <summary>Gets or sets the tab index for the element that this property is set on.</summary>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigation.TabIndexProperty">
      <summary>Identifies the <see cref="P:System.Windows.Input.KeyboardNavigation.TabIndex" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Input.KeyboardNavigation.TabNavigation">
      <summary>Gets or sets the logical tab navigation behavior for the children of the element that this property is set on.</summary>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigation.TabNavigationProperty">
      <summary>Identifies the <see cref="P:System.Windows.Input.KeyboardNavigation.TabNavigation" /> attached property.</summary>
    </member>
    <member name="T:System.Windows.Input.KeyboardNavigationMode">
      <summary>Specifies the possible values for changes in focus when logical and directional navigation occurs.</summary>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigationMode.Contained">
      <summary>Depending on the direction of the navigation, focus returns to the first or the last item when the end or the beginning of the container is reached, but does not move past the beginning or end of the container.</summary>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigationMode.Continue">
      <summary>Each element receives keyboard focus, as long as it is a navigation stop.  Navigation leaves the containing element when an edge is reached.</summary>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigationMode.Cycle">
      <summary>Depending on the direction of the navigation, the focus returns to the first or the last item when the end or the beginning of the container is reached.  Focus cannot leave the container using logical navigation.</summary>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigationMode.Local">
      <summary>Tab Indexes are considered on local subtree only inside this container and behave like <see cref="F:System.Windows.Input.KeyboardNavigationMode.Continue" /> after that.</summary>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigationMode.None">
      <summary>No keyboard navigation is allowed inside this container.</summary>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigationMode.Once">
      <summary>The container and all of its child elements as a whole receive focus only once. Either the first tree child or the or the last focused element in the group receives focus</summary>
    </member>
    <member name="T:System.Windows.Interop.ActiveXHost">
      <summary>Hosts an ActiveX control as an element within Windows Presentation Foundation (WPF) content.</summary>
    </member>
    <member name="M:System.Windows.Interop.ActiveXHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)">
      <summary>Creates the <see cref="T:System.Windows.Interop.ActiveXHost" /> window and assigns it to a parent.</summary>
      <param name="hwndParent">The parent window.</param>
      <returns>A <see cref="T:System.Runtime.InteropServices.HandleRef" /> to the <see cref="T:System.Windows.Interop.ActiveXHost" /> window.</returns>
    </member>
    <member name="M:System.Windows.Interop.ActiveXHost.DestroyWindowCore(System.Runtime.InteropServices.HandleRef)">
      <summary>Destroys the hosted window.</summary>
      <param name="hwnd">A structure that contains the window handle.</param>
    </member>
    <member name="M:System.Windows.Interop.ActiveXHost.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by the <see cref="T:System.Windows.Interop.ActiveXHost" /> and optionally releases the managed resources.</summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
    </member>
    <member name="P:System.Windows.Interop.ActiveXHost.IsDisposed">
      <summary>Gets a value that indicates whether the <see cref="M:System.Windows.Interop.ActiveXHost.Dispose(System.Boolean)" /> method has been called on the <see cref="T:System.Windows.Interop.ActiveXHost" /> instance.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Interop.ActiveXHost" /> instance has been disposed; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Interop.ActiveXHost.MeasureOverride(System.Windows.Size)">
      <summary>Returns the size of the window represented by the <see cref="T:System.Windows.Interop.HwndHost" /> object, as requested by layout engine operations.</summary>
      <param name="swConstraint">The size of the <see cref="T:System.Windows.Interop.HwndHost" /> object.</param>
      <returns>The size of the <see cref="T:System.Windows.Interop.HwndHost" /> object.</returns>
    </member>
    <member name="M:System.Windows.Interop.ActiveXHost.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
      <summary>Provides class handling for when an access key that is meaningful for this element is invoked.</summary>
      <param name="args">The event data to the access key event. The event data reports which key was invoked, and indicate whether the <see cref="T:System.Windows.Input.AccessKeyManager" /> object that controls the sending of these events also sent this access key invocation to other elements.</param>
    </member>
    <member name="M:System.Windows.Interop.ActiveXHost.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Invoked whenever the effective value of any dependency property on this <see cref="T:System.Windows.FrameworkElement" /> has been updated. The specific dependency property that changed is reported in the arguments parameter. Overrides <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />.</summary>
      <param name="e">The event data that describes the property that changed, as well as old and new values.</param>
    </member>
    <member name="M:System.Windows.Interop.ActiveXHost.OnWindowPositionChanged(System.Windows.Rect)">
      <summary>Called when the hosted window's position changes.</summary>
      <param name="bounds">The window's position.</param>
    </member>
    <member name="T:System.Windows.Interop.BrowserInteropHelper">
      <summary>A helper class that provides information about the browser environment in which a XAML browser application (XBAP) application is hosted.</summary>
    </member>
    <member name="P:System.Windows.Interop.BrowserInteropHelper.ClientSite">
      <summary>Returns a reference to an object that can be used to access the host browser via its OLE container interfaces (for example, IOleClientSite::GetContainer();).</summary>
      <returns>An object that can be cast to <see cref="T:Microsoft.VisualStudio.OLE.Interop.IOleClientSite" />.</returns>
    </member>
    <member name="P:System.Windows.Interop.BrowserInteropHelper.HostScript">
      <summary>Gets a script object that provides access to the HTML window object, custom script functions, and global variables for the HTML page, if the XAML browser application (XBAP) is hosted in a frame.</summary>
      <returns>A script object that provides access to the HTML window object, custom script functions, and global variables for the HTML page, if the XAML browser application (XBAP) is hosted in a frame; otherwise, <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted">
      <summary>Gets a value that specifies whether the current Windows Presentation Foundation (WPF) application is browser hosted.</summary>
      <returns>
        <see langword="true" /> if the application is browser hosted; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Interop.BrowserInteropHelper.Source">
      <summary>Gets the uniform resource identifier (URI) for the location from which a XAML browser application (XBAP) application was launched.</summary>
      <returns>The <see cref="T:System.Uri" /> for the location from which a XAML browser application (XBAP) application was launched; otherwise, <see langword="null" />.</returns>
    </member>
    <member name="T:System.Windows.Interop.DynamicScriptObject">
      <summary>Enables calls from a XAML browser application (XBAP) to the HTML window that hosts the application.</summary>
    </member>
    <member name="M:System.Windows.Interop.DynamicScriptObject.ToString">
      <summary>Attempts to convert the script object to a string representation.</summary>
      <returns>A string representation of the script object, if the object can be converted; otherwise, a string representation of the object's default property or method.</returns>
    </member>
    <member name="M:System.Windows.Interop.DynamicScriptObject.TryGetIndex(System.Dynamic.GetIndexBinder,System.Object[],System.Object@)">
      <summary>Gets an indexed value from the script object by using the first index value from the <paramref name="indexes" /> collection.</summary>
      <param name="binder">The binder provided by the call site.</param>
      <param name="indexes">The index to be retrieved.</param>
      <param name="result">The method result.</param>
      <returns>Always returns <see langword="true" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binder" /> is <see langword="null" />.  
-or-  
<paramref name="indexes" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">The length of <paramref name="indexes" /> is not equal to 1.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The first <paramref name="indexes" /> value is <see langword="null" />.</exception>
      <exception cref="T:System.MissingMemberException">The member does not exist.</exception>
    </member>
    <member name="M:System.Windows.Interop.DynamicScriptObject.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
      <summary>Gets an member value from the script object.</summary>
      <param name="binder">The binder provided by the call site.</param>
      <param name="result">The method result.</param>
      <returns>Always returns <see langword="true" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binder" /> is <see langword="null" />.</exception>
      <exception cref="T:System.MissingMemberException">The member does not exist.</exception>
    </member>
    <member name="M:System.Windows.Interop.DynamicScriptObject.TryInvoke(System.Dynamic.InvokeBinder,System.Object[],System.Object@)">
      <summary>Calls the default script method.</summary>
      <param name="binder">The binder provided by the call site.</param>
      <param name="args">The arguments to pass to the default method.</param>
      <param name="result">The method result.</param>
      <returns>Always return <see langword="true" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binder" /> is <see langword="null" />.</exception>
      <exception cref="T:System.MissingMethodException">The method does not exist.</exception>
    </member>
    <member name="M:System.Windows.Interop.DynamicScriptObject.TryInvokeMember(System.Dynamic.InvokeMemberBinder,System.Object[],System.Object@)">
      <summary>Calls a method on the script object.</summary>
      <param name="binder">The binder provided by the call site.</param>
      <param name="args">The arguments to pass to the default method.</param>
      <param name="result">The method result.</param>
      <returns>Always return <see langword="true" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binder" /> is <see langword="null" />.</exception>
      <exception cref="T:System.MissingMethodException">The method does not exist.</exception>
    </member>
    <member name="M:System.Windows.Interop.DynamicScriptObject.TrySetIndex(System.Dynamic.SetIndexBinder,System.Object[],System.Object)">
      <summary>Sets a member on the script object by using the first index specified in the <paramref name="indexes" /> collection.</summary>
      <param name="binder">The binder provided by the call site.</param>
      <param name="indexes">The index to be retrieved.</param>
      <param name="value">The method result</param>
      <returns>Always returns <see langword="true" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binder" /> is <see langword="null" />.  
-or-  
<paramref name="indexes" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">The length of <paramref name="indexes" /> is not equal to 1.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The first <paramref name="indexes" /> value is <see langword="null" />.</exception>
      <exception cref="T:System.MissingMemberException">The member does not exist.</exception>
    </member>
    <member name="M:System.Windows.Interop.DynamicScriptObject.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
      <summary>Sets a member on the script object to the specified value.</summary>
      <param name="binder">The binder provided by the call site.</param>
      <param name="value">The value to set for the member.</param>
      <returns>Always returns <see langword="true" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binder" /> is <see langword="null" />.  
-or-  
<paramref name="indexes" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">The length of <paramref name="indexes" /> is not equal to 1.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The first <paramref name="indexes" /> value is <see langword="null" />.</exception>
      <exception cref="T:System.MissingMemberException">The member does not exist.</exception>
    </member>
    <member name="T:System.Windows.Interop.HwndHost">
      <summary>Hosts a Win32 window as an element within Windows Presentation Foundation (WPF) content.</summary>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndHost" /> class.</summary>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)">
      <summary>When overridden in a derived class, creates the window to be hosted.</summary>
      <param name="hwndParent">The window handle of the parent window.</param>
      <returns>The handle to the child Win32 window to create.</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.DestroyWindowCore(System.Runtime.InteropServices.HandleRef)">
      <summary>When overridden in a derived class, destroys the hosted window.</summary>
      <param name="hwnd">A structure that contains the window handle.</param>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.Dispose">
      <summary>Immediately frees any system resources that the object might hold.</summary>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.Dispose(System.Boolean)">
      <summary>Immediately frees any system resources that the object might hold.</summary>
      <param name="disposing">Set to <see langword="true" /> if called from an explicit disposer and <see langword="false" /> otherwise.</param>
    </member>
    <member name="E:System.Windows.Interop.HwndHost.DpiChanged">
      <summary>Occurs after the DPI of the screen on which the HwndHost is displayed changes.</summary>
    </member>
    <member name="F:System.Windows.Interop.HwndHost.DpiChangedEvent">
      <summary>A <see cref="T:System.Windows.RoutedEvent" /> for when the DPI of the screen the HwndHost is on changes.</summary>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.Finalize">
      <summary>Performs the final cleanup before the garbage collector destroys the object.</summary>
    </member>
    <member name="P:System.Windows.Interop.HwndHost.Handle">
      <summary>Gets the window handle  of the hosted window.</summary>
      <returns>The window handle.</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.HasFocusWithinCore">
      <summary>Gets a value that indicates whether the sink or one of its contained components has focus.</summary>
      <returns>
        <see langword="true" /> if the sink or one of its contained components has focus; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.MeasureOverride(System.Windows.Size)">
      <summary>Returns the size of the window represented by the <see cref="T:System.Windows.Interop.HwndHost" /> object, as requested by layout engine operations.</summary>
      <param name="constraint">The size of the <see cref="T:System.Windows.Interop.HwndHost" /> object.</param>
      <returns>The size of the <see cref="T:System.Windows.Interop.HwndHost" /> object.</returns>
    </member>
    <member name="E:System.Windows.Interop.HwndHost.MessageHook">
      <summary>Occurs for each unhandled message that is received by the hosted window.</summary>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.OnCreateAutomationPeer">
      <summary>Creates an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for <see cref="T:System.Windows.Interop.HwndHost" /> .</summary>
      <returns>The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)">
      <summary>Called when the DPI at which this HwndHost is rendered changes.</summary>
      <param name="oldDpi">The original DPI scale setting.</param>
      <param name="newDpi">The new DPI scale setting.</param>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Called when the hosted window receives a WM_KEYDOWN message.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.OnKeyUp(System.Windows.Input.KeyEventArgs)">
      <summary>Called when the hosted window receives a WM_KEYUP message.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.OnMnemonicCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary>Called when one of the mnemonics (access keys) for this sink is invoked.</summary>
      <param name="msg">The message for the mnemonic and associated data.</param>
      <param name="modifiers">Modifier keys.</param>
      <returns>Always returns <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.OnWindowPositionChanged(System.Windows.Rect)">
      <summary>Called when the hosted window's position changes.</summary>
      <param name="rcBoundingBox">The window's position.</param>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.RegisterKeyboardInputSinkCore(System.Windows.Interop.IKeyboardInputSink)">
      <summary>Registers the <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> interface of a contained component.</summary>
      <param name="sink">The <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> sink of the contained component.</param>
      <returns>The <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> site of the contained component.</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#HasFocusWithin">
      <summary>For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin" />.</summary>
      <returns>
        <see langword="true" /> if the sink or one of its contained components has focus; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#KeyboardInputSite">
      <summary>For a description of this member, see <see cref="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />.</summary>
      <returns>A reference to the container's <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> interface.</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />.</summary>
      <param name="msg">The message for the mnemonic and associated data. Do not modify this message structure. It is passed by reference for performance reasons only.</param>
      <param name="modifiers">Modifier keys.</param>
      <returns>
        <see langword="true" /> if the message was handled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />.</summary>
      <param name="sink">The <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> sink of the contained component.</param>
      <returns>The <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> site of the contained component.</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TabInto(System.Windows.Input.TraversalRequest)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />.</summary>
      <param name="request">Specifies whether focus should be set to the first or the last tab stop.</param>
      <returns>
        <see langword="true" /> if the focus has been set as requested; <see langword="false" />, if there are no tab stops.</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />.</summary>
      <param name="msg">The message and associated data. Do not modify this structure. It is passed by reference for performance reasons only.</param>
      <param name="modifiers">Modifier keys.</param>
      <returns>
        <see langword="true" /> if the message was handled by the method implementation; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />.</summary>
      <param name="msg">The message and associated data. Do not modify this structure. It is passed by reference for performance reasons only.</param>
      <param name="modifiers">Modifier keys.</param>
      <returns>
        <see langword="true" /> if the message was processed and <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> should not be called; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.TabIntoCore(System.Windows.Input.TraversalRequest)">
      <summary>Sets focus on either the first tab stop or the last tab stop of the sink.</summary>
      <param name="request">Specifies whether focus should be set to the first or the last tab stop.</param>
      <returns>Always returns <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary>Processes keyboard input at the keydown message level.</summary>
      <param name="msg">The message and associated data. Do not modify this structure. It is passed by reference for performance reasons only.</param>
      <param name="modifiers">Modifier keys.</param>
      <returns>Always returns <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.TranslateCharCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary>Processes WM_CHAR, WM_SYSCHAR, WM_DEADCHAR, and WM_SYSDEADCHAR input messages before the <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> method is called.</summary>
      <param name="msg">The message and associated data. Do not modify this structure. It is passed by reference for performance reasons only.</param>
      <param name="modifiers">Modifier keys.</param>
      <returns>Always returns <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.UpdateWindowPos">
      <summary>Updates the child window's size, visibility, and position to reflect the current state of the element.</summary>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
      <summary>When overridden in a derived class, accesses the window process (handle) of the hosted child window.</summary>
      <param name="hwnd">The window handle of the hosted window.</param>
      <param name="msg">The message to act upon.</param>
      <param name="wParam">Information that may be relevant to handling the message. This is typically used to store small pieces of information, such as flags.</param>
      <param name="lParam">Information that may be relevant to handling the message. This is typically used to reference an object.</param>
      <param name="handled">Whether events resulting should be marked handled.</param>
      <returns>The window handle of the child window.</returns>
    </member>
    <member name="T:System.Windows.Interop.IErrorPage">
      <summary>Defines the interaction between Windows Presentation Foundation (WPF) applications that are hosting interoperation content and interpreted by the Windows Presentation Foundation (WPF) executable, and a host supplied error page.</summary>
    </member>
    <member name="P:System.Windows.Interop.IErrorPage.DeploymentPath">
      <summary>Gets or sets the path to an application's deployment manifest.</summary>
      <returns>The path to an application's deployment manifest.</returns>
    </member>
    <member name="P:System.Windows.Interop.IErrorPage.ErrorFlag">
      <summary>Gets or sets a value that indicates whether this represents an error or some other condition such as a warning. <see langword="true" /> denotes an error.</summary>
      <returns>
        <see langword="true" /> denotes an error; <see langword="false" /> denotes another condition such as a warning.</returns>
    </member>
    <member name="P:System.Windows.Interop.IErrorPage.ErrorText">
      <summary>Gets or sets a verbose description of the error.</summary>
      <returns>Description of the error.</returns>
    </member>
    <member name="P:System.Windows.Interop.IErrorPage.ErrorTitle">
      <summary>Gets or sets the string title of the error page.</summary>
      <returns>The string title of the error page.</returns>
    </member>
    <member name="P:System.Windows.Interop.IErrorPage.GetWinFxCallback">
      <summary>Gets or sets a reference to a <see cref="T:System.Windows.Threading.DispatcherOperationCallback" /> handler, which can handle requests for .NET Framework runtime downloads.</summary>
      <returns>A <see cref="T:System.Windows.Threading.DispatcherOperationCallback" /> handler,</returns>
    </member>
    <member name="P:System.Windows.Interop.IErrorPage.LogFilePath">
      <summary>Gets or sets the string path to the error's log file, if any.</summary>
      <returns>Path to an associated error file. May be an empty string.</returns>
    </member>
    <member name="P:System.Windows.Interop.IErrorPage.RefreshCallback">
      <summary>Gets or sets a reference to a <see cref="T:System.Windows.Threading.DispatcherOperationCallback" /> handler, that can handle refresh of the error page.</summary>
      <returns>A <see cref="T:System.Windows.Threading.DispatcherOperationCallback" /> handler to handle refresh of error page.</returns>
    </member>
    <member name="P:System.Windows.Interop.IErrorPage.SupportUri">
      <summary>Gets or sets a uniform resource identifier (URI) for support information associated with the error.</summary>
      <returns>A link for support information.</returns>
    </member>
    <member name="T:System.Windows.Interop.IProgressPage">
      <summary>Defines the interaction between Windows Presentation Foundation (WPF) applications that are hosting interoperation content, and a host supplied progress page.</summary>
    </member>
    <member name="P:System.Windows.Interop.IProgressPage.ApplicationName">
      <summary>Gets or sets  the application's name.</summary>
      <returns>Name of the application that originates the progress page.</returns>
    </member>
    <member name="P:System.Windows.Interop.IProgressPage.DeploymentPath">
      <summary>Gets or sets the <see cref="T:System.Uri" /> path to the application deployment manifest.</summary>
      <returns>The application deployment manifest path.</returns>
    </member>
    <member name="P:System.Windows.Interop.IProgressPage.PublisherName">
      <summary>Gets or sets the application's publisher.</summary>
      <returns>The publisher identifying string.</returns>
    </member>
    <member name="P:System.Windows.Interop.IProgressPage.RefreshCallback">
      <summary>Gets or sets a reference to a <see cref="T:System.Windows.Threading.DispatcherOperationCallback" /> handler, that can handle the case of a user-initiated Refresh command.</summary>
      <returns>The callback reference.</returns>
    </member>
    <member name="P:System.Windows.Interop.IProgressPage.StopCallback">
      <summary>Gets or sets a reference to a <see cref="T:System.Windows.Threading.DispatcherOperationCallback" /> handler, that can handle the case of a user-initiated Stop command.</summary>
      <returns>The callback reference.</returns>
    </member>
    <member name="M:System.Windows.Interop.IProgressPage.UpdateProgress(System.Int64,System.Int64)">
      <summary>Provides upload progress numeric information that can be used to update the progress indicators.</summary>
      <param name="bytesDownloaded">Total bytes downloaded thus far.</param>
      <param name="bytesTotal">Total bytes that need to be downloaded for the application.</param>
    </member>
    <member name="T:System.Windows.Interop.WindowInteropHelper">
      <summary>Assists interoperation between Windows Presentation Foundation (WPF) and Win32 code.</summary>
    </member>
    <member name="M:System.Windows.Interop.WindowInteropHelper.#ctor(System.Windows.Window)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Interop.WindowInteropHelper" /> class for a specified Windows Presentation Foundation (WPF) window.</summary>
      <param name="window">A WPF window object.</param>
    </member>
    <member name="M:System.Windows.Interop.WindowInteropHelper.EnsureHandle">
      <summary>Creates the HWND of the window if the HWND has not been created yet.</summary>
      <returns>An <see cref="T:System.IntPtr" /> that represents the HWND.</returns>
    </member>
    <member name="P:System.Windows.Interop.WindowInteropHelper.Handle">
      <summary>Gets the window handle for a Windows Presentation Foundation (WPF) window that is used to create this <see cref="T:System.Windows.Interop.WindowInteropHelper" />.</summary>
      <returns>The Windows Presentation Foundation (WPF) window handle (HWND).</returns>
    </member>
    <member name="P:System.Windows.Interop.WindowInteropHelper.Owner">
      <summary>Gets or sets the handle of the Windows Presentation Foundation (WPF) owner window.</summary>
      <returns>The owner window handle (HWND).</returns>
    </member>
    <member name="T:System.Windows.LengthConverter">
      <summary>Converts instances of other types to and from instances of a <see cref="T:System.Double" /> that represent an object's length.</summary>
    </member>
    <member name="M:System.Windows.LengthConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.LengthConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.LengthConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether conversion is possible from a specified type to a <see cref="T:System.Double" /> that represents an object's length.</summary>
      <param name="typeDescriptorContext">Provides contextual information about a component.</param>
      <param name="sourceType">Identifies the data type to evaluate for conversion.</param>
      <returns>
        <see langword="true" /> if conversion is possible; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.LengthConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether conversion is possible to a specified type from a <see cref="T:System.Double" /> that represents an object's length.</summary>
      <param name="typeDescriptorContext">Provides contextual information about a component.</param>
      <param name="destinationType">Identifies the data type to evaluate for conversion.</param>
      <returns>
        <see langword="true" /> if conversion to the <paramref name="destinationType" /> is possible; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.LengthConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts instances of other data types into instances of <see cref="T:System.Double" /> that represent an object's length.</summary>
      <param name="typeDescriptorContext">Provides contextual information about a component.</param>
      <param name="cultureInfo">Represents culture-specific information that is maintained during a conversion.</param>
      <param name="source">Identifies the object that is being converted to <see cref="T:System.Double" />.</param>
      <returns>An instance of <see cref="T:System.Double" /> that is the value of the conversion.</returns>
      <exception cref="T:System.ArgumentNullException">Occurs if the <paramref name="source" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Occurs if the <paramref name="source" /> is not <see langword="null" /> and is not a valid type for conversion.</exception>
    </member>
    <member name="M:System.Windows.LengthConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts other types into instances of <see cref="T:System.Double" /> that represent an object's length.</summary>
      <param name="typeDescriptorContext">Describes context information of a component, such as its container and <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
      <param name="cultureInfo">Identifies culture-specific information, including the writing system and the calendar that is used.</param>
      <param name="value">Identifies the <see cref="T:System.Object" /> that is being converted.</param>
      <param name="destinationType">The data type that this instance of <see cref="T:System.Double" /> is being converted to.</param>
      <returns>A new <see cref="T:System.Object" /> that is the value of the conversion.</returns>
      <exception cref="T:System.ArgumentNullException">Occurs if the <paramref name="value" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Occurs if the <paramref name="value" /> is not <see langword="null" /> and is not a <see cref="T:System.Windows.Media.Brush" />, or the <paramref name="destinationType" /> is not valid.</exception>
    </member>
    <member name="T:System.Windows.LineStackingStrategy">
      <summary>Describes a mechanism by which a line box is determined for each line.</summary>
    </member>
    <member name="F:System.Windows.LineStackingStrategy.BlockLineHeight">
      <summary>The stack height is determined by the block element line-height property value.</summary>
    </member>
    <member name="F:System.Windows.LineStackingStrategy.MaxHeight">
      <summary>The stack height is the smallest value that containing all the inline elements on that line when those elements are properly aligned.</summary>
    </member>
    <member name="T:System.Windows.Localization">
      <summary>The <see cref="T:System.Windows.Localization" /> class defines attached properties for localization attributes and comments.</summary>
    </member>
    <member name="F:System.Windows.Localization.AttributesProperty">
      <summary>Identifies the <see cref="System.Windows.Localization.Attributes" /> attached property.</summary>
    </member>
    <member name="F:System.Windows.Localization.CommentsProperty">
      <summary>Identifies the <see cref="System.Windows.Localization.Comments" /> attached property.</summary>
    </member>
    <member name="M:System.Windows.Localization.GetAttributes(System.Object)">
      <summary>Gets the value of the <see cref="F:System.Windows.Localization.AttributesProperty" /> attached property from a specified element.</summary>
      <param name="element">A <see cref="T:System.Object" /> that represents the element whose attached property you want to retrieve.</param>
      <returns>A <see cref="T:System.String" /> value that represents the localization attribute.</returns>
    </member>
    <member name="M:System.Windows.Localization.GetComments(System.Object)">
      <summary>Gets the value of the <see cref="F:System.Windows.Localization.CommentsProperty" /> attached property from a specified element.</summary>
      <param name="element">A <see cref="T:System.Object" /> that represents the element whose attached property you want to retrieve.</param>
      <returns>A <see cref="T:System.String" /> value that represents the localization comment.</returns>
    </member>
    <member name="M:System.Windows.Localization.SetAttributes(System.Object,System.String)">
      <summary>Sets the <see cref="F:System.Windows.Localization.AttributesProperty" /> attached property for the specified element.</summary>
      <param name="element">A <see cref="T:System.Object" /> that represents the element whose attached property you want to set.</param>
      <param name="attributes">A <see cref="T:System.String" /> that specifies the localization attributes.</param>
    </member>
    <member name="M:System.Windows.Localization.SetComments(System.Object,System.String)">
      <summary>Sets the <see cref="F:System.Windows.Localization.CommentsProperty" /> attached property to the specified element.</summary>
      <param name="element">A <see cref="T:System.Object" /> that represents the element whose attached property you want to set.</param>
      <param name="comments">A <see cref="T:System.String" /> that specifies the localization comments.</param>
    </member>
    <member name="T:System.Windows.LogicalTreeHelper">
      <summary>Provides static helper methods for querying objects in the logical tree.</summary>
    </member>
    <member name="M:System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)">
      <summary>Attempts to bring the requested UI element into view and raises the <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> event on the target in order to report the results.</summary>
      <param name="current">The UI element to bring into view.</param>
    </member>
    <member name="M:System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)">
      <summary>Attempts to find and return an object that has the specified name. The search starts from the specified object and continues into subnodes of the logical tree.</summary>
      <param name="logicalTreeNode">The object to start searching from. This object must be either a <see cref="T:System.Windows.FrameworkElement" /> or a <see cref="T:System.Windows.FrameworkContentElement" />.</param>
      <param name="elementName">The name of the object to find.</param>
      <returns>The object with the matching name, if one is found; returns <see langword="null" /> if no matching name was found in the logical tree.</returns>
    </member>
    <member name="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.DependencyObject)">
      <summary>Returns the collection of immediate child objects of the specified object, by processing the logical tree.</summary>
      <param name="current">The object from which to start processing the logical tree. This is expected to be either a <see cref="T:System.Windows.FrameworkElement" /> or <see cref="T:System.Windows.FrameworkContentElement" />.</param>
      <returns>The enumerable collection of immediate child objects from the logical tree of the specified object.</returns>
    </member>
    <member name="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkContentElement)">
      <summary>Returns the collection of immediate child objects of the specified <see cref="T:System.Windows.FrameworkContentElement" /> by processing the logical tree.</summary>
      <param name="current">The object from which to start processing the logical tree.</param>
      <returns>The enumerable collection of immediate child objects starting from <paramref name="current" /> in the logical tree.</returns>
    </member>
    <member name="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkElement)">
      <summary>Returns the collection of immediate child objects of the specified <see cref="T:System.Windows.FrameworkElement" /> by processing the logical tree.</summary>
      <param name="current">The object from which to start processing the logical tree.</param>
      <returns>The enumerable collection of immediate child objects starting from <paramref name="current" /> in the logical tree.</returns>
    </member>
    <member name="M:System.Windows.LogicalTreeHelper.GetParent(System.Windows.DependencyObject)">
      <summary>Returns the parent object of the specified object by processing the logical tree.</summary>
      <param name="current">The object to find the parent object for. This is expected to be either a <see cref="T:System.Windows.FrameworkElement" /> or a <see cref="T:System.Windows.FrameworkContentElement" />.</param>
      <returns>The requested parent object.</returns>
    </member>
    <member name="T:System.Windows.LostFocusEventManager">
      <summary>Provides a <see cref="T:System.Windows.WeakEventManager" /> implementation so that you can use the "weak event listener" pattern to attach listeners for the <see cref="E:System.Windows.UIElement.LostFocus" /> or <see cref="E:System.Windows.ContentElement.LostFocus" /> events.</summary>
    </member>
    <member name="M:System.Windows.LostFocusEventManager.AddHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.RoutedEventArgs})">
      <summary>Adds the specified event handler, which is called when specified source raises the <see cref="E:System.Windows.UIElement.LostFocus" /> or <see cref="E:System.Windows.ContentElement.LostFocus" /> event.</summary>
      <param name="source">The source object that the raises the <see cref="E:System.Windows.UIElement.LostFocus" /> or <see cref="E:System.Windows.ContentElement.LostFocus" /> event.</param>
      <param name="handler">The delegate that handles the <see cref="E:System.Windows.UIElement.LostFocus" /> or <see cref="E:System.Windows.ContentElement.LostFocus" /> event.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handler" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.LostFocusEventManager.AddListener(System.Windows.DependencyObject,System.Windows.IWeakEventListener)">
      <summary>Adds the provided listener to the list of listeners on the provided source.</summary>
      <param name="source">The object with the event.</param>
      <param name="listener">The object to add as a listener.</param>
    </member>
    <member name="M:System.Windows.LostFocusEventManager.NewListenerList">
      <summary>Returns a new object to contain listeners to the <see cref="E:System.Windows.UIElement.LostFocus" /> or <see cref="E:System.Windows.ContentElement.LostFocus" /> event.</summary>
      <returns>A new object to contain listeners to the <see cref="E:System.Windows.UIElement.LostFocus" /> or <see cref="E:System.Windows.ContentElement.LostFocus" /> event.</returns>
    </member>
    <member name="M:System.Windows.LostFocusEventManager.RemoveHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.RoutedEventArgs})">
      <summary>Removes the specified event handler from the specified source.</summary>
      <param name="source">The source object that the raises the <see cref="E:System.Windows.UIElement.LostFocus" /> or <see cref="E:System.Windows.ContentElement.LostFocus" /> event.</param>
      <param name="handler">The delegate that handles the <see cref="E:System.Windows.UIElement.LostFocus" /> or <see cref="E:System.Windows.ContentElement.LostFocus" /> event.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handler" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.LostFocusEventManager.RemoveListener(System.Windows.DependencyObject,System.Windows.IWeakEventListener)">
      <summary>Removes the specified listener from the list of listeners on the provided source.</summary>
      <param name="source">The object to remove the listener from.</param>
      <param name="listener">The listener to remove.</param>
    </member>
    <member name="M:System.Windows.LostFocusEventManager.StartListening(System.Object)">
      <summary>Begins listening for the <see cref="E:System.Windows.UIElement.LostFocus" /> event on the given source, attaching an internal class handler to that source.</summary>
      <param name="source">The object on which to start listening for the pertinent <see cref="E:System.Windows.UIElement.LostFocus" /> event.</param>
    </member>
    <member name="M:System.Windows.LostFocusEventManager.StopListening(System.Object)">
      <summary>Stops listening for the <see cref="E:System.Windows.UIElement.LostFocus" /> event on the given source.</summary>
      <param name="source">The source object on which to stop listening for <see cref="E:System.Windows.UIElement.LostFocus" />.</param>
    </member>
    <member name="T:System.Windows.Markup.ComponentResourceKeyConverter">
      <summary>Implements a type converter for <see cref="T:System.Windows.ComponentResourceKey" /> objects, which deliberately have no type conversion pathways. The type converter enforces and reports that behavior.</summary>
    </member>
    <member name="M:System.Windows.Markup.ComponentResourceKeyConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.ComponentResourceKeyConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Markup.ComponentResourceKeyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether an object of the specified type can be converted to an instance of <see cref="T:System.Windows.ComponentResourceKey" />, using the specified context. Always returns <see langword="false" />.</summary>
      <param name="context">A format context that provides information about the environment from which this converter is being invoked.</param>
      <param name="sourceType">The type being evaluated for conversion.</param>
      <returns>
        <see langword="false" /> in all cases.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceType" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.ComponentResourceKeyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether an instance of <see cref="T:System.Windows.ComponentResourceKey" /> can be converted to the specified type, using the specified context. Always returns <see langword="false" />.</summary>
      <param name="context">A format context that provides information about the environment from which this converter is being invoked.</param>
      <param name="destinationType">The type being evaluated for conversion.</param>
      <returns>
        <see langword="false" /> in all cases.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.ComponentResourceKeyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Attempts to convert the specified object to a <see cref="T:System.Windows.ComponentResourceKey" />, using the specified context. Throws an exception in all cases.</summary>
      <param name="context">A format context that provides information about the environment from which this converter is being invoked.</param>
      <param name="culture">Culture specific information.</param>
      <param name="value">The object to convert.</param>
      <returns>Throws an exception in all cases.</returns>
      <exception cref="T:System.NotSupportedException">Cannot perform the conversion.</exception>
    </member>
    <member name="M:System.Windows.Markup.ComponentResourceKeyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Attempts to convert a <see cref="T:System.Windows.ComponentResourceKey" /> to the specified type, using the specified context. Throws an exception in all cases.</summary>
      <param name="context">A format context that provides information about the environment from which this converter is being invoked.</param>
      <param name="culture">Culture specific information.</param>
      <param name="value">The object to convert.</param>
      <param name="destinationType">The type to convert the object to.</param>
      <returns>Throws an exception in all cases.</returns>
      <exception cref="T:System.NotSupportedException">Cannot perform the conversion.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not type of <see cref="T:System.Windows.ComponentResourceKey" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> is <see langword="null" />.</exception>
    </member>
    <member name="T:System.Windows.Markup.DependencyPropertyConverter">
      <summary>Converts from a string to a <see cref="T:System.Windows.DependencyProperty" /> object.</summary>
    </member>
    <member name="M:System.Windows.Markup.DependencyPropertyConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.DependencyPropertyConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Markup.DependencyPropertyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether an object of the specified type can be converted to an instance of <see cref="T:System.Windows.DependencyProperty" />.</summary>
      <param name="context">A format context that provides information about the environment from which this converter is being invoked.</param>
      <param name="sourceType">The type being evaluated for conversion.</param>
      <returns>
        <see langword="true" /> if this converter can perform the operation; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.DependencyPropertyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether an instance of <see cref="T:System.Windows.DependencyProperty" /> can be converted to the specified type.</summary>
      <param name="context">A format context that provides information about the environment from which this converter is being invoked.</param>
      <param name="destinationType">The type being evaluated for conversion.</param>
      <returns>
        <see langword="true" /> if this converter can perform the operation; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.DependencyPropertyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Attempts to convert the specified object to a <see cref="T:System.Windows.DependencyProperty" />, using the specified context.</summary>
      <param name="context">A format context that provides information about the environment from which this converter is being invoked.</param>
      <param name="culture">Culture specific information.</param>
      <param name="source">The object to convert.</param>
      <returns>The converted object. If the conversion is successful, this is a <see cref="T:System.Windows.DependencyProperty" />.</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="source" /> cannot be converted.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> or <paramref name="source" /> are <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.DependencyPropertyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Attempts to convert a <see cref="T:System.Windows.DependencyProperty" /> to the specified type, using the specified context. Always throws an exception.</summary>
      <param name="context">A format context that provides information about the environment from which this converter is being invoked.</param>
      <param name="culture">Culture specific information.</param>
      <param name="value">The object to convert.</param>
      <param name="destinationType">The type to convert the object to.</param>
      <returns>Always throws an exception.</returns>
      <exception cref="T:System.NotSupportedException">In all cases.</exception>
    </member>
    <member name="T:System.Windows.Markup.EventSetterHandlerConverter">
      <summary>Converts the string name of an event setter handler to a delegate representation.</summary>
    </member>
    <member name="M:System.Windows.Markup.EventSetterHandlerConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.EventSetterHandlerConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Markup.EventSetterHandlerConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns whether this converter can convert an object of one type to a <see cref="T:System.Delegate" />.</summary>
      <param name="typeDescriptorContext">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="sourceType">A <see cref="T:System.Type" /> that represents the type you want to convert from.</param>
      <returns>
        <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.EventSetterHandlerConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns whether this converter can convert the object to the specified type.</summary>
      <param name="typeDescriptorContext">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
      <returns>Always returns <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.EventSetterHandlerConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the specified string to a new <see cref="T:System.Delegate" /> for the event handler.</summary>
      <param name="typeDescriptorContext">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="cultureInfo">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</param>
      <param name="source">The source string to convert.</param>
      <returns>A new <see cref="T:System.Delegate" /> that represents the referenced event handler.</returns>
      <exception cref="T:System.NotSupportedException">The necessary services are not available.  
 -or-  
 Could not perform the specific conversion.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeDescriptorContext" /> or <paramref name="source" /> are <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.EventSetterHandlerConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the specified value object to the specified type. Always throws an exception.</summary>
      <param name="typeDescriptorContext">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="cultureInfo">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</param>
      <param name="value">The value to convert.</param>
      <param name="destinationType">The type to convert the <paramref name="value" /> parameter to.</param>
      <returns>Always throws an exception.</returns>
      <exception cref="T:System.NotSupportedException">Thrown in all cases.</exception>
    </member>
    <member name="T:System.Windows.Markup.IStyleConnector">
      <summary>Provides methods used internally by the WPF XAML parser to attach events and event setters in compiled XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.IStyleConnector.Connect(System.Int32,System.Object)">
      <summary>Attaches events on event setters and templates in compiled content.</summary>
      <param name="connectionId">The unique connection ID for event wiring purposes.</param>
      <param name="target">The target for event wiring.</param>
    </member>
    <member name="T:System.Windows.Markup.Localizer.BamlLocalizabilityResolver">
      <summary>Resolves localizable settings for classes and properties in binary XAML (BAML).</summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizabilityResolver.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizabilityResolver" /> class.</summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizabilityResolver.GetElementLocalizability(System.String,System.String)">
      <summary>Returns a value that indicates whether a specified type of element can be localized and, if so, whether it can be formatted inline.</summary>
      <param name="assembly">The full name of the assembly that contains BAML to be localized.</param>
      <param name="className">The full class name of the element that you want to retrieve localizability information for.</param>
      <returns>An object that contains the localizability information for the specified assembly and element.</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizabilityResolver.GetPropertyLocalizability(System.String,System.String,System.String)">
      <summary>Returns a value that indicates whether a specified property of a specified type of element can be localized.</summary>
      <param name="assembly">The full name of the assembly that contains BAML to be localized.</param>
      <param name="className">The full class name of the element that you want to retrieve localizability information for.</param>
      <param name="property">The name of the property that you want to retrieve localizability information for.</param>
      <returns>An object that specifies whether and how the property can be localized.</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizabilityResolver.ResolveAssemblyFromClass(System.String)">
      <summary>Returns the full name of the assembly that contains the specified class.</summary>
      <param name="className">The full class name.</param>
      <returns>The full name of the assembly that contains the class.</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizabilityResolver.ResolveFormattingTagToClass(System.String)">
      <summary>Returns the full class name of a XAML tag that has not been encountered in BAML.</summary>
      <param name="formattingTag">The name of the tag.</param>
      <returns>The full class name associated with the tag.</returns>
    </member>
    <member name="T:System.Windows.Markup.Localizer.BamlLocalizableResource">
      <summary>Represents a localizable resource in a BAML stream.</summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizableResource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResource" /> class.</summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizableResource.#ctor(System.String,System.String,System.Windows.LocalizationCategory,System.Boolean,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResource" /> class, with the specified localizable value, localization comments, resource category, localization lock status, and visibility of the resource.</summary>
      <param name="content">The localizable value.</param>
      <param name="comments">Comments used for localizing.</param>
      <param name="category">The string category of the resource.</param>
      <param name="modifiable">
        <see langword="true" /> if the resource should be modifiable; otherwise, <see langword="false" />.</param>
      <param name="readable">
        <see langword="true" /> if the resource should be visible for translation purposes because it is potentially readable as text in the UI; otherwise, <see langword="false" />.</param>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizableResource.Category">
      <summary>Gets or sets the localization category of a resource.</summary>
      <returns>The localization category, as a value of the enumeration.</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizableResource.Comments">
      <summary>Gets or sets the localization comments associated with a resource.</summary>
      <returns>The localization comment string.</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizableResource.Content">
      <summary>Gets or sets the localizable content.</summary>
      <returns>The localizable content string.</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizableResource.Equals(System.Object)">
      <summary>Determines whether a specified <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResource" /> object is equal to this object.</summary>
      <param name="other">The <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResource" /> object test for equality.</param>
      <returns>
        <see langword="true" /> if <paramref name="other" /> is equal to this object; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizableResource.GetHashCode">
      <summary>Returns an integer hash code representing this instance.</summary>
      <returns>An integer hash code.</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizableResource.Modifiable">
      <summary>Gets or sets a value that indicates whether the localizable resource is modifiable.</summary>
      <returns>
        <see langword="true" /> if the resource is modifiable; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizableResource.Readable">
      <summary>Gets or sets whether the resource is visible for translation.</summary>
      <returns>
        <see langword="true" /> if the resource is visible for translation; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey">
      <summary>Represents a key that is used to identify localizable resources in a <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey" /> class with the supplied Uid, class name, and property name.</summary>
      <param name="uid">The Uid of an element that has a localizable resource.</param>
      <param name="className">The class name of a localizable resource in binary XAML (BAML).</param>
      <param name="propertyName">The property name of a localizable resource in BAML.</param>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.AssemblyName">
      <summary>Gets the name of the assembly that defines the type of the localizable resource as declared by its <see cref="P:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.ClassName" />.</summary>
      <returns>The name of the assembly.</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.ClassName">
      <summary>Gets the class name component of this <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey" />.</summary>
      <returns>The class name component of this <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.Equals(System.Object)">
      <summary>Compares an object to an instance of <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey" /> for equality.</summary>
      <param name="other">The object to compare for equality.</param>
      <returns>
        <see langword="true" /> if the two instances are equal; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.Equals(System.Windows.Markup.Localizer.BamlLocalizableResourceKey)">
      <summary>Compares two instances of <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey" /> for equality.</summary>
      <param name="other">The other instance of <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey" /> to compare for equality.</param>
      <returns>
        <see langword="true" /> if the two instances are equal; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.GetHashCode">
      <summary>Returns an integer hash code representing this instance.</summary>
      <returns>An integer hash code.</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.PropertyName">
      <summary>Gets the property name component of this <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey" />.</summary>
      <returns>The property name component of this <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.Uid">
      <summary>Gets the Uid component of this <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey" />.</summary>
      <returns>The Uid component of this <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey" />.</returns>
    </member>
    <member name="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary">
      <summary>Contains all the localizable resources in a BAML record.</summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> class.</summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.Add(System.Windows.Markup.Localizer.BamlLocalizableResourceKey,System.Windows.Markup.Localizer.BamlLocalizableResource)">
      <summary>Adds an item with the provided key and value to the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" />.</summary>
      <param name="key">A key for the resource.</param>
      <param name="value">An object that contains the resource.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">An item with the same key already exists.</exception>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.Clear">
      <summary>Deletes all resources from the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> object.</summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.Contains(System.Windows.Markup.Localizer.BamlLocalizableResourceKey)">
      <summary>Determines whether a <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> object contains a resource with a specified key.</summary>
      <param name="key">The resource key to find.</param>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> object contains a resource with the specified key; otherwise, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">key is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.CopyTo(System.Collections.DictionaryEntry[],System.Int32)">
      <summary>Copies the contents of a <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> object to a one-dimensional array of <see cref="T:System.Collections.DictionaryEntry" /> objects, starting at a specified index.</summary>
      <param name="array">An array of objects to hold the data.</param>
      <param name="arrayIndex">The starting index value.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="arrayIndex" /> exceeds the destination array length.  
-or-  
Copy cannot fit in the remaining array space between <paramref name="arrayIndex" /> and the destination array length.</exception>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.Count">
      <summary>Gets the number of localizable resources in the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" />.</summary>
      <returns>The number of localizable resources.</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.GetEnumerator">
      <summary>Returns an enumerator that iterates through the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" />.</summary>
      <returns>A specialized <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator" /> that can iterate the contents of the dictionary.</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.IsFixedSize">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> object has a fixed size.</summary>
      <returns>Always returns <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.IsReadOnly">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> object is read-only.</summary>
      <returns>Always returns <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.Item(System.Windows.Markup.Localizer.BamlLocalizableResourceKey)">
      <summary>Gets or sets a localizable resource specified by its key.</summary>
      <param name="key">The key value of the resource.</param>
      <returns>The value of the resource.</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.Keys">
      <summary>Gets a collection that contains all the keys in the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> object.</summary>
      <returns>A collection that contains all the keys in the object.</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.Remove(System.Windows.Markup.Localizer.BamlLocalizableResourceKey)">
      <summary>Removes a specified localizable resource from the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" />.</summary>
      <param name="key">The key for the resource to be removed.</param>
      <exception cref="T:System.ArgumentNullException">key is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.RootElementKey">
      <summary>Gets the key of the root element, if it is localizable.</summary>
      <returns>The key of the root element, if it is localizable. Otherwise, the value is set to <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="array">A zero-based <see cref="T:System.Array" /> that receives the copied items.</param>
      <param name="index">The first position in the specified <see cref="T:System.Array" /> to receive the copied contents.</param>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.System#Collections#ICollection#Count">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.Count" />.</summary>
      <returns>The number of items in the collection.</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>
        <see langword="true" /> if access to the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> is synchronized (thread safe); otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" />.</summary>
      <param name="key">The key of the element to add.</param>
      <param name="value">The object value to add to the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" />.</param>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.System#Collections#IDictionary#Contains(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IDictionary.Contains(System.Object)" />.</summary>
      <param name="key">The key  to locate in the dictionary.</param>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.System#Collections#IDictionary#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IDictionary.GetEnumerator" />.</summary>
      <returns>An enumerator object that can be used to iterate through the collection.</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.System#Collections#IDictionary#Item(System.Object)">
      <summary>For a description of this member, see <see cref="P:System.Collections.IDictionary.Item(System.Object)" />.</summary>
      <param name="key">The key of the item to get or set.</param>
      <returns>The item with the specified key.</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.System#Collections#IDictionary#Remove(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IDictionary.Remove(System.Object)" />.</summary>
      <param name="key">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" />.</param>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.Values">
      <summary>Gets a collection that contains all the values in the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" />.</summary>
      <returns>A collection that contains all the values in the object.</returns>
    </member>
    <member name="T:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator">
      <summary>Defines a specialized enumerator that can enumerate over the content of a <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> object.</summary>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator.Current">
      <summary>Gets the current object in the collection.</summary>
      <returns>The current object.</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator.Entry">
      <summary>Gets the current position's <see cref="T:System.Collections.DictionaryEntry" /> object.</summary>
      <returns>An object containing the key and value of the entry at the current position.</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator.Key">
      <summary>Gets the key of the current entry.</summary>
      <returns>The key of the current entry.</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator.MoveNext">
      <summary>Moves to the next item in the collection.</summary>
      <returns>
        <see langword="true" /> if the enumerator successfully advances to the next element. If there are no remaining elements, this method returns <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator.Reset">
      <summary>Returns the enumerator to its initial position, which is before the first object in the collection.</summary>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator.System#Collections#IDictionaryEnumerator#Key">
      <summary>For a description of this member, see <see cref="P:System.Collections.IDictionaryEnumerator.Key" />.</summary>
      <returns>The key of the current element of the enumeration.</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator.System#Collections#IDictionaryEnumerator#Value">
      <summary>For a description of this member, see <see cref="P:System.Collections.IDictionaryEnumerator.Value" />.</summary>
      <returns>The value of the current element of the enumeration.</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator.System#Collections#IEnumerator#Current">
      <summary>For a description of this member, see <see cref="P:System.Collections.IEnumerator.Current" />.</summary>
      <returns>The current element in the collection.</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator.Value">
      <summary>Gets the value of the current entry.</summary>
      <returns>The value of the current entry.</returns>
    </member>
    <member name="T:System.Windows.Markup.Localizer.BamlLocalizer">
      <summary>Extracts resources from a BAML file and generates a localized version of a BAML source.</summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizer.#ctor(System.IO.Stream)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizer" /> class with the specified BAML source stream.</summary>
      <param name="source">A file stream that contains the BAML input to be localized.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizer.#ctor(System.IO.Stream,System.Windows.Markup.Localizer.BamlLocalizabilityResolver)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizer" /> class with the specified localizability resolver and BAML source stream.</summary>
      <param name="source">A file stream that contains the BAML input to be localized.</param>
      <param name="resolver">An instance of <see cref="T:System.Windows.Markup.Localizer.BamlLocalizabilityResolver" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizer.#ctor(System.IO.Stream,System.Windows.Markup.Localizer.BamlLocalizabilityResolver,System.IO.TextReader)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizer" /> class with the specified localizability resolver, BAML source stream, and <see cref="T:System.IO.TextReader" />.</summary>
      <param name="source">A file stream that contains the BAML input to be localized.</param>
      <param name="resolver">An instance of <see cref="T:System.Windows.Markup.Localizer.BamlLocalizabilityResolver" />.</param>
      <param name="comments">Reads the localized XML comments associated with this BAML input.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is <see langword="null" />.</exception>
    </member>
    <member name="E:System.Windows.Markup.Localizer.BamlLocalizer.ErrorNotify">
      <summary>Occurs when the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizer" /> encounters abnormal conditions.</summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizer.ExtractResources">
      <summary>Extracts all localizable resources from a BAML stream.</summary>
      <returns>A copy of the localizable resources from a BAML stream, in the form of a <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizer.OnErrorNotify(System.Windows.Markup.Localizer.BamlLocalizerErrorNotifyEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Markup.Localizer.BamlLocalizer.ErrorNotify" /> event.</summary>
      <param name="e">Required event arguments.</param>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizer.UpdateBaml(System.IO.Stream,System.Windows.Markup.Localizer.BamlLocalizationDictionary)">
      <summary>Applies resource updates to the BAML source and writes the updated version to a specified stream in order to create a localized version of the source BAML.</summary>
      <param name="target">The stream that will receive the updated BAML.</param>
      <param name="updates">The resource updates to be applied to the source BAML.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> or <paramref name="updates" /> are <see langword="null" />.</exception>
    </member>
    <member name="T:System.Windows.Markup.Localizer.BamlLocalizerError">
      <summary>Specifies error conditions that may be encountered by the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizer" />.</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.DuplicateElement">
      <summary>The localized BAML  contains more than one reference to the same element.</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.DuplicateUid">
      <summary>More than one element has the same <see cref="P:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.Uid" /> value.</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.IncompleteElementPlaceholder">
      <summary>The element's substitution contains incomplete child placeholders.</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.InvalidCommentingXml">
      <summary>XML comments do not have the correct format.</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.InvalidLocalizationAttributes">
      <summary>The localization commenting text contains invalid attributes.</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.InvalidLocalizationComments">
      <summary>The localization commenting text contains invalid comments.</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.InvalidUid">
      <summary>The <see cref="P:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.Uid" /> does not correspond to any element in the BAML source.</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.MismatchedElements">
      <summary>Indicates a mismatch between substitution and source. The substitution must contain all the element placeholders in the source.</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.SubstitutionAsPlaintext">
      <summary>The substitution of an element's content cannot be parsed as XML, therefore any formatting tags in the substitution are not recognized. The substitution is instead applied as plain text.</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.UidMissingOnChildElement">
      <summary>A child element does not have a <see cref="P:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.Uid" />. As a result, it cannot be represented as a placeholder in the parent's content string.</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.UnknownFormattingTag">
      <summary>A formatting tag in the substitution is not recognized.</summary>
    </member>
    <member name="T:System.Windows.Markup.Localizer.BamlLocalizerErrorNotifyEventArgs">
      <summary>Provides required event data for the <see cref="E:System.Windows.Markup.Localizer.BamlLocalizer.ErrorNotify" /> event.</summary>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizerErrorNotifyEventArgs.Error">
      <summary>Gets the specific error condition encountered by <see cref="T:System.Windows.Markup.Localizer.BamlLocalizer" />.</summary>
      <returns>The error condition encountered by <see cref="T:System.Windows.Markup.Localizer.BamlLocalizer" />, as a value of the enumeration.</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizerErrorNotifyEventArgs.Key">
      <summary>Gets the key associated with the resource that generated the error condition.</summary>
      <returns>The key associated with the resource that generated the error condition.</returns>
    </member>
    <member name="T:System.Windows.Markup.Localizer.BamlLocalizerErrorNotifyEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Markup.Localizer.BamlLocalizer.ErrorNotify" /> event.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Markup.Localizer.ElementLocalizability">
      <summary>Represents localizability settings for an element in BAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.ElementLocalizability.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.Localizer.ElementLocalizability" /> class.</summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.ElementLocalizability.#ctor(System.String,System.Windows.LocalizabilityAttribute)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.Localizer.ElementLocalizability" /> class with a specified formatting tag and localizability attribute.</summary>
      <param name="formattingTag">A formatting tag name. Assign a non-empty value to this parameter to indicate inline formatting.</param>
      <param name="attribute">The associated element's localizability attribute.</param>
    </member>
    <member name="P:System.Windows.Markup.Localizer.ElementLocalizability.Attribute">
      <summary>Gets or sets the associated element's localizability attribute.</summary>
      <returns>The associated element's localizability attribute.</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.ElementLocalizability.FormattingTag">
      <summary>Gets or sets the associated element's formatting tag.</summary>
      <returns>The formatting tag string.</returns>
    </member>
    <member name="T:System.Windows.Markup.NamespaceMapEntry">
      <summary>Provides information that the <see cref="T:System.Windows.Markup.XamlTypeMapper" /> uses for mapping between an XML namespace, a CLR namespace, and the assembly that contains the relevant types for that CLR namespace.</summary>
    </member>
    <member name="M:System.Windows.Markup.NamespaceMapEntry.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.NamespaceMapEntry" /> class.</summary>
    </member>
    <member name="M:System.Windows.Markup.NamespaceMapEntry.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.NamespaceMapEntry" /> class, using provided XML namespace, CLR namespace, and assembly information.</summary>
      <param name="xmlNamespace">The mapping prefix for the XML namespace.</param>
      <param name="assemblyName">The assembly that contains the CLR namespace and types to map to the XML namespace.</param>
      <param name="clrNamespace">The CLR  namespace in the assembly that contains the relevant types.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlNamespace" /> is <see langword="null" />  
-or-  
<paramref name="assemblyName" /> is <see langword="null" />  
-or-  
<paramref name="clrNamespace" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.NamespaceMapEntry.AssemblyName">
      <summary>Gets or sets the assembly name that contains the types in the CLR namespace.</summary>
      <returns>The assembly name.</returns>
      <exception cref="T:System.ArgumentNullException">The value <see cref="P:System.Windows.Markup.NamespaceMapEntry.AssemblyName" /> is being set to is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.NamespaceMapEntry.ClrNamespace">
      <summary>Gets or sets the CLR namespace that contains the types being mapped.</summary>
      <returns>The CLR namespace.</returns>
      <exception cref="T:System.ArgumentNullException">The value <see cref="P:System.Windows.Markup.NamespaceMapEntry.ClrNamespace" /> is being set to is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.NamespaceMapEntry.XmlNamespace">
      <summary>Gets or sets the mapping prefix for the XML namespace being mapped to.</summary>
      <returns>The mapping prefix for the XML namespace.</returns>
      <exception cref="T:System.ArgumentNullException">The value <see cref="P:System.Windows.Markup.NamespaceMapEntry.XmlNamespace" /> is being set to is <see langword="null" />.</exception>
    </member>
    <member name="T:System.Windows.Markup.ParserContext">
      <summary>Provides context information required by a XAML parser.</summary>
    </member>
    <member name="M:System.Windows.Markup.ParserContext.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.ParserContext" /> class.</summary>
    </member>
    <member name="M:System.Windows.Markup.ParserContext.#ctor(System.Xml.XmlParserContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.ParserContext" /> class by using the specified <see cref="T:System.Xml.XmlParserContext" />.</summary>
      <param name="xmlParserContext">The XML processing context to base the new <see cref="T:System.Windows.Markup.ParserContext" /> on.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlParserContext" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.ParserContext.BaseUri">
      <summary>Gets or sets the base URI for this context.</summary>
      <returns>The base URI, as a string.</returns>
    </member>
    <member name="M:System.Windows.Markup.ParserContext.op_Implicit(System.Windows.Markup.ParserContext)~System.Xml.XmlParserContext">
      <summary>Converts a XAML <see cref="T:System.Windows.Markup.ParserContext" /> to an <see cref="T:System.Xml.XmlParserContext" />.</summary>
      <param name="parserContext">The XAML parser context to convert to an <see cref="T:System.Xml.XmlParserContext" />.</param>
      <returns>The converted XML parser context.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="parserContext" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.ParserContext.ToXmlParserContext(System.Windows.Markup.ParserContext)">
      <summary>Converts an <see cref="T:System.Windows.Markup.ParserContext" /> to an <see cref="T:System.Xml.XmlParserContext" />.</summary>
      <param name="parserContext">The context to convert to an <see cref="T:System.Xml.XmlParserContext" />.</param>
      <returns>The XML parser context.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="parserContext" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.ParserContext.XamlTypeMapper">
      <summary>Gets or sets the <see cref="T:System.Windows.Markup.XamlTypeMapper" /> to use with this <see cref="T:System.Windows.Markup.ParserContext" />.</summary>
      <returns>The type mapper to use when mapping XAML elements to CLR types.</returns>
    </member>
    <member name="P:System.Windows.Markup.ParserContext.XmlLang">
      <summary>Gets or sets the <see langword="xml:lang" /> string for this context.</summary>
      <returns>The <see langword="xml:lang" /> string value.</returns>
    </member>
    <member name="P:System.Windows.Markup.ParserContext.XmlnsDictionary">
      <summary>Gets the XAML namespace dictionary for this XAML parser context.</summary>
      <returns>The XAML namespace dictionary.</returns>
    </member>
    <member name="P:System.Windows.Markup.ParserContext.XmlSpace">
      <summary>Gets or sets the character for <see langword="xml:space" /> or this context.</summary>
      <returns>The character for <see langword="xml:space" /> or this context.</returns>
    </member>
    <member name="T:System.Windows.Markup.Primitives.MarkupWriter">
      <summary>Provides methods to write an object to XAML format.</summary>
    </member>
    <member name="M:System.Windows.Markup.Primitives.MarkupWriter.Dispose">
      <summary>Releases the resources used by the <see cref="T:System.Windows.Markup.Primitives.MarkupWriter" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.Primitives.MarkupWriter.GetMarkupObjectFor(System.Object)">
      <summary>Creates an instance of a <see cref="T:System.Windows.Markup.Primitives.MarkupObject" /> from the specified object.</summary>
      <param name="instance">An object that will be the root of the serialized tree.</param>
      <returns>A markup object that enables navigating through the tree of objects.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.Primitives.MarkupWriter.GetMarkupObjectFor(System.Object,System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>Creates an instance of a <see cref="T:System.Windows.Markup.Primitives.MarkupObject" /> from the specified object and the specified serialization manager.</summary>
      <param name="instance">An object that will be the root of the serialized tree.</param>
      <param name="manager">The serialization manager.</param>
      <returns>A markup object that enables navigating through the tree of objects.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> or <paramref name="manager" /> is <see langword="null" />.</exception>
    </member>
    <member name="T:System.Windows.Markup.ResourceReferenceExpressionConverter">
      <summary>Converts instances of <see langword="ResourceReferenceExpression" /> to and from other types.</summary>
    </member>
    <member name="M:System.Windows.Markup.ResourceReferenceExpressionConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.ResourceReferenceExpressionConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Markup.ResourceReferenceExpressionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns a value that indicates whether the converter can convert from a source object to a <see langword="ResourceReferenceExpression" /> object.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="sourceType">The type to convert from.</param>
      <returns>
        <see langword="true" /> if the converter can perform the conversion; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.ResourceReferenceExpressionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns a value that indicates whether the converter can convert a <see langword="ResourceReferenceExpression" /> object to the specified destination type.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="destinationType">The type to convert to.</param>
      <returns>
        <see langword="true" /> if the converter can perform the conversion; otherwise, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.ResourceReferenceExpressionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the specified value to the <see langword="ResourceReferenceExpression" /> type.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</param>
      <param name="value">The object to convert.</param>
      <returns>The converted value.</returns>
    </member>
    <member name="M:System.Windows.Markup.ResourceReferenceExpressionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the specified <see langword="ResourceReferenceExpression" /> object to the specified type.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</param>
      <param name="value">The object to convert.</param>
      <param name="destinationType">The type to convert to.</param>
      <returns>The converted value.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> must be of type <see langword="ResourceReferenceExpression" />.</exception>
    </member>
    <member name="T:System.Windows.Markup.RoutedEventConverter">
      <summary>Converts a <see cref="T:System.Windows.RoutedEvent" /> object from a string.</summary>
    </member>
    <member name="M:System.Windows.Markup.RoutedEventConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.RoutedEventConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Markup.RoutedEventConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether an object of the specified type can be converted to an instance of <see cref="T:System.Windows.RoutedEvent" />.</summary>
      <param name="typeDescriptorContext">A format context that provides information about the environment from which this converter is being invoked.</param>
      <param name="sourceType">The type being evaluated for conversion.</param>
      <returns>
        <see langword="true" /> if this converter can perform the operation; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.RoutedEventConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether an instance of <see cref="T:System.Windows.RoutedEvent" /> can be converted to the specified type.</summary>
      <param name="typeDescriptorContext">A format context that provides information about the environment from which this converter is being invoked.</param>
      <param name="destinationType">The type being evaluated for conversion.</param>
      <returns>Always returns <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.RoutedEventConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Attempts to convert the specified object to a <see cref="T:System.Windows.RoutedEvent" /> object, using the specified context.</summary>
      <param name="typeDescriptorContext">A format context that provides information about the environment from which this converter is being invoked.</param>
      <param name="cultureInfo">Culture specific information.</param>
      <param name="source">The object to convert.</param>
      <returns>The conversion result.</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="source" /> is not a string or cannot be converted.</exception>
    </member>
    <member name="M:System.Windows.Markup.RoutedEventConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Attempts to convert a <see cref="T:System.Windows.RoutedEvent" /> to the specified type. Throws an exception in all cases.</summary>
      <param name="typeDescriptorContext">A format context that provides information about the environment from which this converter is being invoked.</param>
      <param name="cultureInfo">Culture specific information.</param>
      <param name="value">The object to convert.</param>
      <param name="destinationType">The type to convert the object to.</param>
      <returns>Always throws an exception.</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> cannot be converted. This is not a functioning converter for a save path.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> or <paramref name="destinationType" /> are <see langword="null" />.</exception>
    </member>
    <member name="T:System.Windows.Markup.SetterTriggerConditionValueConverter">
      <summary>Provides type conversion analogous behavior for <see cref="T:System.Windows.Setter" />, <see cref="T:System.Windows.Trigger" /> and <see cref="T:System.Windows.Condition" /> types that deal with <see cref="T:System.Windows.DependencyProperty" /> values. This converter only supports <see langword="ConvertFrom" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.SetterTriggerConditionValueConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.SetterTriggerConditionValueConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Markup.SetterTriggerConditionValueConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns a value that indicates whether the converter can convert from a source object to a side-effect-produced <see cref="T:System.Windows.Setter" />, <see cref="T:System.Windows.Trigger" /> or <see cref="T:System.Windows.Condition" /> .</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="sourceType">The type to convert from.</param>
      <returns>
        <see langword="true" /> if the converter can perform the conversion; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.SetterTriggerConditionValueConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns a value that indicates whether the converter can convert to the specified destination type. Always returns <see langword="false" />.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="destinationType">The type to convert to.</param>
      <returns>Always returns <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.SetterTriggerConditionValueConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the converted source value if an underlying type converter can be obtained from context. Otherwise returns an unconverted source.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</param>
      <param name="source">The object to convert.</param>
      <returns>The converter object, or possibly an unconverted source.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> or <paramref name="source" /> is <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">No <see cref="T:System.Xaml.IXamlSchemaContextProvider" /> service available.</exception>
    </member>
    <member name="M:System.Windows.Markup.SetterTriggerConditionValueConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the specified object to the specified type. Always throws an exception.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</param>
      <param name="value">The object to convert.</param>
      <param name="destinationType">The type to convert to.</param>
      <returns>Always throws an exception.</returns>
      <exception cref="T:System.InvalidOperationException">Thrown in all cases.</exception>
    </member>
    <member name="T:System.Windows.Markup.TemplateKeyConverter">
      <summary>Implements a type converter for <see cref="T:System.Windows.TemplateKey" /> objects, which deliberately have no type conversion pathways. The type converter enforces and reports that behavior.</summary>
    </member>
    <member name="M:System.Windows.Markup.TemplateKeyConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.TemplateKeyConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Markup.TemplateKeyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether an object of the specified type can be converted to an instance of <see cref="T:System.Windows.TemplateKey" />.</summary>
      <param name="context">A format context that provides information about the environment from which this converter is being invoked.</param>
      <param name="sourceType">The type being evaluated for conversion.</param>
      <returns>Always returns <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.TemplateKeyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether an instance of <see cref="T:System.Windows.TemplateKey" /> can be converted to the specified type.</summary>
      <param name="context">A format context that provides information about the environment from which this converter is being invoked.</param>
      <param name="destinationType">The type being evaluated for conversion.</param>
      <returns>Always returns <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.TemplateKeyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Attempts to convert the specified object (string) to a <see cref="T:System.Windows.TemplateKey" />.</summary>
      <param name="context">A format context that provides information about the environment from which this converter is being invoked.</param>
      <param name="culture">Culture specific information.</param>
      <param name="source">The object to convert.</param>
      <returns>Always throws an exception.</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="source" /> cannot be converted.</exception>
    </member>
    <member name="M:System.Windows.Markup.TemplateKeyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Attempts to convert a <see cref="T:System.Windows.TemplateKey" /> to the specified type, using the specified context.</summary>
      <param name="context">A format context that provides information about the environment from which this converter is being invoked.</param>
      <param name="culture">Culture specific information.</param>
      <param name="value">The object to convert.</param>
      <param name="destinationType">The type to convert the object to.</param>
      <returns>Always throws an exception.</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> cannot be converted.</exception>
    </member>
    <member name="T:System.Windows.Markup.XamlDesignerSerializationManager">
      <summary>Provides services for XAML serialization by XAML designers or other callers that require advanced serialization.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlDesignerSerializationManager.#ctor(System.Xml.XmlWriter)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlDesignerSerializationManager" /> class.</summary>
      <param name="xmlWriter">The XML writer implementation to use as basis for the <see cref="T:System.Windows.Markup.XamlDesignerSerializationManager" />.</param>
    </member>
    <member name="P:System.Windows.Markup.XamlDesignerSerializationManager.XamlWriterMode">
      <summary>Gets or sets the XAML writer mode.</summary>
      <returns>The XAML writer mode.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Not a valid member of the <see cref="T:System.Windows.Markup.XamlWriterMode" /> enumeration.</exception>
    </member>
    <member name="T:System.Windows.Markup.XamlInstanceCreator">
      <summary>Abstract class that provides a means to store parser records for later instantiation.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlInstanceCreator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlInstanceCreator" /> class.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlInstanceCreator.CreateObject">
      <summary>When overridden in a derived class, creates a new object to store parser records.</summary>
      <returns>The created object.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlParseException">
      <summary>Represents the exception class for parser-specific exceptions from a WPF XAML parser. This exception is used in XAML API or WPF XAML parser operations from .NET Framework 3.0 and .NET Framework 3.5, or for specific use of the WPF XAML parser by calling <see cref="T:System.Windows.Markup.XamlReader" /> API.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlParseException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlParseException" /> class.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlParseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlParseException" /> class.</summary>
      <param name="info">Contains all the information that is required to serialize or deserialize the object.</param>
      <param name="context">The source and destination of a serialized stream.</param>
    </member>
    <member name="M:System.Windows.Markup.XamlParseException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlParseException" /> class, using the specified exception message string.</summary>
      <param name="message">The exception message.</param>
    </member>
    <member name="M:System.Windows.Markup.XamlParseException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlParseException" /> class, using the specified exception message string and inner exception.</summary>
      <param name="message">The exception message.</param>
      <param name="innerException">The initial exception that occurred.</param>
    </member>
    <member name="M:System.Windows.Markup.XamlParseException.#ctor(System.String,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlParseException" /> class, using the specified exception message string, and the specified line number and position in the line.</summary>
      <param name="message">The exception message.</param>
      <param name="lineNumber">The line number where the exception occurred.</param>
      <param name="linePosition">The position in the line at which the exception occurred.</param>
    </member>
    <member name="M:System.Windows.Markup.XamlParseException.#ctor(System.String,System.Int32,System.Int32,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlParseException" /> class, using the specified exception message, inner exception, line number, and position in the line.</summary>
      <param name="message">The exception message.</param>
      <param name="lineNumber">The line number where the exception occurred.</param>
      <param name="linePosition">The position in the line at which the exception occurred.</param>
      <param name="innerException">The initial exception that occurred.</param>
    </member>
    <member name="P:System.Windows.Markup.XamlParseException.BaseUri">
      <summary>Gets base URI information when the exception is thrown.</summary>
      <returns>The parser context base URI.</returns>
    </member>
    <member name="M:System.Windows.Markup.XamlParseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the data that is required to serialize the specified object by populating the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object.</summary>
      <param name="info">The serialization information object to add the serialization data to.</param>
      <param name="context">The destination for this serialization.</param>
    </member>
    <member name="P:System.Windows.Markup.XamlParseException.KeyContext">
      <summary>Gets or sets the key value of the item in a dictionary where the exception occurred.</summary>
      <returns>The relevant XAML <see langword="x:Key" /> value.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlParseException.LineNumber">
      <summary>Gets the line number where the exception occurred.</summary>
      <returns>The line number.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlParseException.LinePosition">
      <summary>Gets the position in the line where the exception occurred.</summary>
      <returns>The line position.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlParseException.NameContext">
      <summary>Gets or sets the XAML name of the object where the exception occurred.</summary>
      <returns>The XAML name of the object.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlParseException.UidContext">
      <summary>Gets or sets the x:Uid Directive of the object where the exception occurred.</summary>
      <returns>The value of the <see langword="Uid" /> string.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlReader">
      <summary>Reads XAML input and creates an object graph, using the WPF default XAML reader and an associated XAML object writer.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlReader" /> class.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.CancelAsync">
      <summary>Aborts the current asynchronous load operation, if there is an asynchronous load operation pending.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.GetWpfSchemaContext">
      <summary>Returns a <see cref="T:System.Xaml.XamlSchemaContext" /> object that represents the WPF schema context settings for a <see cref="T:System.Windows.Markup.XamlReader" />.</summary>
      <returns>A <see cref="T:System.Xaml.XamlSchemaContext" /> object that represents the WPF schema context settings for a <see cref="T:System.Windows.Markup.XamlReader" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.Load(System.IO.Stream)">
      <summary>Reads the XAML input in the specified <see cref="T:System.IO.Stream" /> and returns an <see cref="T:System.Object" /> that is the root of the corresponding object tree.</summary>
      <param name="stream">The XAML to load, in stream form.</param>
      <returns>The object at the root of the created object tree.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.Load(System.IO.Stream,System.Windows.Markup.ParserContext)">
      <summary>Reads the XAML input in the specified <see cref="T:System.IO.Stream" /> and returns an object that is the root of the corresponding object tree.</summary>
      <param name="stream">The stream that contains the XAML input to load.</param>
      <param name="parserContext">Context information used by the parser.</param>
      <returns>The object that is the root of the created object tree.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> is <see langword="null" />.  
-or-  
<paramref name="parserContext" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.Load(System.Xaml.XamlReader)">
      <summary>Reads the XAML input through a provided <see cref="T:System.Xaml.XamlReader" /> and returns an object that is the root of the corresponding object tree.</summary>
      <param name="reader">A <see cref="T:System.Xaml.XamlReader" /> object. This is expected to be initialized with input XAML.</param>
      <returns>The object that is the root of the created object tree.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.Load(System.Xml.XmlReader)">
      <summary>Reads the XAML input in the specified <see cref="T:System.Xml.XmlReader" /> and returns an object that is the root of the corresponding object tree.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> that has already loaded the XAML input to load in XML form.</param>
      <returns>The object that is the root of the created object tree.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream)">
      <summary>Reads the XAML input in the specified <see cref="T:System.IO.Stream" /> and returns the root of the corresponding object tree.</summary>
      <param name="stream">The stream containing the XAML input to load.</param>
      <returns>The object that is the root of the created object tree.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> is <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Multiple load operations are pending concurrently with the same <see cref="T:System.Windows.Markup.XamlReader" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream,System.Windows.Markup.ParserContext)">
      <summary>Reads the XAML input in the specified <see cref="T:System.IO.Stream" /> and returns the root of the corresponding object tree.</summary>
      <param name="stream">A stream containing the XAML input to load.</param>
      <param name="parserContext">Context information used by the parser.</param>
      <returns>The root of the created object tree.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> is <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Multiple load operations are performed concurrently with the same <see cref="T:System.Windows.Markup.XamlReader" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.LoadAsync(System.Xml.XmlReader)">
      <summary>Reads the XAML input in the specified <see cref="T:System.Xml.XmlReader" /> and returns the root of the corresponding object tree.</summary>
      <param name="reader">An existing  <see cref="T:System.Xml.XmlReader" /> that has already loaded/read the XAML input.</param>
      <returns>The root of the created object tree.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Multiple load operations are performed concurrently with the same <see cref="T:System.Windows.Markup.XamlReader" />.</exception>
    </member>
    <member name="E:System.Windows.Markup.XamlReader.LoadCompleted">
      <summary>Occurs when an asynchronous load operation completes.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.Parse(System.String)">
      <summary>Reads the XAML input in the specified text string and returns an object that corresponds to the root of the specified markup.</summary>
      <param name="xamlText">The input XAML, as a single text string.</param>
      <returns>The root of the created object tree.</returns>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.Parse(System.String,System.Windows.Markup.ParserContext)">
      <summary>Reads the XAML markup in the specified text string (using a specified <see cref="T:System.Windows.Markup.ParserContext" />) and returns an object that corresponds to the root of the specified markup.</summary>
      <param name="xamlText">The input XAML, as a single text string.</param>
      <param name="parserContext">Context information used by the parser.</param>
      <returns>The root of the created object tree.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlTypeMapper">
      <summary>Maps a XAML element name to the appropriate CLR <see cref="T:System.Type" /> in assemblies.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlTypeMapper.#ctor(System.String[])">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlTypeMapper" /> class by specifying an array of assembly names that the <see cref="T:System.Windows.Markup.XamlTypeMapper" /> should use.</summary>
      <param name="assemblyNames">The array of assembly names the <see cref="T:System.Windows.Markup.XamlTypeMapper" /> should use.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyNames" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlTypeMapper.#ctor(System.String[],System.Windows.Markup.NamespaceMapEntry[])">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlTypeMapper" /> class, using the specified array of assembly names and the specified namespace maps.</summary>
      <param name="assemblyNames">The array of assembly names the <see cref="T:System.Windows.Markup.XamlTypeMapper" /> should use.</param>
      <param name="namespaceMaps">The array of namespace maps the <see cref="T:System.Windows.Markup.XamlTypeMapper" /> should use.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyNames" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)">
      <summary>Defines a mapping between an XML namespace and CLR namespaces in assemblies, and adds these to the <see cref="T:System.Windows.Markup.XamlTypeMapper" /> information.</summary>
      <param name="xmlNamespace">The prefix for the XML namespace.</param>
      <param name="clrNamespace">The CLR  namespace that contains the types to map.</param>
      <param name="assemblyName">The assembly that contains the CLR  namespace.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlNamespace" /> is <see langword="null" />  
-or-  
<paramref name="clrNamespace" /> is <see langword="null" />  
-or-  
<paramref name="assemblyName" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlTypeMapper.AllowInternalType(System.Type)">
      <summary>Requests permission for a <see cref="T:System.Windows.Markup.XamlTypeMapper" /> derived type that is called under full trust to access a specific internal type.</summary>
      <param name="type">The type to access.</param>
      <returns>
        <see langword="true" /> if the internal type can be accessed; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlTypeMapper.DefaultMapper">
      <summary>Gets an instance of the <see cref="T:System.Windows.Markup.XamlTypeMapper" /> to use if one has not been specified.</summary>
      <returns>The default type mapper.</returns>
    </member>
    <member name="M:System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)">
      <summary>Gets the CLR <see cref="T:System.Type" /> that a given XAML element is mapped to, using the specified XML namespace prefix and element name.</summary>
      <param name="xmlNamespace">The specified XML namespace prefix.</param>
      <param name="localName">The "local" name of the XAML element to obtain the mapped <see cref="T:System.Type" /> for. Local in this context means as mapped versus the provided <paramref name="xmlNamespace" />.</param>
      <returns>The <see cref="T:System.Type" /> for the object, or <see langword="null" /> if no mapping could be resolved.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlNamespace" /> is <see langword="null" />  
-or-  
<paramref name="localName" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)">
      <summary>Specifies the path to use when loading an assembly.</summary>
      <param name="assemblyName">The short name of the assembly without an extension or path specified (equivalent to <see cref="P:System.Reflection.AssemblyName.Name" />).</param>
      <param name="assemblyPath">The file path of the assembly. The assembly path must be a full file path containing a file extension.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> is <see langword="null" />  
-or-  
<paramref name="assemblyPath" /> is <see langword="null" />.</exception>
      <exception cref="T:System.Windows.Markup.XamlParseException">
        <paramref name="assemblyName" /> is <see cref="F:System.String.Empty" />  
-or-  
<paramref name="assemblyPath" /> is <see cref="F:System.String.Empty" />  
-or-  
<paramref name="assemblyPath" /> is not a full file path containing a file extension.</exception>
    </member>
    <member name="T:System.Windows.Markup.XamlWriter">
      <summary>Provides a single static <see cref="Overload:System.Windows.Markup.XamlWriter.Save" /> method (multiple overloads) that can be used for limited XAML serialization of provided run-time objects into XAML markup.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlWriter.Save(System.Object)">
      <summary>Returns a XAML string that serializes the specified object and its properties.</summary>
      <param name="obj">The element to be serialized. Typically, this is the root element of a page or application.</param>
      <returns>A XAML string that can be written to a stream or file. The logical tree of all elements that fall under the provided <paramref name="obj" /> element will be serialized.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> is <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">The application is not running in full trust.</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlWriter.Save(System.Object,System.IO.Stream)">
      <summary>Saves XAML information into a specified stream to serialize the specified object and its properties.</summary>
      <param name="obj">The element to be serialized. Typically, this is the root element of a page or application.</param>
      <param name="stream">Destination stream for the serialized XAML information.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> or <paramref name="stream" /> is <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">The application is not running in full trust.</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlWriter.Save(System.Object,System.IO.TextWriter)">
      <summary>Saves XAML information as the source for a provided <see cref="T:System.IO.TextWriter" /> object. The output of the <see cref="T:System.IO.TextWriter" /> can then be used to serialize the provided object and its properties.</summary>
      <param name="obj">The element to be serialized. Typically, this is the root element of a page or application.</param>
      <param name="writer">A <see cref="T:System.IO.TextWriter" /> instance as the destination where the serialized XAML information is written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> or <paramref name="writer" /> is <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">The application is not running in full trust.</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlWriter.Save(System.Object,System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>Saves XAML information into a custom serializer. The output of the serializer can then be used to serialize the provided object and its properties.</summary>
      <param name="obj">The element to be serialized. Typically, this is the root element of a page or application.</param>
      <param name="manager">A custom serialization implementation.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> or <paramref name="manager" /> is <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">The application is not running in full trust.</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlWriter.Save(System.Object,System.Xml.XmlWriter)">
      <summary>Saves XAML information as the source for a provided <see cref="T:System.Xml.XmlWriter" /> object. The output of the <see cref="T:System.Xml.XmlWriter" /> can then be used to serialize the provided object and its properties.</summary>
      <param name="obj">The element to be serialized. Typically, this is the root element of a page or application.</param>
      <param name="xmlWriter">Writer to use to write the serialized XAML information.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> or <paramref name="xmlWriter" /> is <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">The application is not running in full trust.</exception>
    </member>
    <member name="T:System.Windows.Markup.XamlWriterMode">
      <summary>Specifies the XAML writer mode for serializing values that are expressions (such as binding declarations).</summary>
    </member>
    <member name="F:System.Windows.Markup.XamlWriterMode.Expression">
      <summary>The <see cref="T:System.Windows.Expression" /> is serialized.</summary>
    </member>
    <member name="F:System.Windows.Markup.XamlWriterMode.Value">
      <summary>The evaluated value of the <see cref="T:System.Windows.Expression" /> is serialized.</summary>
    </member>
    <member name="T:System.Windows.Markup.XamlWriterState">
      <summary>Describes possible writing states for a custom XAML writer.</summary>
    </member>
    <member name="F:System.Windows.Markup.XamlWriterState.Finished">
      <summary>The <see cref="T:System.Windows.Markup.XamlWriter" /> has completed its operation.</summary>
    </member>
    <member name="F:System.Windows.Markup.XamlWriterState.Starting">
      <summary>The <see cref="T:System.Windows.Markup.XamlWriter" /> has started its operation.</summary>
    </member>
    <member name="T:System.Windows.Markup.XmlAttributeProperties">
      <summary>Encapsulates the XML language-related attributes of a <see cref="T:System.Windows.DependencyObject" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlAttributeProperties.GetXmlNamespaceMaps(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlNamespaceMaps" /> attached property of the specified <see cref="T:System.Windows.DependencyObject" />.</summary>
      <param name="dependencyObject">The object to obtain the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlNamespaceMaps" /> property from.</param>
      <returns>The value of the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlNamespaceMaps" /> property for the specified object.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlAttributeProperties.GetXmlnsDefinition(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDefinition" /> attached property of the specified <see cref="T:System.Windows.DependencyObject" />.</summary>
      <param name="dependencyObject">The object to obtain the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDefinition" /> attached property value from.</param>
      <returns>The value of the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDefinition" /> attached property for the specified object.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlAttributeProperties.GetXmlnsDictionary(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDictionary" /> attached property of the specified <see cref="T:System.Windows.DependencyObject" />.</summary>
      <param name="dependencyObject">The object to obtain the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDictionary" /> attached property value from.</param>
      <returns>The value of the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDictionary" /> attached property for the specified object.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlAttributeProperties.GetXmlSpace(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlSpace" /> attached property of the specified <see cref="T:System.Windows.DependencyObject" />.</summary>
      <param name="dependencyObject">The object to obtain the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlSpace" /> attached property value from.</param>
      <returns>The value of the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlSpace" /> attached property for the specified object.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlAttributeProperties.SetXmlNamespaceMaps(System.Windows.DependencyObject,System.String)">
      <summary>Sets the value of the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlNamespaceMaps" /> attached property of the specified <see cref="T:System.Windows.DependencyObject" />.</summary>
      <param name="dependencyObject">The object on which to set the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlNamespaceMaps" /> attached property.</param>
      <param name="value">The string value to set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlAttributeProperties.SetXmlnsDefinition(System.Windows.DependencyObject,System.String)">
      <summary>Sets the value of the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDefinition" /> attached property of the specified <see cref="T:System.Windows.DependencyObject" />.</summary>
      <param name="dependencyObject">The object on which to set the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDefinition" /> property.</param>
      <param name="value">The XML namespace definition in string form.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlAttributeProperties.SetXmlnsDictionary(System.Windows.DependencyObject,System.Windows.Markup.XmlnsDictionary)">
      <summary>Sets the value of the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDictionary" /> attached property of the specified <see cref="T:System.Windows.DependencyObject" />.</summary>
      <param name="dependencyObject">The object on which to set the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDictionary" /> attached property.</param>
      <param name="value">The <see langword="xmlns" /> dictionary in string form.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlAttributeProperties.SetXmlSpace(System.Windows.DependencyObject,System.String)">
      <summary>Sets the value of the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlSpace" /> attached property of the specified <see cref="T:System.Windows.DependencyObject" />.</summary>
      <param name="dependencyObject">The object on which to set the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlSpace" /> attached property.</param>
      <param name="value">The string to use for an XML space.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlAttributeProperties.XmlNamespaceMaps">
      <summary>Gets or sets an attached property value that stores XML namespace maps for use by the WPF XAML parser for .NET Framework 3.0 and .NET Framework 3.5.</summary>
    </member>
    <member name="F:System.Windows.Markup.XmlAttributeProperties.XmlNamespaceMapsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlNamespaceMaps" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDefinition">
      <summary>Gets or sets the attached property value that stores <see langword="xmlns" /> definitions for use by the WPF XAML parser for .NET Framework 3.0 and .NET Framework 3.5.</summary>
    </member>
    <member name="F:System.Windows.Markup.XmlAttributeProperties.XmlnsDefinitionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDefinition" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDictionary">
      <summary>Gets or sets the attached property value that stores <see langword="xmlns" /> dictionaries for use by the WPF XAML parser for .NET Framework 3.0 and .NET Framework 3.5.</summary>
    </member>
    <member name="F:System.Windows.Markup.XmlAttributeProperties.XmlnsDictionaryProperty">
      <summary>Identifies the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDictionary" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Markup.XmlAttributeProperties.XmlSpace">
      <summary>Gets or sets the mapped value of the <see langword="xml:space" /> property.</summary>
    </member>
    <member name="F:System.Windows.Markup.XmlAttributeProperties.XmlSpaceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlSpace" /> attached property.</summary>
    </member>
    <member name="T:System.Windows.Markup.XmlnsDictionary">
      <summary>Represents a dictionary that contains xmlns mappings for XAML namespaces in WPF.</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.XmlnsDictionary" /> class.</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.#ctor(System.Windows.Markup.XmlnsDictionary)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.XmlnsDictionary" /> class by using the specified dictionary as a copy source.</summary>
      <param name="xmlnsDictionary">The dictionary on which to base the new <see cref="T:System.Windows.Markup.XmlnsDictionary" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlnsDictionary" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.Add(System.Object,System.Object)">
      <summary>Adds a prefix-URI pair to this <see cref="T:System.Windows.Markup.XmlnsDictionary" />.</summary>
      <param name="prefix">The prefix of the XAML namespace to be added.</param>
      <param name="xmlNamespace">The XAML namespace URI the prefix maps to.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="prefix" /> or <paramref name="xmlNamespace" /> is not a string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="prefix" /> or <paramref name="xmlNamespace" /> is <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Markup.XmlnsDictionary" /> is sealed.</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.Add(System.String,System.String)">
      <summary>Adds a prefix-URI pair to this <see cref="T:System.Windows.Markup.XmlnsDictionary" />.</summary>
      <param name="prefix">The prefix of this XML namespace.</param>
      <param name="xmlNamespace">The XML namespace URI the prefix maps to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="prefix" /> or <paramref name="xmlNamespace" /> is <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Markup.XmlnsDictionary" /> is sealed.</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.Clear">
      <summary>Removes all entries from this <see cref="T:System.Windows.Markup.XmlnsDictionary" />.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Markup.XmlnsDictionary" /> is sealed.</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.Contains(System.Object)">
      <summary>Returns a value that indicates whether the specified prefix key is in this <see cref="T:System.Windows.Markup.XmlnsDictionary" />.</summary>
      <param name="key">The prefix key to search for.</param>
      <returns>
        <see langword="true" /> if the requested prefix key is in the dictionary; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.CopyTo(System.Array,System.Int32)">
      <summary>Copies the entries in the <see cref="T:System.Windows.Markup.XmlnsDictionary" /> to the specified array.</summary>
      <param name="array">The array to copy the table data into.</param>
      <param name="index">The zero-based index in the destination array where copying starts.</param>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.CopyTo(System.Collections.DictionaryEntry[],System.Int32)">
      <summary>Copies the entries in the <see cref="T:System.Windows.Markup.XmlnsDictionary" /> to the specified <see cref="T:System.Collections.DictionaryEntry" /> array.</summary>
      <param name="array">The array to copy the table data into.</param>
      <param name="index">The zero-based index in the destination array where copying starts.</param>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDictionary.Count">
      <summary>Gets the number of items in the <see cref="T:System.Windows.Markup.XmlnsDictionary" />.</summary>
      <returns>The number of items in the <see cref="T:System.Windows.Markup.XmlnsDictionary" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.DefaultNamespace">
      <summary>Looks up the XAML namespace that corresponds to the default XAML namespace.</summary>
      <returns>The namespace that corresponds to the default XML namespace if one exists; otherwise, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.GetDictionaryEnumerator">
      <summary>Returns a dictionary enumerator that iterates through this <see cref="T:System.Windows.Markup.XmlnsDictionary" />.</summary>
      <returns>The dictionary enumerator for this dictionary.</returns>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.GetEnumerator">
      <summary>Returns an enumerator that iterates through this <see cref="T:System.Windows.Markup.XmlnsDictionary" />.</summary>
      <returns>The enumerator for this dictionary.</returns>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.GetNamespace(System.String)">
      <summary>Retrieves a XAML namespace for the provided prefix string.</summary>
      <param name="prefix">The prefix to retrieve the XAML namespace for.</param>
      <returns>The requested XAML namespace URI.</returns>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.GetNamespacePrefixes">
      <summary>Returns all possible prefix-XAML namespace mappings (<see cref="T:System.Xaml.NamespaceDeclaration" /> values) that are available in the active schema context.</summary>
      <returns>An enumerable set of <see cref="T:System.Xaml.NamespaceDeclaration" /> values. To get the prefix strings specifically, get the <see cref="P:System.Xaml.NamespaceDeclaration.Prefix" /> value from each value returned.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDictionary.IsFixedSize">
      <summary>Gets a value that indicates whether the size of the <see cref="T:System.Windows.Markup.XmlnsDictionary" /> is fixed.</summary>
      <returns>
        <see langword="true" /> if the size is fixed; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDictionary.IsReadOnly">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Markup.XmlnsDictionary" /> is read-only.</summary>
      <returns>
        <see langword="true" /> if the dictionary is read-only; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDictionary.IsSynchronized">
      <summary>Gets a value that indicates whether access to this <see cref="T:System.Windows.Markup.XmlnsDictionary" /> is thread safe.</summary>
      <returns>
        <see langword="true" /> if access to this dictionary is thread-safe; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDictionary.Item(System.Object)">
      <summary>Gets or sets the XAML namespace URI associated with the specified prefix.</summary>
      <param name="prefix">The prefix from which to get or set the associated XML namespace URI.</param>
      <returns>The corresponding XAML namespace URI.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="prefix" /> is not a string  
-or-  
The value to set is not a string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="prefix" /> is <see langword="null" />  
-or-  
The value to set is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDictionary.Item(System.String)">
      <summary>Gets or sets the XAML namespace URI associated with the specified prefix.</summary>
      <param name="prefix">The prefix from which to get or set the associated namespace.</param>
      <returns>The corresponding XML namespace URI.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="prefix" /> is <see langword="null" />  
-or-  
The value to set is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDictionary.Keys">
      <summary>Gets a collection of all the keys in the <see cref="T:System.Windows.Markup.XmlnsDictionary" />.</summary>
      <returns>The collection of all the keys in the dictionary.</returns>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.LookupNamespace(System.String)">
      <summary>Returns the XAML namespace URI that corresponds to the specified XML namespace prefix.</summary>
      <param name="prefix">The XAML namespace prefix to look up.</param>
      <returns>The XAML namespace URI that corresponds to the specified prefix if it exists in this <see cref="T:System.Windows.Markup.XmlnsDictionary" />; otherwise, <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="prefix" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.LookupPrefix(System.String)">
      <summary>Returns the prefix that corresponds to the specified XAML namespace URI.</summary>
      <param name="xmlNamespace">The XAML namespace URI to look up.</param>
      <returns>The XML prefix that corresponds to the given namespace; otherwise, <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlNamespace" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.PopScope">
      <summary>Pops the scope of the <see cref="T:System.Windows.Markup.XmlnsDictionary" />.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Markup.XmlnsDictionary" /> is sealed.</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.PushScope">
      <summary>Pushes the scope of the <see cref="T:System.Windows.Markup.XmlnsDictionary" />.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Markup.XmlnsDictionary" /> is sealed.</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.Remove(System.Object)">
      <summary>Removes the item with the specified prefix key from the <see cref="T:System.Windows.Markup.XmlnsDictionary" />.</summary>
      <param name="prefix">The prefix key to remove.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Markup.XmlnsDictionary" /> is sealed.</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.Remove(System.String)">
      <summary>Removes the item with the specified prefix key from the <see cref="T:System.Windows.Markup.XmlnsDictionary" />.</summary>
      <param name="prefix">The prefix key to remove.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Markup.XmlnsDictionary" /> is sealed.</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.Seal">
      <summary>Locks the dictionary so that it cannot be changed.</summary>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDictionary.Sealed">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Markup.XmlnsDictionary" /> is sealed.</summary>
      <returns>
        <see langword="true" /> if the dictionary is sealed; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDictionary.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Windows.Markup.XmlnsDictionary" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Windows.Markup.XmlnsDictionary" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.System#Collections#IDictionary#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IDictionary.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.IDictionaryEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDictionary.Values">
      <summary>Gets a collection of all the values in the <see cref="T:System.Windows.Markup.XmlnsDictionary" />.</summary>
      <returns>A collection of all the values in the <see cref="T:System.Windows.Markup.XmlnsDictionary" />.</returns>
    </member>
    <member name="T:System.Windows.Media.AdornerHitTestResult">
      <summary>Represents data returned from calling the <see cref="M:System.Windows.Documents.AdornerLayer.AdornerHitTest(System.Windows.Point)" /> method.</summary>
    </member>
    <member name="P:System.Windows.Media.AdornerHitTestResult.Adorner">
      <summary>Gets the visual that was hit.</summary>
      <returns>The visual that was hit.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.BeginStoryboard">
      <summary>A trigger action that begins a <see cref="T:System.Windows.Media.Animation.Storyboard" /> and distributes its animations to their targeted objects and properties.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.BeginStoryboard.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.BeginStoryboard.HandoffBehavior">
      <summary>Gets or sets the proper hand-off behavior to start an animation clock in this storyboard</summary>
      <returns>One of the <see cref="T:System.Windows.Media.Animation.HandoffBehavior" /> enumeration values. The default value is <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.BeginStoryboard.Name">
      <summary>Gets or sets the name of the <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> object. By naming the <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> object, the <see cref="T:System.Windows.Media.Animation.Storyboard" /> can be controlled after it is started.</summary>
      <returns>The name of the <see cref="T:System.Windows.Media.Animation.BeginStoryboard" />. The default is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.BeginStoryboard.Storyboard">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Animation.Storyboard" /> that this <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> starts.</summary>
      <returns>The <see cref="T:System.Windows.Media.Animation.Storyboard" /> that the <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> starts. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.BeginStoryboard.StoryboardProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.BeginStoryboard.Storyboard" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.ControllableStoryboardAction">
      <summary>Manipulates a <see cref="T:System.Windows.Media.Animation.Storyboard" /> that has been applied by a <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> action.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.ControllableStoryboardAction.BeginStoryboardName">
      <summary>Gets or sets the <see cref="P:System.Windows.Media.Animation.BeginStoryboard.Name" /> of the <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> that began the <see cref="T:System.Windows.Media.Animation.Storyboard" /> you want to interactively control.</summary>
      <returns>The <see cref="P:System.Windows.Media.Animation.BeginStoryboard.Name" /> of the <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> that began the <see cref="T:System.Windows.Media.Animation.Storyboard" /> you want to interactively control. The default value is <see langword="null" />.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.DiscreteThicknessKeyFrame">
      <summary>Animates from the <see cref="T:System.Windows.Thickness" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" /> using discrete interpolation.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteThicknessKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteThicknessKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteThicknessKeyFrame.#ctor(System.Windows.Thickness)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteThicknessKeyFrame" /> class with the specified ending value.</summary>
      <param name="value">The ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteThicknessKeyFrame.#ctor(System.Windows.Thickness,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteThicknessKeyFrame" /> class with the specified ending value and key time.</summary>
      <param name="value">The ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">The key time for the key frame. The key time determines when the target value is reached, which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteThicknessKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.DiscreteThicknessKeyFrame" />.</summary>
      <returns>The new instance.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteThicknessKeyFrame.InterpolateValueCore(System.Windows.Thickness,System.Double)">
      <summary>Interpolates, between the previous key frame value and the value of the current key frame using discrete interpolation.</summary>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value from 0.0 through 1.0 that specifies the percentage of time that has elapsed for this key frame.</param>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.EasingThicknessKeyFrame">
      <summary>A class that enables you to associate easing functions with a <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> key frame animation.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingThicknessKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingThicknessKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingThicknessKeyFrame.#ctor(System.Windows.Thickness)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingThicknessKeyFrame" /> class with the specified <see cref="T:System.Windows.Thickness" /> value.</summary>
      <param name="value">The initial <see cref="T:System.Windows.Thickness" /> value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingThicknessKeyFrame.#ctor(System.Windows.Thickness,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingThicknessKeyFrame" /> class with the specified <see cref="T:System.Windows.Thickness" /> value and key time.</summary>
      <param name="value">The initial <see cref="T:System.Windows.Thickness" /> value.</param>
      <param name="keyTime">The initial key time.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingThicknessKeyFrame.#ctor(System.Windows.Thickness,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.IEasingFunction)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingThicknessKeyFrame" /> class with the specified <see cref="T:System.Windows.Thickness" /> value, key time, and easing function.</summary>
      <param name="value">The initial <see cref="T:System.Windows.Thickness" /> value.</param>
      <param name="keyTime">The initial key time.</param>
      <param name="easingFunction">The easing function.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingThicknessKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class. When creating a derived class, you must override this method.</summary>
      <returns>The new instance.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.EasingThicknessKeyFrame.EasingFunction">
      <summary>Gets or sets the easing function applied to the key frame.</summary>
      <returns>The easing function applied to the key frame.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.EasingThicknessKeyFrame.EasingFunctionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.EasingThicknessKeyFrame.EasingFunction" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingThicknessKeyFrame.InterpolateValueCore(System.Windows.Thickness,System.Double)">
      <summary>Interpolates, according to the easing function used, between the previous key frame value and the value of the current key frame, using the supplied progress increment.</summary>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.LinearThicknessKeyFrame">
      <summary>Animates from the <see cref="T:System.Windows.Thickness" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" /> using linear interpolation.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearThicknessKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearThicknessKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearThicknessKeyFrame.#ctor(System.Windows.Thickness)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearThicknessKeyFrame" /> class with the specified ending value.</summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearThicknessKeyFrame.#ctor(System.Windows.Thickness,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearThicknessKeyFrame" /> class with the specified ending value and key time.</summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearThicknessKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.LinearThicknessKeyFrame" />.</summary>
      <returns>The new instance.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearThicknessKeyFrame.InterpolateValueCore(System.Windows.Thickness,System.Double)">
      <summary>Interpolates, in a linear fashion, between the previous key frame value and the value of the current key frame, using the supplied progress increment.</summary>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.PauseStoryboard">
      <summary>A trigger action that pauses a <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PauseStoryboard.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.PauseStoryboard" /> class.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.RemoveStoryboard">
      <summary>A trigger action that removes a <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.RemoveStoryboard.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.RemoveStoryboard" /> class.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.ResumeStoryboard">
      <summary>Supports a trigger action that resumes a paused <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ResumeStoryboard.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ResumeStoryboard" /> class.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.SeekStoryboard">
      <summary>A trigger action that provides functionality for seeking (skipping) to a specified time within the active period of a <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SeekStoryboard.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SeekStoryboard" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.SeekStoryboard.Offset">
      <summary>Gets or sets the amount by which the storyboard should move forward or backward from the seek origin <see cref="P:System.Windows.Media.Animation.SeekStoryboard.Origin" />. .</summary>
      <returns>A positive or negative value that specifies the amount by which the storyboard should move forward or backward from the seek origin <see cref="P:System.Windows.Media.Animation.SeekStoryboard.Origin" />. The default value is 0.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.SeekStoryboard.Origin">
      <summary>Gets or sets the position from which this seek operation's <see cref="P:System.Windows.Media.Animation.SeekStoryboard.Offset" /> is applied.</summary>
      <returns>The position from which this seek operation's <see cref="P:System.Windows.Media.Animation.SeekStoryboard.Offset" /> is applied. The default value is <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SeekStoryboard.ShouldSerializeOffset">
      <summary>Returns a value that indicates whether the <see cref="P:System.Windows.Media.Animation.SeekStoryboard.Offset" /> property of this <see cref="T:System.Windows.Media.Animation.SeekStoryboard" /> should be serialized.</summary>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.Media.Animation.SeekStoryboard.Offset" /> property of this <see cref="T:System.Windows.Media.Animation.SeekStoryboard" /> should be serialized; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.SetStoryboardSpeedRatio">
      <summary>A trigger action that changes the speed of a <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SetStoryboardSpeedRatio.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SetStoryboardSpeedRatio" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.SetStoryboardSpeedRatio.SpeedRatio">
      <summary>Gets or sets a new <see cref="T:System.Windows.Media.Animation.Storyboard" /> animation speed as a ratio of the old animation speed.</summary>
      <returns>The speed ratio for the <see cref="T:System.Windows.Media.Animation.Storyboard" />. The default value is 1.0.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.SkipStoryboardToFill">
      <summary>A trigger action that advances a <see cref="T:System.Windows.Media.Animation.Storyboard" /> to the end of its fill period.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SkipStoryboardToFill.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SkipStoryboardToFill" /> class.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.SplineThicknessKeyFrame">
      <summary>Animates from the <see cref="T:System.Windows.Thickness" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" /> using splined interpolation.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineThicknessKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineThicknessKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineThicknessKeyFrame.#ctor(System.Windows.Thickness)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineThicknessKeyFrame" /> class with the specified ending value.</summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineThicknessKeyFrame.#ctor(System.Windows.Thickness,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineThicknessKeyFrame" /> class with the specified ending value and key time.</summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineThicknessKeyFrame.#ctor(System.Windows.Thickness,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeySpline)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineThicknessKeyFrame" /> class with the specified ending value, key time, and <see cref="T:System.Windows.Media.Animation.KeySpline" />.</summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
      <param name="keySpline">
        <see cref="T:System.Windows.Media.Animation.KeySpline" /> for the key frame. The <see cref="T:System.Windows.Media.Animation.KeySpline" /> represents a Bezier curve which defines animation progress of the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineThicknessKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.SplineThicknessKeyFrame" />.</summary>
      <returns>The new instance.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineThicknessKeyFrame.InterpolateValueCore(System.Windows.Thickness,System.Double)">
      <summary>Uses splined interpolation to transition between the previous key frame value and the value of the current key frame.</summary>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.SplineThicknessKeyFrame.KeySpline">
      <summary>Gets or sets the two control points that define animation progress for this key frame.</summary>
      <returns>The two control points that specify the cubic  Bezier curve which defines the progress of the key frame.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.SplineThicknessKeyFrame.KeySplineProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.SplineThicknessKeyFrame.KeySpline" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.StopStoryboard">
      <summary>A trigger action that stops a <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.StopStoryboard.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.StopStoryboard" /> class.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.Storyboard">
      <summary>A container timeline that provides object and property targeting information for its child animations.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Storyboard" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin">
      <summary>Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement)">
      <summary>Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</summary>
      <param name="containingObject">An object contained within the same name scope as the targets of this storyboard's animations. Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)">
      <summary>Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</summary>
      <param name="containingObject">An object contained within the same name scope as the targets of this storyboard's animations. Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</param>
      <param name="isControllable">
        <see langword="true" /> if the storyboard should be interactively controllable; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior)">
      <summary>Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them, using the specified <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />.</summary>
      <param name="containingObject">An object contained within the same name scope as the targets of this storyboard's animations. Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</param>
      <param name="handoffBehavior">The behavior the new animation should use to interact with any current animations.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
      <summary>Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them, using the specified <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />.</summary>
      <param name="containingObject">An object contained within the same name scope as the targets of this storyboard's animations. Animations without a specified <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</param>
      <param name="handoffBehavior">The behavior the new animation should use to interact with any current animations.</param>
      <param name="isControllable">Declares whether the animation is controllable (can be paused) once started.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement)">
      <summary>Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</summary>
      <param name="containingObject">An object contained within the same name scope as the targets of this storyboard's animations. Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)">
      <summary>Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</summary>
      <param name="containingObject">An object contained within the same name scope as the targets of this storyboard's animations. Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</param>
      <param name="isControllable">
        <see langword="true" /> if the storyboard should be interactively controllable; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate)">
      <summary>Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets within the specified template and initiates them.</summary>
      <param name="containingObject">The object to which the specified <paramref name="frameworkTemplate" /> has been applied. Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</param>
      <param name="frameworkTemplate">The template to animate.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Boolean)">
      <summary>Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets within the specified template and initiates them.</summary>
      <param name="containingObject">The object to which the specified <paramref name="frameworkTemplate" /> has been applied.  Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</param>
      <param name="frameworkTemplate">The template to animate.</param>
      <param name="isControllable">
        <see langword="true" /> if the storyboard should be interactively controllable; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior)">
      <summary>Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets within the specified template and initiates them.</summary>
      <param name="containingObject">The object to which the specified <paramref name="frameworkTemplate" /> has been applied. Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</param>
      <param name="frameworkTemplate">The template to animate.</param>
      <param name="handoffBehavior">The behavior the new animation should use to interact with any current animations.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
      <summary>Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets within the specified template and initiates them.</summary>
      <param name="containingObject">The object to which the specified <paramref name="frameworkTemplate" /> has been applied. Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</param>
      <param name="frameworkTemplate">The template to animate.</param>
      <param name="handoffBehavior">The behavior the new animation should use to interact with any current animations.</param>
      <param name="isControllable">
        <see langword="true" /> if the storyboard should be interactively controllable; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior)">
      <summary>Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them, using the specified <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />.</summary>
      <param name="containingObject">An object contained within the same name scope as the targets of this storyboard's animations. Animations without a specified <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</param>
      <param name="handoffBehavior">The behavior the new animation should use to interact with any current animations.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
      <summary>Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</summary>
      <param name="containingObject">An object contained within the same name scope as the targets of this storyboard's animations. Animations without a specified <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</param>
      <param name="handoffBehavior">The behavior the new animation should use to interact with any current animations.</param>
      <param name="isControllable">Declares whether the animation is controllable (can be paused) once started.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Storyboard" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true." /></returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Media.Animation.Storyboard" /> class.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.Storyboard" /> instance.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed">
      <summary>Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
      <returns>The current global speed, or 0 if the clock is stopped.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkContentElement)">
      <summary>Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
      <returns>The current global speed, or <see langword="null" /> if the clock is stopped.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkElement)">
      <summary>Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
      <returns>The current global speed, or <see langword="null" /> if the clock is stopped.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration">
      <summary>Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
      <returns>This clock's current iteration within its current active period, or <see langword="null" /> if this clock is stopped.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkContentElement)">
      <summary>Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
      <returns>This clock's current iteration within its current active period, or <see langword="null" /> if this clock is stopped.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkElement)">
      <summary>Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
      <returns>This clock's current iteration within its current active period, or <see langword="null" /> if this clock is stopped.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress">
      <summary>Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
      <returns>
        <see langword="null" /> if this clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />, or 0.0 if this clock is active and its <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> has a <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> of <see cref="P:System.Windows.Duration.Forever" />; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration. A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkContentElement)">
      <summary>Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
      <returns>
        <see langword="null" /> if this clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />, or 0.0 if this clock is active and its <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> has a <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> of <see cref="P:System.Windows.Duration.Forever" />; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration. A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkElement)">
      <summary>Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
      <returns>
        <see langword="null" /> if this clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />, or 0.0 if this clock is active and its <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> has a <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> of <see cref="P:System.Windows.Duration.Forever" />; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration. A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentState">
      <summary>Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
      <returns>The current state of the clock created for this storyboard: <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, or <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkContentElement)">
      <summary>Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
      <returns>The current state of the clock created for this storyboard: <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, or <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkElement)">
      <summary>Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
      <returns>The current state of the clock created for this storyboard: <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, or <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime">
      <summary>Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
      <returns>
        <see langword="null" /> if this storyboard's clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />; otherwise, the current time of the storyboard's clock.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkContentElement)">
      <summary>Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
      <returns>
        <see langword="null" /> if this storyboard's clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />; otherwise, the current time of the storyboard's clock.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkElement)">
      <summary>Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
      <returns>
        <see langword="null" /> if this storyboard's clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />; otherwise, the current time of the storyboard's clock.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetIsPaused">
      <summary>Retrieves a value that indicates whether the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Media.Animation.Clock" /> created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkContentElement)">
      <summary>Retrieves a value that indicates whether the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused.</summary>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Media.Animation.Clock" /> created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkElement)">
      <summary>Retrieves a value that indicates whether the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused.</summary>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Media.Animation.Clock" /> created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetTarget(System.Windows.DependencyObject)">
      <summary>Retrieves the <see cref="P:System.Windows.Media.Animation.Storyboard.Target" /> value of the specified <see cref="T:System.Windows.Media.Animation.Timeline" />.</summary>
      <param name="element">The timeline from which to retrieve the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />.</param>
      <returns>The dependency object targeted by <paramref name="element" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetTargetName(System.Windows.DependencyObject)">
      <summary>Retrieves the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> value of the specified <see cref="T:System.Windows.Media.Animation.Timeline" />.</summary>
      <param name="element">The timeline from which to retrieve the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />.</param>
      <returns>The name of the dependency object targeted by <paramref name="element" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetTargetProperty(System.Windows.DependencyObject)">
      <summary>Retrieves the <see cref="F:System.Windows.Media.Animation.Storyboard.TargetProperty" /> value of the specified <see cref="T:System.Windows.Media.Animation.Timeline" />.</summary>
      <param name="element">The dependency object from which to get the <see cref="F:System.Windows.Media.Animation.Storyboard.TargetProperty" />.</param>
      <returns>The property targeted by <paramref name="element" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Pause">
      <summary>Pauses the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)">
      <summary>Pauses the <see cref="T:System.Windows.Media.Animation.Clock" /> of the specified <see cref="T:System.Windows.FrameworkContentElement" /> associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)">
      <summary>Pauses the <see cref="T:System.Windows.Media.Animation.Clock" /> of the specified <see cref="T:System.Windows.FrameworkElement" /> associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Remove">
      <summary>Removes the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />. Animations that belong to this <see cref="T:System.Windows.Media.Animation.Storyboard" /> no longer affect the properties they once animated, regardless of their <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> setting.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkContentElement)">
      <summary>Removes the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />. Animations that belong to this <see cref="T:System.Windows.Media.Animation.Storyboard" /> no longer affect the properties they once animated, regardless of their <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> setting.</summary>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkElement)">
      <summary>Removes the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />. Animations that belong to this <see cref="T:System.Windows.Media.Animation.Storyboard" /> no longer affect the properties they once animated, regardless of their <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> setting.</summary>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Resume">
      <summary>Resumes the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkContentElement)">
      <summary>Resumes the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkElement)">
      <summary>Resumes the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan)">
      <summary>Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to the specified position. The <see cref="T:System.Windows.Media.Animation.Storyboard" /> performs the requested seek when the next clock tick occurs.</summary>
      <param name="offset">A positive or negative value that describes the amount by which the timeline should move forward or backward.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
      <summary>Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to the specified position. The <see cref="T:System.Windows.Media.Animation.Storyboard" /> performs the requested seek when the next clock tick occurs.</summary>
      <param name="offset">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <paramref name="origin" />.</param>
      <param name="origin">The position from which <paramref name="offset" /> is applied.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
      <summary>Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to the specified position. The <see cref="T:System.Windows.Media.Animation.Storyboard" /> performs the requested seek when the next clock tick occurs.</summary>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
      <param name="offset">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <paramref name="origin" />.</param>
      <param name="origin">The position from which <paramref name="offset" /> is applied.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
      <summary>Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to the specified position. The <see cref="T:System.Windows.Media.Animation.Storyboard" /> performs the requested seek when the next clock tick occurs.</summary>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
      <param name="offset">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <paramref name="origin" />.</param>
      <param name="origin">The position from which <paramref name="offset" /> is applied.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan)">
      <summary>Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</summary>
      <param name="offset">A positive or negative value that describes the amount by which the timeline should move forward or backward.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
      <summary>Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</summary>
      <param name="offset">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <paramref name="origin" />.</param>
      <param name="origin">The position from which <paramref name="offset" /> is applied.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
      <summary>Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</summary>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
      <param name="offset">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <paramref name="origin" />.</param>
      <param name="origin">The position from which <paramref name="offset" /> is applied.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
      <summary>Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</summary>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
      <param name="offset">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <paramref name="origin" />.</param>
      <param name="origin">The position from which <paramref name="offset" /> is applied.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Double)">
      <summary>Sets the interactive speed ratio for the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
      <param name="speedRatio">A finite value greater than zero that is the new interactive speed ratio of the storyboard. This value is multiplied against the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> value to determine the storyboard's effective speed. This value does not overwrite the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> property. For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> of 0.5 gives the storyboard an effective speed of 1.5.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkContentElement,System.Double)">
      <summary>Sets the interactive speed ratio of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
      <param name="speedRatio">A finite value greater than zero that is the new interactive speed ratio of the storyboard. This value is multiplied against the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> value to determine the storyboard's effective speed. This value does not overwrite the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> property. For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> of 0.5 gives the storyboard an effective speed of 1.5.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkElement,System.Double)">
      <summary>Sets the interactive speed ratio of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
      <param name="speedRatio">A finite value greater than zero that is the new interactive speed ratio of the storyboard. This value is multiplied against the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> value to determine the storyboard's effective speed. This value does not overwrite the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> property. For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> of 0.5 gives the storyboard an effective speed of 1.5.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SetTarget(System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary>Makes the specified <see cref="T:System.Windows.Media.Animation.Timeline" /> target the dependency object.</summary>
      <param name="element">The <see cref="T:System.Windows.Media.Animation.Timeline" /> that should target the specified dependency object.</param>
      <param name="value">The dependency object to target.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SetTargetName(System.Windows.DependencyObject,System.String)">
      <summary>Makes the specified <see cref="T:System.Windows.Media.Animation.Timeline" /> target the dependency object with the specified name.</summary>
      <param name="element">The <see cref="T:System.Windows.Media.Animation.Timeline" /> that should target the specified dependency object.</param>
      <param name="name">The name of the dependency object to target.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SetTargetProperty(System.Windows.DependencyObject,System.Windows.PropertyPath)">
      <summary>Makes the specified <see cref="T:System.Windows.Media.Animation.Timeline" /> target the specified dependency property.</summary>
      <param name="element">The <see cref="T:System.Windows.Media.Animation.Timeline" /> with which to associate the specified dependency property.</param>
      <param name="path">A path that describe the dependency property to be animated.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SkipToFill">
      <summary>Advances the current time of this storyboard's <see cref="T:System.Windows.Media.Animation.Clock" /> to the end of its active period.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkContentElement)">
      <summary>Advances the current time of this storyboard's <see cref="T:System.Windows.Media.Animation.Clock" /> to the end of its active period.</summary>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkElement)">
      <summary>Advances the current time of this storyboard's <see cref="T:System.Windows.Media.Animation.Clock" /> to the end of its active period.</summary>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Stop">
      <summary>Stops the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkContentElement)">
      <summary>Stops the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkElement)">
      <summary>Stops the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Storyboard.Target">
      <summary>Gets or sets the object that should be animated.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.Storyboard.TargetName">
      <summary>Gets or sets the name of the object to animate. The object must be a <see cref="T:System.Windows.FrameworkElement" />, <see cref="T:System.Windows.FrameworkContentElement" />, or <see cref="T:System.Windows.Freezable" />.</summary>
    </member>
    <member name="F:System.Windows.Media.Animation.Storyboard.TargetNameProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> attached property.</summary>
    </member>
    <member name="F:System.Windows.Media.Animation.Storyboard.TargetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.Storyboard.Target" /> attached property.</summary>
    </member>
    <member name="F:System.Windows.Media.Animation.Storyboard.TargetPropertyProperty">
      <summary>Identifies the <see cref="F:System.Windows.Media.Animation.Storyboard.TargetProperty" /> attached property.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.ThicknessAnimation">
      <summary>Animates the value of a  <see cref="T:System.Windows.Thickness" /> property between two target values using      linear interpolation over a specified <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimation.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ThicknessAnimation" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimation.#ctor(System.Windows.Thickness,System.Windows.Duration)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ThicknessAnimation" /> class that animates to the specified value over the specified duration. The starting value for the animation is the base value of the property being animated or the output from another animation.</summary>
      <param name="toValue">The destination value of the animation.</param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimation.#ctor(System.Windows.Thickness,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ThicknessAnimation" /> class that animates to the specified value over the specified duration and has the specified fill behavior. The starting value for the animation is the base value of the property being animated or the output from another animation.</summary>
      <param name="toValue">The destination value of the animation.</param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
      <param name="fillBehavior">Specifies how the animation behaves when it is not active.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimation.#ctor(System.Windows.Thickness,System.Windows.Thickness,System.Windows.Duration)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ThicknessAnimation" /> class that animates from the specified starting value to the specified destination value over the specified duration.</summary>
      <param name="fromValue">The starting value of the animation.</param>
      <param name="toValue">The destination value of the animation.</param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimation.#ctor(System.Windows.Thickness,System.Windows.Thickness,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ThicknessAnimation" /> class that animates from the specified starting value to the specified destination value over the specified duration and has the specified fill behavior.</summary>
      <param name="fromValue">The starting value of the animation.</param>
      <param name="toValue">The destination value of the animation.</param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
      <param name="fillBehavior">Specifies how the animation behaves when it is not active.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimation.By">
      <summary>Gets or sets the total amount by which the animation changes its starting value.</summary>
      <returns>The total amount by which the animation changes its starting value.     The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ThicknessAnimation.ByProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.ThicknessAnimation.By" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimation.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.ThicknessAnimation" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true." /></returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimation.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Media.Animation.ThicknessAnimation" />.</summary>
      <returns>The new instance.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimation.EasingFunction">
      <summary>Gets or sets the easing function applied to this animation.</summary>
      <returns>The easing function applied to this animation.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ThicknessAnimation.EasingFunctionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.ThicknessAnimation.EasingFunction" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimation.From">
      <summary>Gets or sets the animation's starting value.</summary>
      <returns>The starting value of the animation. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ThicknessAnimation.FromProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.ThicknessAnimation.From" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimation.GetCurrentValueCore(System.Windows.Thickness,System.Windows.Thickness,System.Windows.Media.Animation.AnimationClock)">
      <summary>Calculates a value that represents the current value of the property being animated, as determined by the <see cref="T:System.Windows.Media.Animation.ThicknessAnimation" />.</summary>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the animation.</param>
      <returns>The calculated value of the property, as determined by the current animation.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimation.IsAdditive">
      <summary>Gets or sets a value that indicates whether the target property's current value should be added to this animation's starting value.</summary>
      <returns>
        <see langword="true" /> if the target property's current value should be added to this animation's starting value; otherwise, <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimation.IsCumulative">
      <summary>Gets or sets a value that specifies whether the animation's value accumulates when it repeats.</summary>
      <returns>
        <see langword="true" /> if the animation accumulates its values when its <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> property causes it to repeat its simple duration. otherwise, <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimation.To">
      <summary>Gets or sets the animation's ending value.</summary>
      <returns>The ending value of the animation. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ThicknessAnimation.ToProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.ThicknessAnimation.To" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.ThicknessAnimationBase">
      <summary>Abstract class that, when implemented, animates a <see cref="T:System.Windows.Thickness" /> value.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ThicknessAnimationBase" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationBase.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.ThicknessAnimationBase" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true." /></returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value.</param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
      <returns>The current value of the animation.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationBase.GetCurrentValue(System.Windows.Thickness,System.Windows.Thickness,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value.</param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
      <returns>The current value of this animation.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationBase.GetCurrentValueCore(System.Windows.Thickness,System.Windows.Thickness,System.Windows.Media.Animation.AnimationClock)">
      <summary>Calculates a value that represents the current value of the property being animated, as determined by the host animation.</summary>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</param>
      <returns>The current value of this animation.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimationBase.TargetPropertyType">
      <summary>Gets the type of value this animation generates.</summary>
      <returns>The type of value produced by this animation.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames">
      <summary>Animates the value of a <see cref="T:System.Windows.Thickness" /> property along a set of <see cref="P:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.KeyFrames" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.AddChild(System.Object)">
      <summary>Adds a child <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> to this <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" />.</summary>
      <param name="child">The object to be added as the child of this <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" />.</param>
      <exception cref="T:System.ArgumentException">The parameter <paramref name="child" /> is not a <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.AddText(System.String)">
      <summary>Adds a text string as a child of this <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" />.</summary>
      <param name="childText">The text added to the <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" />.</param>
      <exception cref="T:System.InvalidOperationException">A <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> does not accept text as a child, so this method will raise this exception unless a derived class has overridden this behavior which allows text to be added.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true." /></returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" />.</summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> object unmodifiable or determines whether it can be made unmodifiable.</summary>
      <param name="isChecking">
        <see langword="true" /> to check if this instance can be frozen; <see langword="false" /> to freeze this instance.</param>
      <returns>If <paramref name="isChecking" /> is true, this method returns <see langword="true" /> if this instance can be made read-only, or <see langword="false" /> if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns <see langword="true" /> if this instance is now read-only, or <see langword="false" /> if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> object.</summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> object to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.GetCurrentValueCore(System.Windows.Thickness,System.Windows.Thickness,System.Windows.Media.Animation.AnimationClock)">
      <summary>Calculates a value that represents the current value of the property being animated, as determined by this instance of <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" />.</summary>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</param>
      <returns>The calculated value of the property, as determined by the current instance.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)">
      <summary>Provide a custom natural <see cref="T:System.Windows.Duration" /> when the <see cref="T:System.Windows.Duration" /> property is set to <see cref="P:System.Windows.Duration.Automatic" />.</summary>
      <param name="clock">The <see cref="T:System.Windows.Media.Animation.Clock" /> whose natural duration is desired.</param>
      <returns>If the last key frame of this animation is a <see cref="T:System.Windows.Media.Animation.KeyTime" />, then this value is used as the <see cref="P:System.Windows.Media.Animation.Clock.NaturalDuration" />; otherwise it will be one second.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.IsAdditive">
      <summary>Gets a value that specifies whether the animation's output value is added to the base value of the property being animated.</summary>
      <returns>
        <see langword="true" /> if the animation adds its output value to the base value of the property being animated instead of replacing it; otherwise, <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.IsCumulative">
      <summary>Gets or sets a value that specifies whether the animation's value accumulates when it repeats.</summary>
      <returns>
        <see langword="true" /> if the animation accumulates its values when its <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> property causes it to repeat its simple duration; otherwise, <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.KeyFrames">
      <summary>Gets or sets the collection of <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> objects that define the animation.</summary>
      <returns>The collection of <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> objects that define the animation. The default value is <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Empty" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.OnChanged">
      <summary>Called when the current <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> object is modified.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.ShouldSerializeKeyFrames">
      <summary>Returns true if the value of the <see cref="P:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.KeyFrames" /> property of this instance of <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> should be value-serialized.</summary>
      <returns>
        <see langword="true" /> if the property value should be serialized; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>Adds a child object.</summary>
      <param name="child">The child object to add.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>Adds the text content of a node to the object.</summary>
      <param name="childText">The text to add to the object.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.System#Windows#Media#Animation#IKeyFrameAnimation#KeyFrames">
      <summary>Gets or sets an ordered collection P:System.Windows.Media.Animation.IKeyFrameAnimation.KeyFrames associated with this animation sequence.</summary>
      <returns>An <see cref="T:System.Collections.IList" /> of <see cref="P:System.Windows.Media.Animation.IKeyFrameAnimation.KeyFrames" />.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.ThicknessKeyFrame">
      <summary>Abstract class that, when implemented, defines an animation segment with its own target value and interpolation method for a <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrame.#ctor(System.Windows.Thickness)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" />.</summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrame.#ctor(System.Windows.Thickness,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" /> and <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.KeyTime" />.</summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> instance.</param>
      <param name="keyTime">The <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.KeyTime" /> of the new <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrame.InterpolateValue(System.Windows.Thickness,System.Double)">
      <summary>Returns the interpolated value of a specific key frame at the progress increment provided.</summary>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Occurs if <paramref name="keyFrameProgress" /> is not between 0.0 and 1.0, inclusive.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrame.InterpolateValueCore(System.Windows.Thickness,System.Double)">
      <summary>Calculates the value of a key frame at the progress increment provided.</summary>
      <param name="baseValue">The value to animate from; typically the value of the previous key frame.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrame.KeyTime">
      <summary>Gets or sets the time at which the key frame's target <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" /> should be reached.</summary>
      <returns>The time at which the key frame's current value should be equal to its <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" /> property. The default value is <see cref="P:System.Windows.Media.Animation.KeyTime.Uniform" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ThicknessKeyFrame.KeyTimeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.KeyTime" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrame.System#Windows#Media#Animation#IKeyFrame#Value">
      <summary>Gets or sets the value associated with a <see cref="T:System.Windows.Media.Animation.KeyTime" /> instance.</summary>
      <returns>The current value for this property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value">
      <summary>Gets or sets the key frame's target value.</summary>
      <returns>The key frame's target value, which is the value of this key frame at its specified <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.KeyTime" />. The default value is <c>0</c>.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ThicknessKeyFrame.ValueProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> objects.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Add(System.Windows.Media.Animation.ThicknessKeyFrame)">
      <summary>Adds a <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> to the end of the collection.</summary>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> to add to the end of the collection.</param>
      <returns>The index at which the <paramref name="keyFrame" /> was added.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Clear">
      <summary>Removes all <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> objects from the collection.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true." /></returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Contains(System.Windows.Media.Animation.ThicknessKeyFrame)">
      <summary>Gets a value that indicates whether the collection contains the specified <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" />.</summary>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> to locate in the collection.</param>
      <returns>
        <see langword="true" /> if the collection contains <paramref name="keyFrame" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.CopyTo(System.Windows.Media.Animation.ThicknessKeyFrame[],System.Int32)">
      <summary>Copies all of the <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> objects in a collection to a specified array.</summary>
      <param name="array">Identifies the array to which content is copied.</param>
      <param name="index">Index position in the array to which the contents of the collection are copied.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Count">
      <summary>Gets the number of key frames contained in the <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" />.</summary>
      <returns>The number of key frames contained in the <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.CreateInstanceCore">
      <summary>Creates a new, frozen instance of <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" />.</summary>
      <returns>A frozen instance of <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Empty">
      <summary>Gets an empty <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" />.</summary>
      <returns>An empty <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" /> read-only or determines whether it can be made read-only.</summary>
      <param name="isChecking">
        <see langword="true" /> to check if this instance can be frozen; <see langword="false" /> to freeze this instance.</param>
      <returns>If <paramref name="isChecking" /> is true, this method returns <see langword="true" /> if this instance can be made read-only, or <see langword="false" /> if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns <see langword="true" /> if this instance is now read-only, or <see langword="false" /> if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" /> object.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" /> object to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.IndexOf(System.Windows.Media.Animation.ThicknessKeyFrame)">
      <summary>Searches for the specified <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> and returns the zero-based index of the first occurrence within the entire collection.</summary>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> to locate in the collection.</param>
      <returns>The zero-based index of the first occurrence of <paramref name="keyFrame" /> within the entire collection, if found; otherwise, <c>-1</c>.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.ThicknessKeyFrame)">
      <summary>Inserts a <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> into a specific location within the collection.</summary>
      <param name="index">The index position at which the <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> is inserted.</param>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> object to insert in the collection.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.IsFixedSize">
      <summary>Gets a value that indicates if the collection size can ever change.</summary>
      <returns>
        <see langword="true" /> if the collection is frozen; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.IsReadOnly">
      <summary>Gets a value that indicates if the collection is read-only.</summary>
      <returns>
        <see langword="true" /> if the collection is read-only; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.IsSynchronized">
      <summary>Gets a value that indicates whether access to the collection is synchronized (thread-safe).</summary>
      <returns>
        <see langword="true" /> if access to the collection is synchronized (thread-safe); otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> at the specified index position.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> to get or set.</param>
      <returns>The <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> at the specified index.</returns>
      <exception cref="T:System.InvalidOperationException">The attempt to modify the collection is invalid because the collection is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.  
-or-  
<paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Remove(System.Windows.Media.Animation.ThicknessKeyFrame)">
      <summary>Removes a <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> object from the collection.</summary>
      <param name="keyFrame">Identifies the <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> at the specified index position from the collection.</summary>
      <param name="index">Index position of the <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> to be removed.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the collection.</summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.System#Collections#IList#Add(System.Object)">
      <summary>Adds an item to the <see cref="T:System.Collections.IList" />.</summary>
      <param name="keyFrame">The object to add to the <see cref="T:System.Collections.IList" />.</param>
      <returns>The position into which the new element was inserted, or -1 to indicate that the item was not inserted into the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.System#Collections#IList#Contains(System.Object)">
      <summary>Determines whether the <see cref="T:System.Collections.IList" /> contains a specific value.</summary>
      <param name="keyFrame">The object to locate in the <see cref="T:System.Collections.IList" />.</param>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Collections.IList" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>Determines the index of a specific item in the <see cref="T:System.Collections.IList" />.</summary>
      <param name="keyFrame">The object to locate in the <see cref="T:System.Collections.IList" />.</param>
      <returns>The index of <paramref name="value" /> if found in the list; otherwise, -1.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Inserts an item to the <see cref="T:System.Collections.IList" /> at the specified index.</summary>
      <param name="index">The zero-based index at which <c>value</c> should be inserted.</param>
      <param name="keyFrame">The object to insert into the <see cref="T:System.Collections.IList" />.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.System#Collections#IList#Item(System.Int32)">
      <summary>Gets or sets the element at the specified index.</summary>
      <param name="index">The zero-based index of the element to get or set.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.System#Collections#IList#Remove(System.Object)">
      <summary>Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList" />.</summary>
      <param name="keyFrame">The object to remove from the <see cref="T:System.Collections.IList" />.</param>
    </member>
    <member name="T:System.Windows.Media.TextOptions">
      <summary>Defines a set of attached properties that affect the way text is displayed in an element.</summary>
    </member>
    <member name="M:System.Windows.Media.TextOptions.GetTextFormattingMode(System.Windows.DependencyObject)">
      <summary>Gets the <see cref="T:System.Windows.Media.TextFormattingMode" /> for the specified element.</summary>
      <param name="element">The element to get the <see cref="T:System.Windows.Media.TextFormattingMode" /> for.</param>
      <returns>The <see cref="T:System.Windows.Media.TextFormattingMode" /> for <paramref name="element" />.</returns>
    </member>
    <member name="M:System.Windows.Media.TextOptions.GetTextHintingMode(System.Windows.DependencyObject)">
      <summary>Gets the <see cref="T:System.Windows.Media.TextHintingMode" /> for the specified element.</summary>
      <param name="element">The element to get the <see cref="T:System.Windows.Media.TextHintingMode" /> for.</param>
      <returns>The <see cref="T:System.Windows.Media.TextHintingMode" /> for <paramref name="element" />.</returns>
    </member>
    <member name="M:System.Windows.Media.TextOptions.GetTextRenderingMode(System.Windows.DependencyObject)">
      <summary>Gets the <see cref="T:System.Windows.Media.TextRenderingMode" /> for the specified element.</summary>
      <param name="element">The element to get the <see cref="T:System.Windows.Media.TextRenderingMode" /> for.</param>
      <returns>The <see cref="T:System.Windows.Media.TextRenderingMode" /> for <paramref name="element" />.</returns>
    </member>
    <member name="M:System.Windows.Media.TextOptions.SetTextFormattingMode(System.Windows.DependencyObject,System.Windows.Media.TextFormattingMode)">
      <summary>Sets the <see cref="T:System.Windows.Media.TextFormattingMode" /> for the specified element.</summary>
      <param name="element">The element to set the <see cref="T:System.Windows.Media.TextFormattingMode" /> for.</param>
      <param name="value">The <see cref="T:System.Windows.Media.TextFormattingMode" /> to set on <paramref name="element" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Media.TextOptions.SetTextHintingMode(System.Windows.DependencyObject,System.Windows.Media.TextHintingMode)">
      <summary>Sets the <see cref="T:System.Windows.Media.TextHintingMode" /> for the specified element.</summary>
      <param name="element">The element to set the <see cref="T:System.Windows.Media.TextHintingMode" /> for.</param>
      <param name="value">The <see cref="T:System.Windows.Media.TextHintingMode" /> to set on <paramref name="element" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Media.TextOptions.SetTextRenderingMode(System.Windows.DependencyObject,System.Windows.Media.TextRenderingMode)">
      <summary>Sets the <see cref="T:System.Windows.Media.TextRenderingMode" /> for the specified element.</summary>
      <param name="element">The element to set the <see cref="T:System.Windows.Media.TextRenderingMode" /> for.</param>
      <param name="value">The <see cref="T:System.Windows.Media.TextRenderingMode" /> to set on <paramref name="element" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Media.TextOptions.TextFormattingMode">
      <summary>Gets the <see cref="T:System.Windows.Media.TextFormattingMode" /> for the element. This is an attached property.</summary>
    </member>
    <member name="F:System.Windows.Media.TextOptions.TextFormattingModeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.TextOptions.TextFormattingMode" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Media.TextOptions.TextHintingMode">
      <summary>Gets the <see cref="T:System.Windows.Media.TextHintingMode" /> for the element. This is an attached property.</summary>
    </member>
    <member name="F:System.Windows.Media.TextOptions.TextHintingModeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.TextOptions.TextHintingMode" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Media.TextOptions.TextRenderingMode">
      <summary>Sets the <see cref="T:System.Windows.Media.TextRenderingMode" /> for the element. This is an attached property.</summary>
    </member>
    <member name="F:System.Windows.Media.TextOptions.TextRenderingModeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.TextOptions.TextRenderingMode" /> attached property.</summary>
    </member>
    <member name="T:System.Windows.MediaScriptCommandRoutedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.MediaElement.ScriptCommand" /> and <see cref="E:System.Windows.Media.MediaPlayer.ScriptCommand" /> events.</summary>
    </member>
    <member name="P:System.Windows.MediaScriptCommandRoutedEventArgs.ParameterType">
      <summary>Gets the type of script command that was raised.</summary>
      <returns>The type of script command that was raised.</returns>
    </member>
    <member name="P:System.Windows.MediaScriptCommandRoutedEventArgs.ParameterValue">
      <summary>Gets the arguments associated with the script command type.</summary>
      <returns>The arguments associated with the script command type.</returns>
    </member>
    <member name="T:System.Windows.MessageBox">
      <summary>Displays a message box.</summary>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.String)">
      <summary>Displays a message box that has a message and that returns a result.</summary>
      <param name="messageBoxText">A <see cref="T:System.String" /> that specifies the text to display.</param>
      <returns>A <see cref="T:System.Windows.MessageBoxResult" /> value that specifies which message box button is clicked by the user.</returns>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.String,System.String)">
      <summary>Displays a message box that has a message and title bar caption; and that returns a result.</summary>
      <param name="messageBoxText">A <see cref="T:System.String" /> that specifies the text to display.</param>
      <param name="caption">A <see cref="T:System.String" /> that specifies the title bar caption to display.</param>
      <returns>A <see cref="T:System.Windows.MessageBoxResult" /> value that specifies which message box button is clicked by the user.</returns>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton)">
      <summary>Displays a message box that has a message, title bar caption, and button; and that returns a result.</summary>
      <param name="messageBoxText">A <see cref="T:System.String" /> that specifies the text to display.</param>
      <param name="caption">A <see cref="T:System.String" /> that specifies the title bar caption to display.</param>
      <param name="button">A <see cref="T:System.Windows.MessageBoxButton" /> value that specifies which button or buttons to display.</param>
      <returns>A <see cref="T:System.Windows.MessageBoxResult" /> value that specifies which message box button is clicked by the user.</returns>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage)">
      <summary>Displays a message box that has a message, title bar caption, button, and icon; and that returns a result.</summary>
      <param name="messageBoxText">A <see cref="T:System.String" /> that specifies the text to display.</param>
      <param name="caption">A <see cref="T:System.String" /> that specifies the title bar caption to display.</param>
      <param name="button">A <see cref="T:System.Windows.MessageBoxButton" /> value that specifies which button or buttons to display.</param>
      <param name="icon">A <see cref="T:System.Windows.MessageBoxImage" /> value that specifies the icon to display.</param>
      <returns>A <see cref="T:System.Windows.MessageBoxResult" /> value that specifies which message box button is clicked by the user.</returns>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult)">
      <summary>Displays a message box that has a message, title bar caption, button, and icon; and that accepts a default message box result and returns a result.</summary>
      <param name="messageBoxText">A <see cref="T:System.String" /> that specifies the text to display.</param>
      <param name="caption">A <see cref="T:System.String" /> that specifies the title bar caption to display.</param>
      <param name="button">A <see cref="T:System.Windows.MessageBoxButton" /> value that specifies which button or buttons to display.</param>
      <param name="icon">A <see cref="T:System.Windows.MessageBoxImage" /> value that specifies the icon to display.</param>
      <param name="defaultResult">A <see cref="T:System.Windows.MessageBoxResult" /> value that specifies the default result of the message box.</param>
      <returns>A <see cref="T:System.Windows.MessageBoxResult" /> value that specifies which message box button is clicked by the user.</returns>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult,System.Windows.MessageBoxOptions)">
      <summary>Displays a message box that has a message, title bar caption, button, and icon; and that accepts a default message box result, complies with the specified options, and returns a result.</summary>
      <param name="messageBoxText">A <see cref="T:System.String" /> that specifies the text to display.</param>
      <param name="caption">A <see cref="T:System.String" /> that specifies the title bar caption to display.</param>
      <param name="button">A <see cref="T:System.Windows.MessageBoxButton" /> value that specifies which button or buttons to display.</param>
      <param name="icon">A <see cref="T:System.Windows.MessageBoxImage" /> value that specifies the icon to display.</param>
      <param name="defaultResult">A <see cref="T:System.Windows.MessageBoxResult" /> value that specifies the default result of the message box.</param>
      <param name="options">A <see cref="T:System.Windows.MessageBoxOptions" /> value object that specifies the options.</param>
      <returns>A <see cref="T:System.Windows.MessageBoxResult" /> value that specifies which message box button is clicked by the user.</returns>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.Windows.Window,System.String)">
      <summary>Displays a message box in front of the specified window. The message box displays a message and returns a result.</summary>
      <param name="owner">A <see cref="T:System.Windows.Window" /> that represents the owner window of the message box.</param>
      <param name="messageBoxText">A <see cref="T:System.String" /> that specifies the text to display.</param>
      <returns>A <see cref="T:System.Windows.MessageBoxResult" /> value that specifies which message box button is clicked by the user.</returns>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.Windows.Window,System.String,System.String)">
      <summary>Displays a message box in front of the specified window. The message box displays a message and title bar caption; and it returns a result.</summary>
      <param name="owner">A <see cref="T:System.Windows.Window" /> that represents the owner window of the message box.</param>
      <param name="messageBoxText">A <see cref="T:System.String" /> that specifies the text to display.</param>
      <param name="caption">A <see cref="T:System.String" /> that specifies the title bar caption to display.</param>
      <returns>A <see cref="T:System.Windows.MessageBoxResult" /> value that specifies which message box button is clicked by the user.</returns>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.Windows.Window,System.String,System.String,System.Windows.MessageBoxButton)">
      <summary>Displays a message box in front of the specified window. The message box displays a message, title bar caption, and button; and it also returns a result.</summary>
      <param name="owner">A <see cref="T:System.Windows.Window" /> that represents the owner window of the message box.</param>
      <param name="messageBoxText">A <see cref="T:System.String" /> that specifies the text to display.</param>
      <param name="caption">A <see cref="T:System.String" /> that specifies the title bar caption to display.</param>
      <param name="button">A <see cref="T:System.Windows.MessageBoxButton" /> value that specifies which button or buttons to display.</param>
      <returns>A <see cref="T:System.Windows.MessageBoxResult" /> value that specifies which message box button is clicked by the user.</returns>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.Windows.Window,System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage)">
      <summary>Displays a message box in front of the specified window. The message box displays a message, title bar caption, button, and icon; and it also returns a result.</summary>
      <param name="owner">A <see cref="T:System.Windows.Window" /> that represents the owner window of the message box.</param>
      <param name="messageBoxText">A <see cref="T:System.String" /> that specifies the text to display.</param>
      <param name="caption">A <see cref="T:System.String" /> that specifies the title bar caption to display.</param>
      <param name="button">A <see cref="T:System.Windows.MessageBoxButton" /> value that specifies which button or buttons to display.</param>
      <param name="icon">A <see cref="T:System.Windows.MessageBoxImage" /> value that specifies the icon to display.</param>
      <returns>A <see cref="T:System.Windows.MessageBoxResult" /> value that specifies which message box button is clicked by the user.</returns>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.Windows.Window,System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult)">
      <summary>Displays a message box in front of the specified window. The message box displays a message, title bar caption, button, and icon; and accepts a default message box result and returns a result.</summary>
      <param name="owner">A <see cref="T:System.Windows.Window" /> that represents the owner window of the message box.</param>
      <param name="messageBoxText">A <see cref="T:System.String" /> that specifies the text to display.</param>
      <param name="caption">A <see cref="T:System.String" /> that specifies the title bar caption to display.</param>
      <param name="button">A <see cref="T:System.Windows.MessageBoxButton" /> value that specifies which button or buttons to display.</param>
      <param name="icon">A <see cref="T:System.Windows.MessageBoxImage" /> value that specifies the icon to display.</param>
      <param name="defaultResult">A <see cref="T:System.Windows.MessageBoxResult" /> value that specifies the default result of the message box.</param>
      <returns>A <see cref="T:System.Windows.MessageBoxResult" /> value that specifies which message box button is clicked by the user.</returns>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.Windows.Window,System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult,System.Windows.MessageBoxOptions)">
      <summary>Displays a message box in front of the specified window. The message box displays a message, title bar caption, button, and icon; and accepts a default message box result, complies with the specified options, and returns a result.</summary>
      <param name="owner">A <see cref="T:System.Windows.Window" /> that represents the owner window of the message box.</param>
      <param name="messageBoxText">A <see cref="T:System.String" /> that specifies the text to display.</param>
      <param name="caption">A <see cref="T:System.String" /> that specifies the title bar caption to display.</param>
      <param name="button">A <see cref="T:System.Windows.MessageBoxButton" /> value that specifies which button or buttons to display.</param>
      <param name="icon">A <see cref="T:System.Windows.MessageBoxImage" /> value that specifies the icon to display.</param>
      <param name="defaultResult">A <see cref="T:System.Windows.MessageBoxResult" /> value that specifies the default result of the message box.</param>
      <param name="options">A <see cref="T:System.Windows.MessageBoxOptions" /> value object that specifies the options.</param>
      <returns>A <see cref="T:System.Windows.MessageBoxResult" /> value that specifies which message box button is clicked by the user.</returns>
    </member>
    <member name="T:System.Windows.MessageBoxButton">
      <summary>Specifies the buttons that are displayed on a message box. Used as an argument of the <see cref="Overload:System.Windows.MessageBox.Show" /> method.</summary>
    </member>
    <member name="F:System.Windows.MessageBoxButton.OK">
      <summary>The message box displays an OK button.</summary>
    </member>
    <member name="F:System.Windows.MessageBoxButton.OKCancel">
      <summary>The message box displays OK and Cancel buttons.</summary>
    </member>
    <member name="F:System.Windows.MessageBoxButton.YesNo">
      <summary>The message box displays Yes and No buttons.</summary>
    </member>
    <member name="F:System.Windows.MessageBoxButton.YesNoCancel">
      <summary>The message box displays Yes, No, and Cancel buttons.</summary>
    </member>
    <member name="T:System.Windows.MessageBoxImage">
      <summary>Specifies the icon that is displayed by a message box.</summary>
    </member>
    <member name="F:System.Windows.MessageBoxImage.Asterisk">
      <summary>The message box contains a symbol consisting of a lowercase letter i in a circle.</summary>
    </member>
    <member name="F:System.Windows.MessageBoxImage.Error">
      <summary>The message box contains a symbol consisting of white X in a circle with a red background.</summary>
    </member>
    <member name="F:System.Windows.MessageBoxImage.Exclamation">
      <summary>The message box contains a symbol consisting of an exclamation point in a triangle with a yellow background.</summary>
    </member>
    <member name="F:System.Windows.MessageBoxImage.Hand">
      <summary>The message box contains a symbol consisting of a white X in a circle with a red background.</summary>
    </member>
    <member name="F:System.Windows.MessageBoxImage.Information">
      <summary>The message box contains a symbol consisting of a lowercase letter i in a circle.</summary>
    </member>
    <member name="F:System.Windows.MessageBoxImage.None">
      <summary>The message box contains no symbols.</summary>
    </member>
    <member name="F:System.Windows.MessageBoxImage.Question">
      <summary>The message box contains a symbol consisting of a question mark in a circle. The question mark message icon is no longer recommended because it does not clearly represent a specific type of message and because the phrasing of a message as a question could apply to any message type. In addition, users can confuse the question mark symbol with a help information symbol. Therefore, do not use this question mark symbol in your message boxes. The system continues to support its inclusion only for backward compatibility.</summary>
    </member>
    <member name="F:System.Windows.MessageBoxImage.Stop">
      <summary>The message box contains a symbol consisting of white X in a circle with a red background.</summary>
    </member>
    <member name="F:System.Windows.MessageBoxImage.Warning">
      <summary>The message box contains a symbol consisting of an exclamation point in a triangle with a yellow background.</summary>
    </member>
    <member name="T:System.Windows.MessageBoxOptions">
      <summary>Specifies special display options for a message box.</summary>
    </member>
    <member name="F:System.Windows.MessageBoxOptions.DefaultDesktopOnly">
      <summary>The message box is displayed on the default desktop of the interactive window station. Specifies that the message box is displayed from a .NET Framework windows service application in order to notify the user of an event.</summary>
    </member>
    <member name="F:System.Windows.MessageBoxOptions.None">
      <summary>No options are set.</summary>
    </member>
    <member name="F:System.Windows.MessageBoxOptions.RightAlign">
      <summary>The message box text and title bar caption are right-aligned.</summary>
    </member>
    <member name="F:System.Windows.MessageBoxOptions.RtlReading">
      <summary>All text, buttons, icons, and title bars are displayed right-to-left.</summary>
    </member>
    <member name="F:System.Windows.MessageBoxOptions.ServiceNotification">
      <summary>The message box is displayed on the currently active desktop even if a user is not logged on to the computer. Specifies that the message box is displayed from a .NET Framework windows service application in order to notify the user of an event.</summary>
    </member>
    <member name="T:System.Windows.MessageBoxResult">
      <summary>Specifies which message box button that a user clicks. <see cref="T:System.Windows.MessageBoxResult" /> is returned by the <see cref="Overload:System.Windows.MessageBox.Show" /> method.</summary>
    </member>
    <member name="F:System.Windows.MessageBoxResult.Cancel">
      <summary>The result value of the message box is Cancel.</summary>
    </member>
    <member name="F:System.Windows.MessageBoxResult.No">
      <summary>The result value of the message box is No.</summary>
    </member>
    <member name="F:System.Windows.MessageBoxResult.None">
      <summary>The message box returns no result.</summary>
    </member>
    <member name="F:System.Windows.MessageBoxResult.OK">
      <summary>The result value of the message box is OK.</summary>
    </member>
    <member name="F:System.Windows.MessageBoxResult.Yes">
      <summary>The result value of the message box is Yes.</summary>
    </member>
    <member name="T:System.Windows.MultiDataTrigger">
      <summary>Represents a trigger that applies property values or performs actions when the bound data meet a set of conditions.</summary>
    </member>
    <member name="M:System.Windows.MultiDataTrigger.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.MultiDataTrigger" /> class.</summary>
    </member>
    <member name="P:System.Windows.MultiDataTrigger.Conditions">
      <summary>Gets a collection of <see cref="T:System.Windows.Condition" /> objects. Changes to property values are applied when all the conditions in the collection are met.</summary>
      <returns>A collection of <see cref="T:System.Windows.Condition" /> objects. The default is an empty collection.</returns>
    </member>
    <member name="P:System.Windows.MultiDataTrigger.Setters">
      <summary>Gets a collection of <see cref="T:System.Windows.Setter" /> objects that describe the property values to apply when all the conditions of the <see cref="T:System.Windows.MultiDataTrigger" /> are met.</summary>
      <returns>A collection of <see cref="T:System.Windows.Setter" /> objects. The default value is an empty collection.</returns>
    </member>
    <member name="M:System.Windows.MultiDataTrigger.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>Adds a child object.</summary>
      <param name="value">The child object to add.</param>
    </member>
    <member name="M:System.Windows.MultiDataTrigger.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>Adds the text content of a node to the object.</summary>
      <param name="text">The text to add to the object.</param>
    </member>
    <member name="T:System.Windows.MultiTrigger">
      <summary>Represents a trigger that applies property values or performs actions when a set of conditions are satisfied.</summary>
    </member>
    <member name="M:System.Windows.MultiTrigger.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.MultiTrigger" /> class.</summary>
    </member>
    <member name="P:System.Windows.MultiTrigger.Conditions">
      <summary>Gets a collection of <see cref="T:System.Windows.Condition" /> objects. Changes to property values are applied when all of the conditions in the collection are met.</summary>
      <returns>The default is an empty collection.</returns>
    </member>
    <member name="P:System.Windows.MultiTrigger.Setters">
      <summary>Gets a collection of <see cref="T:System.Windows.Setter" /> objects, which describe the property values to apply when all of the conditions of the <see cref="T:System.Windows.MultiTrigger" /> are met.</summary>
      <returns>The default value is null.</returns>
    </member>
    <member name="M:System.Windows.MultiTrigger.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>Adds a child object.</summary>
      <param name="value">The child object to add.</param>
    </member>
    <member name="M:System.Windows.MultiTrigger.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>Adds the text content of a node to the object.</summary>
      <param name="text">The text to add to the object.</param>
    </member>
    <member name="T:System.Windows.Navigation.CustomContentState">
      <summary>
        <see cref="T:System.Windows.Navigation.CustomContentState" /> enables the ability to navigate through different states of a single piece of source content without reloading the source content for each subsequent navigation.</summary>
    </member>
    <member name="M:System.Windows.Navigation.CustomContentState.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Navigation.CustomContentState" /> class.</summary>
    </member>
    <member name="P:System.Windows.Navigation.CustomContentState.JournalEntryName">
      <summary>The name for the content that is stored in navigation history. The value of <see cref="P:System.Windows.Navigation.CustomContentState.JournalEntryName" /> is displayed from <see cref="T:System.Windows.Navigation.NavigationWindow" />, <see cref="T:System.Windows.Controls.Frame" />, and Windows Internet Explorer 7 navigation UI.</summary>
      <returns>The <see cref="T:System.String" /> name of the content that is stored in navigation history.</returns>
    </member>
    <member name="M:System.Windows.Navigation.CustomContentState.Replay(System.Windows.Navigation.NavigationService,System.Windows.Navigation.NavigationMode)">
      <summary>Called to reapply state to a piece of content when navigation occurs.</summary>
      <param name="navigationService">The <see cref="T:System.Windows.Navigation.NavigationService" /> owned by the navigator responsible for the content to which this <see cref="T:System.Windows.Navigation.CustomContentState" /> is being applied.</param>
      <param name="mode">A <see cref="T:System.Windows.Navigation.NavigationMode" /> that specifies how the content to which the <see cref="T:System.Windows.Navigation.CustomContentState" /> is being applied was navigated to.</param>
    </member>
    <member name="T:System.Windows.Navigation.FragmentNavigationEventArgs">
      <summary>Provides data for the FragmentNavigation event.</summary>
    </member>
    <member name="P:System.Windows.Navigation.FragmentNavigationEventArgs.Fragment">
      <summary>Gets the uniform resource identifier (URI) fragment.</summary>
      <returns>The URI fragment. If you set the property to an empty string, the top of the content will be navigated to by default.</returns>
    </member>
    <member name="P:System.Windows.Navigation.FragmentNavigationEventArgs.Handled">
      <summary>Gets or sets a value that indicates whether the fragment navigation has been handled.</summary>
      <returns>
        <see langword="true" /> if the navigation has been handled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Navigation.FragmentNavigationEventArgs.Navigator">
      <summary>The navigator that raised the <see cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" /> event.</summary>
      <returns>A <see cref="T:System.Object" /> that refers to the navigator (Internet Explorer, <see cref="T:System.Windows.Navigation.NavigationWindow" />, <see cref="T:System.Windows.Controls.Frame" />.) that is navigating to the content fragment.</returns>
    </member>
    <member name="T:System.Windows.Navigation.FragmentNavigationEventHandler">
      <summary>Represents the method that will handle <see langword="FragmentNavigation" /> events.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Navigation.IProvideCustomContentState">
      <summary>Implemented by a class that needs to add custom state to the navigation history entry for content before the content is navigated away from.</summary>
    </member>
    <member name="M:System.Windows.Navigation.IProvideCustomContentState.GetContentState">
      <summary>Returns an instance of a custom state class that is to be associated with content in navigation history.</summary>
      <returns>An instance of a custom <see cref="T:System.Windows.Navigation.CustomContentState" /> class that is to be associated with content in navigation history.</returns>
    </member>
    <member name="T:System.Windows.Navigation.JournalEntry">
      <summary>Represents an entry in either back or forward navigation history.</summary>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntry.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Navigation.JournalEntry" /> class.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="P:System.Windows.Navigation.JournalEntry.CustomContentState">
      <summary>Gets or sets the <see cref="T:System.Windows.Navigation.CustomContentState" /> object that is associated with this journal entry.</summary>
      <returns>The <see cref="T:System.Windows.Navigation.CustomContentState" /> object that is associated with this journal entry. If one is not associated, <see langword="null" /> is returned.</returns>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntry.GetKeepAlive(System.Windows.DependencyObject)">
      <summary>Returns the <see cref="P:System.Windows.Navigation.JournalEntry.KeepAlive" /> attached property of the journal entry for the specified element.</summary>
      <param name="dependencyObject">The element from which to get the attached property value.</param>
      <returns>The value of the <see cref="P:System.Windows.Navigation.JournalEntry.KeepAlive" /> attached property of the journal entry for the specified element.</returns>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntry.GetName(System.Windows.DependencyObject)">
      <summary>Gets the <see cref="P:System.Windows.Navigation.JournalEntry.Name" /> attached property of the journal entry for the specified element.</summary>
      <param name="dependencyObject">The element from which to get the attached property value.</param>
      <returns>The <see cref="P:System.Windows.Navigation.JournalEntry.Name" /> attached property of the journal entry for the specified element.</returns>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntry.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Called when this object is serialized.</summary>
      <param name="info">The data that is required to serialize the target object.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="P:System.Windows.Navigation.JournalEntry.KeepAlive">
      <summary>Gets or sets a value that indicates whether the content of a journal entry is either retained or re-created when navigated to in navigation history.</summary>
    </member>
    <member name="F:System.Windows.Navigation.JournalEntry.KeepAliveProperty">
      <summary>Identifies the <see cref="P:System.Windows.Navigation.JournalEntry.KeepAlive" /> attached property.</summary>
    </member>
    <member name="P:System.Windows.Navigation.JournalEntry.Name">
      <summary>Gets or sets the name of the journal entry.</summary>
      <returns>The name of the journal entry.</returns>
    </member>
    <member name="F:System.Windows.Navigation.JournalEntry.NameProperty">
      <summary>Identifies the <see cref="P:System.Windows.Navigation.JournalEntry.Name" /> attached property.</summary>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntry.SetKeepAlive(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the <see cref="P:System.Windows.Navigation.JournalEntry.KeepAlive" /> attached property of the specified element.</summary>
      <param name="dependencyObject">The element on which to set the attached property value.</param>
      <param name="keepAlive">
        <see langword="true" /> to keep the journal entry in memory; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntry.SetName(System.Windows.DependencyObject,System.String)">
      <summary>Sets the <see cref="P:System.Windows.Navigation.JournalEntry.Name" /> attached property of the specified element.</summary>
      <param name="dependencyObject">The element on which to set the attached property value.</param>
      <param name="name">The name to be assigned to the attached property.</param>
    </member>
    <member name="P:System.Windows.Navigation.JournalEntry.Source">
      <summary>Gets or sets the URI of the content that was navigated to.</summary>
      <returns>The URI of the content that was navigated to, or <see langword="null" /> if no URI is associated with the entry.</returns>
    </member>
    <member name="T:System.Windows.Navigation.JournalEntryListConverter">
      <summary>This type or member supports the Microsoft .NET infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntryListConverter.#ctor">
      <summary>This type or member supports the Microsoft .NET infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntryListConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="value">The value produced by the binding source.</param>
      <param name="targetType">The type of the binding target property.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
      <returns>A converted value.</returns>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntryListConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="value">The value produced by the binding target.</param>
      <param name="targetType">The type of the binding source property.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
      <returns>A converted value.</returns>
    </member>
    <member name="T:System.Windows.Navigation.JournalEntryPosition">
      <summary>Specifies the position in navigation history of a piece of content with respect to current content. <see cref="T:System.Windows.Navigation.JournalEntryPosition" /> is used by <see cref="T:System.Windows.Navigation.JournalEntryUnifiedViewConverter" />.</summary>
    </member>
    <member name="F:System.Windows.Navigation.JournalEntryPosition.Back">
      <summary>Content is in back navigation history relative to current content.</summary>
    </member>
    <member name="F:System.Windows.Navigation.JournalEntryPosition.Current">
      <summary>Content is the current content.</summary>
    </member>
    <member name="F:System.Windows.Navigation.JournalEntryPosition.Forward">
      <summary>Content is in forward navigation history with respect to current content.</summary>
    </member>
    <member name="T:System.Windows.Navigation.JournalEntryUnifiedViewConverter">
      <summary>
        <see cref="T:System.Windows.Navigation.JournalEntryUnifiedViewConverter" /> merges navigation back history and navigation forward history (as exposed by <see cref="T:System.Windows.Controls.Frame" /> or <see cref="T:System.Windows.Navigation.NavigationWindow" />) into a single, Windows Internet Explorer 7-style navigation menu.</summary>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntryUnifiedViewConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Navigation.JournalEntryUnifiedViewConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntryUnifiedViewConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Merges two navigation history stacks.</summary>
      <param name="values">An array of two navigation stacks.</param>
      <param name="targetType">This parameter is not used.</param>
      <param name="parameter">This parameter is not used.</param>
      <param name="culture">This parameter is not used.</param>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> that can be used to enumerate the merged list of navigation history stacks if neither passed navigation stack is <see langword="null" />. <see langword="null" />, otherwise.</returns>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntryUnifiedViewConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
      <summary>Not implemented.</summary>
      <param name="value">This parameter is not used.</param>
      <param name="targetTypes">This parameter is not used.</param>
      <param name="parameter">This parameter is not used.</param>
      <param name="culture">This parameter is not used.</param>
      <returns>Always returns <see cref="F:System.Windows.Data.Binding.DoNothing" />.</returns>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntryUnifiedViewConverter.GetJournalEntryPosition(System.Windows.DependencyObject)">
      <summary>Gets the <see cref="P:System.Windows.Navigation.JournalEntryUnifiedViewConverter.JournalEntryPosition" /> attached property for the specified element.</summary>
      <param name="element">The element from which to get the attached property value.</param>
      <returns>The value of the <see cref="P:System.Windows.Navigation.JournalEntryUnifiedViewConverter.JournalEntryPosition" /> attached property of the journal entry for the specified element.</returns>
    </member>
    <member name="P:System.Windows.Navigation.JournalEntryUnifiedViewConverter.JournalEntryPosition">
      <summary>Gets or sets a value that specifies whether an entry is in back navigation history, forward navigation history, or is the current content of a navigator.</summary>
    </member>
    <member name="F:System.Windows.Navigation.JournalEntryUnifiedViewConverter.JournalEntryPositionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Navigation.JournalEntryUnifiedViewConverter.JournalEntryPosition" /> attached property.</summary>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntryUnifiedViewConverter.SetJournalEntryPosition(System.Windows.DependencyObject,System.Windows.Navigation.JournalEntryPosition)">
      <summary>Sets the <see cref="F:System.Windows.Navigation.JournalEntryUnifiedViewConverter.JournalEntryPositionProperty" /> attached property of the specified element.</summary>
      <param name="element">The element on which to set the attached property value.</param>
      <param name="position">Position of the <see cref="T:System.Windows.Navigation.JournalEntryPosition" /> object.</param>
    </member>
    <member name="T:System.Windows.Navigation.JournalOwnership">
      <summary>Specifies whether a <see cref="T:System.Windows.Controls.Frame" /> uses its own journal. <see cref="T:System.Windows.Navigation.JournalOwnership" /> is used by the <see cref="P:System.Windows.Controls.Frame.JournalOwnership" /> property.</summary>
    </member>
    <member name="F:System.Windows.Navigation.JournalOwnership.Automatic">
      <summary>Whether or not this <see cref="T:System.Windows.Controls.Frame" /> will create and use its own journal depends on its parent.</summary>
    </member>
    <member name="F:System.Windows.Navigation.JournalOwnership.OwnsJournal">
      <summary>The <see cref="T:System.Windows.Controls.Frame" /> maintains its own journal.</summary>
    </member>
    <member name="F:System.Windows.Navigation.JournalOwnership.UsesParentJournal">
      <summary>The <see cref="T:System.Windows.Controls.Frame" /> uses the journal of the next available navigation host up the content tree, if available. Otherwise, navigation history is not maintained for the <see cref="T:System.Windows.Controls.Frame" />.</summary>
    </member>
    <member name="T:System.Windows.Navigation.LoadCompletedEventHandler">
      <summary>Represents the method that will handle <see langword="LoadCompleted" /> events.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Navigation.NavigatedEventHandler">
      <summary>Represents the method that will handle <see langword="Navigated" /> events.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Navigation.NavigatingCancelEventArgs">
      <summary>Provides data for the Navigating event.</summary>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.Content">
      <summary>Gets a reference to the content object that is being navigated to.</summary>
      <returns>A <see cref="T:System.Object" /> reference to the content object that is being navigated to; otherwise, <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.ContentStateToSave">
      <summary>Gets or sets the <see cref="T:System.Windows.Navigation.CustomContentState" /> object that is associated with the back navigation history entry for the page being navigated from.</summary>
      <returns>The <see cref="T:System.Windows.Navigation.CustomContentState" /> object that is associated with the back navigation history entry for the page being navigated from.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.ExtraData">
      <summary>Gets the optional data <see cref="T:System.Object" /> that was passed when navigation started.</summary>
      <returns>The optional data <see cref="T:System.Object" /> that was passed when navigation started.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.IsNavigationInitiator">
      <summary>Indicates whether the navigator (<see cref="T:System.Windows.Navigation.NavigationWindow" />, <see cref="T:System.Windows.Controls.Frame" />) that is specified by <see cref="P:System.Windows.Navigation.NavigatingCancelEventArgs.Navigator" /> is servicing this navigation, or whether a parent navigator is doing so.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is <see langword="true" /> if the navigator that is specified by <see cref="P:System.Windows.Navigation.NavigatingCancelEventArgs.Navigator" /> is servicing this navigation. Otherwise, <see langword="false" /> is returned, such as during a nested <see cref="T:System.Windows.Controls.Frame" /> navigation.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.NavigationMode">
      <summary>Gets a <see cref="T:System.Windows.Navigation.NavigationMode" /> value that indicates the type of navigation that is occurring.</summary>
      <returns>A <see cref="T:System.Windows.Navigation.NavigationMode" /> value that indicates the type of navigation that is occurring.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.Navigator">
      <summary>The navigator that raised this event.</summary>
      <returns>An <see cref="T:System.Object" /> that is the navigator that raised this event</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.TargetContentState">
      <summary>Gets the <see cref="T:System.Windows.Navigation.CustomContentState" /> object that is to be applied to the content being navigated to.</summary>
      <returns>The <see cref="T:System.Windows.Navigation.CustomContentState" /> object that is to be applied to the content being navigated to.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.Uri">
      <summary>Gets the uniform resource identifier (URI) for the content being navigated to.</summary>
      <returns>The <see cref="T:System.Uri" /> for the content being navigated to. If navigating to an object, <see cref="P:System.Windows.Navigation.NavigatingCancelEventArgs.Uri" /> is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.WebRequest">
      <summary>Gets the <see cref="T:System.Net.WebRequest" /> object that is used to request the specified content.</summary>
      <returns>Gets the <see cref="T:System.Net.WebRequest" /> object that is used to request the specified content.</returns>
    </member>
    <member name="T:System.Windows.Navigation.NavigatingCancelEventHandler">
      <summary>Represents the method that will handle <see langword="Navigating" /> events.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Navigation.NavigationEventArgs">
      <summary>Provides data for non-cancelable navigation events, including <see cref="E:System.Windows.Navigation.NavigationWindow.LoadCompleted" />, <see cref="E:System.Windows.Navigation.NavigationWindow.Navigated" />, and <see cref="E:System.Windows.Navigation.NavigationWindow.NavigationStopped" />.</summary>
    </member>
    <member name="P:System.Windows.Navigation.NavigationEventArgs.Content">
      <summary>Gets the root node of the target page's content.</summary>
      <returns>The root element of the target page's content.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationEventArgs.ExtraData">
      <summary>Gets an optional user-defined data object.</summary>
      <returns>The data object.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationEventArgs.IsNavigationInitiator">
      <summary>Gets a value that indicates whether the current navigator initiated the navigation.</summary>
      <returns>
        <see langword="true" /> if the navigation was initiated inside the current frame; <see langword="false" /> if the parent navigator is also navigating.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationEventArgs.Navigator">
      <summary>Gets the navigator that raised the event</summary>
      <returns>The navigator that raised the event.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationEventArgs.Uri">
      <summary>Gets the uniform resource identifier (URI) of the target page.</summary>
      <returns>The URI of the target page.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationEventArgs.WebResponse">
      <summary>Gets the Web response to allow access to HTTP headers and other properties.</summary>
      <returns>The Web response.</returns>
    </member>
    <member name="T:System.Windows.Navigation.NavigationFailedEventArgs">
      <summary>Provides data for the NavigationFailed event.</summary>
    </member>
    <member name="P:System.Windows.Navigation.NavigationFailedEventArgs.Exception">
      <summary>Gets the <see cref="T:System.Exception" /> that was raised as the result of a failed navigation.</summary>
      <returns>The <see cref="T:System.Exception" /> that was raised as the result of a failed navigation.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationFailedEventArgs.ExtraData">
      <summary>Gets the optional data <see cref="T:System.Object" /> that was passed when navigation commenced.</summary>
      <returns>The optional data <see cref="T:System.Object" /> that was passed when navigation commenced.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationFailedEventArgs.Handled">
      <summary>Gets or sets whether the failed navigation exception has been handled.</summary>
      <returns>
        <see langword="true" /> if the exception is handled; otherwise, <see langword="false" /> (default).</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationFailedEventArgs.Navigator">
      <summary>The navigator that raised this event.</summary>
      <returns>An <see cref="T:System.Object" /> that is the navigator that raised this event</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationFailedEventArgs.Uri">
      <summary>Gets the uniform resource identifier (URI) for the content that could not be navigated to.</summary>
      <returns>The <see cref="T:System.Uri" /> for the content that could not be navigated to.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationFailedEventArgs.WebRequest">
      <summary>Gets the web request that was used to request the specified content.</summary>
      <returns>Gets the <see cref="T:System.Net.WebRequest" /> object that was used to request the specified content. If navigating to an object, <see cref="P:System.Windows.Navigation.NavigationFailedEventArgs.WebRequest" /> is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationFailedEventArgs.WebResponse">
      <summary>Gets the web response that was returned after attempting to download the requested the specified content.</summary>
      <returns>The <see cref="T:System.Net.WebResponse" /> that was returned after attempting to download the requested the specified content. If the navigation failed, <see cref="P:System.Windows.Navigation.NavigationFailedEventArgs.WebResponse" /> is <see langword="null" />.</returns>
    </member>
    <member name="T:System.Windows.Navigation.NavigationFailedEventHandler">
      <summary>Represents the method that will handle <see langword="NavigationFailed" /> events.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Navigation.NavigationMode">
      <summary>Specifies the type of navigation that is taking place <see cref="T:System.Windows.Navigation.NavigationMode" /> is used by the <see cref="P:System.Windows.Navigation.NavigatingCancelEventArgs.NavigationMode" /> property.</summary>
    </member>
    <member name="F:System.Windows.Navigation.NavigationMode.Back">
      <summary>Navigating back to the most recent content in back navigation history. This occurs when the GoBack method is called.</summary>
    </member>
    <member name="F:System.Windows.Navigation.NavigationMode.Forward">
      <summary>Navigating to the most recent content on forward navigation history. This occurs when the GoForward method is called.</summary>
    </member>
    <member name="F:System.Windows.Navigation.NavigationMode.New">
      <summary>Navigating to new content. This occurs when the Navigate method is called, or when Source property is set.</summary>
    </member>
    <member name="F:System.Windows.Navigation.NavigationMode.Refresh">
      <summary>Reloading the current content. This occurs when the Refresh method is called.</summary>
    </member>
    <member name="T:System.Windows.Navigation.NavigationProgressEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Application.NavigationProgress" /> and <see cref="E:System.Windows.Navigation.NavigationWindow.NavigationProgress" /> events.</summary>
    </member>
    <member name="P:System.Windows.Navigation.NavigationProgressEventArgs.BytesRead">
      <summary>Gets the number of bytes that have been read.</summary>
      <returns>The number of bytes that have been read.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationProgressEventArgs.MaxBytes">
      <summary>Gets the maximum number of bytes.</summary>
      <returns>The maximum number of bytes.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationProgressEventArgs.Navigator">
      <summary>Gets the navigator that raised the event</summary>
      <returns>The navigator that raised the event</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationProgressEventArgs.Uri">
      <summary>Gets the uniform resource identifier (URI) of the target page.</summary>
      <returns>The URI of the target page.</returns>
    </member>
    <member name="T:System.Windows.Navigation.NavigationProgressEventHandler">
      <summary>Represents the method that will handle <see langword="NavigationProgress" /> events.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Navigation.NavigationService">
      <summary>Contains methods, properties, and events to support navigation.</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.AddBackEntry(System.Windows.Navigation.CustomContentState)">
      <summary>Adds an entry to back navigation history that contains a <see cref="T:System.Windows.Navigation.CustomContentState" /> object.</summary>
      <param name="state">A <see cref="T:System.Windows.Navigation.CustomContentState" /> object that represents application-defined state that is associated with a specific piece of content.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="state" /> is <see langword="null" />, and a <see cref="T:System.Windows.Navigation.CustomContentState" /> object isn't returned from <see cref="M:System.Windows.Navigation.IProvideCustomContentState.GetContentState" />.</exception>
    </member>
    <member name="P:System.Windows.Navigation.NavigationService.CanGoBack">
      <summary>Gets a value that indicates whether there is at least one entry in back navigation history.</summary>
      <returns>
        <see langword="true" /> if there is at least one entry in back navigation history; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationService.CanGoForward">
      <summary>Gets a value that indicates whether there is at least one entry in forward navigation history.</summary>
      <returns>
        <see langword="true" /> if there is at least one entry in forward navigation history; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationService.Content">
      <summary>Gets or sets a reference to the object that contains the current content.</summary>
      <returns>An object that is a reference to the object that contains the current content.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationService.CurrentSource">
      <summary>Gets the URI of the content that was last navigated to.</summary>
      <returns>A <see cref="T:System.Uri" /> for the content that was last navigated to, if navigated to by using a URI; otherwise, <see langword="null" />.</returns>
    </member>
    <member name="E:System.Windows.Navigation.NavigationService.FragmentNavigation">
      <summary>Occurs when navigation to a content fragment begins, which occurs immediately, if the desired fragment is in the current content, or after the source XAML content has been loaded, if the desired fragment is in different content.</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.GetNavigationService(System.Windows.DependencyObject)">
      <summary>Gets a reference to the <see cref="T:System.Windows.Navigation.NavigationService" /> for the navigator whose content contains the specified <see cref="T:System.Windows.DependencyObject" />.</summary>
      <param name="dependencyObject">The <see cref="T:System.Windows.DependencyObject" /> in content that is hosted by a navigator.</param>
      <returns>A reference to the <see cref="T:System.Windows.Navigation.NavigationService" /> for the navigator whose content contains the specified <see cref="T:System.Windows.DependencyObject" />; can be <see langword="null" /> in some cases.</returns>
      <exception cref="T:System.ArgumentNullException">The <paramref name="dependencyObject" /> parameter is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.GoBack">
      <summary>Navigates to the most recent entry in back navigation history, if there is one.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Windows.Navigation.NavigationService.GoBack" /> is called when there are no entries in back navigation history.</exception>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.GoForward">
      <summary>Navigate to the most recent entry in forward navigation history, if there is one.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Windows.Navigation.NavigationService.GoForward" /> is called when there are no entries in forward navigation history.</exception>
    </member>
    <member name="E:System.Windows.Navigation.NavigationService.LoadCompleted">
      <summary>Occurs when content that was navigated to has been loaded, parsed, and has begun rendering.</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)">
      <summary>Navigate asynchronously to content that is contained by an object.</summary>
      <param name="root">An object that contains the content to navigate to.</param>
      <returns>
        <see langword="true" /> if a navigation is not canceled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)">
      <summary>Navigate asynchronously to content that is contained by an object, and pass an object that contains data to be used for processing during navigation.</summary>
      <param name="root">An object that contains the content to navigate to.</param>
      <param name="navigationState">An object that contains data to be used for processing during navigation.</param>
      <returns>
        <see langword="true" /> if a navigation is not canceled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)">
      <summary>Navigate asynchronously to content that is specified by a URI.</summary>
      <param name="source">A <see cref="T:System.Uri" /> object initialized with the URI for the desired content.</param>
      <returns>
        <see langword="true" /> if a navigation is not canceled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)">
      <summary>Navigate asynchronously to source content located at a URI, and pass an object that contains data to be used for processing during navigation.</summary>
      <param name="source">A <see cref="T:System.Uri" /> object initialized with the URI for the desired content.</param>
      <param name="navigationState">An object that contains data to be used for processing during navigation.</param>
      <returns>
        <see langword="true" /> if a navigation is not canceled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)">
      <summary>Navigate asynchronously to source content located at a URI, pass an object containing navigation state for processing during navigation, and sandbox the content.</summary>
      <param name="source">A <see cref="T:System.Uri" /> object initialized with the URI for the desired content.</param>
      <param name="navigationState">An object that contains data to be used for processing during navigation.</param>
      <param name="sandboxExternalContent">Download content into a partial trust security sandbox (with the default Internet zone set of permissions, if <see langword="true" />. The default is <see langword="false" />.</param>
      <returns>
        <see langword="true" /> if a navigation is not canceled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="E:System.Windows.Navigation.NavigationService.Navigated">
      <summary>Occurs when the content that is being navigated to has been found, and is available from the <see cref="P:System.Windows.Navigation.NavigationService.Content" /> property, although it may not have completed loading.</summary>
    </member>
    <member name="E:System.Windows.Navigation.NavigationService.Navigating">
      <summary>Occurs when a new navigation is requested.</summary>
    </member>
    <member name="E:System.Windows.Navigation.NavigationService.NavigationFailed">
      <summary>Occurs when an error occurs while navigating to the requested content.</summary>
    </member>
    <member name="E:System.Windows.Navigation.NavigationService.NavigationProgress">
      <summary>Occurs periodically during a download to provide navigation progress information.</summary>
    </member>
    <member name="E:System.Windows.Navigation.NavigationService.NavigationStopped">
      <summary>Occurs when the <see cref="M:System.Windows.Navigation.NavigationService.StopLoading" /> method is called, or when a new navigation is requested while a current navigation is in progress.</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.Refresh">
      <summary>Reloads the current content.</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.RemoveBackEntry">
      <summary>Removes the most recent journal entry from back history.</summary>
      <returns>The most recent <see cref="T:System.Windows.Navigation.JournalEntry" /> in back navigation history, if there is one.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationService.Source">
      <summary>Gets or sets the URI of the current content, or the URI of new content that is currently being navigated to.</summary>
      <returns>A <see cref="T:System.Uri" /> that contains the URI for the current content, or the content that is currently being navigated to.</returns>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.StopLoading">
      <summary>Stops further downloading of content for the current navigation request.</summary>
    </member>
    <member name="T:System.Windows.Navigation.NavigationStoppedEventHandler">
      <summary>Represents the method that will handle <see langword="NavigationStopped" /> events.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Navigation.NavigationUIVisibility">
      <summary>Specifies whether a <see cref="T:System.Windows.Controls.Frame" /> displays its navigation chrome. <see cref="T:System.Windows.Navigation.NavigationUIVisibility" /> is used by the <see cref="P:System.Windows.Controls.Frame.NavigationUIVisibility" /> property.</summary>
    </member>
    <member name="F:System.Windows.Navigation.NavigationUIVisibility.Automatic">
      <summary>The navigation chrome is visible when a <see cref="T:System.Windows.Controls.Frame" /> uses its own journal (see <see cref="P:System.Windows.Controls.Frame.JournalOwnership" />).</summary>
    </member>
    <member name="F:System.Windows.Navigation.NavigationUIVisibility.Hidden">
      <summary>The navigation chrome is not visible.</summary>
    </member>
    <member name="F:System.Windows.Navigation.NavigationUIVisibility.Visible">
      <summary>The navigation chrome is visible.</summary>
    </member>
    <member name="T:System.Windows.Navigation.NavigationWindow">
      <summary>Represents a window that supports content navigation.</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Navigation.NavigationWindow" /> class.</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.AddBackEntry(System.Windows.Navigation.CustomContentState)">
      <summary>Adds an entry to back navigation history that contains a <see cref="T:System.Windows.Navigation.CustomContentState" /> object.</summary>
      <param name="state">A <see cref="T:System.Windows.Navigation.CustomContentState" /> object that represents application-defined state that is associated with a specific piece of content.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="state" /> is <see langword="null" />, and a <see cref="T:System.Windows.Navigation.CustomContentState" /> object isn't returned from <see cref="M:System.Windows.Navigation.IProvideCustomContentState.GetContentState" />.</exception>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.AddChild(System.Object)">
      <summary>Adds a child object.</summary>
      <param name="value">The child object to add.</param>
      <exception cref="T:System.InvalidOperationException">when this method is called. This prevents content from being added to <see cref="T:System.Windows.Navigation.NavigationWindow" /> using XAML.</exception>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.AddText(System.String)">
      <summary>Adds text to the object.</summary>
      <param name="text">The text to add to the object.</param>
      <exception cref="T:System.ArgumentException">if the text parameter value contains non-white-space characters.</exception>
    </member>
    <member name="P:System.Windows.Navigation.NavigationWindow.BackStack">
      <summary>Gets an <see cref="T:System.Collections.IEnumerable" /> that you use to enumerate the entries in back navigation history for a <see cref="T:System.Windows.Navigation.NavigationWindow" />.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerable" /> if at least one entry has been added to back navigation history, or <see langword="null" /> if there are not entries or the <see cref="T:System.Windows.Navigation.NavigationWindow" /> does not own its own navigation history.</returns>
    </member>
    <member name="F:System.Windows.Navigation.NavigationWindow.BackStackProperty">
      <summary>Identifies the <see cref="P:System.Windows.Navigation.NavigationWindow.BackStack" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Navigation.NavigationWindow.CanGoBack">
      <summary>Gets a value that indicates whether there is at least one entry in back navigation history.</summary>
      <returns>
        <see langword="true" /> if there is at least one entry in back navigation history; <see langword="false" /> if there are no entries in back navigation history or the <see cref="T:System.Windows.Navigation.NavigationWindow" /> does not own its own navigation history.</returns>
    </member>
    <member name="F:System.Windows.Navigation.NavigationWindow.CanGoBackProperty">
      <summary>Identifies the <see cref="P:System.Windows.Navigation.NavigationWindow.CanGoBack" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Navigation.NavigationWindow.CanGoForward">
      <summary>Gets a value that indicates whether there is at least one entry in forward navigation history.</summary>
      <returns>
        <see langword="true" /> if there is at least one entry in forward navigation history; <see langword="false" /> if there are no entries in forward navigation history, or the <see cref="T:System.Windows.Navigation.NavigationWindow" /> does not own its own navigation history.</returns>
    </member>
    <member name="F:System.Windows.Navigation.NavigationWindow.CanGoForwardProperty">
      <summary>Identifies the <see cref="P:System.Windows.Navigation.NavigationWindow.CanGoForward" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Navigation.NavigationWindow.CurrentSource">
      <summary>Gets the uniform resource identifier (URI) of the content that was last navigated to.</summary>
      <returns>The URI for the content that was last navigated to, if navigated to by using a URI; otherwise, <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationWindow.ForwardStack">
      <summary>Gets an <see cref="T:System.Collections.IEnumerable" /> that you use to enumerate the entries in back navigation history for a <see cref="T:System.Windows.Navigation.NavigationWindow" />.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerable" /> if at least one entry has been added to forward navigation history, or null if there are no entries or the <see cref="T:System.Windows.Navigation.NavigationWindow" /> does not own its own navigation history.</returns>
    </member>
    <member name="F:System.Windows.Navigation.NavigationWindow.ForwardStackProperty">
      <summary>Identifies the <see cref="P:System.Windows.Navigation.NavigationWindow.ForwardStack" /> dependency property.</summary>
    </member>
    <member name="E:System.Windows.Navigation.NavigationWindow.FragmentNavigation">
      <summary>Occurs when navigation to a content fragment begins, which occurs immediately, if the desired fragment is in the current content, or after the source XAML content has been loaded, if the desired fragment is in different content.</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.GoBack">
      <summary>Navigates to the most recent item in back navigation history.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Windows.Navigation.NavigationWindow.GoBack" /> is called when there are no entries in back navigation history.</exception>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.GoForward">
      <summary>Navigates to the most recent item in forward navigation history.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Windows.Navigation.NavigationWindow.GoForward" /> is called when there are no entries in forward navigation history.</exception>
    </member>
    <member name="E:System.Windows.Navigation.NavigationWindow.LoadCompleted">
      <summary>Occurs when content that was navigated to has been loaded, parsed, and has begun rendering.</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.Navigate(System.Object)">
      <summary>Navigates asynchronously to content that is contained by an object.</summary>
      <param name="content">An <see cref="T:System.Object" /> that contains the content to navigate to.</param>
      <returns>
        <see langword="true" /> if a navigation is not canceled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.Navigate(System.Object,System.Object)">
      <summary>Navigates asynchronously to content that is contained by an object, and passes an object that contains data to be used for processing during navigation.</summary>
      <param name="content">An <see cref="T:System.Object" /> that contains the content to navigate to.</param>
      <param name="extraData">A <see cref="T:System.Object" /> that contains data to be used for processing during navigation.</param>
      <returns>
        <see langword="true" /> if a navigation is not canceled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.Navigate(System.Uri)">
      <summary>Navigates asynchronously to content that is specified by a uniform resource identifier (URI).</summary>
      <param name="source">A <see cref="T:System.Uri" /> object initialized with the URI for the desired content.</param>
      <returns>
        <see langword="true" /> if a navigation is not canceled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.Navigate(System.Uri,System.Object)">
      <summary>Navigates asynchronously to source content located at a uniform resource identifier (URI), and pass an object that contains data to be used for processing during navigation.</summary>
      <param name="source">A <see cref="T:System.Uri" /> object initialized with the URI for the desired content.</param>
      <param name="extraData">A <see cref="T:System.Object" /> that contains data to be used for processing during navigation.</param>
      <returns>
        <see langword="true" /> if a navigation is not canceled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="E:System.Windows.Navigation.NavigationWindow.Navigated">
      <summary>Occurs when the content that is being navigated to has been found, and is available from the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property, although it may not have completed loading.</summary>
    </member>
    <member name="E:System.Windows.Navigation.NavigationWindow.Navigating">
      <summary>Occurs when a new navigation is requested.</summary>
    </member>
    <member name="E:System.Windows.Navigation.NavigationWindow.NavigationFailed">
      <summary>Occurs when an error is raised while navigating to the requested content.</summary>
    </member>
    <member name="E:System.Windows.Navigation.NavigationWindow.NavigationProgress">
      <summary>Occurs periodically during a download to provide navigation progress information.</summary>
    </member>
    <member name="P:System.Windows.Navigation.NavigationWindow.NavigationService">
      <summary>Gets the <see cref="T:System.Windows.Navigation.NavigationService" /> that is used by this <see cref="T:System.Windows.Navigation.NavigationWindow" /> to provide navigation services to its content.</summary>
      <returns>The navigation service used by this <see cref="T:System.Windows.Navigation.NavigationWindow" />.</returns>
    </member>
    <member name="E:System.Windows.Navigation.NavigationWindow.NavigationStopped">
      <summary>Occurs when the <see cref="M:System.Windows.Navigation.NavigationWindow.StopLoading" /> method is called, or when a new navigation is requested while a current navigation is in progress.</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.OnApplyTemplate">
      <summary>Called when the template generation for the visual tree is created.</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.OnClosed(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Window.Closed" /> event.</summary>
      <param name="args">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.OnCreateAutomationPeer">
      <summary>Creates and returns a <see cref="T:System.Windows.Automation.Peers.NavigationWindowAutomationPeer" /> object for this <see cref="T:System.Windows.Navigation.NavigationWindow" />.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.NavigationWindowAutomationPeer" /> object for this <see cref="T:System.Windows.Navigation.NavigationWindow" />.</returns>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.Refresh">
      <summary>Reloads the current content.</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.RemoveBackEntry">
      <summary>Removes the most recent journal entry from back history.</summary>
      <returns>The most recent <see cref="T:System.Windows.Navigation.JournalEntry" /> in back navigation history, if there is one.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationWindow.SandboxExternalContent">
      <summary>Gets or sets a value that indicates whether a <see cref="T:System.Windows.Navigation.NavigationWindow" /> isolates external Extensible Application Markup Language (XAML) content within a partial trust security sandbox (with default Internet zone permission set).</summary>
      <returns>
        <see langword="true" /> if content is isolated within a partial trust security sandbox; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
      <exception cref="T:System.Security.SecurityException">
        <see cref="P:System.Windows.Navigation.NavigationWindow.SandboxExternalContent" /> is set when an application is executing in partial trust.</exception>
    </member>
    <member name="F:System.Windows.Navigation.NavigationWindow.SandboxExternalContentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Navigation.NavigationWindow.SandboxExternalContent" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.ShouldSerializeContent">
      <summary>Indicates whether the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property should be persisted.</summary>
      <returns>
        <see langword="true" /> if the property value has changed from its default; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationWindow.ShowsNavigationUI">
      <summary>Gets or sets a value that indicates whether a <see cref="T:System.Windows.Navigation.NavigationWindow" /> shows its navigation UI.</summary>
      <returns>
        <see langword="true" /> if the navigation UI is displayed; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="F:System.Windows.Navigation.NavigationWindow.ShowsNavigationUIProperty">
      <summary>Identifies the <see cref="P:System.Windows.Navigation.NavigationWindow.ShowsNavigationUI" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Navigation.NavigationWindow.Source">
      <summary>Gets or sets the uniform resource identifier (URI) of the current content, or the URI of new content that is currently being navigated to.</summary>
      <returns>The URI for the current content, or the content that is currently being navigated to.</returns>
    </member>
    <member name="F:System.Windows.Navigation.NavigationWindow.SourceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Navigation.NavigationWindow.Source" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.StopLoading">
      <summary>Stops further downloading of content for the current navigation request.</summary>
    </member>
    <member name="P:System.Windows.Navigation.NavigationWindow.System#Windows#Markup#IUriContext#BaseUri">
      <summary>Gets or sets the base uniform resource identifier (URI) of the current context.</summary>
      <returns>The base URI of the current context.</returns>
    </member>
    <member name="T:System.Windows.Navigation.PageFunction`1">
      <summary>Represents a special type of page that allows you to treat navigation to a page in a similar fashion to calling a method.</summary>
      <typeparam name="T">The type of value that the <see cref="T:System.Windows.Navigation.PageFunction`1" /> returns to a caller.</typeparam>
    </member>
    <member name="M:System.Windows.Navigation.PageFunction`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Navigation.PageFunction`1" /> class.</summary>
    </member>
    <member name="M:System.Windows.Navigation.PageFunction`1.OnReturn(System.Windows.Navigation.ReturnEventArgs{`0})">
      <summary>A <see cref="T:System.Windows.Navigation.PageFunction`1" /> calls <see cref="M:System.Windows.Navigation.PageFunction`1.OnReturn(System.Windows.Navigation.ReturnEventArgs{`0})" /> to return to the caller, passing a return value via a <see cref="T:System.Windows.Navigation.ReturnEventArgs`1" /> object</summary>
      <param name="e">A <see cref="T:System.Windows.Navigation.ReturnEventArgs`1" /> object that contains the <see cref="T:System.Windows.Navigation.PageFunction`1" /> return value (<see cref="P:System.Windows.Navigation.ReturnEventArgs`1.Result" />).</param>
    </member>
    <member name="E:System.Windows.Navigation.PageFunction`1.Return">
      <summary>Occurs when a called <see cref="T:System.Windows.Navigation.PageFunction`1" /> returns, and can only be handled by the calling page.</summary>
    </member>
    <member name="T:System.Windows.Navigation.PageFunctionBase">
      <summary>An abstract base class that is the parent of all page function classes.</summary>
    </member>
    <member name="M:System.Windows.Navigation.PageFunctionBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Navigation.PageFunctionBase" /> type.</summary>
    </member>
    <member name="P:System.Windows.Navigation.PageFunctionBase.RemoveFromJournal">
      <summary>Gets or sets a value that indicates whether the page function should not be added to navigation history.</summary>
      <returns>A <see cref="T:System.Boolean" /> that indicates whether a page function should not be added to navigation history. The default value is <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Navigation.PageFunctionBase.Start">
      <summary>Override this method to initialize a <see cref="T:System.Windows.Navigation.PageFunction`1" /> when it is navigated to for the first time.</summary>
    </member>
    <member name="T:System.Windows.Navigation.RequestNavigateEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Documents.Hyperlink.RequestNavigate" /> event.</summary>
    </member>
    <member name="M:System.Windows.Navigation.RequestNavigateEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Navigation.RequestNavigateEventArgs" /> class. This constructor is protected.</summary>
    </member>
    <member name="M:System.Windows.Navigation.RequestNavigateEventArgs.#ctor(System.Uri,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Navigation.RequestNavigateEventArgs" /> class with a uniform resource identifier (URI) and target name.</summary>
      <param name="uri">The target URI.</param>
      <param name="target">The target name.</param>
    </member>
    <member name="M:System.Windows.Navigation.RequestNavigateEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>Invokes a specified event handler from a specified sender.</summary>
      <param name="genericHandler">The name of the handler.</param>
      <param name="genericTarget">The object that is raising the event.</param>
    </member>
    <member name="P:System.Windows.Navigation.RequestNavigateEventArgs.Target">
      <summary>The navigator that will host the content that is navigated to.</summary>
      <returns>The navigator (<see cref="T:System.Windows.Navigation.NavigationWindow" /> or <see cref="T:System.Windows.Controls.Frame" />) that will host the content that is navigated to.</returns>
    </member>
    <member name="P:System.Windows.Navigation.RequestNavigateEventArgs.Uri">
      <summary>The uniform resource identifier (URI) for the content that is being navigated to.</summary>
      <returns>The URI for the content that is being navigated to.</returns>
    </member>
    <member name="T:System.Windows.Navigation.RequestNavigateEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Documents.Hyperlink.RequestNavigate" /> routed event of the <see cref="T:System.Windows.Documents.Hyperlink" /> class.</summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Navigation.ReturnEventArgs`1">
      <summary>Provides data for the <see cref="E:System.Windows.Navigation.PageFunction`1.Return" /> event.</summary>
      <typeparam name="T">The type of the return value.</typeparam>
    </member>
    <member name="M:System.Windows.Navigation.ReturnEventArgs`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Navigation.ReturnEventArgs`1" /> class.</summary>
    </member>
    <member name="M:System.Windows.Navigation.ReturnEventArgs`1.#ctor(`0)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Navigation.ReturnEventArgs`1" /> class with the return value.</summary>
      <param name="result">The value to be returned.</param>
    </member>
    <member name="P:System.Windows.Navigation.ReturnEventArgs`1.Result">
      <summary>Gets or sets the value that is returned by the page function.</summary>
      <returns>The value that is returned by the page function.</returns>
    </member>
    <member name="T:System.Windows.Navigation.ReturnEventHandler`1">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Navigation.PageFunction`1.Return" /> event of the <see cref="T:System.Windows.Navigation.PageFunction`1" /> class.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
      <typeparam name="T">The type specifier for the event.</typeparam>
    </member>
    <member name="T:System.Windows.NullableBoolConverter">
      <summary>Converts to and from the <see cref="T:System.Nullable`1" /> type (using the <see cref="T:System.Boolean" /> type constraint on the generic).</summary>
    </member>
    <member name="M:System.Windows.NullableBoolConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.NullableBoolConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.NullableBoolConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns a collection of standard values for the data type that this type converter is designed for.</summary>
      <param name="context">Provides contextual information about a component, such as its container and property descriptor.</param>
      <returns>A collection that holds a standard set of valid values. For this implementation, those values are <see langword="true" />, <see langword="false" />, and <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.NullableBoolConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns whether the collection of standard values returned from <see cref="M:System.Windows.NullableBoolConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> is an exclusive list.</summary>
      <param name="context">Provides contextual information about a component, such as its container and property descriptor.</param>
      <returns>This implementation always returns <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.NullableBoolConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns whether this object supports a standard set of values that can be picked from a list.</summary>
      <param name="context">Provides contextual information about a component, such as its container and property descriptor.</param>
      <returns>This implementation always returns <see langword="true" />.</returns>
    </member>
    <member name="T:System.Windows.PowerLineStatus">
      <summary>Indicates whether the system power is online, or that the system power status is unknown.</summary>
    </member>
    <member name="F:System.Windows.PowerLineStatus.Offline">
      <summary>The system power is not on.</summary>
    </member>
    <member name="F:System.Windows.PowerLineStatus.Online">
      <summary>The system power is on.</summary>
    </member>
    <member name="F:System.Windows.PowerLineStatus.Unknown">
      <summary>The status of the system power cannot be determined.</summary>
    </member>
    <member name="T:System.Windows.PropertyPath">
      <summary>Implements a data structure for describing a property as a path below another property, or below an owning type. Property paths are used in data binding to objects, and in storyboards and timelines for animations.</summary>
    </member>
    <member name="M:System.Windows.PropertyPath.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.PropertyPath" /> class.</summary>
      <param name="parameter">A property path that either describes a path to a common language runtime (CLR) property, or a single dependency property.</param>
    </member>
    <member name="M:System.Windows.PropertyPath.#ctor(System.String,System.Object[])">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.PropertyPath" /> class, with the provided pathing token string and parameters.</summary>
      <param name="path">A string that specifies the <see cref="P:System.Windows.PropertyPath.Path" />, in a tokenized format.</param>
      <param name="pathParameters">An array of objects that sets the <see cref="P:System.Windows.PropertyPath.PathParameters" />.</param>
    </member>
    <member name="P:System.Windows.PropertyPath.Path">
      <summary>Gets or sets the string that describes the path.</summary>
      <returns>The string that describes the path.</returns>
    </member>
    <member name="P:System.Windows.PropertyPath.PathParameters">
      <summary>Gets the list of parameters to use when the path refers to indexed parameters.</summary>
      <returns>The parameter list.</returns>
    </member>
    <member name="T:System.Windows.PropertyPathConverter">
      <summary>Provides a type converter for <see cref="T:System.Windows.PropertyPath" /> objects.</summary>
    </member>
    <member name="M:System.Windows.PropertyPathConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.PropertyPathConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.PropertyPathConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns whether this converter can convert an object of one type to the <see cref="T:System.Windows.PropertyPath" /> type.</summary>
      <param name="typeDescriptorContext">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="sourceType">A <see cref="T:System.Type" /> that represents the type you want to convert from.</param>
      <returns>
        <see langword="true" /> if <paramref name="sourceType" /> is type <see cref="T:System.String" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.PropertyPathConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns whether this converter can convert the object to the <see cref="T:System.Windows.PropertyPath" /> type.</summary>
      <param name="typeDescriptorContext">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
      <returns>
        <see langword="true" /> if <paramref name="destinationType" /> is type <see cref="T:System.String" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.PropertyPathConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the specified value to the <see cref="T:System.Windows.PropertyPath" /> type.</summary>
      <param name="typeDescriptorContext">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="cultureInfo">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</param>
      <param name="source">The object to convert to a <see cref="T:System.Windows.PropertyPath" />. This is expected to be a string.</param>
      <returns>The converted <see cref="T:System.Windows.PropertyPath" />.</returns>
      <exception cref="T:System.ArgumentNullException">The <paramref name="source" /> was provided as <see langword="null." /></exception>
      <exception cref="T:System.ArgumentException">The <paramref name="source" /> was not <see langword="null" />, but was not of the expected <see cref="T:System.String" /> type.</exception>
    </member>
    <member name="M:System.Windows.PropertyPathConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the specified value object to the <see cref="T:System.Windows.PropertyPath" /> type.</summary>
      <param name="typeDescriptorContext">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="cultureInfo">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</param>
      <param name="value">The <see cref="T:System.Windows.PropertyPath" /> to convert.</param>
      <param name="destinationType">The destination type. This is expected to be the <see cref="T:System.String" /> type.</param>
      <returns>The converted destination <see cref="T:System.String" />.</returns>
      <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> was provided as <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="value" /> was not <see langword="null" />, but was not of the expected <see cref="T:System.Windows.PropertyPath" /> type.  
-or-
 The <paramref name="destinationType" /> was not the <see cref="T:System.String" /> type.</exception>
    </member>
    <member name="T:System.Windows.ReasonSessionEnding">
      <summary>Specifies the reason for which the user's session is ending. Used by the <see cref="P:System.Windows.SessionEndingCancelEventArgs.ReasonSessionEnding" /> property.</summary>
    </member>
    <member name="F:System.Windows.ReasonSessionEnding.Logoff">
      <summary>The session is ending because the user is logging off.</summary>
    </member>
    <member name="F:System.Windows.ReasonSessionEnding.Shutdown">
      <summary>The session is ending because the user is shutting down Windows.</summary>
    </member>
    <member name="T:System.Windows.RequestBringIntoViewEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> routed event.</summary>
    </member>
    <member name="M:System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>Invokes event handlers in a type-specific way, which can increase event system efficiency.</summary>
      <param name="genericHandler">The generic handler to call in a type-specific way.</param>
      <param name="genericTarget">The target to call the handler on.</param>
    </member>
    <member name="P:System.Windows.RequestBringIntoViewEventArgs.TargetObject">
      <summary>Gets the object that should be made visible in response to the event.</summary>
      <returns>The object that called <see cref="M:System.Windows.FrameworkElement.BringIntoView" />.</returns>
    </member>
    <member name="P:System.Windows.RequestBringIntoViewEventArgs.TargetRect">
      <summary>Gets the rectangular region in the object's coordinate space which should be made visible.</summary>
      <returns>The requested rectangular space.</returns>
    </member>
    <member name="T:System.Windows.RequestBringIntoViewEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> routed event.</summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.ResizeMode">
      <summary>Specifies whether a window can be resized and, if so, how it can be resized. Used by the <see cref="P:System.Windows.Window.ResizeMode" /> property.</summary>
    </member>
    <member name="F:System.Windows.ResizeMode.CanMinimize">
      <summary>A window can only be minimized and restored. The Minimize and Maximize buttons are both shown, but only the Minimize button is enabled.</summary>
    </member>
    <member name="F:System.Windows.ResizeMode.CanResize">
      <summary>A window can be resized. The Minimize and Maximize buttons are both shown and enabled.</summary>
    </member>
    <member name="F:System.Windows.ResizeMode.CanResizeWithGrip">
      <summary>A window can be resized. The Minimize and Maximize buttons are both shown and enabled. A resize grip appears in the bottom-right corner of the window.</summary>
    </member>
    <member name="F:System.Windows.ResizeMode.NoResize">
      <summary>A window cannot be resized. The Minimize and Maximize buttons are not displayed in the title bar.</summary>
    </member>
    <member name="T:System.Windows.ResourceDictionary">
      <summary>Provides a hash table / dictionary implementation that contains WPF resources used by components and other elements of a WPF application.</summary>
    </member>
    <member name="M:System.Windows.ResourceDictionary.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.ResourceDictionary" /> class.</summary>
    </member>
    <member name="M:System.Windows.ResourceDictionary.Add(System.Object,System.Object)">
      <summary>Adds a resource by key to this <see cref="T:System.Windows.ResourceDictionary" />.</summary>
      <param name="key">The name of the key to add.</param>
      <param name="value">The value of the resource to add.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.ResourceDictionary" /> is locked or read-only.</exception>
      <exception cref="T:System.ArgumentException">An element with the same key already exists in the <see cref="T:System.Collections.Hashtable" />.</exception>
    </member>
    <member name="M:System.Windows.ResourceDictionary.BeginInit">
      <summary>Begins the initialization phase for this <see cref="T:System.Windows.ResourceDictionary" />.</summary>
      <exception cref="T:System.InvalidOperationException">Called <see cref="M:System.Windows.ResourceDictionary.BeginInit" /> more than once before <see cref="M:System.Windows.ResourceDictionary.EndInit" /> was called.</exception>
    </member>
    <member name="M:System.Windows.ResourceDictionary.Clear">
      <summary>Clears all keys (and values) in the base <see cref="T:System.Windows.ResourceDictionary" />. This does not clear any merged dictionary items.</summary>
    </member>
    <member name="M:System.Windows.ResourceDictionary.Contains(System.Object)">
      <summary>Determines whether the <see cref="T:System.Windows.ResourceDictionary" /> contains an element with the specified key.</summary>
      <param name="key">The key to locate in the <see cref="T:System.Windows.ResourceDictionary" />.</param>
      <returns>
        <see langword="true" /> if <see cref="T:System.Windows.ResourceDictionary" /> contains a key-value pair with the specified key; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.ResourceDictionary.CopyTo(System.Collections.DictionaryEntry[],System.Int32)">
      <summary>Copies the <see cref="T:System.Windows.ResourceDictionary" /> elements to a one-dimensional <see cref="T:System.Collections.DictionaryEntry" /> at the specified index.</summary>
      <param name="array">The one-dimensional array that is the destination of the <see cref="T:System.Collections.DictionaryEntry" /> objects copied from the <see cref="T:System.Windows.ResourceDictionary" /> instance. The array must have zero-based indexing.</param>
      <param name="arrayIndex">The zero-based index of <paramref name="array" /> where copying begins.</param>
    </member>
    <member name="P:System.Windows.ResourceDictionary.Count">
      <summary>Gets the number of entries in the base <see cref="T:System.Windows.ResourceDictionary" />.</summary>
      <returns>The current number of entries in the base dictionary.</returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.DeferrableContent">
      <summary>Gets or sets the deferrable content for this resource dictionary.</summary>
      <returns>Always returns <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.ResourceDictionary.EndInit">
      <summary>Ends the initialization phase, and invalidates the previous tree such that all changes made to keys during the initialization phase can be accounted for.</summary>
    </member>
    <member name="M:System.Windows.ResourceDictionary.FindName(System.String)">
      <summary>Not supported by this Dictionary implementation.</summary>
      <param name="name">The name identifier for the object being requested.</param>
      <returns>Always returns <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.ResourceDictionary.GetEnumerator">
      <summary>Returns an <see cref="T:System.Collections.IDictionaryEnumerator" /> that can be used to iterate through the <see cref="T:System.Windows.ResourceDictionary" />.</summary>
      <returns>A specialized enumerator for the <see cref="T:System.Windows.ResourceDictionary" />.</returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.InvalidatesImplicitDataTemplateResources">
      <summary>Gets or sets a value that indicates whether the invalidations fired by the <see cref="T:System.Windows.ResourceDictionary" /> object cause <see cref="T:System.Windows.Controls.ContentPresenter" /> objects to reevaluate their choice of template. 
The invalidations happen when an implicit data template resource changes.</summary>
      <returns>
        <see langword="true" /> if the invalidations cause <see cref="T:System.Windows.Controls.ContentPresenter" /> objects to reevaluate their choice of template; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.IsFixedSize">
      <summary>Gets whether this <see cref="T:System.Windows.ResourceDictionary" /> is fixed-size.</summary>
      <returns>
        <see langword="true" /> if the hash table is fixed-size; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.IsReadOnly">
      <summary>Gets whether this <see cref="T:System.Windows.ResourceDictionary" /> is read-only.</summary>
      <returns>
        <see langword="true" /> if the hash table is read-only; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.Item(System.Object)">
      <summary>Gets or sets the value associated with the given key.</summary>
      <param name="key">The desired key to get or set.</param>
      <returns>Value of the key.</returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.Keys">
      <summary>Gets a collection of all keys contained in this <see cref="T:System.Windows.ResourceDictionary" />.</summary>
      <returns>The collection of all keys.</returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.MergedDictionaries">
      <summary>Gets a collection of the <see cref="T:System.Windows.ResourceDictionary" /> dictionaries that constitute the various resource dictionaries in the merged dictionaries.</summary>
      <returns>The collection of merged dictionaries.</returns>
    </member>
    <member name="M:System.Windows.ResourceDictionary.OnGettingValue(System.Object,System.Object@,System.Boolean@)">
      <summary>Occurs when the <see cref="T:System.Windows.ResourceDictionary" /> receives a request for a resource.</summary>
      <param name="key">The key of the resource to get.</param>
      <param name="value">The value of the requested resource.</param>
      <param name="canCache">
        <see langword="true" /> if the resource can be saved and used later; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.Windows.ResourceDictionary.RegisterName(System.String,System.Object)">
      <summary>Not supported by this Dictionary implementation.</summary>
      <param name="name">Not supported.</param>
      <param name="scopedElement">Not supported.</param>
      <exception cref="T:System.NotSupportedException">In all cases when this method is called.</exception>
    </member>
    <member name="M:System.Windows.ResourceDictionary.Remove(System.Object)">
      <summary>Removes the entry with the specified key from the base dictionary.</summary>
      <param name="key">Key of the entry to remove.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.ResourceDictionary" /> is locked or read-only.</exception>
    </member>
    <member name="P:System.Windows.ResourceDictionary.Source">
      <summary>Gets or sets the uniform resource identifier (URI) to load resources from.</summary>
      <returns>The source location of an external resource dictionary.</returns>
    </member>
    <member name="M:System.Windows.ResourceDictionary.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="array">A zero-based <see cref="T:System.Array" /> that receives the copied items from the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" />.</param>
      <param name="arrayIndex">The first position in the specified <see cref="T:System.Array" /> to receive the copied contents.</param>
    </member>
    <member name="P:System.Windows.ResourceDictionary.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>
        <see langword="true" /> if access to <see cref="T:System.Windows.ResourceDictionary" /> is synchronized (thread safe); otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>An object that can be used to synchronize access to <see cref="T:System.Windows.ResourceDictionary" />.</returns>
    </member>
    <member name="M:System.Windows.ResourceDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.System#Windows#Markup#IUriContext#BaseUri">
      <summary>For a description of this member, see <see cref="P:System.Windows.Markup.IUriContext.BaseUri" />.</summary>
      <returns>The base URI of the current context.</returns>
    </member>
    <member name="M:System.Windows.ResourceDictionary.UnregisterName(System.String)">
      <summary>Not supported by this Dictionary implementation.</summary>
      <param name="name">Not supported.</param>
    </member>
    <member name="P:System.Windows.ResourceDictionary.Values">
      <summary>Gets a collection of all values associated with keys contained in this <see cref="T:System.Windows.ResourceDictionary" />.</summary>
      <returns>The collection of all values.</returns>
    </member>
    <member name="T:System.Windows.ResourceDictionaryLocation">
      <summary>Specifies the locations where theme resource dictionaries are located.</summary>
    </member>
    <member name="F:System.Windows.ResourceDictionaryLocation.ExternalAssembly">
      <summary>Theme dictionaries exist in assemblies external to the one defining the types being themed. They are named based on the original assembly with the theme name appended to it; for example, PresentationFramework.Luna.dll. These dictionaries share the same version and key as the original assembly.</summary>
    </member>
    <member name="F:System.Windows.ResourceDictionaryLocation.None">
      <summary>No theme dictionaries exist.</summary>
    </member>
    <member name="F:System.Windows.ResourceDictionaryLocation.SourceAssembly">
      <summary>Theme dictionaries exist in the assembly that defines the types being themed.</summary>
    </member>
    <member name="T:System.Windows.ResourceKey">
      <summary>Provides an abstract base class for various resource keys.</summary>
    </member>
    <member name="M:System.Windows.ResourceKey.#ctor">
      <summary>Initializes a new instance of a class derived from <see cref="T:System.Windows.ResourceKey" />.</summary>
    </member>
    <member name="P:System.Windows.ResourceKey.Assembly">
      <summary>Gets an assembly object that indicates which assembly's dictionary to look in for the value associated with this key.</summary>
      <returns>The retrieved assembly, as a reflection class.</returns>
    </member>
    <member name="M:System.Windows.ResourceKey.ProvideValue(System.IServiceProvider)">
      <summary>Returns this <see cref="T:System.Windows.ResourceKey" />. Instances of this class are typically used as a key in a dictionary.</summary>
      <param name="serviceProvider">A service implementation that provides the desired value.</param>
      <returns>Calling this method always returns the instance itself.</returns>
    </member>
    <member name="T:System.Windows.ResourceReferenceKeyNotFoundException">
      <summary>The exception that is thrown when a resource reference key cannot be found during parsing or serialization of markup extension resources.</summary>
    </member>
    <member name="M:System.Windows.ResourceReferenceKeyNotFoundException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.ResourceReferenceKeyNotFoundException" /> class.</summary>
    </member>
    <member name="M:System.Windows.ResourceReferenceKeyNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.ResourceReferenceKeyNotFoundException" /> class with the specified serialization information and streaming context.</summary>
      <param name="info">Specific information from the serialization process.</param>
      <param name="context">The context at the time the exception was thrown.</param>
    </member>
    <member name="M:System.Windows.ResourceReferenceKeyNotFoundException.#ctor(System.String,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.ResourceReferenceKeyNotFoundException" /> class with the specified error message and resource key.</summary>
      <param name="message">A possible descriptive message.</param>
      <param name="resourceKey">The key that was not found.</param>
    </member>
    <member name="M:System.Windows.ResourceReferenceKeyNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Reports specifics of the exception to debuggers or dialogs.</summary>
      <param name="info">Specific information from the serialization process.</param>
      <param name="context">The context at the time the exception was thrown.</param>
    </member>
    <member name="P:System.Windows.ResourceReferenceKeyNotFoundException.Key">
      <summary>Gets the key that was not found and caused the exception to be thrown.</summary>
      <returns>The resource key.</returns>
    </member>
    <member name="T:System.Windows.Resources.ContentTypes">
      <summary>Supports Extensible Application Markup Language (XAML) as a content type and resource.</summary>
    </member>
    <member name="M:System.Windows.Resources.ContentTypes.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Resources.ContentTypes" /> class.</summary>
    </member>
    <member name="F:System.Windows.Resources.ContentTypes.XamlContentType">
      <summary>Declares the Extensible Application Markup Language (XAML) content type.</summary>
    </member>
    <member name="T:System.Windows.Resources.StreamResourceInfo">
      <summary>Stores information for a stream resource used in Windows Presentation Foundation (WPF), such as images.</summary>
    </member>
    <member name="M:System.Windows.Resources.StreamResourceInfo.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Resources.StreamResourceInfo" /> class.</summary>
    </member>
    <member name="M:System.Windows.Resources.StreamResourceInfo.#ctor(System.IO.Stream,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Resources.StreamResourceInfo" /> class based on a provided stream.</summary>
      <param name="stream">The reference stream.</param>
      <param name="contentType">The Multipurpose Internet Mail Extensions (MIME) content type of the stream.</param>
    </member>
    <member name="P:System.Windows.Resources.StreamResourceInfo.ContentType">
      <summary>Gets or sets the content type of a stream.</summary>
      <returns>The Multipurpose Internet Mail Extensions (MIME) content type.</returns>
    </member>
    <member name="P:System.Windows.Resources.StreamResourceInfo.Stream">
      <summary>Gets or sets the actual stream of the resource.</summary>
      <returns>The stream for the resource.</returns>
    </member>
    <member name="T:System.Windows.RoutedPropertyChangedEventArgs`1">
      <summary>Provides data about a change in value to a dependency property as reported by particular routed events, including the previous and current value of the property that changed.</summary>
      <typeparam name="T">The type of the dependency property that has changed.</typeparam>
    </member>
    <member name="M:System.Windows.RoutedPropertyChangedEventArgs`1.#ctor(`0,`0)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" /> class, with provided old and new values.</summary>
      <param name="oldValue">Previous value of the property, prior to the event being raised.</param>
      <param name="newValue">Current value of the property at the time of the event.</param>
    </member>
    <member name="M:System.Windows.RoutedPropertyChangedEventArgs`1.#ctor(`0,`0,System.Windows.RoutedEvent)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" /> class, with provided old and new values, and an event identifier.</summary>
      <param name="oldValue">Previous value of the property, prior to the event being raised.</param>
      <param name="newValue">Current value of the property at the time of the event.</param>
      <param name="routedEvent">Identifier of the routed event that this arguments class carries information for.</param>
    </member>
    <member name="M:System.Windows.RoutedPropertyChangedEventArgs`1.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>Invokes event handlers in a type-specific way, which can increase event system efficiency.</summary>
      <param name="genericHandler">The generic handler to call in a type-specific way.</param>
      <param name="genericTarget">The target to call the handler on.</param>
    </member>
    <member name="P:System.Windows.RoutedPropertyChangedEventArgs`1.NewValue">
      <summary>Gets the new value of a property as reported by a property changed event.</summary>
      <returns>The generic value. In a practical implementation of the <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" />, the generic type of this property is replaced with the constrained type of the implementation.</returns>
    </member>
    <member name="P:System.Windows.RoutedPropertyChangedEventArgs`1.OldValue">
      <summary>Gets the previous value of the property as reported by a property changed event.</summary>
      <returns>The generic value. In a practical implementation of the <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" />, the generic type of this property is replaced with the constrained type of the implementation.</returns>
    </member>
    <member name="T:System.Windows.RoutedPropertyChangedEventHandler`1">
      <summary>Represents methods that will handle various routed events that track property value changes.</summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">The event data. Specific event definitions will constrain <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" /> to a type, with the type parameter of the constraint matching the type parameter constraint of a delegate implementation.</param>
      <typeparam name="T">The type of the property value where changes in value are reported.</typeparam>
    </member>
    <member name="T:System.Windows.SessionEndingCancelEventArgs">
      <summary>Contains the event arguments for the <see cref="E:System.Windows.Application.SessionEnding" /> event.</summary>
    </member>
    <member name="P:System.Windows.SessionEndingCancelEventArgs.ReasonSessionEnding">
      <summary>Gets a value that indicates why the session is ending.</summary>
      <returns>A <see cref="T:System.Windows.ReasonSessionEnding" /> value that indicates why the session ended.</returns>
    </member>
    <member name="T:System.Windows.SessionEndingCancelEventHandler">
      <summary>Represents the method that handles the <see cref="E:System.Windows.Application.SessionEnding" /> event.</summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">A <see cref="T:System.Windows.SessionEndingCancelEventArgs" /> object with the event arguments.</param>
    </member>
    <member name="T:System.Windows.Setter">
      <summary>Represents a setter that applies a property value.</summary>
    </member>
    <member name="M:System.Windows.Setter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Setter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Setter.#ctor(System.Windows.DependencyProperty,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Setter" /> class with the specified property and value.</summary>
      <param name="property">The <see cref="T:System.Windows.DependencyProperty" /> to apply the <see cref="P:System.Windows.Setter.Value" /> to.</param>
      <param name="value">The value to apply to the property.</param>
    </member>
    <member name="M:System.Windows.Setter.#ctor(System.Windows.DependencyProperty,System.Object,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Setter" /> class with the specified property, value, and target name.</summary>
      <param name="property">The <see cref="T:System.Windows.DependencyProperty" /> to apply the <see cref="P:System.Windows.Setter.Value" /> to.</param>
      <param name="value">The value to apply to the property.</param>
      <param name="targetName">The name of the child node this <see cref="T:System.Windows.Setter" /> is intended for.</param>
    </member>
    <member name="P:System.Windows.Setter.Property">
      <summary>Gets or sets the property to which the <see cref="P:System.Windows.Setter.Value" /> will be applied.</summary>
      <returns>A <see cref="T:System.Windows.DependencyProperty" /> to which the <see cref="P:System.Windows.Setter.Value" /> will be applied. The default value is null.</returns>
      <exception cref="T:System.ArgumentNullException">The <see cref="P:System.Windows.Setter.Property" /> property cannot be <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">The specified <see cref="P:System.Windows.Setter.Property" /> property cannot be read-only.</exception>
      <exception cref="T:System.InvalidOperationException">If the specified <see cref="P:System.Windows.Setter.Value" /> is not valid for the type of the specified <see cref="P:System.Windows.Setter.Property" />.</exception>
    </member>
    <member name="M:System.Windows.Setter.ReceiveMarkupExtension(System.Object,System.Windows.Markup.XamlSetMarkupExtensionEventArgs)">
      <summary>Handles cases where a markup extension provides a value for a property of <see cref="T:System.Windows.Setter" /> object.</summary>
      <param name="targetObject">The object where the markup extension sets the value.</param>
      <param name="eventArgs">Data that is relevant for markup extension processing.</param>
    </member>
    <member name="M:System.Windows.Setter.ReceiveTypeConverter(System.Object,System.Windows.Markup.XamlSetTypeConverterEventArgs)">
      <summary>Handles cases where a type converter provides a value for a property of a <see cref="T:System.Windows.Setter" /> object.</summary>
      <param name="targetObject">The object where the type converter sets the value.</param>
      <param name="eventArgs">Data that is relevant for type converter processing.</param>
    </member>
    <member name="M:System.Windows.Setter.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary>Signals the object that initialization is starting.</summary>
    </member>
    <member name="M:System.Windows.Setter.System#ComponentModel#ISupportInitialize#EndInit">
      <summary>Signals the object that initialization is complete.</summary>
    </member>
    <member name="P:System.Windows.Setter.TargetName">
      <summary>Gets or sets the name of the object this <see cref="T:System.Windows.Setter" /> is intended for.</summary>
      <returns>The default value is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Setter.Value">
      <summary>Gets or sets the value to apply to the property that is specified by this <see cref="T:System.Windows.Setter" />.</summary>
      <returns>The default value is <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</returns>
      <exception cref="T:System.ArgumentException">If the specified <see cref="P:System.Windows.Setter.Value" /> is set to <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</exception>
    </member>
    <member name="T:System.Windows.SetterBase">
      <summary>Represents the base class for value setters.</summary>
    </member>
    <member name="M:System.Windows.SetterBase.CheckSealed">
      <summary>Checks whether this object is read-only and cannot be changed.</summary>
    </member>
    <member name="P:System.Windows.SetterBase.IsSealed">
      <summary>Gets a value that indicates whether this object is in an immutable state.</summary>
      <returns>
        <see langword="true" /> if this object is in an immutable state; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.SetterBaseCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.SetterBase" /> objects.</summary>
    </member>
    <member name="M:System.Windows.SetterBaseCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.SetterBaseCollection" /> class.</summary>
    </member>
    <member name="P:System.Windows.SetterBaseCollection.IsSealed">
      <summary>Gets a value that indicates whether this object is in a read-only state.</summary>
      <returns>
        <see langword="true" /> if this object is in a read-only state and cannot be changed; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Shapes.Ellipse">
      <summary>Draws an ellipse.</summary>
    </member>
    <member name="M:System.Windows.Shapes.Ellipse.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Shapes.Ellipse" /> class.</summary>
    </member>
    <member name="P:System.Windows.Shapes.Ellipse.GeometryTransform">
      <summary>Gets the value of any <see cref="P:System.Windows.Media.Transform.Identity" /> transforms that are applied to the <see cref="T:System.Windows.Media.Geometry" /> of an <see cref="T:System.Windows.Shapes.Ellipse" /> before it is rendered.</summary>
      <returns>The value of any <see cref="P:System.Windows.Media.Transform.Identity" /> transforms that are applied to the <see cref="T:System.Windows.Media.Geometry" /> of an <see cref="T:System.Windows.Shapes.Ellipse" /> before it is rendered.</returns>
    </member>
    <member name="P:System.Windows.Shapes.Ellipse.RenderedGeometry">
      <summary>Gets the final rendered <see cref="T:System.Windows.Media.Geometry" /> of an <see cref="T:System.Windows.Shapes.Ellipse" />.</summary>
      <returns>The final rendered <see cref="T:System.Windows.Media.Geometry" /> of an <see cref="T:System.Windows.Shapes.Ellipse" />.</returns>
    </member>
    <member name="T:System.Windows.Shapes.Line">
      <summary>Draws a straight line between two points.</summary>
    </member>
    <member name="M:System.Windows.Shapes.Line.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Shapes.Line" /> class.</summary>
    </member>
    <member name="P:System.Windows.Shapes.Line.X1">
      <summary>Gets or sets the x-coordinate of the <see cref="T:System.Windows.Shapes.Line" /> start point.</summary>
      <returns>The x-coordinate for the start point of the line. The default is <c>0</c>.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Line.X1Property">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Line.X1" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Shapes.Line.X2">
      <summary>Gets or sets the x-coordinate of the <see cref="T:System.Windows.Shapes.Line" /> end point.</summary>
      <returns>The x-coordinate for the end point of the line. The default is <c>0</c>.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Line.X2Property">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Line.X2" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Shapes.Line.Y1">
      <summary>Gets or sets the y-coordinate of the <see cref="T:System.Windows.Shapes.Line" /> start point.</summary>
      <returns>The y-coordinate for the start point of the line. The default is <c>0</c>.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Line.Y1Property">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Line.Y1" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Shapes.Line.Y2">
      <summary>Gets or sets the y-coordinate of the <see cref="T:System.Windows.Shapes.Line" /> end point.</summary>
      <returns>The y-coordinate for the end point of the line. The default is <c>0</c>.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Line.Y2Property">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Line.Y2" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Shapes.Path">
      <summary>Draws a series of connected lines and curves.</summary>
    </member>
    <member name="M:System.Windows.Shapes.Path.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Shapes.Path" /> class.</summary>
    </member>
    <member name="P:System.Windows.Shapes.Path.Data">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.Geometry" /> that specifies the shape to be drawn.</summary>
      <returns>A description of the shape to be drawn.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Path.DataProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Path.Data" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Shapes.Polygon">
      <summary>Draws a polygon, which is a connected series of lines that form a closed shape.</summary>
    </member>
    <member name="M:System.Windows.Shapes.Polygon.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Shapes.Polygon" /> class.</summary>
    </member>
    <member name="P:System.Windows.Shapes.Polygon.FillRule">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.FillRule" /> enumeration that specifies how the interior fill of the shape is determined.</summary>
      <returns>One of the <see cref="T:System.Windows.Media.FillRule" /> enumeration values. The default is <see cref="F:System.Windows.Media.FillRule.EvenOdd" />.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Polygon.FillRuleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Polygon.FillRule" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Shapes.Polygon.Points">
      <summary>Gets or sets a collection that contains the vertex points of the polygon.</summary>
      <returns>A collection of <see cref="T:System.Windows.Point" /> structures that describe the vertex points of the polygon. The default is a null reference (<see langword="Nothing" /> in Visual Basic).</returns>
    </member>
    <member name="F:System.Windows.Shapes.Polygon.PointsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Polygon.Points" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Shapes.Polyline">
      <summary>Draws a series of connected straight lines.</summary>
    </member>
    <member name="M:System.Windows.Shapes.Polyline.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Shapes.Polyline" /> class.</summary>
    </member>
    <member name="P:System.Windows.Shapes.Polyline.FillRule">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.FillRule" /> enumeration that specifies how the interior fill of the shape is determined.</summary>
      <returns>One of the <see cref="T:System.Windows.Media.FillRule" /> enumeration values. The default is <see cref="F:System.Windows.Media.FillRule.EvenOdd" />.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Polyline.FillRuleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Polyline.FillRule" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Shapes.Polyline.Points">
      <summary>Gets or sets a collection that contains the vertex points of the <see cref="T:System.Windows.Shapes.Polyline" />.</summary>
      <returns>A collection of <see cref="T:System.Windows.Point" /> structures that describe the vertex points of the <see cref="T:System.Windows.Shapes.Polyline" />. The default is a null  reference (<see langword="Nothing" /> in Visual Basic).</returns>
    </member>
    <member name="F:System.Windows.Shapes.Polyline.PointsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Polyline.Points" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Shapes.Rectangle">
      <summary>Draws a rectangle.</summary>
    </member>
    <member name="M:System.Windows.Shapes.Rectangle.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Shapes.Rectangle" /> class.</summary>
    </member>
    <member name="P:System.Windows.Shapes.Rectangle.GeometryTransform">
      <summary>Gets the <see cref="T:System.Windows.Media.Transform" /> that is applied to this <see cref="T:System.Windows.Shapes.Rectangle" />.</summary>
      <returns>The transform that is applied to this <see cref="T:System.Windows.Shapes.Rectangle" />.</returns>
    </member>
    <member name="P:System.Windows.Shapes.Rectangle.RadiusX">
      <summary>Gets or sets the x-axis radius of the ellipse that is used to round the corners of the rectangle.</summary>
      <returns>The x-axis radius of the ellipse that is used to round the corners of the rectangle.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Rectangle.RadiusXProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Rectangle.RadiusX" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Shapes.Rectangle.RadiusY">
      <summary>Gets or sets the y-axis radius of the ellipse that is used to round the corners of the rectangle.</summary>
      <returns>The y-axis radius of the ellipse that is used to round the corners of the rectangle. The default is <c>0</c>.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Rectangle.RadiusYProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Rectangle.RadiusY" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Shapes.Rectangle.RenderedGeometry">
      <summary>Gets a <see cref="T:System.Windows.Media.Geometry" /> object that represents the final rendered shape.</summary>
      <returns>The final rendered shape.</returns>
    </member>
    <member name="T:System.Windows.Shapes.Shape">
      <summary>Provides a base class for shape elements, such as <see cref="T:System.Windows.Shapes.Ellipse" />, <see cref="T:System.Windows.Shapes.Polygon" />, and <see cref="T:System.Windows.Shapes.Rectangle" />.</summary>
    </member>
    <member name="M:System.Windows.Shapes.Shape.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Shapes.Shape" /> class.</summary>
    </member>
    <member name="M:System.Windows.Shapes.Shape.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges a <see cref="T:System.Windows.Shapes.Shape" /> by evaluating its <see cref="P:System.Windows.Shapes.Shape.RenderedGeometry" /> and <see cref="P:System.Windows.Shapes.Shape.Stretch" /> properties.</summary>
      <param name="finalSize">The final evaluated size of the <see cref="T:System.Windows.Shapes.Shape" />.</param>
      <returns>The final size of the arranged <see cref="T:System.Windows.Shapes.Shape" /> element.</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.DefiningGeometry">
      <summary>Gets a value that represents the <see cref="T:System.Windows.Media.Geometry" /> of the <see cref="T:System.Windows.Shapes.Shape" />.</summary>
      <returns>The <see cref="T:System.Windows.Media.Geometry" /> of the <see cref="T:System.Windows.Shapes.Shape" />.</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.Fill">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> that specifies how the shape's interior is painted.</summary>
      <returns>A <see cref="T:System.Windows.Media.Brush" /> that describes how the shape's interior is painted. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.FillProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Shape.Fill" /> dependency property. This field is read-only.</summary>
    </member>
    <member name="P:System.Windows.Shapes.Shape.GeometryTransform">
      <summary>Gets a value that represents a <see cref="T:System.Windows.Media.Transform" /> that is applied to the geometry of a <see cref="T:System.Windows.Shapes.Shape" /> prior to when it is drawn.</summary>
      <returns>A <see cref="T:System.Windows.Media.Transform" /> that is applied to the geometry of a <see cref="T:System.Windows.Shapes.Shape" /> prior to when it is drawn.</returns>
    </member>
    <member name="M:System.Windows.Shapes.Shape.MeasureOverride(System.Windows.Size)">
      <summary>Measures a <see cref="T:System.Windows.Shapes.Shape" /> during the first layout pass prior to arranging it.</summary>
      <param name="constraint">A maximum <see cref="T:System.Windows.Size" /> to not exceed.</param>
      <returns>The maximum <see cref="T:System.Windows.Size" /> for the <see cref="T:System.Windows.Shapes.Shape" />.</returns>
    </member>
    <member name="M:System.Windows.Shapes.Shape.OnRender(System.Windows.Media.DrawingContext)">
      <summary>Provides a means to change the default appearance of a <see cref="T:System.Windows.Shapes.Shape" /> element.</summary>
      <param name="drawingContext">A <see cref="T:System.Windows.Media.DrawingContext" /> object that is drawn during the rendering pass of this <see cref="T:System.Windows.Shapes.Shape" />.</param>
    </member>
    <member name="P:System.Windows.Shapes.Shape.RenderedGeometry">
      <summary>Gets a value that represents the final rendered <see cref="T:System.Windows.Media.Geometry" /> of a <see cref="T:System.Windows.Shapes.Shape" />.</summary>
      <returns>The final rendered <see cref="T:System.Windows.Media.Geometry" /> of a <see cref="T:System.Windows.Shapes.Shape" />.</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.Stretch">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.Stretch" /> enumeration value that describes how the shape fills its allocated space.</summary>
      <returns>One of the <see cref="T:System.Windows.Media.Stretch" /> enumeration values.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StretchProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Shape.Stretch" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Shapes.Shape.Stroke">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> that specifies how the <see cref="T:System.Windows.Shapes.Shape" /> outline is painted.</summary>
      <returns>A <see cref="T:System.Windows.Media.Brush" /> that specifies how the <see cref="T:System.Windows.Shapes.Shape" /> outline is painted. The default is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeDashArray">
      <summary>Gets or sets a collection of <see cref="T:System.Double" /> values that indicate the pattern of dashes and gaps that is used to outline shapes.</summary>
      <returns>A collection of <see cref="T:System.Double" /> values that specify the pattern of dashes and gaps.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeDashArrayProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Shape.StrokeDashArray" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeDashCap">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineCap" /> enumeration value that specifies how the ends of a dash are drawn.</summary>
      <returns>One of the enumeration values for <see cref="T:System.Windows.Media.PenLineCap" />. The default is <see cref="F:System.Windows.Media.PenLineCap.Flat" />.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeDashCapProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Shape.StrokeDashCap" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeDashOffset">
      <summary>Gets or sets a <see cref="T:System.Double" /> that specifies the distance within the dash pattern where a dash begins.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the distance within the dash pattern where a dash begins.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeDashOffsetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Shape.StrokeDashOffset" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeEndLineCap">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineCap" /> enumeration value that describes the <see cref="T:System.Windows.Shapes.Shape" /> at the end of a line.</summary>
      <returns>One of the enumeration values for <see cref="T:System.Windows.Media.PenLineCap" />. The default is <see cref="F:System.Windows.Media.PenLineCap.Flat" />.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeEndLineCapProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Shape.StrokeEndLineCap" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeLineJoin">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineJoin" /> enumeration value that specifies the type of join that is used at the vertices of a <see cref="T:System.Windows.Shapes.Shape" />.</summary>
      <returns>One of the enumeration values for <see cref="T:System.Windows.Media.PenLineJoin" /></returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeLineJoinProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Shape.StrokeLineJoin" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeMiterLimit">
      <summary>Gets or sets a limit on the ratio of the miter length to half the <see cref="P:System.Windows.Shapes.Shape.StrokeThickness" /> of a <see cref="T:System.Windows.Shapes.Shape" /> element.</summary>
      <returns>The limit on the ratio of the miter length to the <see cref="P:System.Windows.Shapes.Shape.StrokeThickness" /> of a <see cref="T:System.Windows.Shapes.Shape" /> element. This value is always a positive number that is greater than or equal to 1.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeMiterLimitProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Shape.StrokeMiterLimit" /> dependency property.</summary>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Shape.Stroke" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeStartLineCap">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineCap" /> enumeration value that describes the <see cref="T:System.Windows.Shapes.Shape" /> at the start of a <see cref="P:System.Windows.Shapes.Shape.Stroke" />.</summary>
      <returns>One of the <see cref="T:System.Windows.Media.PenLineCap" /> enumeration values. The default is <see cref="F:System.Windows.Media.PenLineCap.Flat" />.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeStartLineCapProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Shape.StrokeStartLineCap" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeThickness">
      <summary>Gets or sets the width of the <see cref="T:System.Windows.Shapes.Shape" /> outline.</summary>
      <returns>The width of the <see cref="T:System.Windows.Shapes.Shape" /> outline.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeThicknessProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Shape.StrokeThickness" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Shell.JumpItem">
      <summary>Represents the base class for the <see cref="T:System.Windows.Shell.JumpPath" /> and <see cref="T:System.Windows.Shell.JumpTask" /> classes.</summary>
    </member>
    <member name="P:System.Windows.Shell.JumpItem.CustomCategory">
      <summary>Gets or sets the name of the category the <see cref="T:System.Windows.Shell.JumpItem" /> is grouped with in the Windows 7 taskbar Jump List.</summary>
      <returns>The name of the category the <see cref="T:System.Windows.Shell.JumpItem" /> is grouped with. The default is <see langword="null" />.</returns>
    </member>
    <member name="T:System.Windows.Shell.JumpItemRejectionReason">
      <summary>Describes why a <see cref="T:System.Windows.Shell.JumpItem" /> could not be added to the Jump List by the Windows shell.</summary>
    </member>
    <member name="F:System.Windows.Shell.JumpItemRejectionReason.InvalidItem">
      <summary>The <see cref="T:System.Windows.Shell.JumpItem" /> references an invalid file path, or the operating system does not support Jump Lists.</summary>
    </member>
    <member name="F:System.Windows.Shell.JumpItemRejectionReason.None">
      <summary>The reason is not specified.</summary>
    </member>
    <member name="F:System.Windows.Shell.JumpItemRejectionReason.NoRegisteredHandler">
      <summary>The application is not registered to handle the file name extension of the <see cref="T:System.Windows.Shell.JumpItem" />.</summary>
    </member>
    <member name="F:System.Windows.Shell.JumpItemRejectionReason.RemovedByUser">
      <summary>The item was previously in the Jump List but was removed by the user.</summary>
    </member>
    <member name="T:System.Windows.Shell.JumpItemsRejectedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Shell.JumpList.JumpItemsRejected" /> event.</summary>
    </member>
    <member name="M:System.Windows.Shell.JumpItemsRejectedEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Shell.JumpItemsRejectedEventArgs" /> class.</summary>
    </member>
    <member name="M:System.Windows.Shell.JumpItemsRejectedEventArgs.#ctor(System.Collections.Generic.IList{System.Windows.Shell.JumpItem},System.Collections.Generic.IList{System.Windows.Shell.JumpItemRejectionReason})">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Shell.JumpItemsRejectedEventArgs" /> class that has the specified parameters.</summary>
      <param name="rejectedItems">The list of Jump List items that could not be added to the Jump List by the Windows shell.</param>
      <param name="reasons">The list of reasons why the rejected Jump List items could not be added to the Jump List.</param>
      <exception cref="T:System.ArgumentException">The count of <paramref name="rejectedItems" /> does not equal the count of rejection <paramref name="reasons" />.</exception>
    </member>
    <member name="P:System.Windows.Shell.JumpItemsRejectedEventArgs.RejectedItems">
      <summary>Gets the list of Jump List items that could not be added to the Jump List by the Windows shell.</summary>
      <returns>The list of Jump List items that could not be added to the Jump List by the Windows shell.</returns>
    </member>
    <member name="P:System.Windows.Shell.JumpItemsRejectedEventArgs.RejectionReasons">
      <summary>Gets the list of reasons why the rejected Jump List items could not be added to the Jump List.</summary>
      <returns>The list of reasons why the rejected Jump List items could not be added to the Jump List.</returns>
    </member>
    <member name="T:System.Windows.Shell.JumpItemsRemovedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Shell.JumpList.JumpItemsRemovedByUser" /> event.</summary>
    </member>
    <member name="M:System.Windows.Shell.JumpItemsRemovedEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Shell.JumpItemsRemovedEventArgs" /> class.</summary>
    </member>
    <member name="M:System.Windows.Shell.JumpItemsRemovedEventArgs.#ctor(System.Collections.Generic.IList{System.Windows.Shell.JumpItem})">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Shell.JumpItemsRemovedEventArgs" /> class that has the specified parameters.</summary>
      <param name="removedItems">The list of Jump List items that have been removed by the user since <see cref="M:System.Windows.Shell.JumpList.Apply" /> was last called.</param>
    </member>
    <member name="P:System.Windows.Shell.JumpItemsRemovedEventArgs.RemovedItems">
      <summary>Gets the list of Jump List items that have been removed by the user since the <see cref="M:System.Windows.Shell.JumpList.Apply" /> method was last called.</summary>
      <returns>The list of Jump List items that have been removed by the user since the <see cref="M:System.Windows.Shell.JumpList.Apply" /> method was last called.</returns>
    </member>
    <member name="T:System.Windows.Shell.JumpList">
      <summary>Represents a list of items and tasks displayed as a menu on a Windows 7 taskbar button.</summary>
    </member>
    <member name="M:System.Windows.Shell.JumpList.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Shell.JumpList" /> class.</summary>
    </member>
    <member name="M:System.Windows.Shell.JumpList.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Shell.JumpItem},System.Boolean,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Shell.JumpList" /> class with the specified parameters.</summary>
      <param name="items">The collection of <see cref="T:System.Windows.Shell.JumpItem" /> objects that are displayed in the Jump List.</param>
      <param name="showFrequent">A value that indicates whether frequently used items are displayed in the Jump List.</param>
      <param name="showRecent">A value that indicates whether recently used items are displayed in the Jump List.</param>
    </member>
    <member name="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.String)">
      <summary>Adds the specified item path to the Recent category of the Jump List.</summary>
      <param name="itemPath">The path to add to the Jump List.</param>
    </member>
    <member name="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpPath)">
      <summary>Adds the specified jump path to the Recent category of the Jump List.</summary>
      <param name="jumpPath">The <see cref="T:System.Windows.Shell.JumpPath" /> to add to the Jump List.</param>
    </member>
    <member name="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpTask)">
      <summary>Adds the specified jump task to the Recent category of the Jump List.</summary>
      <param name="jumpTask">The <see cref="T:System.Windows.Shell.JumpTask" /> to add to the Jump List.</param>
    </member>
    <member name="M:System.Windows.Shell.JumpList.Apply">
      <summary>Sends the <see cref="T:System.Windows.Shell.JumpList" /> to the Windows shell in its current state.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Shell.JumpList" /> is not completely initialized.</exception>
    </member>
    <member name="M:System.Windows.Shell.JumpList.BeginInit">
      <summary>Signals the start of the <see cref="T:System.Windows.Shell.JumpList" /> initialization.</summary>
      <exception cref="T:System.InvalidOperationException">This call to <see cref="M:System.Windows.Shell.JumpList.BeginInit" /> is nested in a previous call to <see cref="M:System.Windows.Shell.JumpList.BeginInit" />.</exception>
    </member>
    <member name="M:System.Windows.Shell.JumpList.EndInit">
      <summary>Signals the end of the <see cref="T:System.Windows.Shell.JumpList" /> initialization.</summary>
      <exception cref="T:System.NotSupportedException">This call to <see cref="M:System.Windows.Shell.JumpList.EndInit" /> is not paired with a call to <see cref="M:System.Windows.Shell.JumpList.BeginInit" />.</exception>
    </member>
    <member name="M:System.Windows.Shell.JumpList.GetJumpList(System.Windows.Application)">
      <summary>Returns the <see cref="T:System.Windows.Shell.JumpList" /> object associated with an application.</summary>
      <param name="application">The application associated with the <see cref="T:System.Windows.Shell.JumpList" />.</param>
      <returns>The <see cref="T:System.Windows.Shell.JumpList" /> object associated with the specified application.</returns>
    </member>
    <member name="P:System.Windows.Shell.JumpList.JumpItems">
      <summary>Gets the collection of <see cref="T:System.Windows.Shell.JumpItem" /> objects that are displayed in the Jump List.</summary>
      <returns>The collection of <see cref="T:System.Windows.Shell.JumpItem" /> objects displayed in the Jump List. The default is an empty collection.</returns>
    </member>
    <member name="E:System.Windows.Shell.JumpList.JumpItemsRejected">
      <summary>Occurs when jump items are not successfully added to the Jump List by the Windows shell.</summary>
    </member>
    <member name="E:System.Windows.Shell.JumpList.JumpItemsRemovedByUser">
      <summary>Occurs when jump items previously in the Jump List are removed from the list by the user.</summary>
    </member>
    <member name="M:System.Windows.Shell.JumpList.SetJumpList(System.Windows.Application,System.Windows.Shell.JumpList)">
      <summary>Sets the <see cref="T:System.Windows.Shell.JumpList" /> object associated with an application.</summary>
      <param name="application">The application associated with the <see cref="T:System.Windows.Shell.JumpList" />.</param>
      <param name="value">The <see cref="T:System.Windows.Shell.JumpList" /> to associate with the application.</param>
    </member>
    <member name="P:System.Windows.Shell.JumpList.ShowFrequentCategory">
      <summary>Gets or sets a value that indicates whether frequently used items are displayed in the Jump List.</summary>
      <returns>
        <see langword="true" /> if frequently used items are displayed in the Jump List; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Shell.JumpList.ShowRecentCategory">
      <summary>Gets or sets a value that indicates whether recently used items are displayed in the Jump List.</summary>
      <returns>
        <see langword="true" /> if recently used items are displayed in the Jump List; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Shell.JumpPath">
      <summary>Represents a link to a file that is displayed in a Windows 7 taskbar Jump List.</summary>
    </member>
    <member name="M:System.Windows.Shell.JumpPath.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Shell.JumpPath" /> class.</summary>
    </member>
    <member name="P:System.Windows.Shell.JumpPath.Path">
      <summary>Gets or sets the path to the file to be included in the Jump List.</summary>
      <returns>The path to the file to be included in the Jump List.</returns>
    </member>
    <member name="T:System.Windows.Shell.JumpTask">
      <summary>Represents a shortcut to an application in the Windows 7 taskbar Jump List.</summary>
    </member>
    <member name="M:System.Windows.Shell.JumpTask.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Shell.JumpTask" /> class.</summary>
    </member>
    <member name="P:System.Windows.Shell.JumpTask.ApplicationPath">
      <summary>Gets or sets the path to the application.</summary>
      <returns>The path to the application. The default is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Shell.JumpTask.Arguments">
      <summary>Gets or sets the arguments passed to the application on startup.</summary>
      <returns>The arguments passed to the application on startup. The default is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Shell.JumpTask.Description">
      <summary>Gets or sets the text displayed in the tooltip for the task in the Jump List.</summary>
      <returns>The text displayed in the tooltip for the task. The default is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Shell.JumpTask.IconResourceIndex">
      <summary>Gets or sets the zero-based index of an icon embedded in a resource.</summary>
      <returns>The zero-based index of the icon, or -1 if no icon is used. The default is 0.</returns>
    </member>
    <member name="P:System.Windows.Shell.JumpTask.IconResourcePath">
      <summary>Gets or sets the path to a resource that contains the icon to display in the Jump List.</summary>
      <returns>The path to a resource that contains the icon. The default is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Shell.JumpTask.Title">
      <summary>Gets or sets the text displayed for the task in the Jump List.</summary>
      <returns>The text displayed for the task in the Jump List. The default is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Shell.JumpTask.WorkingDirectory">
      <summary>Gets or sets the working directory of the application on startup.</summary>
      <returns>The working directory of the application on startup. The default is <see langword="null" />.</returns>
    </member>
    <member name="T:System.Windows.Shell.NonClientFrameEdges">
      <summary>Specifies constants that indicate which edges of the window frame are not owned by the client.</summary>
    </member>
    <member name="F:System.Windows.Shell.NonClientFrameEdges.Bottom">
      <summary>The bottom edge is not owned by the client (value = 8).</summary>
    </member>
    <member name="F:System.Windows.Shell.NonClientFrameEdges.Left">
      <summary>The left edge is not owned by the client (value = 1).</summary>
    </member>
    <member name="F:System.Windows.Shell.NonClientFrameEdges.None">
      <summary>All edges are owned by the client (value = 0).</summary>
    </member>
    <member name="F:System.Windows.Shell.NonClientFrameEdges.Right">
      <summary>The right edge is not owned by the client (value = 4).</summary>
    </member>
    <member name="F:System.Windows.Shell.NonClientFrameEdges.Top">
      <summary>The top edge is not owned by the client (value = 2).</summary>
    </member>
    <member name="T:System.Windows.Shell.ResizeGripDirection">
      <summary>Specifies constants that indicate the direction of the resize grip behavior on an input element.</summary>
    </member>
    <member name="F:System.Windows.Shell.ResizeGripDirection.Bottom">
      <summary>The window resizes from its bottom edge.</summary>
    </member>
    <member name="F:System.Windows.Shell.ResizeGripDirection.BottomLeft">
      <summary>The window resizes from its bottom-left corner.</summary>
    </member>
    <member name="F:System.Windows.Shell.ResizeGripDirection.BottomRight">
      <summary>The window resizes from its bottom-right corner.</summary>
    </member>
    <member name="F:System.Windows.Shell.ResizeGripDirection.Left">
      <summary>The windows resizes from its left edge.</summary>
    </member>
    <member name="F:System.Windows.Shell.ResizeGripDirection.None">
      <summary>No resize behavior is specified.</summary>
    </member>
    <member name="F:System.Windows.Shell.ResizeGripDirection.Right">
      <summary>The window resizes from its right edge.</summary>
    </member>
    <member name="F:System.Windows.Shell.ResizeGripDirection.Top">
      <summary>The window resizes from its top edge.</summary>
    </member>
    <member name="F:System.Windows.Shell.ResizeGripDirection.TopLeft">
      <summary>The window resizes from its top-left corner.</summary>
    </member>
    <member name="F:System.Windows.Shell.ResizeGripDirection.TopRight">
      <summary>The window resizes from its top-right corner.</summary>
    </member>
    <member name="T:System.Windows.Shell.TaskbarItemInfo">
      <summary>Represents information about how the taskbar thumbnail is displayed.</summary>
    </member>
    <member name="M:System.Windows.Shell.TaskbarItemInfo.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Shell.TaskbarItemInfo" /> class.</summary>
    </member>
    <member name="P:System.Windows.Shell.TaskbarItemInfo.Description">
      <summary>Gets or sets the text for the taskbar item tooltip.</summary>
      <returns>The text for the taskbar item tooltip. The default is an empty string.</returns>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemInfo.DescriptionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shell.TaskbarItemInfo.Description" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Shell.TaskbarItemInfo.Overlay">
      <summary>Gets or sets the image that is displayed over the program icon in the taskbar button.</summary>
      <returns>The image that is displayed over the program icon in the taskbar button. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemInfo.OverlayProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shell.TaskbarItemInfo.Overlay" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Shell.TaskbarItemInfo.ProgressState">
      <summary>Gets or sets a value that indicates how the progress indicator is displayed in the taskbar button.</summary>
      <returns>An enumeration value that indicates how the progress indicator is displayed in the taskbar button. The default is <see cref="F:System.Windows.Shell.TaskbarItemProgressState.None" />.</returns>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemInfo.ProgressStateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shell.TaskbarItemInfo.ProgressState" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Shell.TaskbarItemInfo.ProgressValue">
      <summary>Gets or sets a value that indicates the fullness of the progress indicator in the taskbar button.</summary>
      <returns>A value that indicates the fullness of the progress indicator in the taskbar button. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemInfo.ProgressValueProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shell.TaskbarItemInfo.ProgressValue" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos">
      <summary>Gets or sets the collection of <see cref="T:System.Windows.Shell.ThumbButtonInfo" /> objects that are associated with the <see cref="T:System.Windows.Window" />.</summary>
      <returns>The collection of <see cref="T:System.Windows.Shell.ThumbButtonInfo" /> objects that are associated with the <see cref="T:System.Windows.Window" />. The default is an empty collection.</returns>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfosProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin">
      <summary>Gets or sets a value that specifies the part of the application window's client area that is displayed in the taskbar thumbnail.</summary>
      <returns>A value that specifies the part of the application window's client area that is displayed in the taskbar thumbnail. The default is an empty <see cref="T:System.Windows.Thickness" />.</returns>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMarginProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Shell.TaskbarItemProgressState">
      <summary>Specifies the state of the progress indicator in the Windows taskbar.</summary>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemProgressState.Error">
      <summary>A red progress indicator is displayed in the taskbar button.</summary>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemProgressState.Indeterminate">
      <summary>A pulsing green indicator is displayed in the taskbar button.</summary>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemProgressState.None">
      <summary>No progress indicator is displayed in the taskbar button.</summary>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemProgressState.Normal">
      <summary>A green progress indicator is displayed in the taskbar button.</summary>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemProgressState.Paused">
      <summary>A yellow progress indicator is displayed in the taskbar button.</summary>
    </member>
    <member name="T:System.Windows.Shell.ThumbButtonInfo">
      <summary>Represents information about how to display a button in the Windows 7 taskbar thumbnail.</summary>
    </member>
    <member name="M:System.Windows.Shell.ThumbButtonInfo.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Shell.ThumbButtonInfo" /> class.</summary>
    </member>
    <member name="E:System.Windows.Shell.ThumbButtonInfo.Click">
      <summary>Occurs when the thumbnail button is clicked.</summary>
    </member>
    <member name="P:System.Windows.Shell.ThumbButtonInfo.Command">
      <summary>Gets or sets the command to invoke when this thumbnail button is clicked.</summary>
      <returns>The command to invoke when this thumbnail button is clicked. The default is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Shell.ThumbButtonInfo.CommandParameter">
      <summary>Gets or sets the parameter to pass to the <see cref="P:System.Windows.Shell.ThumbButtonInfo.Command" /> property.</summary>
      <returns>The parameter to pass to the <see cref="P:System.Windows.Shell.ThumbButtonInfo.Command" /> property. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Shell.ThumbButtonInfo.CommandParameterProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shell.ThumbButtonInfo.CommandParameter" /> dependency property.</summary>
    </member>
    <member name="F:System.Windows.Shell.ThumbButtonInfo.CommandProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shell.ThumbButtonInfo.Command" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Shell.ThumbButtonInfo.CommandTarget">
      <summary>Gets or sets the element on which to raise the specified command.</summary>
      <returns>The element on which to raise the specified command. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Shell.ThumbButtonInfo.CommandTargetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shell.ThumbButtonInfo.CommandTarget" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Shell.ThumbButtonInfo.Description">
      <summary>Gets or sets the text to display for the thumbnail button tooltip.</summary>
      <returns>The text to display for the thumbnail button tooltip. The default is an empty string.</returns>
    </member>
    <member name="F:System.Windows.Shell.ThumbButtonInfo.DescriptionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shell.ThumbButtonInfo.Description" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Shell.ThumbButtonInfo.DismissWhenClicked">
      <summary>Gets or sets a value that indicates whether the taskbar thumbnail closes when the thumbnail button is clicked.</summary>
      <returns>
        <see langword="true" /> if the thumbnail closes; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Shell.ThumbButtonInfo.DismissWhenClickedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shell.ThumbButtonInfo.DismissWhenClicked" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Shell.ThumbButtonInfo.ImageSource">
      <summary>Gets or sets the image that is displayed on the thumbnail button.</summary>
      <returns>The image that is displayed on the thumbnail button. The default is <see langword="null" />.</returns>
    </member>
    <member name="F:System.Windows.Shell.ThumbButtonInfo.ImageSourceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shell.ThumbButtonInfo.ImageSource" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Shell.ThumbButtonInfo.IsBackgroundVisible">
      <summary>Gets or sets a value that indicates whether a border and highlight is displayed around the thumbnail button.</summary>
      <returns>
        <see langword="true" /> if a border and highlight is displayed around the thumbnail button; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="F:System.Windows.Shell.ThumbButtonInfo.IsBackgroundVisibleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shell.ThumbButtonInfo.IsBackgroundVisible" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Shell.ThumbButtonInfo.IsEnabled">
      <summary>Gets or sets a value that indicates whether the thumbnail button is enabled.</summary>
      <returns>
        <see langword="true" /> if the thumbnail button is enabled; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="F:System.Windows.Shell.ThumbButtonInfo.IsEnabledProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shell.ThumbButtonInfo.IsEnabled" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Shell.ThumbButtonInfo.IsInteractive">
      <summary>Gets or sets a value that indicates whether the user can interact with the thumbnail button.</summary>
      <returns>
        <see langword="true" /> if the user can interact with the thumbnail button; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="F:System.Windows.Shell.ThumbButtonInfo.IsInteractiveProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shell.ThumbButtonInfo.IsInteractive" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Shell.ThumbButtonInfo.Visibility">
      <summary>Gets or sets a value that specifies the display state of the thumbnail button.</summary>
      <returns>An enumeration value that specifies the display state of the thumbnail button. The default is <see cref="F:System.Windows.Visibility.Visible" />.</returns>
    </member>
    <member name="F:System.Windows.Shell.ThumbButtonInfo.VisibilityProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shell.ThumbButtonInfo.Visibility" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Shell.ThumbButtonInfoCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Shell.ThumbButtonInfo" /> objects that are associated with a <see cref="T:System.Windows.Window" />.</summary>
    </member>
    <member name="M:System.Windows.Shell.ThumbButtonInfoCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Shell.ThumbButtonInfoCollection" /> class.</summary>
    </member>
    <member name="M:System.Windows.Shell.ThumbButtonInfoCollection.CreateInstanceCore">
      <summary>Creates a new instance of the collection.</summary>
      <returns>The new instance of the collection.</returns>
    </member>
    <member name="T:System.Windows.Shell.WindowChrome">
      <summary>Represents an object that describes the customizations to the non-client area of a window.</summary>
    </member>
    <member name="M:System.Windows.Shell.WindowChrome.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Shell.WindowChrome" /> class.</summary>
    </member>
    <member name="P:System.Windows.Shell.WindowChrome.CaptionHeight">
      <summary>Gets or sets the height of the caption area at the top of a window.</summary>
      <returns>The height of the caption area.</returns>
    </member>
    <member name="F:System.Windows.Shell.WindowChrome.CaptionHeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shell.WindowChrome.CaptionHeight" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Shell.WindowChrome.CornerRadius">
      <summary>Gets or sets a value that indicates the amount that the corners of a window are rounded.</summary>
      <returns>A value that describes the amount that corners are rounded.</returns>
    </member>
    <member name="F:System.Windows.Shell.WindowChrome.CornerRadiusProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shell.WindowChrome.CornerRadius" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Shell.WindowChrome.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Shell.WindowChrome" /> class.</summary>
      <returns>The new instance of this class.</returns>
    </member>
    <member name="M:System.Windows.Shell.WindowChrome.GetIsHitTestVisibleInChrome(System.Windows.IInputElement)">
      <summary>Gets the value of the <see cref="System.Windows.Shell.WindowChrome.IsHitTestVisibleInChrome" /> attached property from the specified input element.</summary>
      <param name="inputElement">The input element from which to read the property value.</param>
      <returns>The value of the <see cref="System.Windows.Shell.WindowChrome.IsHitTestVisibleInChrome" /> attached property.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inputElement" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="inputElement" /> is not a <see cref="T:System.Windows.DependencyObject" />.</exception>
    </member>
    <member name="M:System.Windows.Shell.WindowChrome.GetResizeGripDirection(System.Windows.IInputElement)">
      <summary>Gets the value of the <see cref="System.Windows.Shell.WindowChrome.ResizeGripDirection" /> attached property from the specified input element.</summary>
      <param name="inputElement">The input element from which to read the property value.</param>
      <returns>The value of the <see cref="System.Windows.Shell.WindowChrome.ResizeGripDirection" /> attached property.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inputElement" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="inputElement" /> is not a <see cref="T:System.Windows.DependencyObject" />.</exception>
    </member>
    <member name="M:System.Windows.Shell.WindowChrome.GetWindowChrome(System.Windows.Window)">
      <summary>Gets the value of the <see cref="P:System.Windows.Shell.WindowChrome.WindowChrome" /> attached property from the specified <see cref="T:System.Windows.Window" />.</summary>
      <param name="window">The <see cref="T:System.Windows.Window" /> from which to read the property value.</param>
      <returns>The instance of <see cref="T:System.Windows.Shell.WindowChrome" /> that is attached to the specified <see cref="T:System.Windows.Window" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="window" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Shell.WindowChrome.GlassFrameCompleteThickness">
      <summary>Gets a uniform thickness of -1.</summary>
      <returns>A uniform thickness of -1 in all cases.</returns>
    </member>
    <member name="P:System.Windows.Shell.WindowChrome.GlassFrameThickness">
      <summary>Gets or sets a value that indicates the width of the glass border around a window.</summary>
      <returns>The width of the glass border around a window.</returns>
    </member>
    <member name="F:System.Windows.Shell.WindowChrome.GlassFrameThicknessProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shell.WindowChrome.GlassFrameThickness" /> dependency property.</summary>
    </member>
    <member name="F:System.Windows.Shell.WindowChrome.IsHitTestVisibleInChromeProperty">
      <summary>Identifies the <see cref="System.Windows.Shell.WindowChrome.IsHitTestVisibleInChrome" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Shell.WindowChrome.NonClientFrameEdges">
      <summary>Gets or sets a value that indicates which edges of the window frame are not owned by the client.</summary>
      <returns>A bitwise combination of the enumeration values that specify which edges of the frame are not owned by the client.  
 The registered default is <see cref="F:System.Windows.Shell.NonClientFrameEdges.None" />. For more information about what can influence the value, see Dependency Property Value Precedence.</returns>
      <exception cref="T:System.ArgumentException">'Left, Right, Top, Bottom' is not a valid value. At least one edge must belong to the client.</exception>
    </member>
    <member name="F:System.Windows.Shell.WindowChrome.NonClientFrameEdgesProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shell.WindowChrome.NonClientFrameEdges" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Shell.WindowChrome.ResizeBorderThickness">
      <summary>Gets or sets a value that indicates the width of the border that is used to resize a window.</summary>
      <returns>The width of the border that is used to resize a window.</returns>
    </member>
    <member name="F:System.Windows.Shell.WindowChrome.ResizeBorderThicknessProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shell.WindowChrome.ResizeBorderThickness" /> dependency property.</summary>
    </member>
    <member name="F:System.Windows.Shell.WindowChrome.ResizeGripDirectionProperty">
      <summary>Identifies the <see cref="System.Windows.Shell.WindowChrome.ResizeGripDirection" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Shell.WindowChrome.SetIsHitTestVisibleInChrome(System.Windows.IInputElement,System.Boolean)">
      <summary>Sets the value of the <see cref="System.Windows.Shell.WindowChrome.IsHitTestVisibleInChrome" /> attached property on the specified input element.</summary>
      <param name="inputElement">The element on which to set the <see cref="System.Windows.Shell.WindowChrome.IsHitTestVisibleInChrome" /> attached property.</param>
      <param name="hitTestVisible">The property value to set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inputElement" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="inputElement" /> is not a <see cref="T:System.Windows.DependencyObject" />.</exception>
    </member>
    <member name="M:System.Windows.Shell.WindowChrome.SetResizeGripDirection(System.Windows.IInputElement,System.Windows.Shell.ResizeGripDirection)">
      <summary>Sets the value of the <see cref="System.Windows.Shell.WindowChrome.ResizeGripDirection" /> attached property on the specified input element.</summary>
      <param name="inputElement">The element on which to set the <see cref="System.Windows.Shell.WindowChrome.ResizeGripDirection" /> attached property.</param>
      <param name="direction">The property value to set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inputElement" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="inputElement" /> is not a <see cref="T:System.Windows.DependencyObject" />.</exception>
    </member>
    <member name="M:System.Windows.Shell.WindowChrome.SetWindowChrome(System.Windows.Window,System.Windows.Shell.WindowChrome)">
      <summary>Sets the value of the <see cref="P:System.Windows.Shell.WindowChrome.WindowChrome" /> attached property on the specified <see cref="T:System.Windows.Window" />.</summary>
      <param name="window">The <see cref="T:System.Windows.Window" /> on which to set the <see cref="P:System.Windows.Shell.WindowChrome.WindowChrome" /> attached property.</param>
      <param name="chrome">The instance of <see cref="T:System.Windows.Shell.WindowChrome" /> to set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="window" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Shell.WindowChrome.UseAeroCaptionButtons">
      <summary>Gets or sets a value that indicates whether hit-testing is enabled on the Windows Aero caption buttons.</summary>
      <returns>
        <see langword="true" /> if hit-testing is enabled on the caption buttons; otherwise, <see langword="false" />. The registered default is <see langword="true" />. For more information about what can influence the value, see Dependency Property Value Precedence.</returns>
    </member>
    <member name="F:System.Windows.Shell.WindowChrome.UseAeroCaptionButtonsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shell.WindowChrome.UseAeroCaptionButtons" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Shell.WindowChrome.WindowChrome">
      <summary>Gets or sets the instance of <see cref="T:System.Windows.Shell.WindowChrome" /> that is attached to a window.</summary>
    </member>
    <member name="F:System.Windows.Shell.WindowChrome.WindowChromeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shell.WindowChrome.WindowChrome" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.ShutdownMode">
      <summary>Specifies how an application will shutdown. Used by the <see cref="P:System.Windows.Application.ShutdownMode" /> property.</summary>
    </member>
    <member name="F:System.Windows.ShutdownMode.OnExplicitShutdown">
      <summary>An application shuts down only when <see cref="M:System.Windows.Application.Shutdown" /> is called.</summary>
    </member>
    <member name="F:System.Windows.ShutdownMode.OnLastWindowClose">
      <summary>An application shuts down when either the last window closes, or <see cref="M:System.Windows.Application.Shutdown" /> is called.</summary>
    </member>
    <member name="F:System.Windows.ShutdownMode.OnMainWindowClose">
      <summary>An application shuts down when either the main window closes, or <see cref="M:System.Windows.Application.Shutdown" /> is called.</summary>
    </member>
    <member name="T:System.Windows.SizeChangedEventArgs">
      <summary>Provides data related to the <see cref="E:System.Windows.FrameworkElement.SizeChanged" /> event.</summary>
    </member>
    <member name="P:System.Windows.SizeChangedEventArgs.HeightChanged">
      <summary>Gets a value that indicates whether the <see cref="P:System.Windows.FrameworkElement.Height" /> component of the size changed.</summary>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.FrameworkElement.Height" /> component of the size changed; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.SizeChangedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>Invokes event handlers in a type-specific way, which can increase event system efficiency.</summary>
      <param name="genericHandler">The generic handler to call in a type-specific way.</param>
      <param name="genericTarget">The target to call the handler on.</param>
    </member>
    <member name="P:System.Windows.SizeChangedEventArgs.NewSize">
      <summary>Gets the new <see cref="T:System.Windows.Size" /> of the object.</summary>
      <returns>The new <see cref="T:System.Windows.Size" /> of the object.</returns>
    </member>
    <member name="P:System.Windows.SizeChangedEventArgs.PreviousSize">
      <summary>Gets the previous <see cref="T:System.Windows.Size" /> of the object.</summary>
      <returns>The previous <see cref="T:System.Windows.Size" /> of the object.</returns>
    </member>
    <member name="P:System.Windows.SizeChangedEventArgs.WidthChanged">
      <summary>Gets a value that indicates whether the <see cref="P:System.Windows.FrameworkElement.Width" /> component of the size changed.</summary>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Windows.FrameworkElement.Width" /> component of the size changed; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.SizeChangedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.FrameworkElement.SizeChanged" /> routed event.</summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.StartupEventArgs">
      <summary>Contains the arguments for the <see cref="E:System.Windows.Application.Startup" /> event.</summary>
    </member>
    <member name="P:System.Windows.StartupEventArgs.Args">
      <summary>Gets command line arguments that were passed to the application from either the command prompt or the desktop.</summary>
      <returns>A string array that contains the command line arguments that were passed to the application from either the command prompt or the desktop. If no command line arguments were passed, the string array as zero items.</returns>
    </member>
    <member name="T:System.Windows.StartupEventHandler">
      <summary>Represents the method that handles the <see cref="E:System.Windows.Application.Startup" /> event.</summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.StaticResourceExtension">
      <summary>Implements a markup extension that supports static (XAML load time) resource references made from XAML.</summary>
    </member>
    <member name="M:System.Windows.StaticResourceExtension.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.StaticResourceExtension" /> class.</summary>
    </member>
    <member name="M:System.Windows.StaticResourceExtension.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.StaticResourceExtension" /> class, with the provided initial key.</summary>
      <param name="resourceKey">The key of the resource that this markup extension references.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resourceKey" /> parameter is <see langword="null" />, either through markup extension usage or explicit construction.</exception>
    </member>
    <member name="M:System.Windows.StaticResourceExtension.ProvideValue(System.IServiceProvider)">
      <summary>Returns an object that should be set on the property where this extension is applied. For <see cref="T:System.Windows.StaticResourceExtension" />, this is the object found in a resource dictionary, where the object to find is identified by the <see cref="P:System.Windows.StaticResourceExtension.ResourceKey" />.</summary>
      <param name="serviceProvider">Object that can provide services for the markup extension.</param>
      <returns>The object value to set on the property where the markup extension provided value is evaluated.</returns>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="serviceProvider" /> was <see langword="null" />, or failed to implement a required service.</exception>
    </member>
    <member name="P:System.Windows.StaticResourceExtension.ResourceKey">
      <summary>Gets or sets the key value passed by this static resource reference. They key is used  to return the object matching that key in resource dictionaries.</summary>
      <returns>The resource key for a resource.</returns>
      <exception cref="T:System.ArgumentNullException">Specified value as <see langword="null" />, either through markup extension usage or explicit construction.</exception>
    </member>
    <member name="T:System.Windows.Style">
      <summary>Enables the sharing of properties, resources, and event handlers between instances of a type.</summary>
    </member>
    <member name="M:System.Windows.Style.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Style" /> class.</summary>
    </member>
    <member name="M:System.Windows.Style.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Style" /> class to use on the specified <see cref="T:System.Type" />.</summary>
      <param name="targetType">The type to which the style will apply.</param>
    </member>
    <member name="M:System.Windows.Style.#ctor(System.Type,System.Windows.Style)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Style" /> class to use on the specified <see cref="T:System.Type" /> and based on the specified <see cref="T:System.Windows.Style" />.</summary>
      <param name="targetType">The type to which the style will apply.</param>
      <param name="basedOn">The style to base this style on.</param>
    </member>
    <member name="P:System.Windows.Style.BasedOn">
      <summary>Gets or sets a defined style that is the basis of the current style.</summary>
      <returns>A defined style that is the basis of the current style. The default value is <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Style.GetHashCode">
      <summary>Returns the hash code for this <see cref="T:System.Windows.Style" />.</summary>
      <returns>The hash code for this <see cref="T:System.Windows.Style" />.</returns>
    </member>
    <member name="P:System.Windows.Style.IsSealed">
      <summary>Gets a value that indicates whether the style is read-only and cannot be changed.</summary>
      <returns>
        <see langword="true" /> if the style is sealed; otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Style.RegisterName(System.String,System.Object)">
      <summary>Registers a new name-object pair in the current namescope.</summary>
      <param name="name">The name to register.</param>
      <param name="scopedElement">The object to map to the specified <paramref name="name" />.</param>
    </member>
    <member name="P:System.Windows.Style.Resources">
      <summary>Gets or sets the collection of resources that can be used within the scope of this style.</summary>
      <returns>The resources that can be used within the scope of this style.</returns>
    </member>
    <member name="M:System.Windows.Style.Seal">
      <summary>Locks this style and all factories and triggers so they cannot be changed.</summary>
    </member>
    <member name="P:System.Windows.Style.Setters">
      <summary>Gets a collection of <see cref="T:System.Windows.Setter" /> and <see cref="T:System.Windows.EventSetter" /> objects.</summary>
      <returns>A collection of <see cref="T:System.Windows.Setter" /> and <see cref="T:System.Windows.EventSetter" /> objects. The default is an empty collection.</returns>
    </member>
    <member name="M:System.Windows.Style.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>Adds a child object.</summary>
      <param name="value">The child object to add.</param>
    </member>
    <member name="M:System.Windows.Style.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>Adds the text content of a node to the object.</summary>
      <param name="text">The text to add to the object.</param>
    </member>
    <member name="M:System.Windows.Style.System#Windows#Markup#INameScope#FindName(System.String)">
      <summary>Returns an object that has the provided identifying name.</summary>
      <param name="name">The name identifier for the object being requested.</param>
      <returns>The object, if found. Returns <see langword="null" /> if no object of that name was found.</returns>
    </member>
    <member name="M:System.Windows.Style.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)">
      <summary>Queries whether a specified ambient property is available in the current scope.</summary>
      <param name="propertyName">The name of the requested ambient property.</param>
      <returns>
        <see langword="true" /> if the requested ambient property is available; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Style.TargetType">
      <summary>Gets or sets the type for which this style is intended.</summary>
      <returns>The target type for this style.</returns>
    </member>
    <member name="P:System.Windows.Style.Triggers">
      <summary>Gets a collection of <see cref="T:System.Windows.TriggerBase" /> objects that apply property values based on specified conditions.</summary>
      <returns>A collection of <see cref="T:System.Windows.TriggerBase" /> objects. The default is an empty collection.</returns>
    </member>
    <member name="M:System.Windows.Style.UnregisterName(System.String)">
      <summary>Removes a name-object mapping from the namescope.</summary>
      <param name="name">The name of the mapping to remove.</param>
    </member>
    <member name="T:System.Windows.StyleTypedPropertyAttribute">
      <summary>Represents an attribute that is applied to the class definition and determines the <see cref="P:System.Windows.Style.TargetType" />s of the properties that are of type <see cref="T:System.Windows.Style" />.</summary>
    </member>
    <member name="M:System.Windows.StyleTypedPropertyAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.StyleTypedPropertyAttribute" /> class.</summary>
    </member>
    <member name="P:System.Windows.StyleTypedPropertyAttribute.Property">
      <summary>Gets or sets the name of the property that is of type <see cref="T:System.Windows.Style" />.</summary>
      <returns>The name of the property that is of type <see cref="T:System.Windows.Style" />.</returns>
    </member>
    <member name="P:System.Windows.StyleTypedPropertyAttribute.StyleTargetType">
      <summary>Gets or sets the <see cref="P:System.Windows.Style.TargetType" /> of the <see cref="P:System.Windows.StyleTypedPropertyAttribute.Property" /> this attribute is specifying.</summary>
      <returns>The <see cref="P:System.Windows.Style.TargetType" /> of the <see cref="P:System.Windows.StyleTypedPropertyAttribute.Property" /> this attribute is specifying.</returns>
    </member>
    <member name="T:System.Windows.SystemColors">
      <summary>Contains system colors, system brushes, and system resource keys that correspond to system display elements.</summary>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveBorderBrush">
      <summary>Gets a <see cref="T:System.Windows.Media.SolidColorBrush" /> that is the color of the active window's border.</summary>
      <returns>A <see cref="T:System.Windows.Media.SolidColorBrush" /> with its <see cref="P:System.Windows.Media.SolidColorBrush.Color" /> set to the color of the active window's border. The returned brush's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />, so it cannot be modified.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveBorderBrushKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:System.Windows.Media.SolidColorBrush" /> used to paint the active window's border.</summary>
      <returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush" /> used to paint the active window's border. This brush's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />, so it cannot be modified.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveBorderColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the color of the active window's border.</summary>
      <returns>The color of the active window's border.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveBorderColorKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:System.Windows.Media.Color" /> of the active window's border.</summary>
      <returns>The resource key for the <see cref="T:System.Windows.Media.Color" /> of the active window's border.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveCaptionBrush">
      <summary>Gets a <see cref="T:System.Windows.Media.SolidColorBrush" /> that is the color of the background of the active window's title bar.</summary>
      <returns>A <see cref="T:System.Windows.Media.SolidColorBrush" /> with its <see cref="P:System.Windows.Media.SolidColorBrush.Color" /> set to the background color of the active window's title bar. The returned brush's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />, so it cannot be modified.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveCaptionBrushKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:System.Windows.Media.SolidColorBrush" /> used to paint the background of the active window's title bar.</summary>
      <returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush" /> used to paint the background of the active window's title bar. This brush's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />, so it cannot be modified.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveCaptionColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the background color of the active window's title bar.</summary>
      <returns>The background color of the active window's title bar.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveCaptionColorKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the background <see cref="T:System.Windows.Media.Color" /> of the active window's title bar.</summary>
      <returns>The resource key for the background <see cref="T:System.Windows.Media.Color" /> of the active window's title bar.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveCaptionTextBrush">
      <summary>Gets a <see cref="T:System.Windows.Media.SolidColorBrush" /> that is the color of the text in the active window's title bar.</summary>
      <returns>A <see cref="T:System.Windows.Media.SolidColorBrush" /> with its <see cref="P:System.Windows.Media.SolidColorBrush.Color" /> set to the background color of the color of the text in the active window's title bar. The returned brush's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />, so it cannot be modified.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveCaptionTextBrushKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints the text in the active window's title bar.</summary>
      <returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints the text in the active window's title bar. This brush's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />, so it cannot be modified.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveCaptionTextColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the color of the text in the active window's title bar.</summary>
      <returns>The color of the active window's title bar.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveCaptionTextColorKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:System.Windows.Media.Color" /> of the text in the active window's title bar.</summary>
      <returns>The resource key for the <see cref="T:System.Windows.Media.Color" /> of the text in the active window's title bar.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.AppWorkspaceBrush">
      <summary>Gets a <see cref="T:System.Windows.Media.SolidColorBrush" /> that is the color of the application workspace.</summary>
      <returns>A <see cref="T:System.Windows.Media.SolidColorBrush" /> with its <see cref="P:System.Windows.Media.SolidColorBrush.Color" /> set to the color of the application workspace. The returned brush's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />, so it cannot be modified.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.AppWorkspaceBrushKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints the application workspace.</summary>
      <returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints the application workspace. This brush's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />, so it cannot be modified.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.AppWorkspaceColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the color of the application workspace.</summary>
      <returns>The color of the application workspace.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.AppWorkspaceColorKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:System.Windows.Media.Color" /> of the application workspace.</summary>
      <returns>The resource key for the <see cref="T:System.Windows.Media.Color" /> of the application workspace.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlBrush">
      <summary>Gets a <see cref="T:System.Windows.Media.SolidColorBrush" /> that is the face color of a three-dimensional display element.</summary>
      <returns>A <see cref="T:System.Windows.Media.SolidColorBrush" /> with its <see cref="P:System.Windows.Media.SolidColorBrush.Color" /> set to the face color of a three-dimensional display element. The returned brush's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />, so it cannot be modified.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlBrushKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints the face of a three-dimensional display element.</summary>
      <returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints the face of a three-dimensional display element. This brush's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />, so it cannot be modified.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the face color of a three-dimensional display element.</summary>
      <returns>The face color of a three-dimensional display element.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlColorKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the face <see cref="T:System.Windows.Media.Color" /> of a three-dimensional display element.</summary>
      <returns>The resource key for the face <see cref="T:System.Windows.Media.Color" /> of a three-dimensional display element.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlDarkBrush">
      <summary>Gets a <see cref="T:System.Windows.Media.SolidColorBrush" /> that is the shadow color of a three-dimensional display element.</summary>
      <returns>A <see cref="T:System.Windows.Media.SolidColorBrush" /> with its <see cref="P:System.Windows.Media.SolidColorBrush.Color" /> set to the shadow color of a three-dimensional display element. The returned brush's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />, so it cannot be modified.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlDarkBrushKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints the shadow of a three-dimensional display element.</summary>
      <returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints the shadow of a three-dimensional display element. This brush's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />, so it cannot be modified.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlDarkColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the shadow color of a three-dimensional display element.</summary>
      <returns>The shadow color of a three-dimensional display element.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlDarkColorKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the shadow <see cref="T:System.Windows.Media.Color" /> of a three-dimensional display element.</summary>
      <returns>The resource key for the shadow <see cref="T:System.Windows.Media.Color" /> of a three-dimensional display element.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlDarkDarkBrush">
      <summary>Gets a <see cref="T:System.Windows.Media.SolidColorBrush" /> that is the dark shadow color of a three-dimensional display element.</summary>
      <returns>A <see cref="T:System.Windows.Media.SolidColorBrush" /> with its <see cref="P:System.Windows.Media.SolidColorBrush.Color" /> set to the dark shadow color of a three-dimensional display element. The returned brush's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />, so it cannot be modified.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlDarkDarkBrushKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints the dark shadow of a three-dimensional display element.</summary>
      <returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints the dark shadow of a three-dimensional display element. This brush's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />, so it cannot be modified.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlDarkDarkColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the dark shadow color of a three-dimensional display element.</summary>
      <returns>The dark shadow color of a three-dimensional display element.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlDarkDarkColorKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the dark shadow <see cref="T:System.Windows.Media.Color" /> of the highlight color of a three-dimensional display element.</summary>
      <returns>The resource key for the dark shadow <see cref="T:System.Windows.Media.Color" /> of a three-dimensional display element.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlLightBrush">
      <summary>Gets a <see cref="T:System.Windows.Media.SolidColorBrush" /> that is the light color of a three-dimensional display element.</summary>
      <returns>A <see cref="T:System.Windows.Media.SolidColorBrush" /> with its <see cref="P:System.Windows.Media.SolidColorBrush.Color" /> set to the light color of a three-dimensional display element. The returned brush's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />, so it cannot be modified.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlLightBrushKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints the light area of a three-dimensional display element.</summary>
      <returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints the light area of a three-dimensional display element. This brush's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />, so it cannot be modified.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlLightColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the light color of a three-dimensional display element.</summary>
      <returns>The light color of a three-dimensional display element.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlLightColorKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the highlight <see cref="T:System.Windows.Media.Color" /> of a three-dimensional display element.</summary>
      <returns>The resource key for the highlight <see cref="T:System.Windows.Media.Color" /> of a three-dimensional display element.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlLightLightBrush">
      <summary>Gets a <see cref="T:System.Windows.Media.SolidColorBrush" /> that is the highlight color of a three-dimensional display element.</summary>
      <returns>The highlight color of a three-dimensional display element.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlLightLightBrushKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints the highlight of a three-dimensional display element.</summary>
      <returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints the highlight of a three-dimensional display element. This brush's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />, so it cannot be modified.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlLightLightColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the highlight color of a three-dimensional display element.</summary>
      <returns>The highlight color of a three-dimensional display element.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlLightLightColorKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the highlight <see cref="T:System.Windows.Media.Color" /> of a three-dimensional display element.</summary>
      <returns>The resource key for the highlight <see cref="T:System.Windows.Media.Color" /> of a three-dimensional display element.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlTextBrush">
      <summary>Gets a <see cref="T:System.Windows.Media.SolidColorBrush" /> that is the color of text in a three-dimensional display element.</summary>
      <returns>The color of text in a three-dimensional display element.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlTextBrushKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints text in a three-dimensional display element.</summary>
      <returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints text in a three-dimensional display element. This brush's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />, so it cannot be modified.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlTextColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the color of text in a three-dimensional display element.</summary>
      <returns>The color of text in a three-dimensional display element.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlTextColorKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:System.Windows.Media.Color" /> of text in a three-dimensional display element.</summary>
      <returns>The resource key for the <see cref="T:System.Windows.Media.Color" /> of text in a three-dimensional display element.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.DesktopBrush">
      <summary>Gets a <see cref="T:System.Windows.Media.SolidColorBrush" /> that is the color of the desktop.</summary>
      <returns>The color of the desktop.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.DesktopBrushKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints the desktop.</summary>
      <returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints the desktop. This brush's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />, so it cannot be modified.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.DesktopColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the color of the desktop.</summary>
      <returns>The color of the desktop.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.DesktopColorKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:System.Windows.Media.Color" /> of the desktop.</summary>
      <returns>The resource key for the <see cref="T:System.Windows.Media.Color" /> of the desktop.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.GradientActiveCaptionBrush">
      <summary>Gets a <see cref="T:System.Windows.Media.SolidColorBrush" /> that is the right side color in the gradient of an active window's title bar.</summary>
      <returns>The right side color in the gradient.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.GradientActiveCaptionBrushKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that is the color of the right side of the gradient of an active window's title bar.</summary>
      <returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that is the color of the right side of the gradient of an active window's title bar. This brush's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />, so it cannot be modified.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.GradientActiveCaptionColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the right side color in the gradient of an active window's title bar.</summary>
      <returns>The right side color in the gradient.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.GradientActiveCaptionColorKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the right-side <see cref="T:System.Windows.Media.Color" /> in the gradient of an active window's title bar.</summary>
      <returns>The resource key for the right-side <see cref="T:System.Windows.Media.Color" /> in the gradient of an active window's title bar.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.GradientInactiveCaptionBrush">
      <summary>Gets a <see cref="T:System.Windows.Media.SolidColorBrush" /> that is the right side color in the gradient of an inactive window's title bar.</summary>
      <returns>The right side color in the gradient.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.GradientInactiveCaptionBrushKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that is the color of the right side of the gradient of an inactive window's title bar.</summary>
      <returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush" /> used to paint the background of the inactive window's title bar. This brush's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />, so it cannot be modified.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.GradientInactiveCaptionColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the right side color in the gradient of an inactive window's title bar.</summary>
      <returns>The right side color in the gradient.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.GradientInactiveCaptionColorKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the right-side <see cref="T:System.Windows.Media.Color" /> in the gradient of an inactive window's title bar.</summary>
      <returns>The resource key for the right-side <see cref="T:System.Windows.Media.Color" /> in the gradient of an inactive window's title bar.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.GrayTextBrush">
      <summary>Gets a <see cref="T:System.Windows.Media.SolidColorBrush" /> that is the color of disabled text.</summary>
      <returns>The color of disabled text.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.GrayTextBrushKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints disabled text.</summary>
      <returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints disabled text. This brush's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />, so it cannot be modified.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.GrayTextColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the color of disabled text.</summary>
      <returns>The color of disabled text.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.GrayTextColorKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:System.Windows.Media.Color" /> of disabled text.</summary>
      <returns>The resource key for the <see cref="T:System.Windows.Media.Color" /> of disabled text.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HighlightBrush">
      <summary>Gets a <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints the background of selected items.</summary>
      <returns>The background color of selected items.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HighlightBrushKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints the background of selected items.</summary>
      <returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints the background of selected items. This brush's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />, so it cannot be modified.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HighlightColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the background color of selected items.</summary>
      <returns>The background color of selected items.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HighlightColorKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the background <see cref="T:System.Windows.Media.Color" /> of selected items.</summary>
      <returns>The resource key for the background <see cref="T:System.Windows.Media.Color" /> of selected items.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HighlightTextBrush">
      <summary>Gets a <see cref="T:System.Windows.Media.SolidColorBrush" /> that is the color of the text of selected items.</summary>
      <returns>The color of the text of selected items.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HighlightTextBrushKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints the text of selected items.</summary>
      <returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints the text of selected items. This brush's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />, so it cannot be modified.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HighlightTextColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the color of the text of selected items.</summary>
      <returns>The color of the text of selected items.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HighlightTextColorKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:System.Windows.Media.Color" /> of a selected item's text.</summary>
      <returns>The resource key for the <see cref="T:System.Windows.Media.Color" /> of a selected item's text.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HotTrackBrush">
      <summary>Gets a <see cref="T:System.Windows.Media.SolidColorBrush" /> that is the color used to designate a hot-tracked item.</summary>
      <returns>The color used to designate a hot-tracked item.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HotTrackBrushKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints hot-tracked items.</summary>
      <returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints hot-tracked items. This brush's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />, so it cannot be modified.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HotTrackColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the color used to designate a hot-tracked item.</summary>
      <returns>The color used to designate a hot-tracked item.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HotTrackColorKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:System.Windows.Media.Color" /> that designates a hot-tracked item.</summary>
      <returns>The resource key for the <see cref="T:System.Windows.Media.Color" /> that designates a hot-tracked item.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveBorderBrush">
      <summary>Gets a <see cref="T:System.Windows.Media.SolidColorBrush" /> that is the color of an inactive window's border.</summary>
      <returns>The color of an inactive window's border.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveBorderBrushKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints the border of an inactive window.</summary>
      <returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints the border of an inactive window. This brush's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />, so it cannot be modified.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveBorderColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the color of an inactive window's border.</summary>
      <returns>The color of an inactive window's border.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveBorderColorKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:System.Windows.Media.Color" /> of an inactive window's border.</summary>
      <returns>The resource key for the <see cref="T:System.Windows.Media.Color" /> of an inactive window's border.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveCaptionBrush">
      <summary>Gets a <see cref="T:System.Windows.Media.SolidColorBrush" /> that is the background color of an inactive window's title bar.</summary>
      <returns>The background color of an inactive window's title bar.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveCaptionBrushKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints the background of an inactive window's title bar.</summary>
      <returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints the background of an inactive window's title bar. This brush's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />, so it cannot be modified.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveCaptionColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the background color of an inactive window's title bar.</summary>
      <returns>The background color of an inactive window's title bar.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveCaptionColorKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the background <see cref="T:System.Windows.Media.Color" /> of an inactive window's title bar.</summary>
      <returns>The resource key for the background <see cref="T:System.Windows.Media.Color" /> of an inactive window's title bar.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveCaptionTextBrush">
      <summary>Gets a <see cref="T:System.Windows.Media.SolidColorBrush" /> that is the color of the text of an inactive window's title bar.</summary>
      <returns>The color of the text of an inactive window's title bar.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveCaptionTextBrushKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints the text of an inactive window's title bar.</summary>
      <returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints the text of an inactive window's title bar. This brush's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />, so it cannot be modified.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveCaptionTextColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the color of the text of an inactive window's title bar.</summary>
      <returns>The color of the text of an inactive window's title bar.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveCaptionTextColorKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:System.Windows.Media.Color" /> of the text of an inactive window's title bar.</summary>
      <returns>The resource key for the <see cref="T:System.Windows.Media.Color" /> of the text of an inactive window's title bar.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveSelectionHighlightBrush">
      <summary>Gets a <see cref="T:System.Windows.Media.SolidColorBrush" /> that is the color used to highlight a selected item that is inactive.</summary>
      <returns>The color used to highlight an inactive selected item.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveSelectionHighlightBrushKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints the background of an inactive selected item.</summary>
      <returns>The <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints the background of an inactive selected item. This brush's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />, so it cannot be modified.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveSelectionHighlightTextBrush">
      <summary>Gets a <see cref="T:System.Windows.Media.SolidColorBrush" /> that is the color of an inactive selected item's text.</summary>
      <returns>The color of an inactive selected item's text.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveSelectionHighlightTextBrushKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints a an inactive selected item's text.</summary>
      <returns>The <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints a an inactive selected item's text. This brush's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />, so it cannot be modified.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InfoBrush">
      <summary>Gets a <see cref="T:System.Windows.Media.SolidColorBrush" /> that is the background color for the <see cref="T:System.Windows.Controls.ToolTip" /> control.</summary>
      <returns>The background color for the <see cref="T:System.Windows.Controls.ToolTip" /> control.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InfoBrushKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints the background of the <see cref="T:System.Windows.Controls.ToolTip" /> control.</summary>
      <returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints the background of the <see cref="T:System.Windows.Controls.ToolTip" /> control. This brush's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />, so it cannot be modified.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InfoColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the background color for the <see cref="T:System.Windows.Controls.ToolTip" /> control.</summary>
      <returns>The background color for the <see cref="T:System.Windows.Controls.ToolTip" /> control.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InfoColorKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the background <see cref="T:System.Windows.Media.Color" /> of the <see cref="T:System.Windows.Controls.ToolTip" /> control.</summary>
      <returns>The resource key for the background <see cref="T:System.Windows.Media.Color" /> of the <see cref="T:System.Windows.Controls.ToolTip" /> control.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InfoTextBrush">
      <summary>Gets a <see cref="T:System.Windows.Media.SolidColorBrush" /> that is the text color for the <see cref="T:System.Windows.Controls.ToolTip" /> control.</summary>
      <returns>The text color for the <see cref="T:System.Windows.Controls.ToolTip" /> control.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InfoTextBrushKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints the text in a <see cref="T:System.Windows.Controls.ToolTip" /> control.</summary>
      <returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints the text in a <see cref="T:System.Windows.Controls.ToolTip" /> control. This brush's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />, so it cannot be modified.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InfoTextColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the text color for the <see cref="T:System.Windows.Controls.ToolTip" /> control.</summary>
      <returns>The text color for the <see cref="T:System.Windows.Controls.ToolTip" /> control.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InfoTextColorKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:System.Windows.Media.Color" /> of the text in a <see cref="T:System.Windows.Controls.ToolTip" /> control.</summary>
      <returns>The resource key for the <see cref="T:System.Windows.Media.Color" /> of the text in a <see cref="T:System.Windows.Controls.ToolTip" /> control.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuBarBrush">
      <summary>Gets a <see cref="T:System.Windows.Media.SolidColorBrush" /> that is the background color for a menu bar.</summary>
      <returns>The background color for a menu bar.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuBarBrushKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints the background of a menu bar.</summary>
      <returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints the background of a menu bar. This brush's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />, so it cannot be modified.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuBarColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the background color for a menu bar.</summary>
      <returns>The background color for a menu bar.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuBarColorKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the background <see cref="T:System.Windows.Media.Color" /> of a menu bar.</summary>
      <returns>The resource key for the background <see cref="T:System.Windows.Media.Color" /> of a menu bar.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuBrush">
      <summary>Gets a <see cref="T:System.Windows.Media.SolidColorBrush" /> that is the color of a menu's background.</summary>
      <returns>The color of a menu's background.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuBrushKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints the background of a menu.</summary>
      <returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints the background of a menu. This brush's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />, so it cannot be modified.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the color of a menu's background.</summary>
      <returns>The color of a menu's background.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuColorKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the background <see cref="T:System.Windows.Media.Color" /> of a menu.</summary>
      <returns>The resource key for the background <see cref="T:System.Windows.Media.Color" /> of a menu.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuHighlightBrush">
      <summary>Gets a <see cref="T:System.Windows.Media.SolidColorBrush" /> that is the color used to highlight a menu item.</summary>
      <returns>The color used to highlight a menu item.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuHighlightBrushKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints a highlighted menu item.</summary>
      <returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints a highlighted menu item. This brush's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />, so it cannot be modified.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuHighlightColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the color used to highlight a menu item.</summary>
      <returns>The color used to highlight a menu item.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuHighlightColorKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the background <see cref="T:System.Windows.Media.Color" /> of a highlighted menu item.</summary>
      <returns>The resource key for the background <see cref="T:System.Windows.Media.Color" /> of a highlighted menu item.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuTextBrush">
      <summary>Gets a <see cref="T:System.Windows.Media.SolidColorBrush" /> that is the color of a menu's text.</summary>
      <returns>The color of a menu's text.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuTextBrushKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints a menu's text.</summary>
      <returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints a menu's text. This brush's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />, so it cannot be modified.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuTextColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the color of a menu's text.</summary>
      <returns>The color of a menu's text.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuTextColorKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:System.Windows.Media.Color" /> of a menu's text.</summary>
      <returns>The resource key for the <see cref="T:System.Windows.Media.Color" /> of a menu's text.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ScrollBarBrush">
      <summary>Gets a <see cref="T:System.Windows.Media.SolidColorBrush" /> that is the background color of a scroll bar.</summary>
      <returns>The background color of a scroll bar.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ScrollBarBrushKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints the background of a scroll bar.</summary>
      <returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints the background of a scroll bar. This brush's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />, so it cannot be modified.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ScrollBarColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the background color of a scroll bar.</summary>
      <returns>The background color of a scroll bar.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ScrollBarColorKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the background <see cref="T:System.Windows.Media.Color" /> of a scroll bar.</summary>
      <returns>The resource key for the background <see cref="T:System.Windows.Media.Color" /> of a scroll bar.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowBrush">
      <summary>Gets a <see cref="T:System.Windows.Media.SolidColorBrush" /> that is the background color in the client area of a window.</summary>
      <returns>The background color in the client area of a window.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowBrushKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints the background of a window's client area.</summary>
      <returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints the background of a window's client area. This brush's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />, so it cannot be modified.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the background color in the client area of a window.</summary>
      <returns>The background color in the client area of a window.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowColorKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the background <see cref="T:System.Windows.Media.Color" /> of a window's client area.</summary>
      <returns>The resource key for the background <see cref="T:System.Windows.Media.Color" /> of a window's client area.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowFrameBrush">
      <summary>Gets a <see cref="T:System.Windows.Media.SolidColorBrush" /> that is the color of a window frame.</summary>
      <returns>The color of a window frame.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowFrameBrushKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints a window frame.</summary>
      <returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints a window frame. This brush's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />, so it cannot be modified.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowFrameColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the color of a window frame.</summary>
      <returns>The color of a window frame.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowFrameColorKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:System.Windows.Media.Color" /> of a window frame.</summary>
      <returns>The resource key for the <see cref="T:System.Windows.Media.Color" /> of a window frame.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowTextBrush">
      <summary>Gets a <see cref="T:System.Windows.Media.SolidColorBrush" /> that is the color of the text in the client area of a window.</summary>
      <returns>The color of the text in the client area of a window.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowTextBrushKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints the text in the client area of a window.</summary>
      <returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush" /> that paints the text in the client area of a window. This brush's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />, so it cannot be modified.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowTextColor">
      <summary>Gets a <see cref="T:System.Windows.Media.Color" /> structure that is the color of the text in the client area of a window.</summary>
      <returns>The color of the text in the client area of a window.</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowTextColorKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:System.Windows.Media.Color" /> of text in a window's client area.</summary>
      <returns>The resource key for the <see cref="T:System.Windows.Media.Color" /> of text in a window's client area.</returns>
    </member>
    <member name="T:System.Windows.SystemCommands">
      <summary>Defines routed commands that are common to window management.</summary>
    </member>
    <member name="M:System.Windows.SystemCommands.CloseWindow(System.Windows.Window)">
      <summary>Closes the specified window.</summary>
      <param name="window">The window to close.</param>
    </member>
    <member name="P:System.Windows.SystemCommands.CloseWindowCommand">
      <summary>Gets a command that closes a window.</summary>
      <returns>A command that closes a window.</returns>
    </member>
    <member name="M:System.Windows.SystemCommands.MaximizeWindow(System.Windows.Window)">
      <summary>Maximizes the specified window.</summary>
      <param name="window">The window to maximize.</param>
    </member>
    <member name="P:System.Windows.SystemCommands.MaximizeWindowCommand">
      <summary>Gets a command that maximizes a window.</summary>
      <returns>A command that maximizes a window.</returns>
    </member>
    <member name="M:System.Windows.SystemCommands.MinimizeWindow(System.Windows.Window)">
      <summary>Minimizes the specified window.</summary>
      <param name="window">The window to minimize.</param>
    </member>
    <member name="P:System.Windows.SystemCommands.MinimizeWindowCommand">
      <summary>Gets a command that maximizes a window.</summary>
      <returns>A command that maximizes a window.</returns>
    </member>
    <member name="M:System.Windows.SystemCommands.RestoreWindow(System.Windows.Window)">
      <summary>Restores the specified widow.</summary>
      <param name="window">The window to restore.</param>
    </member>
    <member name="P:System.Windows.SystemCommands.RestoreWindowCommand">
      <summary>Gets a command that restores a window.</summary>
      <returns>A command that restores a window.</returns>
    </member>
    <member name="M:System.Windows.SystemCommands.ShowSystemMenu(System.Windows.Window,System.Windows.Point)">
      <summary>Displays the system menu for the specified window.</summary>
      <param name="window">The window to have its system menu displayed.</param>
      <param name="screenLocation">The location of the system menu.</param>
    </member>
    <member name="P:System.Windows.SystemCommands.ShowSystemMenuCommand">
      <summary>Gets a command that displays the system menu.</summary>
      <returns>A command that displays the system menu.</returns>
    </member>
    <member name="T:System.Windows.SystemFonts">
      <summary>Contains properties that expose the system resources that concern fonts.</summary>
    </member>
    <member name="P:System.Windows.SystemFonts.CaptionFontFamily">
      <summary>Gets the metric that determines the font family of the caption of the nonclient area of a nonminimized window.</summary>
      <returns>A font family.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.CaptionFontFamilyKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemFonts.CaptionFontFamily" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.CaptionFontSize">
      <summary>Gets the metric that determines the caption font-size for the nonclient area of a nonminimized window.</summary>
      <returns>A font size.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.CaptionFontSizeKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemFonts.CaptionFontSize" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.CaptionFontStyle">
      <summary>Gets the metric that determines the caption font-style for the nonclient area of a nonminimized window.</summary>
      <returns>A font style.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.CaptionFontStyleKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemFonts.CaptionFontStyle" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.CaptionFontTextDecorations">
      <summary>Gets the metric that determines the caption text-decorations for the nonclient area of a nonminimized window.</summary>
      <returns>A collection of text decorations.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.CaptionFontTextDecorationsKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemFonts.CaptionFontTextDecorations" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.CaptionFontWeight">
      <summary>Gets the metric that determines the caption font-weight for the nonclient area of a nonminimized window.</summary>
      <returns>A font weight.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.CaptionFontWeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemFonts.CaptionFontWeight" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.IconFontFamily">
      <summary>Gets the font family from the logical font information for the current icon-title font.</summary>
      <returns>A font family.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.IconFontFamilyKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemFonts.IconFontFamily" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.IconFontSize">
      <summary>Gets the font size from the logical font information for the current icon-title font.</summary>
      <returns>A font size.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.IconFontSizeKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemFonts.IconFontSize" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.IconFontStyle">
      <summary>Gets the font style from the logical font information for the current icon-title font.</summary>
      <returns>A font style.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.IconFontStyleKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemFonts.IconFontStyle" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.IconFontTextDecorations">
      <summary>Gets the text decorations from the logical font information for the current icon-title font.</summary>
      <returns>A collection of text decorations.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.IconFontTextDecorationsKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemFonts.IconFontTextDecorations" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.IconFontWeight">
      <summary>Gets the font weight from the logical font information for the current icon-title font.</summary>
      <returns>A font weight.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.IconFontWeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemFonts.IconFontWeight" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MenuFontFamily">
      <summary>Gets the metric that determines the font family for menu text.</summary>
      <returns>A font family.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MenuFontFamilyKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemFonts.MenuFontFamily" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MenuFontSize">
      <summary>Gets the metric that determines the font size of menu text.</summary>
      <returns>A font size.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MenuFontSizeKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemFonts.MenuFontSize" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MenuFontStyle">
      <summary>Gets the metric that determines the font style for menu text.</summary>
      <returns>A font style.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MenuFontStyleKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemFonts.MenuFontStyle" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MenuFontTextDecorations">
      <summary>Gets the metric that determines the text decorations for menu text.</summary>
      <returns>A collection of text decorations.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MenuFontTextDecorationsKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemFonts.MenuFontTextDecorations" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MenuFontWeight">
      <summary>Gets the metric that determines the font weight for menu text.</summary>
      <returns>A font weight.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MenuFontWeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemFonts.MenuFontWeight" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MessageFontFamily">
      <summary>Gets the metric that determines the font family for message box text.</summary>
      <returns>A font family.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MessageFontFamilyKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemFonts.MessageFontFamily" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MessageFontSize">
      <summary>Gets the metric that determines the font size of message box text.</summary>
      <returns>A font size.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MessageFontSizeKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemFonts.MessageFontSize" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MessageFontStyle">
      <summary>Gets the metric that determines the font style for message box text.</summary>
      <returns>A font style.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MessageFontStyleKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemFonts.MessageFontStyle" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MessageFontTextDecorations">
      <summary>Gets the metric that determines the decorations for message box text.</summary>
      <returns>A collection of text decorations.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MessageFontTextDecorationsKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemFonts.MessageFontTextDecorations" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MessageFontWeight">
      <summary>Gets the metric that determines the font weight for message box text.</summary>
      <returns>A font weight.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MessageFontWeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemFonts.MessageFontWeight" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.SmallCaptionFontFamily">
      <summary>Gets the metric that determines the font family of the small-caption text for the nonclient area of a nonminimized window.</summary>
      <returns>A font family.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.SmallCaptionFontFamilyKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemFonts.SmallCaptionFontFamily" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.SmallCaptionFontSize">
      <summary>Gets the metric that determines the font size of the small-caption text for the nonclient area of a nonminimized window.</summary>
      <returns>A font size.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.SmallCaptionFontSizeKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemFonts.SmallCaptionFontSize" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.SmallCaptionFontStyle">
      <summary>Gets the metric that determines the font style of the small-caption text for the nonclient area of a nonminimized window.</summary>
      <returns>A font style.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.SmallCaptionFontStyleKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemFonts.SmallCaptionFontStyle" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.SmallCaptionFontTextDecorations">
      <summary>Gets the metric that determines the decorations of the small-caption text for the nonclient area of a nonminimized window.</summary>
      <returns>A collection of text decorations.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.SmallCaptionFontTextDecorationsKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemFonts.SmallCaptionFontTextDecorations" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.SmallCaptionFontWeight">
      <summary>Gets the metric that determines the font weight of the small-caption text for the nonclient area of a nonminimized window.</summary>
      <returns>A font weight.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.SmallCaptionFontWeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemFonts.SmallCaptionFontWeight" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.StatusFontFamily">
      <summary>Gets the metric that determines the font family of the text used in status bars and ToolTips for the nonclient area of a nonminimized window.</summary>
      <returns>A font family.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.StatusFontFamilyKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemFonts.StatusFontFamily" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.StatusFontSize">
      <summary>Gets the metric that determines the font size of the text used in status bars and ToolTips for the nonclient area of a nonminimized window.</summary>
      <returns>A font size.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.StatusFontSizeKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemFonts.StatusFontSize" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.StatusFontStyle">
      <summary>Gets the metric that determines the font style of the text used in status bars and ToolTips for the nonclient area of a nonminimized window.</summary>
      <returns>A font style.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.StatusFontStyleKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemFonts.StatusFontStyle" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.StatusFontTextDecorations">
      <summary>Gets the metric that determines the decorations of the text used in status bars and ToolTips for the nonclient area of a nonminimized window.</summary>
      <returns>A collection of text decoration.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.StatusFontTextDecorationsKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemFonts.StatusFontTextDecorations" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.StatusFontWeight">
      <summary>Gets the metric that determines the font weight of the text used in status bars and ToolTips for the nonclient area of a nonminimized window.</summary>
      <returns>A font weight.</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.StatusFontWeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemFonts.StatusFontWeight" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="T:System.Windows.SystemParameters">
      <summary>Contains properties that you can use to query system settings.</summary>
    </member>
    <member name="P:System.Windows.SystemParameters.Border">
      <summary>Gets the border multiplier factor that determines the width of a window's sizing border.</summary>
      <returns>A multiplier.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.BorderKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.Border" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.BorderWidth">
      <summary>Gets the metric that determines the border width of the nonclient area of a nonminimized window.</summary>
      <returns>A border width.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.BorderWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.BorderWidth" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.CaptionHeight">
      <summary>Gets the metric that determines the caption height for the nonclient area of a nonminimized window.</summary>
      <returns>The caption height.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.CaptionHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.CaptionHeight" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.CaptionWidth">
      <summary>Gets the metric that determines the caption width for the nonclient area of a nonminimized window.</summary>
      <returns>The caption width.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.CaptionWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.CaptionWidth" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.CaretWidth">
      <summary>Gets the caret width, in pixels, for edit controls.</summary>
      <returns>The caret width.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.CaretWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.CaretWidth" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ClientAreaAnimation">
      <summary>Gets a value indicating whether the client area animation feature is enabled.</summary>
      <returns>A Boolean value; <see langword="true" /> if client area animation is enabled, <see langword="false" /> otherwise.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ClientAreaAnimationKey">
      <summary>Gets a <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.ClientAreaAnimation" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ComboBoxAnimation">
      <summary>Gets a value indicating whether the slide-open effect for combo boxes is enabled.</summary>
      <returns>
        <see langword="true" /> for enabled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ComboBoxAnimationKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.ComboBoxAnimation" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ComboBoxPopupAnimation">
      <summary>Gets the system value of the <see cref="P:System.Windows.Controls.Primitives.Popup.PopupAnimation" /> property for combo boxes.</summary>
      <returns>A pop-up animation value.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ComboBoxPopupAnimationKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.ComboBoxPopupAnimation" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.CursorHeight">
      <summary>Gets the height, in pixels, of a cursor.</summary>
      <returns>The cursor height.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.CursorHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.CursorHeight" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.CursorShadow">
      <summary>Gets a value indicating whether the cursor has a shadow around it.</summary>
      <returns>
        <see langword="true" /> if the shadow is enabled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.CursorShadowKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.CursorShadow" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.CursorWidth">
      <summary>Gets the width, in pixels, of a cursor.</summary>
      <returns>The cursor width.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.CursorWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.CursorWidth" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.DragFullWindows">
      <summary>Gets a value indicating whether dragging of full windows is enabled.</summary>
      <returns>
        <see langword="true" /> if dragging of full windows is enabled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.DragFullWindowsKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.DragFullWindows" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.DropShadow">
      <summary>Gets a value indicating whether the drop shadow effect is enabled.</summary>
      <returns>
        <see langword="true" /> if the drop shadow effect is enabled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.DropShadowKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.DropShadow" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FixedFrameHorizontalBorderHeight">
      <summary>Gets the height of the horizontal border of the frame around a window.</summary>
      <returns>The border height.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FixedFrameHorizontalBorderHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.FixedFrameHorizontalBorderHeight" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FixedFrameVerticalBorderWidth">
      <summary>Gets the width of the vertical border of the frame around a window.</summary>
      <returns>The border width.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FixedFrameVerticalBorderWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.FixedFrameVerticalBorderWidth" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FlatMenu">
      <summary>Gets a value indicating whether native menus appear as a flat menu.</summary>
      <returns>
        <see langword="true" /> if the flat menu appearance is set; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FlatMenuKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.FlatMenu" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FocusBorderHeight">
      <summary>Gets the height, in pixels, of the upper and lower edges of the focus rectangle.</summary>
      <returns>The edge height.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FocusBorderHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.FocusBorderHeight" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FocusBorderWidth">
      <summary>Gets the width, in pixels, of the left and right edges of the focus rectangle.</summary>
      <returns>The edge width.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FocusBorderWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.FocusBorderWidth" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FocusHorizontalBorderHeight">
      <summary>Gets the height of the upper and lower edges of the focus rectangle.</summary>
      <returns>The edge height.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FocusHorizontalBorderHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.FocusHorizontalBorderHeight" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FocusVerticalBorderWidth">
      <summary>Gets the width of the left and right edges of the focus rectangle.</summary>
      <returns>The edge width.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FocusVerticalBorderWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.FocusVerticalBorderWidth" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FocusVisualStyleKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see langword="FocusVisualStyle" /> property.</summary>
      <returns>The resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ForegroundFlashCount">
      <summary>Gets the number of times the Set Foreground Window flashes the taskbar button when rejecting a foreground switch request.</summary>
      <returns>A flash count.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ForegroundFlashCountKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.ForegroundFlashCount" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FullPrimaryScreenHeight">
      <summary>Gets the height, in pixels, of the client area for a full-screen window on the primary display monitor.</summary>
      <returns>The height of the client area.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FullPrimaryScreenHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.FullPrimaryScreenHeight" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FullPrimaryScreenWidth">
      <summary>Gets the width, in pixels, of the client area for a full-screen window on the primary display monitor.</summary>
      <returns>The width of the client area.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FullPrimaryScreenWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.FullPrimaryScreenWidth" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.GradientCaptions">
      <summary>Gets a value indicating whether the gradient effect for window title bars is enabled.</summary>
      <returns>
        <see langword="true" /> if the gradient effect is enabled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.GradientCaptionsKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.GradientCaptions" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.HighContrast">
      <summary>Gets information about the High Contrast accessibility feature.</summary>
      <returns>
        <see langword="true" /> if the HIGHCONTRASTON option is selected; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.HighContrastKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.HighContrast" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.HorizontalScrollBarButtonWidth">
      <summary>Gets the width, in pixels, of the arrow bitmap on a horizontal scroll bar.</summary>
      <returns>The width of the arrow bitmap.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.HorizontalScrollBarButtonWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.HorizontalScrollBarButtonWidth" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.HorizontalScrollBarHeight">
      <summary>Gets the height of a horizontal scroll bar, in pixels.</summary>
      <returns>The height of the scroll bar.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.HorizontalScrollBarHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.HorizontalScrollBarHeight" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.HorizontalScrollBarThumbWidth">
      <summary>Gets the width, in pixels, of the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> in a horizontal scroll bar.</summary>
      <returns>The width of the thumb.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.HorizontalScrollBarThumbWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.HorizontalScrollBarThumbWidth" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.HotTracking">
      <summary>Gets a value indicating whether hot tracking of user-interface elements, such as menu names on menu bars, is enabled.</summary>
      <returns>
        <see langword="true" /> if hot tracking is enabled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.HotTrackingKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.HotTracking" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconGridHeight">
      <summary>Gets the height of a grid in which a large icon will fit.</summary>
      <returns>The grid height.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconGridHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.IconGridHeight" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconGridWidth">
      <summary>Gets the width of a grid that a large icon will fit into.</summary>
      <returns>The grid width.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconGridWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.IconGridWidth" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconHeight">
      <summary>Gets the default height of an icon.</summary>
      <returns>The icon height.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.IconHeight" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconHorizontalSpacing">
      <summary>Gets the width, in pixels, of an icon cell. The system uses this rectangle to arrange icons in large icon view.</summary>
      <returns>The width of an icon cell.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconHorizontalSpacingKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.IconHorizontalSpacing" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconTitleWrap">
      <summary>Gets a value indicating whether icon-title wrapping is enabled.</summary>
      <returns>
        <see langword="true" /> if icon-title wrapping is enabled; otherwise <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconTitleWrapKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.IconTitleWrap" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconVerticalSpacing">
      <summary>Gets the height, in pixels, of an icon cell. The system uses this rectangle to arrange icons in large icon view.</summary>
      <returns>The height of an icon cell.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconVerticalSpacingKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.IconVerticalSpacing" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconWidth">
      <summary>Gets the default width of an icon.</summary>
      <returns>The icon width.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.IconWidth" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsGlassEnabled">
      <summary>Gets a value that indicates whether glass window frames are being used.</summary>
      <returns>
        <see langword="true" /> if glass window frames are being used; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsImmEnabled">
      <summary>Gets a value that indicates whether the system is ready to use a Unicode-based Input Method Editor (IME) on a Unicode application.</summary>
      <returns>
        <see langword="true" /> if the Input Method Manager/Input Method Editor features are enabled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsImmEnabledKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.IsImmEnabled" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsMediaCenter">
      <summary>Gets a value that indicates whether the current operating system is the Microsoft Windows XP Media Center Edition.</summary>
      <returns>
        <see langword="true" /> if the current operating system is Windows XP Media Center Edition; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsMediaCenterKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.IsMediaCenter" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsMenuDropRightAligned">
      <summary>Gets a value that indicates whether drop-down menus are right-aligned with the corresponding menu item.</summary>
      <returns>
        <see langword="true" /> if drop-down menus are right-aligned; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsMenuDropRightAlignedKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.IsMenuDropRightAligned" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsMiddleEastEnabled">
      <summary>Gets a value that indicates whether the system is enabled for Hebrew and Arabic languages.</summary>
      <returns>
        <see langword="true" /> if the system is enabled for Hebrew and Arabic languages; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsMiddleEastEnabledKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.IsMiddleEastEnabled" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsMousePresent">
      <summary>Gets a value that indicates whether a mouse is installed.</summary>
      <returns>
        <see langword="true" /> if a mouse is installed; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsMousePresentKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.IsMousePresent" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsMouseWheelPresent">
      <summary>Gets a value that indicates whether the installed mouse has a vertical scroll wheel.</summary>
      <returns>
        <see langword="true" /> if the installed mouse has a vertical scroll wheel; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsMouseWheelPresentKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.IsMouseWheelPresent" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsPenWindows">
      <summary>Gets a value that indicates whether Microsoft Windows for Pen Computing extensions are installed.</summary>
      <returns>
        <see langword="true" /> if Pen Computing extensions are installed; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsPenWindowsKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.IsPenWindows" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsRemotelyControlled">
      <summary>Gets a value that indicates whether the current session is remotely controlled.</summary>
      <returns>
        <see langword="true" /> if the current session is remotely controlled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsRemotelyControlledKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.IsRemotelyControlled" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsRemoteSession">
      <summary>Gets a value that indicates whether the calling process is associated with a Terminal Services client session.</summary>
      <returns>
        <see langword="true" /> if the calling process is associated with a Terminal Services client session; <see langword="false" /> if the calling process is associated with the Terminal Server console session.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsRemoteSessionKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.IsRemoteSession" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsSlowMachine">
      <summary>Gets a value that indicates whether the computer has a low-end (slow) processor.</summary>
      <returns>
        <see langword="true" /> if the computer has a low-end (slow) processor; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsSlowMachineKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.IsSlowMachine" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsTabletPC">
      <summary>Gets a value that indicates whether the current operating system is Microsoft Windows XP Tablet PC Edition.</summary>
      <returns>
        <see langword="true" /> if the current operating system is Windows XP Tablet PC Edition; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsTabletPCKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.IsTabletPC" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.KanjiWindowHeight">
      <summary>Gets a value that indicates the height, in pixels, of the kanji window at the bottom of the screen for systems that use double-byte characters.</summary>
      <returns>The window height.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.KanjiWindowHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.KanjiWindowHeight" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.KeyboardCues">
      <summary>Gets a value indicating whether menu access keys are always underlined.</summary>
      <returns>
        <see langword="true" /> if menu access keys are always underlined; <see langword="false" /> if they are underlined only when the menu is activated by the keyboard.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.KeyboardCuesKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.KeyboardCues" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.KeyboardDelay">
      <summary>Gets the keyboard repeat-delay setting, which is a value in the range from 0 (approximately 250 milliseconds delay) through 3 (approximately 1 second delay).</summary>
      <returns>The keyboard repeat-delay setting.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.KeyboardDelayKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.KeyboardDelay" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.KeyboardPreference">
      <summary>Gets a value indicating whether the user relies on the keyboard instead of the mouse, and whether the user wants applications to display keyboard interfaces that are typically hidden.</summary>
      <returns>
        <see langword="true" /> if the user relies on the keyboard; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.KeyboardPreferenceKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.KeyboardPreference" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.KeyboardSpeed">
      <summary>Gets the keyboard repeat-speed setting, which is a value in the range from 0 (approximately 2.5 repetitions per second) through 31 (approximately 30 repetitions per second).</summary>
      <returns>The keyboard repeat-speed setting.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.KeyboardSpeedKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.KeyboardSpeed" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ListBoxSmoothScrolling">
      <summary>Gets a value indicating whether the smooth-scrolling effect for list boxes is enabled.</summary>
      <returns>
        <see langword="true" /> if the smooth-scrolling effect is enabled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ListBoxSmoothScrollingKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.ListBoxSmoothScrolling" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MaximizedPrimaryScreenHeight">
      <summary>Gets a value that indicates the height, in pixels, of a maximized top-level window on the primary display monitor.</summary>
      <returns>The window height.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MaximizedPrimaryScreenHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MaximizedPrimaryScreenHeight" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MaximizedPrimaryScreenWidth">
      <summary>Gets a value that indicates the width, in pixels, of a maximized top-level window on the primary display monitor.</summary>
      <returns>The window width.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MaximizedPrimaryScreenWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MaximizedPrimaryScreenWidth" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MaximumWindowTrackHeight">
      <summary>Gets a value that indicates the maximum height, in pixels, of a window that has a caption and sizing borders.</summary>
      <returns>The maximum window height.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MaximumWindowTrackHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MaximumWindowTrackHeight" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MaximumWindowTrackWidth">
      <summary>Gets a value that indicates the maximum width, in pixels, of a window that has a caption and sizing borders.</summary>
      <returns>The maximum window width.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MaximumWindowTrackWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MaximumWindowTrackWidth" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuAnimation">
      <summary>Gets a value indicating whether the menu animation feature is enabled.</summary>
      <returns>
        <see langword="true" /> if menu animation is enabled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuAnimationKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MenuAnimation" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuBarHeight">
      <summary>Gets a value that indicates the height, in pixels, of a single-line menu bar.</summary>
      <returns>The height of the menu bar.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuBarHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MenuBarHeight" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuButtonHeight">
      <summary>Gets a value that indicates the height, in pixels, of a menu bar button.</summary>
      <returns>The height of a menu bar button.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuButtonHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MenuButtonHeight" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuButtonWidth">
      <summary>Gets a value that indicates the width, in pixels, of a menu bar button.</summary>
      <returns>The width of a menu bar button.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuButtonWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MenuButtonWidth" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuCheckmarkHeight">
      <summary>Gets a value that indicates the height, in pixels, of the default menu check-mark bitmap.</summary>
      <returns>The height of a bitmap.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuCheckmarkHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MenuCheckmarkHeight" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuCheckmarkWidth">
      <summary>Gets a value that indicates the width, in pixels, of the default menu check-mark bitmap.</summary>
      <returns>The width of the bitmap.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuCheckmarkWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MenuCheckmarkWidth" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuDropAlignment">
      <summary>Gets a value indicating whether pop-up menus are left-aligned or right-aligned, relative to the corresponding menu item.</summary>
      <returns>
        <see langword="true" /> if left-aligned; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuDropAlignmentKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MenuDropAlignment" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuFade">
      <summary>Gets a value indicating whether menu fade animation is enabled.</summary>
      <returns>
        <see langword="true" /> when fade animation is enabled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuFadeKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MenuFade" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuHeight">
      <summary>Gets the metric that determines the height of the menu.</summary>
      <returns>The menu height.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MenuHeight" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuPopupAnimation">
      <summary>Gets the system value of the <see cref="P:System.Windows.Controls.Primitives.Popup.PopupAnimation" /> property for menus.</summary>
      <returns>The pop-up animation property.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuPopupAnimationKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MenuPopupAnimation" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuShowDelay">
      <summary>Gets the time, in milliseconds, that the system waits before displaying a shortcut menu when the mouse cursor is over a submenu item.</summary>
      <returns>The delay time.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuShowDelayKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MenuShowDelay" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuWidth">
      <summary>Gets the metric that determines the width of the menu.</summary>
      <returns>The menu width, in pixels.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MenuWidth" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimizeAnimation">
      <summary>Gets the animation effects associated with user actions.</summary>
      <returns>
        <see langword="true" /> if the minimize window animations feature is enabled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimizeAnimationKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MinimizeAnimation" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimizedGridHeight">
      <summary>Gets a value that indicates the height, in pixels, of a grid cell for a minimized window.</summary>
      <returns>The height of a grid cell for a minimized window.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimizedGridHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MinimizedGridHeight" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimizedGridWidth">
      <summary>Gets a value that indicates the width, in pixels, of a grid cell for a minimized window.</summary>
      <returns>The width of a grid cell for a minimized window.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimizedGridWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MinimizedGridWidth" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimizedWindowHeight">
      <summary>Gets a value that indicates the height, in pixels, of a minimized window.</summary>
      <returns>The height of a minimized window.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimizedWindowHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MinimizedWindowHeight" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimizedWindowWidth">
      <summary>Gets a value that indicates the width, in pixels, of a minimized window.</summary>
      <returns>The width of a minimized window.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimizedWindowWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MinimizedWindowWidth" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimumHorizontalDragDistance">
      <summary>Gets the width of a rectangle centered on a drag point to allow for limited movement of the mouse pointer before a drag operation begins.</summary>
      <returns>The width of the rectangle, in pixels.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimumVerticalDragDistance">
      <summary>Gets the height of a rectangle centered on a drag point to allow for limited movement of the mouse pointer before a drag operation begins.</summary>
      <returns>The height of the rectangle, in pixels.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimumWindowHeight">
      <summary>Gets a value that indicates the minimum height, in pixels, of a window.</summary>
      <returns>The minimum height of a window.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimumWindowHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MinimumWindowHeight" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimumWindowTrackHeight">
      <summary>Gets a value that indicates the minimum tracking height of a window, in pixels.</summary>
      <returns>The minimum tracking height of a window.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimumWindowTrackHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MinimumWindowTrackHeight" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimumWindowTrackWidth">
      <summary>Gets a value that indicates the minimum tracking width of a window, in pixels.</summary>
      <returns>The minimum tracking width of a window.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimumWindowTrackWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MinimumWindowTrackWidth" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimumWindowWidth">
      <summary>Gets a value that indicates the minimum width, in pixels, of a window.</summary>
      <returns>The minimum width of a window.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimumWindowWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MinimumWindowWidth" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MouseHoverHeight">
      <summary>Gets the height, in pixels, of the rectangle within which the mouse pointer has to stay to generate a mouse-hover event.</summary>
      <returns>The height of a rectangle used for a mouse-hover event.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MouseHoverHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MouseHoverHeight" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MouseHoverTime">
      <summary>Gets the time, in milliseconds, that the mouse pointer must remain in the hover rectangle to generate a mouse-hover event.</summary>
      <returns>The time, in milliseconds, that the mouse must be in the hover rectangle to generate a mouse-hover event.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MouseHoverTimeKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MouseHoverTime" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MouseHoverWidth">
      <summary>Gets the width, in pixels, of the rectangle within which the mouse pointer has to stay to generate a mouse-hover event.</summary>
      <returns>The width of a rectangle used for a mouse-hover event.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MouseHoverWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MouseHoverWidth" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.NavigationChromeDownLevelStyleKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.NavigationChromeDownLevelStyleKey" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.NavigationChromeStyleKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.NavigationChromeStyleKey" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.PowerLineStatus">
      <summary>Gets a value indicating whether the system power is online, or that the system power status is unknown.</summary>
      <returns>A value in the enumeration.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.PowerLineStatusKey">
      <summary>Gets a <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.PowerLineStatus" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.PrimaryScreenHeight">
      <summary>Gets a value that indicates the screen height, in pixels, of the primary display monitor.</summary>
      <returns>The height of the screen.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.PrimaryScreenHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.PrimaryScreenHeight" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.PrimaryScreenWidth">
      <summary>Gets a value that indicates the screen width, in pixels, of the primary display monitor.</summary>
      <returns>The width of the screen.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.PrimaryScreenWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.PrimaryScreenWidth" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ResizeFrameHorizontalBorderHeight">
      <summary>Gets a value that indicates the height (thickness), in pixels, of the horizontal sizing border around the perimeter of a window that can be resized.</summary>
      <returns>The height of the border.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ResizeFrameHorizontalBorderHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.ResizeFrameHorizontalBorderHeight" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ResizeFrameVerticalBorderWidth">
      <summary>Gets a value that indicates the width (thickness), in pixels, of the vertical sizing border around the perimeter of a window that can be resized.</summary>
      <returns>The width of the border.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ResizeFrameVerticalBorderWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.ResizeFrameVerticalBorderWidth" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ScrollHeight">
      <summary>Gets the metric that determines the scroll height of the nonclient area of a nonminimized window.</summary>
      <returns>The scroll height, in pixels.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ScrollHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.ScrollHeight" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ScrollWidth">
      <summary>Gets the metric that determines the scroll width of the nonclient area of a nonminimized window.</summary>
      <returns>The scroll width, in pixels.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ScrollWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.ScrollWidth" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SelectionFade">
      <summary>Gets a value indicating whether the selection fade effect is enabled.</summary>
      <returns>
        <see langword="true" /> if the fade effect is enabled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SelectionFadeKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.SelectionFade" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ShowSounds">
      <summary>Gets a value that indicates whether the user requires information in visual format.</summary>
      <returns>
        <see langword="true" /> if the user requires an application to present information visually where it typically presents the information only in audible form; otherwise <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ShowSoundsKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.ShowSounds" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SmallCaptionHeight">
      <summary>Gets the metric that determines the height of the small caption of the nonclient area of a nonminimized window.</summary>
      <returns>The caption height, in pixels.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SmallCaptionHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.SmallCaptionHeight" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SmallCaptionWidth">
      <summary>Gets the metric that determines the width of the small caption of the nonclient area of a nonminimized window.</summary>
      <returns>The caption width, in pixels.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SmallCaptionWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.SmallCaptionWidth" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SmallIconHeight">
      <summary>Gets a value that indicates the recommended height, in pixels, of a small icon.</summary>
      <returns>The icon height.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SmallIconHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.SmallIconHeight" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SmallIconWidth">
      <summary>Gets a value that indicates the recommended width, in pixels, of a small icon.</summary>
      <returns>The width of the icon.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SmallIconWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.SmallIconWidth" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SmallWindowCaptionButtonHeight">
      <summary>Gets a value that indicates the height, in pixels, of small caption buttons.</summary>
      <returns>The height of the caption button.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SmallWindowCaptionButtonHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.SmallWindowCaptionButtonHeight" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SmallWindowCaptionButtonWidth">
      <summary>Gets a value that indicates the width, in pixels, of small caption buttons.</summary>
      <returns>The width of the caption button.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SmallWindowCaptionButtonWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.SmallWindowCaptionButtonWidth" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SnapToDefaultButton">
      <summary>Gets a value indicating whether the snap-to-default button is enabled. If enabled, the mouse cursor automatically moves to the default button of a dialog box, such as OK or Apply.</summary>
      <returns>
        <see langword="true" /> when the feature is enabled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SnapToDefaultButtonKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.SnapToDefaultButton" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="E:System.Windows.SystemParameters.StaticPropertyChanged">
      <summary>Occurs when one of the properties changes.</summary>
    </member>
    <member name="P:System.Windows.SystemParameters.StylusHotTracking">
      <summary>Gets a value indicating whether hot tracking of a stylus is enabled.</summary>
      <returns>
        <see langword="true" /> if hot tracking of a stylus is enabled; otherwise <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.StylusHotTrackingKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.StylusHotTracking" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SwapButtons">
      <summary>Gets a value that indicates whether the functionality of the left and right mouse buttons are swapped.</summary>
      <returns>
        <see langword="true" /> if the functionality of the left and right mouse buttons are swapped; otherwise <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SwapButtonsKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.SwapButtons" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ThickHorizontalBorderHeight">
      <summary>Gets a value that indicates the height, in pixels, of a 3-D border.</summary>
      <returns>The height of a border.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ThickHorizontalBorderHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.ThickHorizontalBorderHeight" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ThickVerticalBorderWidth">
      <summary>Gets a value that indicates the width, in pixels, of a 3-D border.</summary>
      <returns>The width of a border.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ThickVerticalBorderWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.ThickVerticalBorderWidth" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ThinHorizontalBorderHeight">
      <summary>Gets a value that indicates the height, in pixels, of a horizontal window border.</summary>
      <returns>The height of a border.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ThinHorizontalBorderHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.ThinHorizontalBorderHeight" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ThinVerticalBorderWidth">
      <summary>Gets a value that indicates the width, in pixels, of a vertical window border.</summary>
      <returns>The width of a border.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ThinVerticalBorderWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.ThinVerticalBorderWidth" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ToolTipAnimation">
      <summary>Gets a value indicating whether <see cref="T:System.Windows.Controls.ToolTip" /> animation is enabled.</summary>
      <returns>
        <see langword="true" /> if ToolTip animation is enabled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ToolTipAnimationKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.ToolTipAnimation" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ToolTipFade">
      <summary>Gets a value indicating whether ToolTip animation uses a fade effect or a slide effect.</summary>
      <returns>
        <see langword="true" /> if a fade effect is used; <see langword="false" /> if a slide effect is used.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ToolTipFadeKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.ToolTipFade" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ToolTipPopupAnimation">
      <summary>Gets the system value of the <see cref="P:System.Windows.Controls.Primitives.Popup.PopupAnimation" /> property for ToolTips.</summary>
      <returns>A system value for the pop-up animation property.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ToolTipPopupAnimationKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.ToolTipPopupAnimation" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.UIEffects">
      <summary>Gets a value that indicates whether all user interface (UI) effects are enabled.</summary>
      <returns>
        <see langword="true" /> if all UI effects are enabled; <see langword="false" /> if they are disabled.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.UIEffectsKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.UIEffects" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.UxThemeColor">
      <summary>Gets the color theme name.</summary>
      <returns>The color theme name.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.UxThemeName">
      <summary>Gets the theme name.</summary>
      <returns>The theme name.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VerticalScrollBarButtonHeight">
      <summary>Gets a value that indicates the height, in pixels, of the arrow bitmap on a vertical scroll bar.</summary>
      <returns>The height of a bitmap.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VerticalScrollBarButtonHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.VerticalScrollBarButtonHeight" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VerticalScrollBarThumbHeight">
      <summary>Gets a value that indicates the height, in pixels, of the thumb in a vertical scroll bar.</summary>
      <returns>The height of the thumb.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VerticalScrollBarThumbHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.VerticalScrollBarThumbHeight" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VerticalScrollBarWidth">
      <summary>Gets a value that indicates the width, in pixels, of a vertical scroll bar.</summary>
      <returns>The width of a scroll bar.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VerticalScrollBarWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.VerticalScrollBarWidth" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VirtualScreenHeight">
      <summary>Gets a value that indicates the height, in pixels, of the virtual screen.</summary>
      <returns>The height of the virtual screen.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VirtualScreenHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.VirtualScreenHeight" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VirtualScreenLeft">
      <summary>Gets a value that indicates the coordinate for the left side of the virtual screen.</summary>
      <returns>A screen coordinate, in pixels.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VirtualScreenLeftKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.VirtualScreenLeft" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VirtualScreenTop">
      <summary>Gets a value that indicates the upper coordinate of the virtual screen.</summary>
      <returns>A screen coordinate, in pixels.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VirtualScreenTopKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.VirtualScreenTop" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VirtualScreenWidth">
      <summary>Gets a value that indicates the width, in pixels, of the virtual screen.</summary>
      <returns>The width of the virtual screen.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VirtualScreenWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.VirtualScreenWidth" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WheelScrollLines">
      <summary>Gets a value that indicates the number of lines to scroll when the mouse wheel is rotated.</summary>
      <returns>The number of lines.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WheelScrollLinesKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.WheelScrollLines" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WindowCaptionButtonHeight">
      <summary>Gets a value that indicates the height, in pixels, of a button in the title bar of a window.</summary>
      <returns>The height of a caption button.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WindowCaptionButtonHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.WindowCaptionButtonHeight" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WindowCaptionButtonWidth">
      <summary>Gets a value that indicates the width, in pixels, of a button in the title bar of a window.</summary>
      <returns>The width of a caption button.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WindowCaptionButtonWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.WindowCaptionButtonWidth" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WindowCaptionHeight">
      <summary>Gets a value that indicates the height, in pixels, of a caption area.</summary>
      <returns>The height of a caption area.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WindowCaptionHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.WindowCaptionHeight" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WindowCornerRadius">
      <summary>Gets the radius of the corners for a window.</summary>
      <returns>The degree to which the corners of a window are rounded.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WindowGlassBrush">
      <summary>Gets the brush that paints the glass window frame.</summary>
      <returns>The brush that paints the glass window frame.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WindowGlassColor">
      <summary>Gets the color that is used to paint the glass window frame.</summary>
      <returns>The color that is used to paint the glass window frame.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WindowNonClientFrameThickness">
      <summary>Gets the size of the non-client area of the window.</summary>
      <returns>The size of the non-client area of the window, in device-independent units (1/96th of an inch).</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WindowResizeBorderThickness">
      <summary>Gets the size of the resizing border around the window.</summary>
      <returns>The size of the resizing border around the window, in device-independent units (1/96th of an inch).</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WorkArea">
      <summary>Gets the size of the work area on the primary display monitor.</summary>
      <returns>A <see langword="RECT" /> structure that receives the work area coordinates, expressed as virtual screen coordinates.</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WorkAreaKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.WorkArea" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="T:System.Windows.TemplateBindingExpression">
      <summary>Describes a run-time instance of a <see cref="T:System.Windows.TemplateBindingExtension" />.</summary>
    </member>
    <member name="P:System.Windows.TemplateBindingExpression.TemplateBindingExtension">
      <summary>Gets the <see cref="T:System.Windows.TemplateBindingExtension" /> object of this expression instance.</summary>
      <returns>The template binding extension of this expression instance.</returns>
    </member>
    <member name="T:System.Windows.TemplateBindingExpressionConverter">
      <summary>A type converter that is used to construct a markup extension from a <see cref="T:System.Windows.TemplateBindingExpression" /> instance during serialization.</summary>
    </member>
    <member name="M:System.Windows.TemplateBindingExpressionConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.TemplateBindingExpressionConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.TemplateBindingExpressionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns whether this converter can convert the object to the specified type, using the specified context.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> implementation that provides a format context.</param>
      <param name="destinationType">The desired type of the conversion's output.</param>
      <returns>
        <see langword="true" /> if this converter can perform the requested conversion; otherwise, <see langword="false" />. Only a <paramref name="destinationType" /> of <see cref="T:System.Windows.Markup.MarkupExtension" /> returns <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.TemplateBindingExpressionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the given value object to a <see cref="T:System.Windows.Markup.MarkupExtension" /> type.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> implementation that provides a format context.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> object. If a null reference is passed, the current culture is assumed.</param>
      <param name="value">The value to convert.</param>
      <param name="destinationType">The desired type to convert to.</param>
      <returns>The converted value.</returns>
    </member>
    <member name="T:System.Windows.TemplateBindingExtension">
      <summary>Implements a markup extension that supports the binding between the value of a property in a template and the value of some other exposed property on the templated control.</summary>
    </member>
    <member name="M:System.Windows.TemplateBindingExtension.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.TemplateBindingExtension" /> class.</summary>
    </member>
    <member name="M:System.Windows.TemplateBindingExtension.#ctor(System.Windows.DependencyProperty)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.TemplateBindingExtension" /> class with the specified dependency property that is the source of the binding.</summary>
      <param name="property">The identifier of the property being bound.</param>
    </member>
    <member name="P:System.Windows.TemplateBindingExtension.Converter">
      <summary>Gets or sets the converter that interprets between source and target of a binding.</summary>
      <returns>The converter implementation. This value defaults to <see langword="null" /> and is typically provided as an optional parameter of the binding.</returns>
    </member>
    <member name="P:System.Windows.TemplateBindingExtension.ConverterParameter">
      <summary>Gets or sets the parameter to pass to the converter.</summary>
      <returns>The parameter being bound as referenced by the converter implementation. The default value is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.TemplateBindingExtension.Property">
      <summary>Gets or sets the property being bound to.</summary>
      <returns>Identifier of the dependency property being bound.</returns>
    </member>
    <member name="M:System.Windows.TemplateBindingExtension.ProvideValue(System.IServiceProvider)">
      <summary>Returns an object that should be set as the value on the target object's property for this markup extension. For <see cref="T:System.Windows.TemplateBindingExtension" />, this is an expression (<see cref="T:System.Windows.TemplateBindingExpression" />) that supports the binding.</summary>
      <param name="serviceProvider">An object that can provide services for the markup extension. May be <see langword="null" /> in this implementation.</param>
      <returns>The expression that supports the binding.</returns>
    </member>
    <member name="T:System.Windows.TemplateBindingExtensionConverter">
      <summary>A type converter that is used to construct a <see cref="T:System.Windows.TemplateBindingExtension" /> from an instance during serialization.</summary>
    </member>
    <member name="M:System.Windows.TemplateBindingExtensionConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.TemplateBindingExtensionConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.TemplateBindingExtensionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns whether this converter can convert the object to the specified type, using the specified context.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> implementation that provides a format context.</param>
      <param name="destinationType">The desired type of the conversion's output.</param>
      <returns>
        <see langword="true" /> if this converter can perform the requested conversion; otherwise, <see langword="false" />. Only a <paramref name="destinationType" /> of <see cref="T:System.ComponentModel.Design.Serialization.InstanceDescriptor" /> will return <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.TemplateBindingExtensionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the given value object to the specified type.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> implementation that provides a format context.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> object. If a null reference is passed, the current culture is assumed.</param>
      <param name="value">The value to convert.</param>
      <param name="destinationType">The desired type to convert to.</param>
      <returns>The converted value.</returns>
    </member>
    <member name="T:System.Windows.TemplateContent">
      <summary>Implements the record and playback logic that templates use for deferring content when they interact with XAML readers and writers.</summary>
    </member>
    <member name="T:System.Windows.TemplateContentLoader">
      <summary>Implements <see cref="T:System.Xaml.XamlDeferringLoader" /> in order to defer loading of the XAML content that is defined for a template in WPF XAML.</summary>
    </member>
    <member name="M:System.Windows.TemplateContentLoader.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.TemplateContentLoader" /> class.</summary>
    </member>
    <member name="M:System.Windows.TemplateContentLoader.Load(System.Xaml.XamlReader,System.IServiceProvider)">
      <summary>Loads XAML content in a deferred mode, based on a <see cref="T:System.Xaml.XamlReader" /> and certain required services from a service provider.</summary>
      <param name="xamlReader">The initiating reader that is then returned on calls to <see cref="M:System.Windows.TemplateContentLoader.Save(System.Object,System.IServiceProvider)" />.</param>
      <param name="serviceProvider">Service provider for required services.</param>
      <returns>The root object for the node stream of the input <see cref="T:System.Xaml.XamlReader" />. Specifically, this is a <see cref="T:System.Windows.TemplateContent" /> instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xamlReader" /> or <paramref name="serviceProvider" /> are <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="serviceProvider" /> does not provide a required service.</exception>
    </member>
    <member name="M:System.Windows.TemplateContentLoader.Save(System.Object,System.IServiceProvider)">
      <summary>Do not use; always throws an exception.</summary>
      <param name="value">The input value to commit for deferred loading.</param>
      <param name="serviceProvider">Service provider for required services.</param>
      <returns>Always throws an exception.</returns>
      <exception cref="T:System.NotSupportedException">Thrown in all cases.</exception>
    </member>
    <member name="T:System.Windows.TemplateKey">
      <summary>When used as a resource key for a data template, allows the data template to participate in the lookup process.</summary>
    </member>
    <member name="M:System.Windows.TemplateKey.#ctor(System.Windows.TemplateKey.TemplateType)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.TemplateKey" /> class with the specified template type. This constructor is protected.</summary>
      <param name="templateType">A <see cref="T:System.Windows.TemplateKey.TemplateType" /> value that specifies the type of this template.</param>
    </member>
    <member name="M:System.Windows.TemplateKey.#ctor(System.Windows.TemplateKey.TemplateType,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.TemplateKey" /> class with the specified parameters. This constructor is protected.</summary>
      <param name="templateType">A <see cref="T:System.Windows.TemplateKey.TemplateType" /> value that specifies the type of this template.</param>
      <param name="dataType">The type for which this template is designed.</param>
    </member>
    <member name="P:System.Windows.TemplateKey.Assembly">
      <summary>Gets or sets the assembly that contains the template definition.</summary>
      <returns>The assembly in which the template is defined.</returns>
    </member>
    <member name="P:System.Windows.TemplateKey.DataType">
      <summary>Gets or sets the type for which the template is designed.</summary>
      <returns>The <see cref="T:System.Type" /> that specifies the type of object that the template is used to display, or a string that specifies the XML tag name for the XML data that the template is used to display.</returns>
    </member>
    <member name="M:System.Windows.TemplateKey.Equals(System.Object)">
      <summary>Returns a value that indicates whether the given instance is identical to this instance of <see cref="T:System.Windows.TemplateKey" />.</summary>
      <param name="o">The object to compare for equality.</param>
      <returns>
        <see langword="true" /> if the two instances are identical; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.TemplateKey.GetHashCode">
      <summary>Returns the hash code for this instance of <see cref="T:System.Windows.TemplateKey" />.</summary>
      <returns>The hash code for this instance of <see cref="T:System.Windows.TemplateKey" />.</returns>
    </member>
    <member name="M:System.Windows.TemplateKey.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Windows.TemplateKey.System#ComponentModel#ISupportInitialize#EndInit">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.TemplateKey.TemplateType">
      <summary>Describes the different types of templates that use <see cref="T:System.Windows.TemplateKey" />.</summary>
    </member>
    <member name="F:System.Windows.TemplateKey.TemplateType.DataTemplate">
      <summary>A type that is a <see cref="T:System.Windows.DataTemplate" />.</summary>
    </member>
    <member name="F:System.Windows.TemplateKey.TemplateType.TableTemplate">
      <summary>A type that is a <see langword="TableTemplate" />. This is obsolete.</summary>
    </member>
    <member name="M:System.Windows.TemplateKey.ToString">
      <summary>Returns a string representation of this <see cref="T:System.Windows.TemplateKey" />.</summary>
      <returns>A string representation of this <see cref="T:System.Windows.TemplateKey" />.</returns>
    </member>
    <member name="T:System.Windows.TemplatePartAttribute">
      <summary>Represents an attribute that is applied to the class definition to identify the types of the named parts that are used for templating.</summary>
    </member>
    <member name="M:System.Windows.TemplatePartAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.TemplatePartAttribute" /> class.</summary>
    </member>
    <member name="P:System.Windows.TemplatePartAttribute.Name">
      <summary>Gets or sets the pre-defined name of the part.</summary>
      <returns>The pre-defined name of the part.</returns>
    </member>
    <member name="P:System.Windows.TemplatePartAttribute.Type">
      <summary>Gets or sets the type of the named part this attribute is identifying.</summary>
      <returns>The type of the named part this attribute is identifying.</returns>
    </member>
    <member name="T:System.Windows.TemplateVisualStateAttribute">
      <summary>Specifies that a control can be in a certain state and that a <see cref="T:System.Windows.VisualState" /> is expected in the control's <see cref="T:System.Windows.Controls.ControlTemplate" />.</summary>
    </member>
    <member name="M:System.Windows.TemplateVisualStateAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.TemplateVisualStateAttribute" /> class.</summary>
    </member>
    <member name="P:System.Windows.TemplateVisualStateAttribute.GroupName">
      <summary>Gets or sets the name of the group that the state belongs to.</summary>
      <returns>The name of the <see cref="T:System.Windows.VisualStateGroup" /> that the state belongs to.</returns>
    </member>
    <member name="P:System.Windows.TemplateVisualStateAttribute.Name">
      <summary>Gets or sets the name of the state that the control can be in.</summary>
      <returns>The name of the state that the control can be in.</returns>
    </member>
    <member name="T:System.Windows.ThemeDictionaryExtension">
      <summary>Implements a markup extension that enables application authors to customize control styles based on the current system theme.</summary>
    </member>
    <member name="M:System.Windows.ThemeDictionaryExtension.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.ThemeDictionaryExtension" /> class.</summary>
    </member>
    <member name="M:System.Windows.ThemeDictionaryExtension.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.ThemeDictionaryExtension" /> class, using the specified assembly name.</summary>
      <param name="assemblyName">The assembly name string.</param>
    </member>
    <member name="P:System.Windows.ThemeDictionaryExtension.AssemblyName">
      <summary>Gets or sets a string setting a particular naming convention to identify which dictionary applies for a particular theme.</summary>
      <returns>The assembly name string.</returns>
    </member>
    <member name="M:System.Windows.ThemeDictionaryExtension.ProvideValue(System.IServiceProvider)">
      <summary>Returns an object that should be set on the property where this extension is applied. For <see cref="T:System.Windows.ThemeDictionaryExtension" />, this is the URI value for a particular theme dictionary extension.</summary>
      <param name="serviceProvider">An object that can provide services for the markup extension. This service is expected to provide results for <see cref="T:System.Windows.Markup.IXamlTypeResolver" />.</param>
      <returns>The object value to set on the property where the extension is applied.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Windows.ThemeDictionaryExtension.AssemblyName" /> property is <see langword="null" />. You must set this value during construction or before using the <see cref="M:System.Windows.ThemeDictionaryExtension.ProvideValue(System.IServiceProvider)" /> method.  
 -or-  
 <paramref name="serviceProvider" /> is <see langword="null" /> or does not provide a service for <see cref="T:System.Windows.Markup.IXamlTypeResolver" />.  
 -or-  
 <paramref name="serviceProvider" /> specifies a target type that does not match <see cref="P:System.Windows.ResourceDictionary.Source" />.</exception>
    </member>
    <member name="T:System.Windows.ThemeInfoAttribute">
      <summary>Specifies the location in which theme dictionaries are stored for an assembly.</summary>
    </member>
    <member name="M:System.Windows.ThemeInfoAttribute.#ctor(System.Windows.ResourceDictionaryLocation,System.Windows.ResourceDictionaryLocation)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.ThemeInfoAttribute" /> class and creates an attribute that defines theme dictionary locations for types in an assembly.</summary>
      <param name="themeDictionaryLocation">The location of theme-specific resources.</param>
      <param name="genericDictionaryLocation">The location of generic, not theme-specific, resources.</param>
    </member>
    <member name="P:System.Windows.ThemeInfoAttribute.GenericDictionaryLocation">
      <summary>The location of generic, not theme specific, resources.</summary>
      <returns>The <see cref="T:System.Windows.ResourceDictionaryLocation" /> of the generic <see cref="T:System.Windows.ResourceDictionary" />.</returns>
    </member>
    <member name="P:System.Windows.ThemeInfoAttribute.ThemeDictionaryLocation">
      <summary>The location of theme specific resources.</summary>
      <returns>The <see cref="T:System.Windows.ResourceDictionaryLocation" /> of the theme specific <see cref="T:System.Windows.ResourceDictionary" />.</returns>
    </member>
    <member name="T:System.Windows.Thickness">
      <summary>Describes the thickness of a frame around a rectangle. Four <see cref="T:System.Double" /> values describe the <see cref="P:System.Windows.Thickness.Left" />, <see cref="P:System.Windows.Thickness.Top" />, <see cref="P:System.Windows.Thickness.Right" />, and <see cref="P:System.Windows.Thickness.Bottom" /> sides of the rectangle, respectively.</summary>
    </member>
    <member name="M:System.Windows.Thickness.#ctor(System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Thickness" /> structure that has the specified uniform length on each side.</summary>
      <param name="uniformLength">The uniform length applied to all four sides of the bounding rectangle.</param>
    </member>
    <member name="M:System.Windows.Thickness.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Thickness" /> structure that has specific lengths (supplied as a <see cref="T:System.Double" />) applied to each side of the rectangle.</summary>
      <param name="left">The thickness for the left side of the rectangle.</param>
      <param name="top">The thickness for the upper side of the rectangle.</param>
      <param name="right">The thickness for the right side of the rectangle</param>
      <param name="bottom">The thickness for the lower side of the rectangle.</param>
    </member>
    <member name="P:System.Windows.Thickness.Bottom">
      <summary>Gets or sets the width, in pixels, of the lower side of the bounding rectangle.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the width, in pixels, of the lower side of the bounding rectangle for this instance of <see cref="T:System.Windows.Thickness" />. A pixel is equal to 1/96 of an inch. The default is 0.</returns>
    </member>
    <member name="M:System.Windows.Thickness.Equals(System.Object)">
      <summary>Compares this <see cref="T:System.Windows.Thickness" /> structure to another <see cref="T:System.Object" /> for equality.</summary>
      <param name="obj">The object to compare.</param>
      <returns>
        <see langword="true" /> if the two objects are equal; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Thickness.Equals(System.Windows.Thickness)">
      <summary>Compares this <see cref="T:System.Windows.Thickness" /> structure to another <see cref="T:System.Windows.Thickness" /> structure for equality.</summary>
      <param name="thickness">An instance of <see cref="T:System.Windows.Thickness" /> to compare for equality.</param>
      <returns>
        <see langword="true" /> if the two instances of <see cref="T:System.Windows.Thickness" /> are equal; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Thickness.GetHashCode">
      <summary>Returns the hash code of the structure.</summary>
      <returns>A hash code for this instance of <see cref="T:System.Windows.Thickness" />.</returns>
    </member>
    <member name="P:System.Windows.Thickness.Left">
      <summary>Gets or sets the width, in pixels, of the left side of the bounding rectangle.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the width, in pixels, of the left side of the bounding rectangle for this instance of <see cref="T:System.Windows.Thickness" />. a pixel is equal to 1/96 on an inch. The default is 0.</returns>
    </member>
    <member name="M:System.Windows.Thickness.op_Equality(System.Windows.Thickness,System.Windows.Thickness)">
      <summary>Compares the value of two <see cref="T:System.Windows.Thickness" /> structures for equality.</summary>
      <param name="t1">The first structure to compare.</param>
      <param name="t2">The other structure to compare.</param>
      <returns>
        <see langword="true" /> if the two instances of <see cref="T:System.Windows.Thickness" /> are equal; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Thickness.op_Inequality(System.Windows.Thickness,System.Windows.Thickness)">
      <summary>Compares two <see cref="T:System.Windows.Thickness" /> structures for inequality.</summary>
      <param name="t1">The first structure to compare.</param>
      <param name="t2">The other structure to compare.</param>
      <returns>
        <see langword="true" /> if the two instances of <see cref="T:System.Windows.Thickness" /> are not equal; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Thickness.Right">
      <summary>Gets or sets the width, in pixels, of the right side of the bounding rectangle.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the width, in pixels, of the right side of the bounding rectangle for this instance of <see cref="T:System.Windows.Thickness" />. A pixel is equal to 1/96 of an inch. The default is 0.</returns>
    </member>
    <member name="P:System.Windows.Thickness.Top">
      <summary>Gets or sets the width, in pixels, of the upper side of the bounding rectangle.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the width, in pixels, of the upper side of the bounding rectangle for this instance of <see cref="T:System.Windows.Thickness" />. A pixel is equal to 1/96 of an inch. The default is 0.</returns>
    </member>
    <member name="M:System.Windows.Thickness.ToString">
      <summary>Returns the string representation of the <see cref="T:System.Windows.Thickness" /> structure.</summary>
      <returns>A <see cref="T:System.String" /> that represents the <see cref="T:System.Windows.Thickness" /> value.</returns>
    </member>
    <member name="T:System.Windows.ThicknessConverter">
      <summary>Converts instances of other types to and from instances of <see cref="T:System.Windows.Thickness" />.</summary>
    </member>
    <member name="M:System.Windows.ThicknessConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.ThicknessConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.ThicknessConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether the type converter can create an instance of <see cref="T:System.Windows.Thickness" /> from a specified type.</summary>
      <param name="typeDescriptorContext">The context information of a type.</param>
      <param name="sourceType">The source type that the type converter is evaluating for conversion.</param>
      <returns>
        <see langword="true" /> if the type converter can create an instance of <see cref="T:System.Windows.Thickness" /> from the specified type; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.ThicknessConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether the type converter can convert an instance of <see cref="T:System.Windows.Thickness" /> to a different type.</summary>
      <param name="typeDescriptorContext">The context information of a type.</param>
      <param name="destinationType">The type for which the type converter is evaluating this instance of <see cref="T:System.Windows.Thickness" /> for conversion.</param>
      <returns>
        <see langword="true" /> if the type converter can convert this instance of <see cref="T:System.Windows.Thickness" /> to the <paramref name="destinationType" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.ThicknessConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Attempts to create an instance of <see cref="T:System.Windows.Thickness" /> from a specified object.</summary>
      <param name="typeDescriptorContext">The context information for a type.</param>
      <param name="cultureInfo">The <see cref="T:System.Globalization.CultureInfo" /> of the type being converted.</param>
      <param name="source">The <paramref name="source" /><see cref="T:System.Object" /> being converted.</param>
      <returns>An instance of <see cref="T:System.Windows.Thickness" /> created from the converted <paramref name="source" />.</returns>
      <exception cref="T:System.ArgumentNullException">The <paramref name="source" /> object is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">The example object is not a null reference and is not a valid type that can be converted to a <see cref="T:System.Windows.Thickness" />.</exception>
    </member>
    <member name="M:System.Windows.ThicknessConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Attempts to convert an instance of <see cref="T:System.Windows.Thickness" /> to a specified type.</summary>
      <param name="typeDescriptorContext">The context information of a type.</param>
      <param name="cultureInfo">The <see cref="T:System.Globalization.CultureInfo" /> of the type being converted.</param>
      <param name="value">The instance of <see cref="T:System.Windows.Thickness" /> to convert.</param>
      <param name="destinationType">The type that this instance of <see cref="T:System.Windows.Thickness" /> is converted to.</param>
      <returns>The type that is created when the type converter converts an instance of <see cref="T:System.Windows.Thickness" />.</returns>
      <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> object is not a null reference (<see langword="Nothing" />) and is not a Brush, or the <paramref name="destinationType" /> is not one of the valid types for conversion.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="value" /> object is a null reference.</exception>
    </member>
    <member name="T:System.Windows.Trigger">
      <summary>Represents a trigger that applies property values or performs actions conditionally.</summary>
    </member>
    <member name="M:System.Windows.Trigger.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Trigger" /> class.</summary>
    </member>
    <member name="P:System.Windows.Trigger.Property">
      <summary>Gets or sets the property that returns the value that is compared with the <see cref="P:System.Windows.Trigger.Value" /> property of the trigger. The comparison is a reference equality check.</summary>
      <returns>A <see cref="T:System.Windows.DependencyProperty" /> that returns the property value of the element. The default value is <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException">A <see cref="T:System.Windows.Style" /> cannot contain a <see cref="T:System.Windows.Trigger" /> that refers to the <see cref="T:System.Windows.Style" /> property.</exception>
      <exception cref="T:System.InvalidOperationException">After a <see cref="T:System.Windows.Trigger" /> is in use, it cannot be modified.</exception>
    </member>
    <member name="M:System.Windows.Trigger.ReceiveTypeConverter(System.Object,System.Windows.Markup.XamlSetTypeConverterEventArgs)">
      <summary>Handles cases where a type converter provides a value for a property of a <see cref="T:System.Windows.Trigger" /> object.</summary>
      <param name="targetObject">The object where the type converter sets the value.</param>
      <param name="eventArgs">Data that is relevant for type converter processing.</param>
    </member>
    <member name="P:System.Windows.Trigger.Setters">
      <summary>Gets a collection of <see cref="T:System.Windows.Setter" /> objects, which describe the property values to apply when the specified condition has been met.</summary>
      <returns>The default value is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Trigger.SourceName">
      <summary>Gets or sets the name of the object with the property that causes the associated setters to be applied.</summary>
      <returns>The default property is <see langword="null" />. If this property is <see langword="null" />, then the <see cref="P:System.Windows.Trigger.Property" /> property is evaluated with respect to the element this style or template is being applied to (the styled parent or the templated parent).</returns>
      <exception cref="T:System.InvalidOperationException">After a <see cref="T:System.Windows.Trigger" /> is in use, it cannot be modified.</exception>
    </member>
    <member name="M:System.Windows.Trigger.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary>Signals the object that initialization is starting.</summary>
    </member>
    <member name="M:System.Windows.Trigger.System#ComponentModel#ISupportInitialize#EndInit">
      <summary>Signals the object that initialization is complete.</summary>
    </member>
    <member name="M:System.Windows.Trigger.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>Adds a child object.</summary>
      <param name="value">The child object to add.</param>
    </member>
    <member name="M:System.Windows.Trigger.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>Adds the text content of a node to the object.</summary>
      <param name="text">The text to add to the object.</param>
    </member>
    <member name="P:System.Windows.Trigger.Value">
      <summary>Gets or sets the value to be compared with the property value of the element. The comparison is a reference equality check.</summary>
      <returns>The default value is <see langword="null" />. See also the Exceptions section.</returns>
      <exception cref="T:System.ArgumentException">Expressions such as bindings are not supported.</exception>
      <exception cref="T:System.InvalidOperationException">After a <see cref="T:System.Windows.Trigger" /> is in use, it cannot be modified.</exception>
    </member>
    <member name="T:System.Windows.TriggerAction">
      <summary>Describes an action to perform for a trigger.</summary>
    </member>
    <member name="T:System.Windows.TriggerActionCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.TriggerAction" /> objects.</summary>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Windows.TriggerActionCollection" /> class.</summary>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.#ctor(System.Int32)">
      <summary>Initializes an instance of the <see cref="T:System.Windows.TriggerActionCollection" /> class that has the specified initial size.</summary>
      <param name="initialSize">The size of the collection.</param>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.Add(System.Windows.TriggerAction)">
      <summary>Adds an item to the collection.</summary>
      <param name="value">The <see cref="T:System.Windows.TriggerAction" /> object to add.</param>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.Contains(System.Windows.TriggerAction)">
      <summary>Returns a value that indicates whether the collection contains the specified <see cref="T:System.Windows.TriggerAction" /> object.</summary>
      <param name="value">The <see cref="T:System.Windows.TriggerAction" /> object to locate in the collection.</param>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.TriggerAction" /> object is found in the collection; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.CopyTo(System.Windows.TriggerAction[],System.Int32)">
      <summary>Begins at the specified index and copies the collection items to the specified array.</summary>
      <param name="array">The one-dimensional array that is the destination of the items that are copied from the collection. The array must use zero-based indexing.</param>
      <param name="index">The zero-based index in the <paramref name="array" /> where copying starts.</param>
    </member>
    <member name="P:System.Windows.TriggerActionCollection.Count">
      <summary>Gets the number of items in the collection.</summary>
      <returns>The number of items that the collection contains.</returns>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.IndexOf(System.Windows.TriggerAction)">
      <summary>Returns the index of the specified item in the collection.</summary>
      <param name="value">The <see cref="T:System.Windows.TriggerAction" /> object to locate in the collection.</param>
      <returns>The index of <paramref name="value" /> if the <see cref="T:System.Windows.TriggerAction" /> object is found in the collection; otherwise, -1.</returns>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.Insert(System.Int32,System.Windows.TriggerAction)">
      <summary>Inserts the specified item into the collection at the specified index.</summary>
      <param name="index">The zero-based index where the <paramref name="value" /> must be inserted.</param>
      <param name="value">The <see cref="T:System.Windows.TriggerAction" /> object to insert into the collection.</param>
    </member>
    <member name="P:System.Windows.TriggerActionCollection.IsReadOnly">
      <summary>Gets a value that indicates whether the collection is read-only.</summary>
      <returns>
        <see langword="true" /> if the collection is read-only; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.TriggerActionCollection.Item(System.Int32)">
      <summary>Gets or sets the item that is at the specified index.</summary>
      <param name="index">The zero-based index of the item to get or set.</param>
      <returns>The <see cref="T:System.Windows.TriggerAction" /> object that is at the specified index.</returns>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.Remove(System.Windows.TriggerAction)">
      <summary>Removes the first occurrence of the specified object from the collection.</summary>
      <param name="value">The <see cref="T:System.Windows.TriggerAction" /> object to remove from the collection.</param>
      <returns>
        <see langword="true" /> if item is successfully removed; otherwise, <see langword="false" />. This method also returns false if item was not found in the <see cref="T:System.Windows.TriggerActionCollection" />.</returns>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.RemoveAt(System.Int32)">
      <summary>Removes from the collection the item that is located at the specified index.</summary>
      <param name="index">The zero-based index of the item to remove.</param>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="array">The one-dimensional array that is the destination of the items that are copied from the collection. The array must use zero-based indexing.</param>
      <param name="index">The zero-based index in the <paramref name="array" /> where copying starts.</param>
    </member>
    <member name="P:System.Windows.TriggerActionCollection.System#Collections#ICollection#IsSynchronized">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>
        <see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.TriggerActionCollection.System#Collections#ICollection#SyncRoot">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.System#Collections#IList#Add(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Collections.IList" />.</param>
      <returns>The position into which the new element was inserted.</returns>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.System#Collections#IList#Contains(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</param>
      <returns>true if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Collections.IList" />; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</param>
      <returns>The index of <paramref name="value" /> if found in the list; otherwise, -1.</returns>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="index">The zero-based index at which <paramref name="value" /> should be inserted.</param>
      <param name="value">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Collections.IList" />.</param>
    </member>
    <member name="P:System.Windows.TriggerActionCollection.System#Collections#IList#IsFixedSize">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Collections.IList" /> has a fixed size; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.TriggerActionCollection.System#Collections#IList#Item(System.Int32)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="index">The zero-based index of the item to get or set.</param>
      <returns>The object that is at the specified index.</returns>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.System#Collections#IList#Remove(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="value">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Collections.IList" />.</param>
    </member>
    <member name="T:System.Windows.TriggerBase">
      <summary>Represents the base class for specifying a conditional value within a <see cref="T:System.Windows.Style" /> object.</summary>
    </member>
    <member name="P:System.Windows.TriggerBase.EnterActions">
      <summary>Gets a collection of <see cref="T:System.Windows.TriggerAction" /> objects to apply when the trigger object becomes active. This property does not apply to the <see cref="T:System.Windows.EventTrigger" /> class.</summary>
      <returns>The default value is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.TriggerBase.ExitActions">
      <summary>Gets a collection of <see cref="T:System.Windows.TriggerAction" /> objects to apply when the trigger object becomes inactive. This property does not apply to the <see cref="T:System.Windows.EventTrigger" /> class.</summary>
      <returns>The default value is <see langword="null" />.</returns>
    </member>
    <member name="T:System.Windows.TriggerCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.TriggerBase" /> objects.</summary>
    </member>
    <member name="P:System.Windows.TriggerCollection.IsSealed">
      <summary>Gets a value that indicates whether this collection is read-only and cannot be changed.</summary>
      <returns>
        <see langword="true" /> if this collection is read-only; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.ValueSource">
      <summary>Reports the information returned from <see cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />.</summary>
    </member>
    <member name="P:System.Windows.ValueSource.BaseValueSource">
      <summary>Gets a value of the <see cref="T:System.Windows.BaseValueSource" /> enumeration, which reports the source that provided the dependency property system with a value.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="M:System.Windows.ValueSource.Equals(System.Object)">
      <summary>Returns a value indicating whether this <see cref="T:System.Windows.ValueSource" /> is equal to a specified object.</summary>
      <param name="o">The object to compare with this <see cref="T:System.Windows.ValueSource" />.</param>
      <returns>
        <see langword="true" /> if the provided object is equivalent to the current <see cref="T:System.Windows.ValueSource" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.ValueSource.GetHashCode">
      <summary>Returns the hash code for this <see cref="T:System.Windows.ValueSource" />.</summary>
      <returns>A 32-bit unsigned integer hash code.</returns>
    </member>
    <member name="P:System.Windows.ValueSource.IsAnimated">
      <summary>Gets a value that declares whether the property is being animated.</summary>
      <returns>
        <see langword="true" /> if the property is animated; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.ValueSource.IsCoerced">
      <summary>Gets a value that declares whether this value resulted from a <see cref="T:System.Windows.CoerceValueCallback" /> implementation applied to a dependency property.</summary>
      <returns>
        <see langword="true" /> if the value resulted from a <see cref="T:System.Windows.CoerceValueCallback" /> implementation applied to a dependency property; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.ValueSource.IsCurrent">
      <summary>Gets whether the value was set by the <see cref="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" /> method.</summary>
      <returns>
        <see langword="true" /> if the value was set by the <see cref="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" /> method; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.ValueSource.IsExpression">
      <summary>Gets a value that declares whether this value resulted from an evaluated expression. This might be a <see cref="T:System.Windows.Data.BindingExpression" /> supporting a binding, or an internal expression such as those that support the DynamicResource Markup Extension.</summary>
      <returns>
        <see langword="true" /> if the value came from an evaluated expression; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.ValueSource.op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)">
      <summary>Determines whether two <see cref="T:System.Windows.ValueSource" /> instances have the same value.</summary>
      <param name="vs1">The first <see cref="T:System.Windows.ValueSource" /> to compare.</param>
      <param name="vs2">The second <see cref="T:System.Windows.ValueSource" /> to compare.</param>
      <returns>
        <see langword="true" /> if the two <see cref="T:System.Windows.ValueSource" /> instances are equivalent; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.ValueSource.op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)">
      <summary>Determines whether two <see cref="T:System.Windows.ValueSource" /> instances do not have the same value.</summary>
      <param name="vs1">The first <see cref="T:System.Windows.ValueSource" /> to compare.</param>
      <param name="vs2">The second <see cref="T:System.Windows.ValueSource" /> to compare.</param>
      <returns>
        <see langword="true" /> if the two <see cref="T:System.Windows.ValueSource" /> instances are not equivalent; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.VerticalAlignment">
      <summary>Describes how a child element is vertically positioned or stretched within a parent's layout slot.</summary>
    </member>
    <member name="F:System.Windows.VerticalAlignment.Bottom">
      <summary>The child element is aligned to the bottom of the parent's layout slot.</summary>
    </member>
    <member name="F:System.Windows.VerticalAlignment.Center">
      <summary>The child element is aligned to the center of the parent's layout slot.</summary>
    </member>
    <member name="F:System.Windows.VerticalAlignment.Stretch">
      <summary>The child element stretches to fill the parent's layout slot.</summary>
    </member>
    <member name="F:System.Windows.VerticalAlignment.Top">
      <summary>The child element is aligned to the top of the parent's layout slot.</summary>
    </member>
    <member name="T:System.Windows.VisualState">
      <summary>Represents the visual appearance of the control when it is in a specific state.</summary>
    </member>
    <member name="M:System.Windows.VisualState.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.VisualState" /> class.</summary>
    </member>
    <member name="P:System.Windows.VisualState.Name">
      <summary>Gets or sets the name of the <see cref="T:System.Windows.VisualState" />.</summary>
      <returns>The name of the <see cref="T:System.Windows.VisualState" />.</returns>
    </member>
    <member name="P:System.Windows.VisualState.Storyboard">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.Animation.Storyboard" /> that defines the appearance of the control when it is in the state that is represented by the <see cref="T:System.Windows.VisualState" />.</summary>
      <returns>A storyboard that defines the appearance of the control when it is in the state that is represented by the <see cref="T:System.Windows.VisualState" />. The default is <see langword="null" />.</returns>
    </member>
    <member name="T:System.Windows.VisualStateChangedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> and <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanged" /> events.</summary>
    </member>
    <member name="P:System.Windows.VisualStateChangedEventArgs.Control">
      <summary>Gets the element that is transitioning states.</summary>
      <returns>The element that is transitioning states if the <see cref="T:System.Windows.VisualStateGroup" /> is in a <see cref="T:System.Windows.Controls.ControlTemplate" />; otherwise, <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.VisualStateChangedEventArgs.NewState">
      <summary>Gets the state that the element is transitioning to or has transitioned to.</summary>
      <returns>The state that the element is transitioning to or has transitioned to.</returns>
    </member>
    <member name="P:System.Windows.VisualStateChangedEventArgs.OldState">
      <summary>Gets the state that the element is transitioning to or has transitioned from.</summary>
      <returns>The state that the element is transitioning to or has transitioned from.</returns>
    </member>
    <member name="P:System.Windows.VisualStateChangedEventArgs.StateGroupsRoot">
      <summary>Gets the root element that contains the <see cref="T:System.Windows.VisualStateManager" />.</summary>
      <returns>The root element that contains the <see cref="T:System.Windows.VisualStateManager" />.</returns>
    </member>
    <member name="T:System.Windows.VisualStateGroup">
      <summary>Contains mutually exclusive <see cref="T:System.Windows.VisualState" /> objects and <see cref="T:System.Windows.VisualTransition" /> objects that are used to move from one state to another.</summary>
    </member>
    <member name="M:System.Windows.VisualStateGroup.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.VisualStateGroup" /> class.</summary>
    </member>
    <member name="P:System.Windows.VisualStateGroup.CurrentState">
      <summary>Gets the <see cref="T:System.Windows.VisualState" /> that is currently applied to the control.</summary>
      <returns>The <see cref="T:System.Windows.VisualState" /> that is currently applied to the control.</returns>
    </member>
    <member name="E:System.Windows.VisualStateGroup.CurrentStateChanged">
      <summary>Occurs after a control transitions to a different state.</summary>
    </member>
    <member name="E:System.Windows.VisualStateGroup.CurrentStateChanging">
      <summary>Occurs when a control starts transitioning to a different state.</summary>
    </member>
    <member name="P:System.Windows.VisualStateGroup.Name">
      <summary>Gets or sets the name of the <see cref="T:System.Windows.VisualStateGroup" />.</summary>
      <returns>The name of the <see cref="T:System.Windows.VisualStateGroup" />.</returns>
    </member>
    <member name="P:System.Windows.VisualStateGroup.States">
      <summary>Gets the collection of mutually exclusive <see cref="T:System.Windows.VisualState" /> objects.</summary>
      <returns>The collection of mutually exclusive <see cref="T:System.Windows.VisualState" /> objects.</returns>
    </member>
    <member name="P:System.Windows.VisualStateGroup.Transitions">
      <summary>Gets the collection of <see cref="T:System.Windows.VisualTransition" /> objects.</summary>
      <returns>The collection of <see cref="T:System.Windows.VisualTransition" /> objects.</returns>
    </member>
    <member name="T:System.Windows.VisualStateManager">
      <summary>Manages states and the logic for transitioning between states for controls.</summary>
    </member>
    <member name="M:System.Windows.VisualStateManager.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.VisualStateManager" /> class.</summary>
    </member>
    <member name="P:System.Windows.VisualStateManager.CustomVisualStateManager">
      <summary>Gets or sets the <see cref="T:System.Windows.VisualStateManager" /> object that transitions between the states of a control.</summary>
    </member>
    <member name="F:System.Windows.VisualStateManager.CustomVisualStateManagerProperty">
      <summary>Identifies the <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.VisualStateManager.GetCustomVisualStateManager(System.Windows.FrameworkElement)">
      <summary>Gets the <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> attached property.</summary>
      <param name="obj">The element to get the <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> attached property from.</param>
      <returns>The visual state manager that transitions between the states of a control.</returns>
    </member>
    <member name="M:System.Windows.VisualStateManager.GetVisualStateGroups(System.Windows.FrameworkElement)">
      <summary>Gets the <see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /> attached property.</summary>
      <param name="obj">The element to get the <see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /> attached property from.</param>
      <returns>The collection of <see cref="T:System.Windows.VisualStateGroup" /> objects that is associated with the specified object.</returns>
    </member>
    <member name="M:System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)">
      <summary>Transitions the element between two states. Use this method to transition states that are defined by an application, rather than defined by a control.</summary>
      <param name="stateGroupsRoot">The root element that contains the <see cref="T:System.Windows.VisualStateManager" />.</param>
      <param name="stateName">The state to transition to.</param>
      <param name="useTransitions">
        <see langword="true" /> to use a <see cref="T:System.Windows.VisualTransition" /> object to transition between states; otherwise, <see langword="false" />.</param>
      <returns>
        <see langword="true" /> if the control successfully transitioned to the new state; otherwise, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stateGroupsRoot" /> is <see langword="null" />.  
-or-  
<paramref name="stateName" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.VisualStateManager.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)">
      <summary>Transitions the control between two states. Use this method to transition states on control that has a <see cref="T:System.Windows.Controls.ControlTemplate" />.</summary>
      <param name="control">The control to transition between states.</param>
      <param name="stateName">The state to transition to.</param>
      <param name="useTransitions">
        <see langword="true" /> to use a <see cref="T:System.Windows.VisualTransition" /> object to transition between states; otherwise, <see langword="false" />.</param>
      <returns>
        <see langword="true" /> if the control successfully transitioned to the new state; otherwise, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="control" /> is <see langword="null" />.  
-or-  
<paramref name="stateName" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)">
      <summary>Transitions a control between states.</summary>
      <param name="control">The control to transition between states.</param>
      <param name="stateGroupsRoot">The root element that contains the <see cref="T:System.Windows.VisualStateManager" />.</param>
      <param name="stateName">The name of the state to transition to.</param>
      <param name="group">The <see cref="T:System.Windows.VisualStateGroup" /> that the state belongs to.</param>
      <param name="state">The representation of the state to transition to.</param>
      <param name="useTransitions">
        <see langword="true" /> to use a <see cref="T:System.Windows.VisualTransition" /> object to transition between states; otherwise, <see langword="false" />.</param>
      <returns>
        <see langword="true" /> if the control successfully transitioned to the new state; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
      <summary>Raises the <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> event on the specified <see cref="T:System.Windows.VisualStateGroup" /> object.</summary>
      <param name="stateGroup">The object that the <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> event occurred on.</param>
      <param name="oldState">The state that the control is transitioning from.</param>
      <param name="newState">The state that the control is transitioning to.</param>
      <param name="control">The control that is transitioning states.</param>
      <param name="stateGroupsRoot">The root element that contains the <see cref="T:System.Windows.VisualStateManager" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stateGroupsRoot" /> is <see langword="null" />.  
-or-  
<paramref name="newState" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
      <summary>Raises the <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> event on the specified <see cref="T:System.Windows.VisualStateGroup" /> object.</summary>
      <param name="stateGroup">The object that the <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> event occurred on.</param>
      <param name="oldState">The state that the control is transitioning from.</param>
      <param name="newState">The state that the control is transitioning to.</param>
      <param name="control">The control that is transitioning states.</param>
      <param name="stateGroupsRoot">The root element that contains the <see cref="T:System.Windows.VisualStateManager" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stateGroupsRoot" /> is <see langword="null" />.  
-or-  
<paramref name="newState" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.VisualStateManager.SetCustomVisualStateManager(System.Windows.FrameworkElement,System.Windows.VisualStateManager)">
      <summary>Sets the <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> attached property.</summary>
      <param name="obj">The object to set the property on.</param>
      <param name="value">The visual state manager that transitions between the states of a control.</param>
    </member>
    <member name="P:System.Windows.VisualStateManager.VisualStateGroups">
      <summary>Gets or sets a collection of <see cref="T:System.Windows.VisualStateGroup" /> objects.</summary>
    </member>
    <member name="F:System.Windows.VisualStateManager.VisualStateGroupsProperty">
      <summary>Identifies the <see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.VisualTransition">
      <summary>Represents the visual behavior that occurs when a control transitions from one state to another.</summary>
    </member>
    <member name="M:System.Windows.VisualTransition.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.VisualTransition" /> class.</summary>
    </member>
    <member name="P:System.Windows.VisualTransition.From">
      <summary>Gets or sets the name of the <see cref="T:System.Windows.VisualState" /> to transition from.</summary>
      <returns>The name of the <see cref="T:System.Windows.VisualState" /> to transition from.</returns>
    </member>
    <member name="P:System.Windows.VisualTransition.GeneratedDuration">
      <summary>Gets or sets the time that it takes to move from one state to another.</summary>
      <returns>The time that it takes to move from one state to another.</returns>
    </member>
    <member name="P:System.Windows.VisualTransition.GeneratedEasingFunction">
      <summary>Gets or sets a custom mathematical formula that is used to transition between states.</summary>
      <returns>A custom mathematical formula that is used to transition between states.</returns>
    </member>
    <member name="P:System.Windows.VisualTransition.Storyboard">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Animation.Storyboard" /> that occurs when the transition occurs.</summary>
      <returns>The <see cref="T:System.Windows.Media.Animation.Storyboard" /> that occurs when the transition occurs.</returns>
    </member>
    <member name="P:System.Windows.VisualTransition.To">
      <summary>Gets or sets the name of the <see cref="T:System.Windows.VisualState" /> to transition to.</summary>
      <returns>The name of the <see cref="T:System.Windows.VisualState" /> to transition to.</returns>
    </member>
    <member name="T:System.Windows.Window">
      <summary>Provides the ability to create, configure, show, and manage the lifetime of windows and dialog boxes.</summary>
    </member>
    <member name="M:System.Windows.Window.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Window" /> class.</summary>
    </member>
    <member name="M:System.Windows.Window.Activate">
      <summary>Attempts to bring the window to the foreground and activates it.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Window" /> was successfully activated; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="E:System.Windows.Window.Activated">
      <summary>Occurs when a window becomes the foreground window.</summary>
    </member>
    <member name="P:System.Windows.Window.AllowsTransparency">
      <summary>Gets or sets a value that indicates whether a window's client area supports transparency.</summary>
      <returns>
        <see langword="true" /> if the window supports transparency; otherwise, <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">A window that has a <see cref="P:System.Windows.Window.WindowStyle" /> value of anything other than <see cref="F:System.Windows.WindowStyle.None" />.</exception>
    </member>
    <member name="F:System.Windows.Window.AllowsTransparencyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Window.AllowsTransparency" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Window.ArrangeOverride(System.Windows.Size)">
      <summary>Override this method to arrange and size a window and its child elements.</summary>
      <param name="arrangeBounds">A <see cref="T:System.Windows.Size" /> that reflects the final size that the window should use to arrange itself and its children.</param>
      <returns>A <see cref="T:System.Windows.Size" /> that reflects the actual size that was used.</returns>
    </member>
    <member name="M:System.Windows.Window.Close">
      <summary>Manually closes a <see cref="T:System.Windows.Window" />.</summary>
    </member>
    <member name="E:System.Windows.Window.Closed">
      <summary>Occurs when the window is about to close.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.UIElement.Visibility" /> is set, or <see cref="M:System.Windows.Window.Show" />, <see cref="M:System.Windows.Window.ShowDialog" />, or <see cref="M:System.Windows.Window.Hide" /> is called while a window is closing.</exception>
    </member>
    <member name="E:System.Windows.Window.Closing">
      <summary>Occurs directly after <see cref="M:System.Windows.Window.Close" /> is called, and can be handled to cancel window closure.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.UIElement.Visibility" /> is set, or <see cref="M:System.Windows.Window.Show" />, <see cref="M:System.Windows.Window.ShowDialog" />, or <see cref="M:System.Windows.Window.Close" /> is called while a window is closing.</exception>
    </member>
    <member name="E:System.Windows.Window.ContentRendered">
      <summary>Occurs after a window's content has been rendered.</summary>
    </member>
    <member name="E:System.Windows.Window.Deactivated">
      <summary>Occurs when a window becomes a background window.</summary>
    </member>
    <member name="P:System.Windows.Window.DialogResult">
      <summary>Gets or sets the dialog result value, which is the value that is returned from the <see cref="M:System.Windows.Window.ShowDialog" /> method.</summary>
      <returns>A <see cref="T:System.Nullable`1" /> value of type <see cref="T:System.Boolean" />. The default is <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Window.DialogResult" /> is set before a window is opened by calling <see cref="M:System.Windows.Window.ShowDialog" />.  
-or-  
<see cref="P:System.Windows.Window.DialogResult" /> is set on a window that is opened by calling <see cref="M:System.Windows.Window.Show" />.</exception>
    </member>
    <member name="E:System.Windows.Window.DpiChanged">
      <summary>Occurs after the DPI of the screen on which the Window is displayed changes.</summary>
    </member>
    <member name="F:System.Windows.Window.DpiChangedEvent">
      <summary>A <see cref="T:System.Windows.RoutedEvent" /> for when the DPI of the screen the Window is on changes.</summary>
    </member>
    <member name="M:System.Windows.Window.DragMove">
      <summary>Allows a window to be dragged by a mouse with its left button down over an exposed area of the window's client area.</summary>
      <exception cref="T:System.InvalidOperationException">The left mouse button is not down.</exception>
    </member>
    <member name="M:System.Windows.Window.GetWindow(System.Windows.DependencyObject)">
      <summary>Returns a reference to the <see cref="T:System.Windows.Window" /> object that hosts the content tree within which the dependency object is located.</summary>
      <param name="dependencyObject">The dependency object.</param>
      <returns>A <see cref="T:System.Windows.Window" /> reference to the host window.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Window.Hide">
      <summary>Makes a window invisible.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Windows.Window.Hide" /> is called on a window that is closing (<see cref="E:System.Windows.Window.Closing" />) or has been closed (<see cref="E:System.Windows.Window.Closed" />).</exception>
    </member>
    <member name="P:System.Windows.Window.Icon">
      <summary>Gets or sets a window's icon.</summary>
      <returns>An <see cref="T:System.Windows.Media.ImageSource" /> object that represents the icon.</returns>
    </member>
    <member name="F:System.Windows.Window.IconProperty">
      <summary>Identifies the <see cref="P:System.Windows.Window.Icon" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Window.IsActive">
      <summary>Gets a value that indicates whether the window is active.</summary>
      <returns>
        <see langword="true" /> if the window is active; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Window.IsActiveProperty">
      <summary>Identifies the <see cref="P:System.Windows.Window.IsActive" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Window.Left">
      <summary>Gets or sets the position of the window's left edge, in relation to the desktop.</summary>
      <returns>The position of the window's left edge, in logical units (1/96th of an inch).</returns>
    </member>
    <member name="F:System.Windows.Window.LeftProperty">
      <summary>Identifies the <see cref="P:System.Windows.Window.Left" /> dependency property.</summary>
    </member>
    <member name="E:System.Windows.Window.LocationChanged">
      <summary>Occurs when the window's location changes.</summary>
    </member>
    <member name="P:System.Windows.Window.LogicalChildren">
      <summary>Gets an enumerator for a window's logical child elements.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> a window's logical child elements.</returns>
    </member>
    <member name="M:System.Windows.Window.MeasureOverride(System.Windows.Size)">
      <summary>Override this method to measure the size of a window.</summary>
      <param name="availableSize">A <see cref="T:System.Windows.Size" /> that reflects the available size that this window can give to the child. Infinity can be given as a value to indicate that the window will size to whatever content is available.</param>
      <returns>A <see cref="T:System.Windows.Size" /> that reflects the size that this window determines it needs during layout, based on its calculations of children's sizes.</returns>
    </member>
    <member name="M:System.Windows.Window.OnActivated(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Window.Activated" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Window.OnClosed(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Window.Closed" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Window.OnClosing(System.ComponentModel.CancelEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Window.Closing" /> event.</summary>
      <param name="e">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Window.OnContentChanged(System.Object,System.Object)">
      <summary>Called when the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property changes.</summary>
      <param name="oldContent">A reference to the root of the old content tree.</param>
      <param name="newContent">A reference to the root of the new content tree.</param>
    </member>
    <member name="M:System.Windows.Window.OnContentRendered(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Window.ContentRendered" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Window.OnCreateAutomationPeer">
      <summary>Creates and returns a <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" /> object for this <see cref="T:System.Windows.Window" />.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" /> object for this <see cref="T:System.Windows.Window" />.</returns>
    </member>
    <member name="M:System.Windows.Window.OnDeactivated(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Window.Deactivated" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Window.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)">
      <summary>Called when the DPI at which this window is rendered changes.</summary>
      <param name="oldDpi">The previous DPI scale setting.</param>
      <param name="newDpi">The new DPI scale setting.</param>
    </member>
    <member name="M:System.Windows.Window.OnLocationChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Window.LocationChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Window.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)">
      <summary>Called when the <see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" /> event occurs.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Window.OnSourceInitialized(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Window.SourceInitialized" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Window.OnStateChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Window.StateChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Window.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary>Called when the <see cref="T:System.Windows.Media.VisualCollection" /> of this <see cref="T:System.Windows.Window" /> object is modified.</summary>
      <param name="visualAdded">The <see cref="T:System.Windows.Media.Visual" /> that was added to the collection.</param>
      <param name="visualRemoved">The <see cref="T:System.Windows.Media.Visual" /> that was removed from the collection.</param>
    </member>
    <member name="M:System.Windows.Window.OnVisualParentChanged(System.Windows.DependencyObject)">
      <summary>Called when the parent of the window is changed.</summary>
      <param name="oldParent">The previous parent. Set to null if the <see cref="T:System.Windows.DependencyObject" /> did not have a previous parent.</param>
    </member>
    <member name="P:System.Windows.Window.OwnedWindows">
      <summary>Gets a collection of windows for which this window is the owner.</summary>
      <returns>A <see cref="T:System.Windows.WindowCollection" /> that contains references to the windows for which this window is the owner.</returns>
    </member>
    <member name="P:System.Windows.Window.Owner">
      <summary>Gets or sets the <see cref="T:System.Windows.Window" /> that owns this <see cref="T:System.Windows.Window" />.</summary>
      <returns>A <see cref="T:System.Windows.Window" /> object that represents the owner of this <see cref="T:System.Windows.Window" />.</returns>
      <exception cref="T:System.ArgumentException">A window tries to own itself  
 -or-  
 Two windows try to own each other.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Windows.Window.Owner" /> property is set on a visible window shown using <see cref="M:System.Windows.Window.ShowDialog" />  
 -or-  
 The <see cref="P:System.Windows.Window.Owner" /> property is set with a window that has not been previously shown.</exception>
    </member>
    <member name="P:System.Windows.Window.ResizeMode">
      <summary>Gets or sets the resize mode.</summary>
      <returns>A <see cref="T:System.Windows.ResizeMode" /> value specifying the resize mode.</returns>
    </member>
    <member name="F:System.Windows.Window.ResizeModeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Window.ResizeMode" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Window.RestoreBounds">
      <summary>Gets the size and location of a window before being either minimized or maximized.</summary>
      <returns>A <see cref="T:System.Windows.Rect" /> that specifies the size and location of a window before being either minimized or maximized.</returns>
    </member>
    <member name="M:System.Windows.Window.Show">
      <summary>Opens a window and returns without waiting for the newly opened window to close.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Windows.Window.Show" /> is called on a window that is closing (<see cref="E:System.Windows.Window.Closing" />) or has been closed (<see cref="E:System.Windows.Window.Closed" />).</exception>
    </member>
    <member name="P:System.Windows.Window.ShowActivated">
      <summary>Gets or sets a value that indicates whether a window is activated when first shown.</summary>
      <returns>
        <see langword="true" /> if a window is activated when first shown; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="F:System.Windows.Window.ShowActivatedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Window.ShowActivated" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Window.ShowDialog">
      <summary>Opens a window and returns only when the newly opened window is closed.</summary>
      <returns>A <see cref="T:System.Nullable`1" /> value of type <see cref="T:System.Boolean" /> that specifies whether the activity was accepted (<see langword="true" />) or canceled (<see langword="false" />). The return value is the value of the <see cref="P:System.Windows.Window.DialogResult" /> property before a window closes.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Windows.Window.ShowDialog" /> is called on a window that is closing (<see cref="E:System.Windows.Window.Closing" />) or has been closed (<see cref="E:System.Windows.Window.Closed" />).</exception>
    </member>
    <member name="P:System.Windows.Window.ShowInTaskbar">
      <summary>Gets or sets a value that indicates whether the window has a task bar button.</summary>
      <returns>
        <see langword="true" /> if the window has a task bar button; otherwise, <see langword="false" />. Does not apply when the window is hosted in a browser.</returns>
    </member>
    <member name="F:System.Windows.Window.ShowInTaskbarProperty">
      <summary>Identifies the <see cref="P:System.Windows.Window.ShowInTaskbar" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Window.SizeToContent">
      <summary>Gets or sets a value that indicates whether a window will automatically size itself to fit the size of its content.</summary>
      <returns>A <see cref="T:System.Windows.SizeToContent" /> value. The default is <see cref="F:System.Windows.SizeToContent.Manual" />.</returns>
    </member>
    <member name="F:System.Windows.Window.SizeToContentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Window.SizeToContent" /> dependency property.</summary>
    </member>
    <member name="E:System.Windows.Window.SourceInitialized">
      <summary>This event is raised to support interoperation with Win32. See <see cref="T:System.Windows.Interop.HwndSource" />.</summary>
    </member>
    <member name="E:System.Windows.Window.StateChanged">
      <summary>Occurs when the window's <see cref="P:System.Windows.Window.WindowState" /> property changes.</summary>
    </member>
    <member name="P:System.Windows.Window.TaskbarItemInfo">
      <summary>Gets or sets the Windows 7 taskbar thumbnail for the <see cref="T:System.Windows.Window" />.</summary>
      <returns>The Windows 7 taskbar thumbnail for the <see cref="T:System.Windows.Window" />.</returns>
    </member>
    <member name="F:System.Windows.Window.TaskbarItemInfoProperty">
      <summary>Identifies the <see cref="P:System.Windows.Window.TaskbarItemInfo" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Window.Title">
      <summary>Gets or sets a window's title.</summary>
      <returns>A <see cref="T:System.String" /> that contains the window's title.</returns>
    </member>
    <member name="F:System.Windows.Window.TitleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Window.Title" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Window.Top">
      <summary>Gets or sets the position of the window's top edge, in relation to the desktop.</summary>
      <returns>The position of the window's top, in logical units (1/96").</returns>
    </member>
    <member name="P:System.Windows.Window.Topmost">
      <summary>Gets or sets a value that indicates whether a window appears in the topmost z-order.</summary>
      <returns>
        <see langword="true" /> if the window is topmost; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="F:System.Windows.Window.TopmostProperty">
      <summary>Identifies the <see cref="P:System.Windows.Window.Topmost" /> dependency property.</summary>
    </member>
    <member name="F:System.Windows.Window.TopProperty">
      <summary>Identifies the <see cref="P:System.Windows.Window.Top" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Window.WindowStartupLocation">
      <summary>Gets or sets the position of the window when first shown.</summary>
      <returns>A <see cref="T:System.Windows.WindowStartupLocation" /> value that specifies the top/left position of a window when first shown. The default is <see cref="F:System.Windows.WindowStartupLocation.Manual" />.</returns>
    </member>
    <member name="P:System.Windows.Window.WindowState">
      <summary>Gets or sets a value that indicates whether a window is restored, minimized, or maximized.</summary>
      <returns>A <see cref="T:System.Windows.WindowState" /> that determines whether a window is restored, minimized, or maximized. The default is <see cref="F:System.Windows.WindowState.Normal" /> (restored).</returns>
    </member>
    <member name="F:System.Windows.Window.WindowStateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Window.WindowState" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Window.WindowStyle">
      <summary>Gets or sets a window's border style.</summary>
      <returns>A <see cref="T:System.Windows.WindowStyle" /> that specifies a window's border style. The default is <see cref="F:System.Windows.WindowStyle.SingleBorderWindow" />.</returns>
    </member>
    <member name="F:System.Windows.Window.WindowStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Window.WindowStyle" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.WindowCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Window" /> objects. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Windows.WindowCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.WindowCollection" /> class.</summary>
    </member>
    <member name="M:System.Windows.WindowCollection.CopyTo(System.Windows.Window[],System.Int32)">
      <summary>Copies each <see cref="T:System.Windows.Window" /> object in the collection to an array, starting from the specified index.</summary>
      <param name="array">An array of type <see cref="T:System.Windows.Window" /> that the <see cref="T:System.Windows.Window" /> objects in the collection are copied to.</param>
      <param name="index">The position in the collection to start copying from.</param>
    </member>
    <member name="P:System.Windows.WindowCollection.Count">
      <summary>Gets the number of <see cref="T:System.Windows.Window" /> objects contained in the <see cref="T:System.Windows.WindowCollection" />.</summary>
      <returns>The number of <see cref="T:System.Windows.Window" /> objects contained in the <see cref="T:System.Windows.WindowCollection" />.</returns>
    </member>
    <member name="M:System.Windows.WindowCollection.GetEnumerator">
      <summary>Returns an <see cref="T:System.Collections.IEnumerator" /> that you can use to enumerate the <see cref="T:System.Windows.Window" /> objects in the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that you can use to enumerate the <see cref="T:System.Windows.Window" /> objects in the collection.</returns>
    </member>
    <member name="P:System.Windows.WindowCollection.IsSynchronized">
      <summary>Gets a value indicating whether the <see cref="T:System.Windows.WindowCollection" /> object is thread safe.</summary>
      <returns>
        <see langword="true" /> if the object is thread safe; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.WindowCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Windows.Window" /> or <see cref="T:System.Windows.Navigation.NavigationWindow" /> object at the specified index.</summary>
      <param name="index">The index of the specified <see cref="T:System.Windows.Window" /> or <see cref="T:System.Windows.Navigation.NavigationWindow" />.</param>
      <returns>A <see cref="T:System.Windows.Window" /> or <see cref="T:System.Windows.Navigation.NavigationWindow" /> object.</returns>
    </member>
    <member name="P:System.Windows.WindowCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the collection.</summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="M:System.Windows.WindowCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="array">A zero-based <see cref="T:System.Array" /> that receives the copied items from the <see cref="T:System.Windows.WindowCollection" />.</param>
      <param name="index">The first position in the specified <see cref="T:System.Array" /> to receive the copied contents.</param>
    </member>
    <member name="T:System.Windows.WindowStartupLocation">
      <summary>Specifies the position that a <see cref="T:System.Windows.Window" /> will be shown in when it is first opened. Used by the <see cref="P:System.Windows.Window.WindowStartupLocation" /> property.</summary>
    </member>
    <member name="F:System.Windows.WindowStartupLocation.CenterOwner">
      <summary>The startup location of a <see cref="T:System.Windows.Window" /> is the center of the <see cref="T:System.Windows.Window" /> that owns it, as specified by the <see cref="P:System.Windows.Window.Owner" /> property.</summary>
    </member>
    <member name="F:System.Windows.WindowStartupLocation.CenterScreen">
      <summary>The startup location of a <see cref="T:System.Windows.Window" /> is the center of the screen that contains the mouse cursor.</summary>
    </member>
    <member name="F:System.Windows.WindowStartupLocation.Manual">
      <summary>The startup location of a <see cref="T:System.Windows.Window" /> is set from code, or defers to the default Windows location.</summary>
    </member>
    <member name="T:System.Windows.WindowState">
      <summary>Specifies whether a window is minimized, maximized, or restored. Used by the <see cref="P:System.Windows.Window.WindowState" /> property.</summary>
    </member>
    <member name="F:System.Windows.WindowState.Maximized">
      <summary>The window is maximized.</summary>
    </member>
    <member name="F:System.Windows.WindowState.Minimized">
      <summary>The window is minimized.</summary>
    </member>
    <member name="F:System.Windows.WindowState.Normal">
      <summary>The window is restored.</summary>
    </member>
    <member name="T:System.Windows.WindowStyle">
      <summary>Specifies the type of border that a <see cref="T:System.Windows.Window" /> has. Used by the <see cref="P:System.Windows.Window.WindowStyle" /> property.</summary>
    </member>
    <member name="F:System.Windows.WindowStyle.None">
      <summary>Only the client area is visible - the title bar and border are not shown. A <see cref="T:System.Windows.Navigation.NavigationWindow" /> with a <see cref="P:System.Windows.Window.WindowStyle" /> of <see cref="F:System.Windows.WindowStyle.None" /> will still display the navigation user interface (UI).</summary>
    </member>
    <member name="F:System.Windows.WindowStyle.SingleBorderWindow">
      <summary>A window with a single border. This is the default value.</summary>
    </member>
    <member name="F:System.Windows.WindowStyle.ThreeDBorderWindow">
      <summary>A window with a 3-D border.</summary>
    </member>
    <member name="F:System.Windows.WindowStyle.ToolWindow">
      <summary>A fixed tool window.</summary>
    </member>
    <member name="T:System.Windows.WrapDirection">
      <summary>Specifies the allowable directions that content can wrap around an object.</summary>
    </member>
    <member name="F:System.Windows.WrapDirection.Both">
      <summary>Content that flows around both sides of the object.</summary>
    </member>
    <member name="F:System.Windows.WrapDirection.Left">
      <summary>Content that only flows around the left side of the object.</summary>
    </member>
    <member name="F:System.Windows.WrapDirection.None">
      <summary>Content that does not flow around the object.</summary>
    </member>
    <member name="F:System.Windows.WrapDirection.Right">
      <summary>Content that only flows around the right side of the object.</summary>
    </member>
  </members>
</doc>