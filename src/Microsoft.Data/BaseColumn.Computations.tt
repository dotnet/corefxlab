<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#@ include file="ColumnArithmeticTemplate.ttinclude"#>
// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.
// See the LICENSE file in the project root for more information.

// Generated from BaseColumn.Computations.tt. Do not modify directly

using System;
using System.Collections.Generic;

namespace Microsoft.Data
{
    public abstract partial class BaseColumn
    {
<# foreach (MethodConfiguration compMethod in computationMethodConfiguration) { #>
        /// <summary>
        /// <#=compMethod.MethodComments#>
        /// </summary>
<# if (compMethod.MethodType == MethodType.ElementwiseComputation && compMethod.HasReturnValue == false && compMethod.SupportsRowSubsets == true) {#>
        public virtual BaseColumn <#=compMethod.MethodName#>(IEnumerable<long> rowIndices, bool inPlace = false)
<# } else if (compMethod.MethodType == MethodType.ElementwiseComputation && compMethod.HasReturnValue == false) {#>
        public virtual BaseColumn <#=compMethod.MethodName#>(bool inPlace = false)
<# } else if (compMethod.MethodType == MethodType.ElementwiseComputation && compMethod.HasReturnValue == true) {#>
        public virtual object <#=compMethod.MethodName#>()
<# } else if (compMethod.MethodType == MethodType.Reduction && compMethod.IsNumeric == true && compMethod.SupportsRowSubsets == true) { #>
        public virtual object <#=compMethod.MethodName#>(IEnumerable<long> rowIndices)
<# } else if (compMethod.MethodType == MethodType.Reduction && compMethod.IsNumeric == true) { #>
        public virtual object <#=compMethod.MethodName#>()
<# } else { #>
        public virtual bool <#=compMethod.MethodName#>()
<# } #>
        {
            throw new NotImplementedException();
        }

<# } #>
    }
}
